{
    "title": "技术心得", 
    "description": "技术管理", 
    "followers": [
        "https://www.zhihu.com/people/Reeee", 
        "https://www.zhihu.com/people/reed-84-49", 
        "https://www.zhihu.com/people/liubao68", 
        "https://www.zhihu.com/people/UgCode", 
        "https://www.zhihu.com/people/wemlion", 
        "https://www.zhihu.com/people/hashboy-52", 
        "https://www.zhihu.com/people/smwyzi", 
        "https://www.zhihu.com/people/er-jin-zhi-47"
    ], 
    "article": [
        {
            "url": "https://zhuanlan.zhihu.com/p/81235049", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 3, 
            "title": "转：什么叫领导？什么叫管理？你一定要分得清！", 
            "content": "<p>来源：<a href=\"https://link.zhihu.com/?target=https%3A//baijiahao.baidu.com/s%3Fid%3D1602303579746695097%26wfr%3Dspider%26for%3Dpc\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">baijiahao.baidu.com/s?</span><span class=\"invisible\">id=1602303579746695097&amp;wfr=spider&amp;for=pc</span><span class=\"ellipsis\"></span></a></p><p class=\"ztext-empty-paragraph\"><br/></p><p>在现实生活中，很多人都会认为，领导=管理，似乎管理者就是领导者，领导过程就是管理过程，然而实际上这两者之间的差别很大。管理者和领导者是两个不同的概念，二者既有联系，又有区别。你一定要分得清，这很重要！</p><p>“管理是管理事务，领导是领导人心。”</p><p>领导者：看透变化的趋势，指出团队组织应该前进的方向，并描绘出美好的愿景，能够激发相关人员的积极性，带领团队组织朝着描绘的美好愿景前进。</p><p>管理者：制定目标，按照既定目标对团队组织进行管理，带领团队组织实现目标。</p><p>如果一位经理人员管理行为过多，而领导行为过少，就会发生：上下级的关系很紧张，而工作推进受阻，上级在与不在，下级的表现判若两人。</p><p>如果一位经理人员领导行为过多，而管理行为过少，就会发生：常常用个人魅力和组织关系去管理团队，出现“你好我好大家”的局面产生，甚至还会山头或帮派林立。</p><h2>1 两个身份</h2><p class=\"ztext-empty-paragraph\"><br/></p><p>一位经理人有两个身份：一是管理者，二是领导者。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>管理者注重效率，领导者注重效果。管理者把事情做正确，领导者做正确之事。管理者发挥作用的基础是职位权力（强制、惩罚、奖赏），领导者发挥作用的基础是个人权力（对下级的关照关爱、个人专长、智慧、人格魅力）。</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>2</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>两个循环</p><p class=\"ztext-empty-paragraph\"><br/></p><p>管理循环：计划—实施—检查—改善；</p><p>领导循环：愿景—动员—展开—学习。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>管理循环就是指PDCA，闭环管理。领导循环是通过愿景来感召人、激励人、鼓舞人，使人们能够自动自发，并通过自主学习来推动工作进程。改善+学习，才是高质量完成任务的根本保障。</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-1cb4b2cfdbae284feae7958f3af52de5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"433\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-1cb4b2cfdbae284feae7958f3af52de5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;433&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"433\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-1cb4b2cfdbae284feae7958f3af52de5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-1cb4b2cfdbae284feae7958f3af52de5_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>3</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>两种行为</p><p class=\"ztext-empty-paragraph\"><br/></p><p>管理行为：关注计划与预算，组织及配置人员，控制过程并解决问题；</p><p>领导行为：确定方向，整合利益相关者，激励和鼓舞下级。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>管理行为重在建立秩序，领导行为重在产生变革。</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-201a1778a473513a8ae899d6055aac3d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"443\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-201a1778a473513a8ae899d6055aac3d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;443&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"443\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-201a1778a473513a8ae899d6055aac3d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-201a1778a473513a8ae899d6055aac3d_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>4</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>两种认知</p><p class=\"ztext-empty-paragraph\"><br/></p><p>领导认知：外圆内方，领导者的主导行为是激励追随者意愿、培养追随者能力。领导者的变革逻辑是先有感受再推动变革。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>管理认知：外方内方，管理者的主导行为是强化职责、执行制度。管理者的变革逻辑是先有理性分析再发动变革。</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-ed79e59fae34c22da3ba92fa062b6c25_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"446\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-ed79e59fae34c22da3ba92fa062b6c25_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;446&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"446\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-ed79e59fae34c22da3ba92fa062b6c25_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-ed79e59fae34c22da3ba92fa062b6c25_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>5</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>两种实践</p><p class=\"ztext-empty-paragraph\"><br/></p><p>管理行为，往往产生对立关系。管理行为组织化，是指在处理问题时，要依照企业标准而非个人好恶来做决策，避免下级把矛头对准上级，认为是上级个人有意难为他。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>领导行为，往往产生追随关系。领导行为个性化，是指对下级的关心、爱护可以有自己的风格。管理行为都是相似的，而领导行为各有千秋。</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-68ebfe87eb9a4e25bb80540343f93c06_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"441\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-68ebfe87eb9a4e25bb80540343f93c06_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;441&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"441\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-68ebfe87eb9a4e25bb80540343f93c06_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-68ebfe87eb9a4e25bb80540343f93c06_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>清晰界定管理与领导，进而平衡好管理与领导的关系，经理人的工作就会张弛有度、游刃有余。下面这个图非常重要，大家记得保存哦~</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-1a82ccace1bd60a3361751dcc0cc2567_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"441\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-1a82ccace1bd60a3361751dcc0cc2567_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;441&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"441\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-1a82ccace1bd60a3361751dcc0cc2567_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-1a82ccace1bd60a3361751dcc0cc2567_b.jpg\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "领导力", 
                    "tagLink": "https://api.zhihu.com/topics/19936995"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/76844944", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 0, 
            "title": "AI公司知多少，竞品分析", 
            "content": "<h2>从AI1.0到3.0</h2><p>AI 1.0</p><p>理论多余实践，拿些政府课题，鲜有业务。多位博士等理论派创建的公司。</p><p>AI 2.0</p><p>找到业务方向，用业务驱动技术，根据业务场景来落地AI技术。</p><p>AI 3.0</p><p>技术驱动业务。</p><h2>典型的AI公司模式分析</h2><h2>商汤</h2><p>定位：人工只能平台公司。深度学习和超算平台。</p><p>摊子铺的很大：涵盖智能手机、互联网娱乐、汽车、智慧城市、以及教育、医疗、零售、广告、金融、地产等多个行业。</p><p>融资：AI届的融资机器，独角兽。</p><p>问题：不够聚焦，成本高，烧钱。</p><h2>旷视</h2><p>以face++著称。</p><h2>云从科技</h2><p>银行业人脸识别第一大供应商。</p><p>方案以智能决策为目标，提供一站式自助式的智能平台，全方位重构“人、货、场”三要素。</p><p>科大讯飞</p><p>创新奇智</p><p>码隆</p>", 
            "topic": [
                {
                    "tag": "AI技术", 
                    "tagLink": "https://api.zhihu.com/topics/20106982"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/76482550", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 0, 
            "title": "云效实战指南 - 1", 
            "content": "<p>云效作为一个集研发、项目管理、持续交付为一体的工具，针对30人以下团队免费的政策，非常适合小规模团队。</p><p>我们目前有一只12人的产品研发团队，从6月份开始使用云效，实践了敏捷项目管理、容器化、自动化构建和部署等过程。好东西值得分享，希望大家来一起讨论。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a5e65aa85225efad0ac813bcabd0723e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"480\" data-rawheight=\"1095\" class=\"origin_image zh-lightbox-thumb\" width=\"480\" data-original=\"https://pic3.zhimg.com/v2-a5e65aa85225efad0ac813bcabd0723e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;480&#39; height=&#39;1095&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"480\" data-rawheight=\"1095\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"480\" data-original=\"https://pic3.zhimg.com/v2-a5e65aa85225efad0ac813bcabd0723e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-a5e65aa85225efad0ac813bcabd0723e_b.jpg\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "持续集成(CI)", 
                    "tagLink": "https://api.zhihu.com/topics/19603714"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/75988620", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 0, 
            "title": "技术负责人的能力维度", 
            "content": "<p>也来谈谈个人对技术负责人能力纬度的理解。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>1 研发架构能力</p><p>研发流程管理：如何使用敏捷，如何实践scrum，使用哪个工具。</p><p>技术选型能力：如何先用单体模式落地业务，再低成本的迁移到微服务。是不是要容器化。如何上云。至于技术栈的选型，现在已经很成熟，找一个体量差不多，业务类似的公司，拿来主义即可。</p><p>CD/CI落地：选用好的工具，快速落地</p><p>2 行业解决方案能力</p><p>研发架构能力</p>", 
            "topic": [
                {
                    "tag": "研发管理", 
                    "tagLink": "https://api.zhihu.com/topics/19669014"
                }, 
                {
                    "tag": "CTO", 
                    "tagLink": "https://api.zhihu.com/topics/19559426"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/75008112", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 0, 
            "title": "轻量级研发体系建设思路", 
            "content": "<p>打造小而美的研发团队，需要配合轻量级的研发体系。</p><p class=\"ztext-empty-paragraph\"><br/></p><ol><li>敏捷实践 - 正确站姿的站会</li><li>2周冲刺 - 需求 - 拆分子任务 - coding/UT - Demo - 产品验收 - 上线</li><li>CD/CI，一键部署，一键发布</li><li>容器化 k8s</li><li>数据库 mongdb</li><li>领域驱动，构建高内聚，松耦合的应用。</li></ol><p class=\"ztext-empty-paragraph\"><br/></p><p>详情可以留言与我交流。</p><p></p><p></p>", 
            "topic": [
                {
                    "tag": "研发管理", 
                    "tagLink": "https://api.zhihu.com/topics/19669014"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/74162334", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 0, 
            "title": "AI 案例解析", 
            "content": "<h2>淘宝AI识别垃圾分类</h2><h2>解决问题：妹子说了，出差上海，垃圾傻傻分不清。。。</h2><figure data-size=\"small\"><noscript><img src=\"https://pic2.zhimg.com/v2-a7be31325c953c22928ba31129eda179_b.jpg\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"745\" data-rawheight=\"1242\" class=\"origin_image zh-lightbox-thumb\" width=\"745\" data-original=\"https://pic2.zhimg.com/v2-a7be31325c953c22928ba31129eda179_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;745&#39; height=&#39;1242&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"745\" data-rawheight=\"1242\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"745\" data-original=\"https://pic2.zhimg.com/v2-a7be31325c953c22928ba31129eda179_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-a7be31325c953c22928ba31129eda179_b.jpg\"/></figure><p>推荐淘宝AI识别垃圾神器。</p><figure data-size=\"small\"><noscript><img src=\"https://pic4.zhimg.com/v2-f6393a8733b32139ff6e78183b982e7b_b.jpg\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"750\" data-rawheight=\"1334\" class=\"origin_image zh-lightbox-thumb\" width=\"750\" data-original=\"https://pic4.zhimg.com/v2-f6393a8733b32139ff6e78183b982e7b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;750&#39; height=&#39;1334&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"750\" data-rawheight=\"1334\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"750\" data-original=\"https://pic4.zhimg.com/v2-f6393a8733b32139ff6e78183b982e7b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-f6393a8733b32139ff6e78183b982e7b_b.jpg\"/></figure><p>随后拍了桌上的马克杯，特意把旁边的笔记本和插排的部分拍了进去。结果，成功识别。</p><h2>原理</h2><ol><li>图片识别。拍照后，上传图片到阿里云图片数据库，识别物体，给出物品名称。</li><li>阿里云垃圾分类数据库。根据物品名称，物品分类，找到垃圾分类</li></ol><h2>技术</h2><p>AI</p><p>5G</p><p>云</p><p class=\"ztext-empty-paragraph\"><br/></p><h2>超市AI视觉技术来识别商超货架上的商品陈列</h2><p>传统模式：通过人工巡店，一个一个地数商品在货架上的数量，记入工作簿。</p><p>缺点：效率低，容易出错，难以统计，容易作弊</p><p>AI：用手机对着货架拍照，通过AI技术识别商品名称和陈列情况，生成报表。</p><p>优点：效率高，准确率高，防作弊。</p><p></p>", 
            "topic": [
                {
                    "tag": "AI技术", 
                    "tagLink": "https://api.zhihu.com/topics/20106982"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/62939476", 
            "userName": "囧途陌路", 
            "userLink": "https://www.zhihu.com/people/164304bc711ccfdcb444c46ca162b44b", 
            "upvote": 0, 
            "title": "SpringCloud+MyBatis分页处理（前后端分离）", 
            "content": "<p>分页处理，这是做JavaWeb项目中常见的场景。</p><p>背景：</p><ol><li>系统架构：SpringCloud分布式</li><li>持久层：MyBatis</li><li>前端：前后分离vue.js/bootstrap等.</li></ol><p>后台提供restful api 接口，前端访问后端接口展示数据。</p><p>2种方式提供分页处理方案：</p><p>一、直接MyBatis数据库进行分页</p><p>controller接口</p><div class=\"highlight\"><pre><code class=\"language-java\"><span class=\"nd\">@ApiImplicitParams</span><span class=\"o\">({</span>\n            <span class=\"nd\">@ApiImplicitParam</span><span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">&#34;categoryId&#34;</span><span class=\"o\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">&#34;支付渠道大类Id&#34;</span><span class=\"o\">,</span> <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><span class=\"o\">,</span> <span class=\"n\">dataType</span> <span class=\"o\">=</span> <span class=\"s\">&#34;Long&#34;</span><span class=\"o\">,</span>  <span class=\"n\">paramType</span> <span class=\"o\">=</span> <span class=\"s\">&#34;query&#34;</span><span class=\"o\">),</span>\n            <span class=\"nd\">@ApiImplicitParam</span><span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">&#34;payChannelId&#34;</span><span class=\"o\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">&#34;支付渠道ID&#34;</span><span class=\"o\">,</span> <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><span class=\"o\">,</span> <span class=\"n\">dataType</span> <span class=\"o\">=</span> <span class=\"s\">&#34;Long&#34;</span><span class=\"o\">,</span> <span class=\"n\">paramType</span> <span class=\"o\">=</span> <span class=\"s\">&#34;query&#34;</span><span class=\"o\">),</span>\n            <span class=\"nd\">@ApiImplicitParam</span><span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">&#34;bankCode&#34;</span><span class=\"o\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">&#34;银行名称code&#34;</span><span class=\"o\">,</span> <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><span class=\"o\">,</span> <span class=\"n\">dataType</span> <span class=\"o\">=</span> <span class=\"s\">&#34;String&#34;</span><span class=\"o\">,</span> <span class=\"n\">paramType</span> <span class=\"o\">=</span> <span class=\"s\">&#34;query&#34;</span><span class=\"o\">),</span>\n            <span class=\"nd\">@ApiImplicitParam</span><span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">&#34;startTime&#34;</span><span class=\"o\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">&#34;创建时间起始（示例：2018-09-05）&#34;</span><span class=\"o\">,</span> <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><span class=\"o\">,</span> <span class=\"n\">dataType</span> <span class=\"o\">=</span> <span class=\"s\">&#34;String&#34;</span><span class=\"o\">,</span> <span class=\"n\">paramType</span> <span class=\"o\">=</span> <span class=\"s\">&#34;query&#34;</span><span class=\"o\">,</span> <span class=\"n\">length</span> <span class=\"o\">=</span> <span class=\"n\">10</span><span class=\"o\">),</span>\n            <span class=\"nd\">@ApiImplicitParam</span><span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">&#34;endTime&#34;</span><span class=\"o\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">&#34;创建时间截止（示例：2018-09-05）&#34;</span><span class=\"o\">,</span> <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><span class=\"o\">,</span> <span class=\"n\">dataType</span> <span class=\"o\">=</span> <span class=\"s\">&#34;String&#34;</span><span class=\"o\">,</span> <span class=\"n\">paramType</span> <span class=\"o\">=</span> <span class=\"s\">&#34;query&#34;</span><span class=\"o\">,</span> <span class=\"n\">length</span> <span class=\"o\">=</span> <span class=\"n\">10</span><span class=\"o\">),</span>\n            <span class=\"nd\">@ApiImplicitParam</span><span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">&#34;pageNum&#34;</span><span class=\"o\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">&#34;查询开始页&#34;</span><span class=\"o\">,</span> <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"o\">,</span> <span class=\"n\">dataType</span> <span class=\"o\">=</span> <span class=\"s\">&#34;int&#34;</span><span class=\"o\">,</span> <span class=\"n\">paramType</span> <span class=\"o\">=</span> <span class=\"s\">&#34;query&#34;</span><span class=\"o\">),</span>\n            <span class=\"nd\">@ApiImplicitParam</span><span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">&#34;pageSize&#34;</span><span class=\"o\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">&#34;查询的页面大小不需要分页则把此值填大一点&#34;</span><span class=\"o\">,</span> <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"o\">,</span> <span class=\"n\">dataType</span> <span class=\"o\">=</span> <span class=\"s\">&#34;int&#34;</span><span class=\"o\">,</span> <span class=\"n\">paramType</span> <span class=\"o\">=</span> <span class=\"s\">&#34;query&#34;</span><span class=\"o\">)})</span>\n    <span class=\"kd\">public</span> <span class=\"n\">PageResult</span><span class=\"o\">&lt;</span><span class=\"n\">ChannelBaseDataResp</span><span class=\"o\">&gt;</span> <span class=\"nf\">queryPayChannel</span><span class=\"o\">(</span>\n                                            <span class=\"nd\">@RequestParam</span><span class=\"o\">(</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">&#34;categoryId&#34;</span><span class=\"o\">,</span> <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><span class=\"o\">)</span> <span class=\"n\">Long</span> <span class=\"n\">categoryId</span><span class=\"o\">,</span>\n                                            <span class=\"nd\">@RequestParam</span><span class=\"o\">(</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">&#34;payChannelId&#34;</span><span class=\"o\">,</span> <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><span class=\"o\">)</span> <span class=\"n\">Long</span> <span class=\"n\">payChannelId</span><span class=\"o\">,</span>\n                                            <span class=\"nd\">@RequestParam</span><span class=\"o\">(</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">&#34;bankCode&#34;</span><span class=\"o\">,</span> <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><span class=\"o\">)</span> <span class=\"n\">String</span> <span class=\"n\">bankCode</span><span class=\"o\">,</span>\n                                            <span class=\"nd\">@RequestParam</span><span class=\"o\">(</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">&#34;startTime&#34;</span><span class=\"o\">,</span> <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><span class=\"o\">)</span> <span class=\"n\">String</span> <span class=\"n\">startTime</span><span class=\"o\">,</span>\n                                            <span class=\"nd\">@RequestParam</span><span class=\"o\">(</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">&#34;endTime&#34;</span><span class=\"o\">,</span> <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><span class=\"o\">)</span> <span class=\"n\">String</span> <span class=\"n\">endTime</span><span class=\"o\">,</span>\n                                            <span class=\"nd\">@RequestParam</span><span class=\"o\">(</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">&#34;pageNum&#34;</span><span class=\"o\">,</span> <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"o\">)</span> <span class=\"n\">Integer</span> <span class=\"n\">pageNum</span><span class=\"o\">,</span>\n                                            <span class=\"nd\">@RequestParam</span><span class=\"o\">(</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">&#34;pageSize&#34;</span><span class=\"o\">,</span> <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"o\">)</span> <span class=\"n\">Integer</span> <span class=\"n\">pageSize</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">PageResult</span><span class=\"o\">&lt;</span><span class=\"n\">ChannelBaseDataResp</span><span class=\"o\">&gt;</span> <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">PageResult</span><span class=\"o\">&lt;</span><span class=\"n\">ChannelBaseDataResp</span><span class=\"o\">&gt;();</span>\n        <span class=\"k\">try</span> <span class=\"o\">{</span>\n            <span class=\"kt\">int</span> <span class=\"n\">endRowNo</span> <span class=\"o\">=</span> <span class=\"n\">pageNum</span> <span class=\"o\">*</span> <span class=\"n\">pageSize</span><span class=\"o\">;</span>\n            <span class=\"kt\">int</span> <span class=\"n\">beginRowNo</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"n\">pageNum</span> <span class=\"o\">-</span> <span class=\"n\">1</span><span class=\"o\">)</span> <span class=\"o\">*</span> <span class=\"n\">pageSize</span> <span class=\"o\">+</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n            <span class=\"k\">return</span> <span class=\"n\">channelBaseDataService</span><span class=\"o\">.</span><span class=\"na\">queryBaseData</span><span class=\"o\">(</span><span class=\"n\">categoryId</span><span class=\"o\">,</span><span class=\"n\">payChannelId</span><span class=\"o\">,</span><span class=\"n\">bankCode</span><span class=\"o\">,</span><span class=\"n\">startTime</span><span class=\"o\">,</span><span class=\"n\">endTime</span><span class=\"o\">,</span><span class=\"n\">beginRowNo</span><span class=\"o\">,</span><span class=\"n\">endRowNo</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>  <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"n\">Exception</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">PageResult</span><span class=\"o\">&lt;</span><span class=\"n\">ChannelBaseDataResp</span><span class=\"o\">&gt;();</span>\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"k\">instanceof</span> <span class=\"n\">AppException</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"na\">setCode</span><span class=\"o\">(((</span><span class=\"n\">AppException</span><span class=\"o\">)</span> <span class=\"n\">e</span><span class=\"o\">).</span><span class=\"na\">getErrorCode</span><span class=\"o\">());</span>\n                <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"na\">setResult</span><span class=\"o\">(((</span><span class=\"n\">AppException</span><span class=\"o\">)</span> <span class=\"n\">e</span><span class=\"o\">).</span><span class=\"na\">getErrorMsg</span><span class=\"o\">());</span>\n            <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n                <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"na\">setCode</span><span class=\"o\">(</span><span class=\"n\">CumReturnCode</span><span class=\"o\">.</span><span class=\"na\">SYSTEM_EXCEPTION</span><span class=\"o\">.</span><span class=\"na\">code</span><span class=\"o\">);</span>\n                <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"na\">setResult</span><span class=\"o\">(</span><span class=\"n\">CumReturnCode</span><span class=\"o\">.</span><span class=\"na\">SYSTEM_EXCEPTION</span><span class=\"o\">.</span><span class=\"na\">message</span><span class=\"o\">);</span>\n            <span class=\"o\">}</span>\n            <span class=\"k\">return</span> <span class=\"n\">response</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span></code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>Swagger-ui接口界面如下：</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-92211b17967d5f3521e37ebac9915d94_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"987\" data-rawheight=\"510\" class=\"origin_image zh-lightbox-thumb\" width=\"987\" data-original=\"https://pic1.zhimg.com/v2-92211b17967d5f3521e37ebac9915d94_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;987&#39; height=&#39;510&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"987\" data-rawheight=\"510\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"987\" data-original=\"https://pic1.zhimg.com/v2-92211b17967d5f3521e37ebac9915d94_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-92211b17967d5f3521e37ebac9915d94_b.jpg\"/></figure><p>​</p><p>pageNum 和 pageSize 用于前端分页的参数，pageNum：表示页码第几页，pageSize：表示每页展示数据数量。</p><p>所有查询条件参数，在mapper-xml里进行处理，再利用数据库oracle本身的rownum行值进行分页。</p><p>xml代码：</p><div class=\"highlight\"><pre><code class=\"language-text\">&lt;select id=&#34;queryBaseDataList&#34; resultMap=&#34;BaseResultMap&#34;&gt;\n    select\n    ID, PAY_CHANNEL_MAIN_ID, PAY_CHANNEL_ID,\n    BANK_CODE, CREATE_TIME, UPDATE_TIME,UPDATOR\n    from (\n    select A.*, rownum RN\n    from (\n    select ID, PAY_CHANNEL_MAIN_ID, PAY_CHANNEL_ID,\n    BANK_CODE, CREATE_TIME, UPDATE_TIME,UPDATOR\n    from CUM_PAY_CHANNEL_BASE\n    &lt;where&gt;\n      &lt;if test=&#34;beginCreateTime != null&#34;&gt;\n        CREATE_TIME &lt;![CDATA[ &gt;= ]]&gt;  #{beginCreateTime,jdbcType=TIMESTAMP}\n      &lt;/if&gt;\n      &lt;if test=&#34;endCreateTime != null&#34;&gt;\n        AND CREATE_TIME &lt;![CDATA[ &lt;= ]]&gt;  #{endCreateTime,jdbcType=TIMESTAMP}\n      &lt;/if&gt;\n      &lt;if test=&#34;categoryId != null and categoryId != &#39;&#39; &#34;&gt;\n        AND PAY_CHANNEL_MAIN_ID = #{categoryId,jdbcType=DECIMAL}\n      &lt;/if&gt;\n      &lt;if test=&#34;payChannelId != null and payChannelId != &#39;&#39;&#34;&gt;\n        AND PAY_CHANNEL_ID = #{payChannelId,jdbcType=DECIMAL}\n      &lt;/if&gt;\n      &lt;if test=&#34;bankCode != null and bankCode != &#39;&#39;&#34;&gt;\n        AND BANK_CODE = #{bankCode,jdbcType=VARCHAR}\n      &lt;/if&gt;\n    &lt;/where&gt;\n    order by CREATE_TIME desc\n    ) A\n    where rownum &amp;lt;= #{endRowNo,jdbcType=DECIMAL}\n    )\n    where RN &amp;gt;= #{beginRowNo,jdbcType=DECIMAL}\n  &lt;/select&gt;\n</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>优点：直观、方便、易排查问题。 缺点：访问数据库过于频繁，未利用到mybatis本身的缓存优势。</p><p>二、Java+缓存分页</p><p>这种方法对于前端而言是没变化，无感的。</p><p>只是在后端处理稍作变动，思路：</p><ol><li>先把所有数据记录查询出来</li><li>数据库实体再次封装为查询实体</li><li>纯java代码进行分页</li></ol><p>controller接口不变</p><p>service业务处理——&gt;数据库crud操作变动</p><p>把所有数据库记录查询处理</p><div class=\"highlight\"><pre><code class=\"language-text\">&lt;select id=&#34;queryBaseDataList&#34; resultMap=&#34;BaseResultMap&#34;&gt;\n    select\n    ID, PAY_CHANNEL_MAIN_ID, PAY_CHANNEL_ID,\n    BANK_CODE, CREATE_TIME, UPDATE_TIME,UPDATOR\n    from CUM_PAY_CHANNEL_BASE\n    &lt;where&gt;\n      &lt;if test=&#34;beginCreateTime != null&#34;&gt;\n        CREATE_TIME &lt;![CDATA[ &gt;= ]]&gt;  #{beginCreateTime,jdbcType=TIMESTAMP}\n      &lt;/if&gt;\n      &lt;if test=&#34;endCreateTime != null&#34;&gt;\n        AND CREATE_TIME &lt;![CDATA[ &lt;= ]]&gt;  #{endCreateTime,jdbcType=TIMESTAMP}\n      &lt;/if&gt;\n      &lt;if test=&#34;categoryId != null and categoryId != &#39;&#39; &#34;&gt;\n        AND PAY_CHANNEL_MAIN_ID = #{categoryId,jdbcType=DECIMAL}\n      &lt;/if&gt;\n      &lt;if test=&#34;payChannelId != null and payChannelId != &#39;&#39;&#34;&gt;\n        AND PAY_CHANNEL_ID = #{payChannelId,jdbcType=DECIMAL}\n      &lt;/if&gt;\n      &lt;if test=&#34;bankCode != null and bankCode != &#39;&#39;&#34;&gt;\n        AND BANK_CODE = #{bankCode,jdbcType=VARCHAR}\n      &lt;/if&gt;\n    &lt;/where&gt;\n    order by CREATE_TIME desc\n&lt;/select&gt;\n</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>再按照pageNum和pageSize进行分页处理</p><div class=\"highlight\"><pre><code class=\"language-text\">        //以分页形式输出给前端\n        List&lt;ChannelRouteGroupResp&gt; resultList = new ArrayList&lt;&gt;();\n        if(groupRespList.size() &gt;= endRowNo){\n            for(int i=(beginRowNo-1); i&lt; endRowNo; i++){\n                resultList.add(groupRespList.get(i));\n            }\n        }else{\n            for(int i=(beginRowNo-1); i&lt; groupRespList.size(); i++){\n                resultList.add(groupRespList.get(i));\n            }\n        }\n</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>优点：利用了mybatis缓存机制，分页查询快速，减少数据库访问次数。</p><p>缺点：当数据量大的时候，100W+；在没有条件查询数据库的时候，耗时久</p><p class=\"ztext-empty-paragraph\"><br/></p><p>前端分页后的界面展示如下：</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-30b93ee6c74eb06380456cf34bdfb236_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1292\" data-rawheight=\"269\" class=\"origin_image zh-lightbox-thumb\" width=\"1292\" data-original=\"https://pic3.zhimg.com/v2-30b93ee6c74eb06380456cf34bdfb236_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1292&#39; height=&#39;269&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1292\" data-rawheight=\"269\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1292\" data-original=\"https://pic3.zhimg.com/v2-30b93ee6c74eb06380456cf34bdfb236_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-30b93ee6c74eb06380456cf34bdfb236_b.jpg\"/></figure><p>​</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-0ecdf8582a64b1d197b83514154625cd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"344\" data-rawheight=\"344\" class=\"content_image\" width=\"344\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;344&#39; height=&#39;344&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"344\" data-rawheight=\"344\" class=\"content_image lazy\" width=\"344\" data-actualsrc=\"https://pic2.zhimg.com/v2-0ecdf8582a64b1d197b83514154625cd_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p><u><i>觉得对你有帮助，关注博客和公众号。不定期分享最新前沿技术框架和bat大厂常用技术等，加群不定期分享行业内大牛直播讲课以及获得视频课件资料等。</i></u></p>", 
            "topic": [
                {
                    "tag": "MyBatis", 
                    "tagLink": "https://api.zhihu.com/topics/19680218"
                }, 
                {
                    "tag": "mybatis插件", 
                    "tagLink": "https://api.zhihu.com/topics/20197859"
                }, 
                {
                    "tag": "Spring+MyBatis企业应用实战（书籍）", 
                    "tagLink": "https://api.zhihu.com/topics/20135007"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/62938680", 
            "userName": "囧途陌路", 
            "userLink": "https://www.zhihu.com/people/164304bc711ccfdcb444c46ca162b44b", 
            "upvote": 0, 
            "title": "Redis快速入门", 
            "content": "<div class=\"highlight\"><pre><code class=\"language-text\">Redis是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、缓存和消息中间件。\n</code></pre></div><h3>一、简介</h3><p>这是redis中文官网的介绍。</p><p>    它支持多种类型的数据结构，如 <a href=\"https://link.zhihu.com/?target=http%3A//www.redis.cn/topics/data-types-intro.html%23strings\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">字符串（strings）</a>， <a href=\"https://link.zhihu.com/?target=http%3A//www.redis.cn/topics/data-types-intro.html%23hashes\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">散列（hashes）</a>， <a href=\"https://link.zhihu.com/?target=http%3A//www.redis.cn/topics/data-types-intro.html%23lists\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">列表（lists）</a>， <a href=\"https://link.zhihu.com/?target=http%3A//www.redis.cn/topics/data-types-intro.html%23sets\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">集合（sets）</a>， <a href=\"https://link.zhihu.com/?target=http%3A//www.redis.cn/topics/data-types-intro.html%23sorted-sets\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">有序集合（sorted sets）</a> 与范围查询， <a href=\"https://link.zhihu.com/?target=http%3A//www.redis.cn/topics/data-types-intro.html%23bitmaps\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">bitmaps</a>， <a href=\"https://link.zhihu.com/?target=http%3A//www.redis.cn/topics/data-types-intro.html%23hyperloglogs\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">hyperloglogs</a> 和<a href=\"https://link.zhihu.com/?target=http%3A//www.redis.cn/commands/geoadd.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">地理空间（geospatial）</a> 索引半径查询。 Redis 内置了 <a href=\"https://link.zhihu.com/?target=http%3A//www.redis.cn/topics/replication.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">复制（replication）</a>，<a href=\"https://link.zhihu.com/?target=http%3A//www.redis.cn/commands/eval.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">LUA脚本（Lua scripting）</a>， <a href=\"https://link.zhihu.com/?target=http%3A//www.redis.cn/topics/lru-cache.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">LRU驱动事件（LRU eviction）</a>，<a href=\"https://link.zhihu.com/?target=http%3A//www.redis.cn/topics/transactions.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">事务（transactions）</a> 和不同级别的 <a href=\"https://link.zhihu.com/?target=http%3A//www.redis.cn/topics/persistence.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">磁盘持久化（persistence）</a>， 并通过 <a href=\"https://link.zhihu.com/?target=http%3A//www.redis.cn/topics/sentinel.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Redis哨兵（Sentinel）</a>和自动 <a href=\"https://link.zhihu.com/?target=http%3A//www.redis.cn/topics/cluster-tutorial.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">分区（Cluster）</a>提供高可用性（high availability）。</p><h3>二、Java使用Redis</h3><div class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kn\">package</span> <span class=\"nn\">com.redis</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.ArrayList</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.Iterator</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.List</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.Set</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">redis.clients.jedis.Jedis</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">redis.clients.jedis.JedisPool</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">redis.clients.jedis.JedisPoolConfig</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">redis.clients.jedis.JedisShardInfo</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">redis.clients.jedis.ShardedJedis</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">redis.clients.jedis.ShardedJedisPool</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">redis.clients.jedis.SortingParams</span><span class=\"o\">;</span>\n\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">RedisClient</span> <span class=\"o\">{</span>\n\n    <span class=\"kd\">private</span> <span class=\"n\">Jedis</span> <span class=\"n\">jedis</span><span class=\"o\">;</span><span class=\"c1\">//非切片客户端连接\n</span><span class=\"c1\"></span>    <span class=\"kd\">private</span> <span class=\"n\">JedisPool</span> <span class=\"n\">jedisPool</span><span class=\"o\">;</span><span class=\"c1\">//非切片连接池\n</span><span class=\"c1\"></span>    <span class=\"kd\">private</span> <span class=\"n\">ShardedJedis</span> <span class=\"n\">shardedJedis</span><span class=\"o\">;</span><span class=\"c1\">//切片客户端连接\n</span><span class=\"c1\"></span>    <span class=\"kd\">private</span> <span class=\"n\">ShardedJedisPool</span> <span class=\"n\">shardedJedisPool</span><span class=\"o\">;</span><span class=\"c1\">//切片连接池\n</span><span class=\"c1\"></span>    \n    <span class=\"kd\">public</span> <span class=\"nf\">RedisClient</span><span class=\"o\">()</span> \n    <span class=\"o\">{</span> \n        <span class=\"n\">initialPool</span><span class=\"o\">();</span> \n        <span class=\"n\">initialShardedPool</span><span class=\"o\">();</span> \n        <span class=\"n\">shardedJedis</span> <span class=\"o\">=</span> <span class=\"n\">shardedJedisPool</span><span class=\"o\">.</span><span class=\"na\">getResource</span><span class=\"o\">();</span> \n        <span class=\"n\">jedis</span> <span class=\"o\">=</span> <span class=\"n\">jedisPool</span><span class=\"o\">.</span><span class=\"na\">getResource</span><span class=\"o\">();</span> \n    <span class=\"o\">}</span> \n \n    <span class=\"cm\">/**\n</span><span class=\"cm\">     * 初始化非切片池\n</span><span class=\"cm\">     */</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">void</span> <span class=\"nf\">initialPool</span><span class=\"o\">()</span> \n    <span class=\"o\">{</span> \n        <span class=\"c1\">// 池基本配置 \n</span><span class=\"c1\"></span>        <span class=\"n\">JedisPoolConfig</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">JedisPoolConfig</span><span class=\"o\">();</span> \n        <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">setMaxActive</span><span class=\"o\">(</span><span class=\"n\">20</span><span class=\"o\">);</span> \n        <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">setMaxIdle</span><span class=\"o\">(</span><span class=\"n\">5</span><span class=\"o\">);</span> \n        <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">setMaxWait</span><span class=\"o\">(</span><span class=\"n\">1000l</span><span class=\"o\">);</span> \n        <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">setTestOnBorrow</span><span class=\"o\">(</span><span class=\"kc\">false</span><span class=\"o\">);</span> \n        \n        <span class=\"n\">jedisPool</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">JedisPool</span><span class=\"o\">(</span><span class=\"n\">config</span><span class=\"o\">,</span><span class=\"s\">&#34;127.0.0.1&#34;</span><span class=\"o\">,</span><span class=\"n\">6379</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n    \n    <span class=\"cm\">/** \n</span><span class=\"cm\">     * 初始化切片池 \n</span><span class=\"cm\">     */</span> \n    <span class=\"kd\">private</span> <span class=\"kt\">void</span> <span class=\"nf\">initialShardedPool</span><span class=\"o\">()</span> \n    <span class=\"o\">{</span> \n        <span class=\"c1\">// 池基本配置 \n</span><span class=\"c1\"></span>        <span class=\"n\">JedisPoolConfig</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">JedisPoolConfig</span><span class=\"o\">();</span> \n        <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">setMaxActive</span><span class=\"o\">(</span><span class=\"n\">20</span><span class=\"o\">);</span> \n        <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">setMaxIdle</span><span class=\"o\">(</span><span class=\"n\">5</span><span class=\"o\">);</span> \n        <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">setMaxWait</span><span class=\"o\">(</span><span class=\"n\">1000l</span><span class=\"o\">);</span> \n        <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">setTestOnBorrow</span><span class=\"o\">(</span><span class=\"kc\">false</span><span class=\"o\">);</span> \n        <span class=\"c1\">// slave链接 \n</span><span class=\"c1\"></span>        <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">JedisShardInfo</span><span class=\"o\">&gt;</span> <span class=\"n\">shards</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">ArrayList</span><span class=\"o\">&lt;</span><span class=\"n\">JedisShardInfo</span><span class=\"o\">&gt;();</span> \n        <span class=\"n\">shards</span><span class=\"o\">.</span><span class=\"na\">add</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">JedisShardInfo</span><span class=\"o\">(</span><span class=\"s\">&#34;127.0.0.1&#34;</span><span class=\"o\">,</span> <span class=\"n\">6379</span><span class=\"o\">,</span> <span class=\"s\">&#34;master&#34;</span><span class=\"o\">));</span> \n\n        <span class=\"c1\">// 构造池 \n</span><span class=\"c1\"></span>        <span class=\"n\">shardedJedisPool</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">ShardedJedisPool</span><span class=\"o\">(</span><span class=\"n\">config</span><span class=\"o\">,</span> <span class=\"n\">shards</span><span class=\"o\">);</span> \n    <span class=\"o\">}</span> \n\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">show</span><span class=\"o\">()</span> <span class=\"o\">{</span>     \n        <span class=\"n\">KeyOperate</span><span class=\"o\">();</span> \n        <span class=\"n\">StringOperate</span><span class=\"o\">();</span> \n        <span class=\"n\">ListOperate</span><span class=\"o\">();</span> \n        <span class=\"n\">SetOperate</span><span class=\"o\">();</span>\n        <span class=\"n\">SortedSetOperate</span><span class=\"o\">();</span>\n        <span class=\"n\">HashOperate</span><span class=\"o\">();</span> \n        <span class=\"n\">jedisPool</span><span class=\"o\">.</span><span class=\"na\">returnResource</span><span class=\"o\">(</span><span class=\"n\">jedis</span><span class=\"o\">);</span>\n        <span class=\"n\">shardedJedisPool</span><span class=\"o\">.</span><span class=\"na\">returnResource</span><span class=\"o\">(</span><span class=\"n\">shardedJedis</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span> \n\n      <span class=\"kd\">private</span> <span class=\"kt\">void</span> <span class=\"nf\">KeyOperate</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n         <span class=\"c1\">//todo\n</span><span class=\"c1\"></span>      <span class=\"o\">}</span>\n\n      <span class=\"kd\">private</span> <span class=\"kt\">void</span> <span class=\"nf\">StringOperate</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n         <span class=\"c1\">//todo\n</span><span class=\"c1\"></span>      <span class=\"o\">}</span>\n\n      <span class=\"kd\">private</span> <span class=\"kt\">void</span> <span class=\"nf\">ListOperate</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n         <span class=\"c1\">//todo\n</span><span class=\"c1\"></span>      <span class=\"o\">}</span>\n\n      <span class=\"kd\">private</span> <span class=\"kt\">void</span> <span class=\"nf\">SetOperate</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n         <span class=\"c1\">//todo\n</span><span class=\"c1\"></span>      <span class=\"o\">}</span>\n\n      <span class=\"kd\">private</span> <span class=\"kt\">void</span> <span class=\"nf\">SortedSetOperate</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n         <span class=\"c1\">//todo\n</span><span class=\"c1\"></span>      <span class=\"o\">}</span>\n    \n      <span class=\"kd\">private</span> <span class=\"kt\">void</span> <span class=\"nf\">HashOperate</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n         <span class=\"c1\">//todo\n</span><span class=\"c1\"></span>      <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>1、String字符串</p><div class=\"highlight\"><pre><code class=\"language-text\">//设置 redis 字符串数据 \n\njedis.set(&#34;runoobkey&#34;, &#34;www.runoob.com&#34;);\n\nString str = jedis.get(&#34;runoobkey&#34;);\n</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>2、List(列表) </p><div class=\"highlight\"><pre><code class=\"language-text\">        //存储数据到列表中\n        jedis.lpush(&#34;site-list&#34;, &#34;Runoob&#34;);\n        jedis.lpush(&#34;site-list&#34;, &#34;Google&#34;);\n        jedis.lpush(&#34;site-list&#34;, &#34;Taobao&#34;);\n        // 获取存储的数据并输出\n        List&lt;String&gt; list = jedis.lrange(&#34;site-list&#34;, 0 ,2);\n        for(int i=0; i&lt;list.size(); i++) {\n            System.out.println(&#34;列表项为: &#34;+list.get(i));\n        }\n</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>3、Keys 实例</p><div class=\"highlight\"><pre><code class=\"language-text\">        // 获取数据并输出\n        Set&lt;String&gt; keys = jedis.keys(&#34;*&#34;); \n        Iterator&lt;String&gt; it=keys.iterator() ;   \n        while(it.hasNext()){   \n            String key = it.next();   \n            System.out.println(key);   \n        }\n</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><h3><b>三、常用命令</b></h3><p><br/>    1）连接操作命令<br/>    quit：关闭连接（connection）<br/>    auth：简单密码认证<br/>    help cmd： 查看cmd帮助，例如：help quit<br/> <br/>    2）持久化<br/>    save：将数据同步保存到磁盘<br/>    bgsave：将数据异步保存到磁盘<br/>    lastsave：返回上次成功将数据保存到磁盘的Unix时戳<br/>    shundown：将数据同步保存到磁盘，然后关闭服务<br/> <br/>    3）远程服务控制<br/>    info：提供服务器的信息和统计<br/>    monitor：实时转储收到的请求<br/>    slaveof：改变复制策略设置<br/>    config：在运行时配置Redis服务器<br/> <br/>    4）对value操作的命令<br/>    exists(key)：确认一个key是否存在<br/>    del(key)：删除一个key<br/>    type(key)：返回值的类型<br/>    keys(pattern)：返回满足给定pattern的所有key<br/>    randomkey：随机返回key空间的一个<br/>    keyrename(oldname, newname)：重命名key<br/>    dbsize：返回当前数据库中key的数目<br/>    expire：设定一个key的活动时间（s）<br/>    ttl：获得一个key的活动时间<br/>    select(index)：按索引查询<br/>    move(key, dbindex)：移动当前数据库中的key到dbindex数据库<br/>    flushdb：删除当前选择数据库中的所有key<br/>    flushall：删除所有数据库中的所有key<br/> <br/>    5）String<br/>    set(key, value)：给数据库中名称为key的string赋予值value<br/>    get(key)：返回数据库中名称为key的string的value<br/>    getset(key, value)：给名称为key的string赋予上一次的value<br/>    mget(key1, key2,…, key N)：返回库中多个string的value<br/>    setnx(key, value)：添加string，名称为key，值为value<br/>    setex(key, time, value)：向库中添加string，设定过期时间time<br/>    mset(key N, value N)：批量设置多个string的值<br/>    msetnx(key N, value N)：如果所有名称为key i的string都不存在<br/>    incr(key)：名称为key的string增1操作<br/>    incrby(key, integer)：名称为key的string增加integer<br/>    decr(key)：名称为key的string减1操作<br/>    decrby(key, integer)：名称为key的string减少integer<br/>    append(key, value)：名称为key的string的值附加value<br/>    substr(key, start, end)：返回名称为key的string的value的子串<br/> <br/>    6）List <br/>    rpush(key, value)：在名称为key的list尾添加一个值为value的元素<br/>    lpush(key, value)：在名称为key的list头添加一个值为value的 元素<br/>    llen(key)：返回名称为key的list的长度<br/>    lrange(key, start, end)：返回名称为key的list中start至end之间的元素<br/>    ltrim(key, start, end)：截取名称为key的list<br/>    lindex(key, index)：返回名称为key的list中index位置的元素<br/>    lset(key, index, value)：给名称为key的list中index位置的元素赋值<br/>    lrem(key, count, value)：删除count个key的list中值为value的元素<br/>    lpop(key)：返回并删除名称为key的list中的首元素<br/>    rpop(key)：返回并删除名称为key的list中的尾元素<br/>    blpop(key1, key2,… key N, timeout)：lpop命令的block版本。<br/>    brpop(key1, key2,… key N, timeout)：rpop的block版本。<br/>    rpoplpush(srckey, dstkey)：返回并删除名称为srckey的list的尾元素，并将该元素添加到   名称为dstkey的list的头部<br/> <br/>    7）Set<br/>    sadd(key, member)：向名称为key的set中添加元素member<br/>    srem(key, member) ：删除名称为key的set中的元素member<br/>    spop(key) ：随机返回并删除名称为key的set中一个元素<br/>    smove(srckey, dstkey, member) ：移到集合元素<br/>    scard(key) ：返回名称为key的set的基数<br/>    sismember(key, member) ：member是否是名称为key的set的元素<br/>    sinter(key1, key2,…key N) ：求交集<br/>    sinterstore(dstkey, (keys)) ：求交集并将交集保存到dstkey的集合<br/>    sunion(key1, (keys)) ：求并集<br/>    sunionstore(dstkey, (keys)) ：求并集并将并集保存到dstkey的集合<br/>    sdiff(key1, (keys)) ：求差集<br/>    sdiffstore(dstkey, (keys)) ：求差集并将差集保存到dstkey的集合<br/>    smembers(key) ：返回名称为key的set的所有元素<br/>    srandmember(key) ：随机返回名称为key的set的一个元素<br/> <br/>    8）Hash<br/>    hset(key, field, value)：向名称为key的hash中添加元素field<br/>    hget(key, field)：返回名称为key的hash中field对应的value<br/>    hmget(key, (fields))：返回名称为key的hash中field i对应的value<br/>    hmset(key, (fields))：向名称为key的hash中添加元素field <br/>    hincrby(key, field, integer)：将名称为key的hash中field的value增加integer<br/>    hexists(key, field)：名称为key的hash中是否存在键为field的域<br/>    hdel(key, field)：删除名称为key的hash中键为field的域<br/>    hlen(key)：返回名称为key的hash中元素个数<br/>    hkeys(key)：返回名称为key的hash中所有键<br/>    hvals(key)：返回名称为key的hash中所有键对应的value<br/>    hgetall(key)：返回名称为key的hash中所有的键（field）及其对应的value</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-0ecdf8582a64b1d197b83514154625cd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"344\" data-rawheight=\"344\" class=\"content_image\" width=\"344\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;344&#39; height=&#39;344&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"344\" data-rawheight=\"344\" class=\"content_image lazy\" width=\"344\" data-actualsrc=\"https://pic2.zhimg.com/v2-0ecdf8582a64b1d197b83514154625cd_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p><u><i>觉得对你有帮助，关注博客和公众号。不定期分享最新前沿技术框架和bat大厂常用技术等，加群不定期分享行业内大牛直播讲课以及获得视频课件资料等。</i></u></p>", 
            "topic": [
                {
                    "tag": "Redis", 
                    "tagLink": "https://api.zhihu.com/topics/19557280"
                }, 
                {
                    "tag": "Redis Cluster", 
                    "tagLink": "https://api.zhihu.com/topics/20173110"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/62596301", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 1, 
            "title": "云原生应用初探", 
            "content": "<h2>What</h2><p>云原生应用，就是大多数传统的应用，不做任何改动，都可以在云平台运行起来，只要云平台支持这个传统应用所运行的计算机架构和操作系统。</p><h2>Why</h2><p>发挥云的弹性、动态调度、自动伸缩</p><h2>How</h2><p>容器</p><p>微服务</p><p>自动化：可持续交付（DevOps）</p><h2>Who</h2><p>CNCF（云原生计算基金会）</p><p></p>", 
            "topic": [
                {
                    "tag": "CNCF", 
                    "tagLink": "https://api.zhihu.com/topics/20169130"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/61833983", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 1, 
            "title": "听过这个机器学习实战项目很牛！", 
            "content": "<p></p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/Avik-Jain/100-Days-Of-ML-Code\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-e2250b7ef45189c567ab17d5a046842c_ipico.jpg\" data-image-width=\"346\" data-image-height=\"346\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Avik-Jain/100-Days-Of-ML-Code</a><p class=\"ztext-empty-paragraph\"><br/></p><p>做个标记，后面慢慢看。。。。有兴趣的可以一起学习。</p>", 
            "topic": [
                {
                    "tag": "机器学习", 
                    "tagLink": "https://api.zhihu.com/topics/19559450"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/61158827", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 2, 
            "title": "Istio", 
            "content": "<h2>什么是Istio</h2><p>简言之，Istio是一个开源的独立的服务网格（Service mesh），为了运行分布式微服务架构提供了基础服务。其使用场景是混合云部署或者多云部署（比如即部署在AWS也部署在微软的Azure）。</p><h2>三大服务</h2><p>安全：管理微服务直接通讯的认证、授权和加密</p><p>连接：流浪管理</p><p>监控：发现和修复问题</p><h2>Istio具体能做什么</h2><p>为HTTP、gRPC、WebSocket和TCP流量提供自动化负载均衡；</p><p>细粒度的流量控制方式：丰富的路由规则，重试，failovers和falut注入；</p><p>通过可插拔的策略层和配置API来支持访问控制、限流和配额；</p><p>集群内进出流量的指标、日志和traces；</p><p>通过集群中的服务之间的强身份断言来保护服务到服务的身份验证；</p><h2>怎么使用Istio</h2><p>部署一个称之为“sidecar”的代理。</p><p>之后，所有微服务直接的网络通讯通过该代理来传输。</p><p>之后，网络通讯的配置和管理也通过Istio的control plane功能来管理。</p><h2>Istio control plane</h2><p>Pilot：</p><p>Mixer</p><p>Ingress</p><p>CA</p><h2>Architecture</h2><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a010332aac640b1e8344939293340522_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"163\" data-rawheight=\"150\" class=\"content_image\" width=\"163\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;163&#39; height=&#39;150&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"163\" data-rawheight=\"150\" class=\"content_image lazy\" width=\"163\" data-actualsrc=\"https://pic3.zhimg.com/v2-a010332aac640b1e8344939293340522_b.png\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "微服务架构", 
                    "tagLink": "https://api.zhihu.com/topics/20023491"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/59812381", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 0, 
            "title": "思维导图理解5G", 
            "content": "<h2>一张思维导图读懂5G基础知识</h2><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-85291e02db8533ba85f747ed7d079b28_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"542\" class=\"origin_image zh-lightbox-thumb\" width=\"1024\" data-original=\"https://pic1.zhimg.com/v2-85291e02db8533ba85f747ed7d079b28_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1024&#39; height=&#39;542&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"542\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1024\" data-original=\"https://pic1.zhimg.com/v2-85291e02db8533ba85f747ed7d079b28_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-85291e02db8533ba85f747ed7d079b28_b.jpg\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "第五代移动通信（5G）", 
                    "tagLink": "https://api.zhihu.com/topics/19565565"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/59793676", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 2, 
            "title": "如何提高自己的胜任力", 
            "content": "<h2><b>何为胜任力</b></h2><p>“带领团队用<b>概念性思考</b>和<b>专业技能</b>为主要方式来<b>解决复杂问题</b>”为主要行为模式特征，通过不断地刻意练习，来牵引个人和团队的成长。</p><h2>技术专长</h2><p>1）持续不断地去提高对技术的掌握 2）寻找更好的方法来解决问题 3）提高效率 4） 降低成本 5）充分意识到专业领域内技术的最新发展和最佳实践 6）理解技术和实践对技术专家型和非技术专家型的利益相关者的好处和限制 7）在解决问题和通过正确的方式完成工作的方面显示出强烈的紧迫感，有成效 8）何为理解？对技术哪里有坑，哪里没有坑了然于胸</p><h2>发展他人</h2><p>愿意<b>委派责任</b>，乐于与他人<b>合作</b>，并<b>指导</b>他人发展自己的能力。</p><p>给他人提出基于<b>行为</b>的，具体的，有帮助的<b>反馈</b>。</p><p>给他人<b>布置有效的任务</b>以发展他的能力。</p><p><b>发现并肯定强化</b>他人在个人发展上所做的努力和改进。（针对结果提反馈）</p><h2>五级工程师模型</h2><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-9692d087044c149d0ec001ccc9a85724_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"243\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-9692d087044c149d0ec001ccc9a85724_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;243&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"243\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-9692d087044c149d0ec001ccc9a85724_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-9692d087044c149d0ec001ccc9a85724_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><h2>影响力</h2><p>用一种别人所乐于接受的方式，改变他人的思想和行动的能力。</p><p></p>", 
            "topic": [
                {
                    "tag": "个人成长", 
                    "tagLink": "https://api.zhihu.com/topics/19571588"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/58278624", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 0, 
            "title": "Understand BGP", 
            "content": "<h2><b>Routing table</b></h2><p>Router is a network device which has multiple network cards. When an incoming packet is sent to the router, it determines how to properly forward traffic based on a local forwarding base. This forwarding information base is often referred to as a routing table.</p><h2><b>Rules of routing table</b></h2><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-303a7501f076a53a1ce94068533c217e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"230\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic3.zhimg.com/v2-303a7501f076a53a1ce94068533c217e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;720&#39; height=&#39;230&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"230\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic3.zhimg.com/v2-303a7501f076a53a1ce94068533c217e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-303a7501f076a53a1ce94068533c217e_b.jpg\"/></figure><p>Network Destination/Netmask: where is this packet going to go?</p><p>Gateway: the address of next router</p><p>Interface: which port shall be sent out from?</p><h2><b>Routing policy</b></h2><ul><li>Static routing policy</li><li>Dynamic routing policy</li></ul><h2><b>Routing algorithm</b></h2><p><b>Distance vector routing</b></p><p>based on Bellman-Ford algrithm</p><p>Problem: </p><p>Once a router is down, the hanging message is not broadcast. When each router finds the original road can&#39;t read the router, and it doesn&#39;t feel it&#39;s gone already, it still tries to access it through other path. Until all the paths are tried, it finds this router is gone already.</p><p>The whole global routing table has to be sent.</p><p><b>Link state routing</b></p><p>It only broadcasts updated or changed network topology, which makes the updating information less. It saves the bandwidth and CPU utilization.</p><h2><b>Protocol</b></h2><p><b>Dynamic routing protocol</b></p><p>OSPF =  Open Shortest Path First</p><p>Based on Link State routing algorithm, which is used inside data center. Also be called as IGP (interior gateway protocol).</p><p><b>BGP</b></p><p>BGP = Border Gateway Protocol. It&#39;s based on path-vector protocol.</p><p>It&#39;s the routing protocol that makes the internet work.</p><p>external BGP = as the routing protocol of choice between AS</p><p>internal BGP = as the routing protocol within large AS networks.</p><p><b>AS = Autonomous System</b></p><ul><li>Stub AS</li><li>Multihomed AS</li><li>Transit AS</li></ul><p></p><p></p>", 
            "topic": [
                {
                    "tag": "network", 
                    "tagLink": "https://api.zhihu.com/topics/20182839"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/57112588", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 0, 
            "title": "APP灰度发布：", 
            "content": "<p><b>解决的问题场景</b></p><p>在创业公司的初期，系统尚未稳定，需求变化多，老板希望快速上线，自动化部署等还不完善，所以很多的上线工作都是深夜完成。上线时间有限，留给测试的时间有限，有时候会导致上线测试不完备。预上线与线上环境无法做到1:1，有些问题在线上才会暴露。重构的服务由于是核心业务，在预上线环境测试后，也不敢轻易替换。需要再线上测试后，才可以逐步启用。基于此，考虑利用灰度发布的理念来实现不停服务升级，新老系统共存，在线上进行测试。</p><p><b>如何做</b></p><p>通过白名单。根据手机设备号生成一个白名单。APP后台请求的时候，在HTTP header里增加设备号和版本号。NGNIX根据请求获取header，根据设备号将请求转发到新的服务上。</p><p>后台的服务当然是集群了。将其中一个服务升级至新版本。</p><p></p><p></p>", 
            "topic": [
                {
                    "tag": "部署", 
                    "tagLink": "https://api.zhihu.com/topics/19588831"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/55010514", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 1, 
            "title": "实现全站HTTPS的要点", 
            "content": "<h2><b>为什么要实现HTTPS</b>？</h2><ol><li>数据传输的安全性。防止中间人流量劫持和篡改；保护隐私数据防止窃听和泄露。</li><li>网站得到用户的信任</li><li> 有利于搜索排名</li><li>采用HTTP2，加速网站访问速度</li></ol><p class=\"ztext-empty-paragraph\"><br/></p><h2><b>要解决的关键问题？</b></h2><ol><li>用户访问速度变慢？</li><li>消耗服务器CPU?</li><li>免费证书不可靠？购买付费证书增加成本？</li><li>证书的浏览器兼容性问题</li><li>证书分散且落地不安全、软件版本难以维护、配置过多、难以标准和自动化</li><li>VIP过多</li></ol><p class=\"ztext-empty-paragraph\"><br/></p><h2><b>如何解决性能问题？</b></h2><p>1）以域名收敛的方式减少建连；</p><p>2）采用HSTS技术去掉80到443的302跳转</p><p>3）通过Session复用来提高建连速度和降低服务器压力；</p><p>4）对证书链进行优化以减少证书的传输量等等</p><p>5）采用SPDY技术或者HTTP2</p><p class=\"ztext-empty-paragraph\"><br/></p><h2><b>申请什么证书？</b></h2><p>考虑到兼容性，建议采用OV证书。OV证书 = Organization Validation SSL Certificate。</p><p>优点：支持单域名、多域名、泛域名</p><p>缺点：贵</p><h2><b>启用HTTPS后的注意事项</b></h2><ol><li>登陆之后必要的页面也需要使用HTTPS，否则容易造成cookie和session的劫持</li><li>使用HTTPS后，cookie和查询字符串也有可能被劫持所以要保持其内容的复杂性</li><li>在真实的商用环境里，HTTPS在建立连接后，速度并不那么慢</li><li>通过生成一个可以转移的.pfx 文件</li></ol><p class=\"ztext-empty-paragraph\"><br/></p><h2><b>理解HSTS</b></h2><p>HSTS = HTTP Strict-Transport-Security。</p><p>服务器在返回给浏览器的响应头中，增加Strict-Transport-Security，从而告知浏览器当前域名只能通过HTTPS进行访问。</p><p></p><p></p><p></p><p></p><p></p>", 
            "topic": [
                {
                    "tag": "HTTPS", 
                    "tagLink": "https://api.zhihu.com/topics/19568367"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/52951776", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 1, 
            "title": "为什么你的核心骨干团队总是建立不起来", 
            "content": "<p>原创</p><p class=\"ztext-empty-paragraph\"><br/></p><p>对于很多人来说，技术管理是一件非常头疼、痛苦的事情。技术团队从开始搭建时，往往会发生自己想留的人留不住，不想的留的人一直在的情况。有一句话叫“铁打的营盘流水的兵”，如果说自己能有一个骨干团队，那么它就是我们铁打的营盘。而非骨干边缘正常流动，实际上对于企业和团队来说，是一件好事情，因为它能给团队补充新鲜的血液。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>目前，我的技术团队大概有 100 人左右。由于公司业务流程比较长，我们按照语言分为多个团队，有 Java、APP、PHP 等，包括还有单独的测试部、项目管理部。还有一些支撑部门，如技术委员会、DBA、配置经理、质量经理、运维部。同时，我们选择了矩阵式管理作为公司的组织架构形式。</p><p>这个架构看上去比较理想，但实际上有一个最大的问题是，这一套东西完全不落地，最终导致发生了以下几个情况：</p><p><b>1.项目经理、开发经理和产品经理没有有效配合。</b>在与员工沟通时，大家通常会有很多抱怨，如需求变化太频繁，上线失败率很高，人员流失严重等；</p><p><b>2.遇到问题，开发人员不知道找谁协调。</b>矩阵式的管理会导致多头管理，如果出现问题，应该找主管领导或项目经理？还是找产品经理？大家都非常迷茫。</p><p>那么该如何解决这些问题呢？当时我想到的第一个解决办法是，做大量一对一的沟通，包括走动式管理，详细了解跨部门之间情况。通过这样的方式，我得到了一些反馈：</p><p>1.由于需求变化很频繁，东西刚做出来，需求就变了，导致技术人员不能明确阶段性目标是什么；</p><p>2.不够了解技术团队的痛点和诉求。</p><p>如果我想要满足团队的需求，我们一定要建立核心的骨干团队。让核心骨干团队成为中坚力量，带动整个团队。</p><p>如何建立核心的骨干团队？1、营造以技术为本，平等尊重的氛围</p><p>首先，我们需要给团队信心，告诉大家，我们在技术团队里做什么样的事情是正确的，能得到大家的认可。</p><p>1.技术为本</p><p>我们既然是一个技术团队，那么一定要技术实力过硬，无论是一线团队，还是管理者。</p><p>2.沟通能力</p><p>作为一个技术负责人，我们需要与业务部门沟通，与市场执行讲”人话“。讲“人话”指的是，把技术性的数据转变为非技术人能听懂的话。</p><p>3.人品</p><p>我们需要有一个理念，无论是在任何场合，我们都需要明白平等、尊重、沟通、互动的重要性。</p><p>2、招聘中发现人才</p><p>招聘无非有三个渠道，对外招聘、内部提拔和淘汰，那么我们该如何让招聘变得更高效呢？</p><p>1.会问问题，具有打破砂锅问到底的精神</p><p>通过学会问更好、更多的问题，挖掘面试者的潜力，考察他的技术深度。</p><p>2.考察三观</p><p>在团队里肯定要面对自己的同事、下属和领导。即使招聘的是一位普通开发人员，我们都应该问他三个问题：</p><p>1.你喜欢什么样的领导？<br/>2.如果你是领导，你喜欢什么样的下属？<br/>3.你喜欢什么样的同事？</p><p>这三个问题能让我们大致了解他是如何理解团队协作，和我们所提倡的理念是不是一致的，三观一致更有利于大家之间的合作。</p><p>3.人员优化要果断</p><p>我认为，人员的优化一定要非常果断，尤其是你刚接触一个新的团队。</p><p>因为从优化的角度来说，特别是针对管理层而言，我们肯定要看结果的，职场稍微残酷一点，对于团队来说是一件好事情。</p><p>4.提拔和培养</p><p>除了组织架构里面的经理层管岗位，我觉得小组作战也是非常重要的。我们在公司里会成立多个 4-5 人的小团队，其中会指派一位小组负责人，他可能技术能力比较强，同时也比较负责任。通过这样的形式，相当于把比较大的部门逐渐拆分成各个小组作战，我们遇到的问题时，也会比较机动灵活。</p><p>另外，我们无论是作为经理，还是小组负责人，不管负责的人数是多少，都要善于问下属问题。比如在分配任务时，问某位开发同学是否清楚自己所做的内容是什么，技术方案该如何落地，什么时候能完成等，这些都是很关键的问题。</p><p>3、如何解决技术团队的抱怨</p><p>1.需求变化过于频繁</p><p>我们曾经发生过这样一件事情，某个规则在一个月内变化了 5 次，APP 里的页面改了 7 版，这完全是一个失控的状态。由于当时的项目经理比较弱势，在面对强势的业务部门频繁提出需求变更时，没有做到控制。我们要快速响应合理的需求，对不合理的需求应该加以管控。</p><p>很多时候，我们都希望软件工程师不仅有阶段性成果，而且能够快速响应业务部门需求时，那么该如何处理呢？我们设置了一套解决办法：</p><p>1、常规需求：每两周做一次上线；<br/>2、紧急需求：立即响应；<br/>3、线上 BUG：第一时间解决。</p><p>通过这 3 种不同的处理方式，既能缓解需求，又能把需求进行了分类。除此之外，我们需要告诉项目经理，在对外时一定要做好沟通，如果沟通中出现问题，那么会导致项目很难落地实施。</p><p><b>技术对业务部门一定要讲“人话”，这是一个很实际的关键点。</b></p><p>2.开发流程不落地，流于形式</p><p>我们公司开发流程好像没问题，部门也比较健全，为什么还会出现这么多问题呢？那是因为开发流程不落地。</p><p>开发流程上，无论是做敏捷，还是做迭代，我认为最关键的是分工一定要清晰。</p><p>其次，大家在合作的过程中，不能出现甩锅的情况。比如，PMO 需要及时管理和接受需求；技术总工需要确保整个技术方案；开发人员的功能性 BUG 一定为 0，保证代码一定要通过。</p><p>在解决了技术团队常抱怨的两个问题后，我们团队从原来的上线成笑话，到现在我们每次上线，基本 2 小时内都可以完成。</p><p>4、绩效考核是把双刃剑</p><p>很多技术工程师都不太明白，绩效考核到底是什么。对于我来说，绩效考核可能是一把双刃剑，如果做得不好，它将会扼杀很多技术工程师的创造性。那么我们该如何做绩效考核呢？</p><p>我觉得，关键是需要有一些理念进行支撑，让大家明确绩效考核的目的。我们不是为了把做得好的骨干团队绩效打低，而是甄别出其中还需要改进的同学，让他们知道自身有哪些方面做的不足。具体我们可以通过两方面让他们了解：</p><p>1.数据说话</p><p>我们现在每周都会做一个次数据统计，通过具体数据给大家一个相对公平的绩效考核，比如：</p><ul><li>计算实际工时，假设这个任务要求 8 小时完成，可你只花了 6 个小时就完成，那么你的绩效肯定高。</li><li>任务数，做了多少任务，出现了多少 BUG，在测试阶段出现的 BUG 数量。</li></ul><p>2.OWNER</p><p>我们曾经发生过一件事情，某个应用需要搭预上线环境时，由于搭建环境过程相对比较复杂，中间出现了很多问题，导致测试和运维吵得不可开交。</p><p>其实这件事很容易解决，运维负责预算环境，测试作为使用者，在搭建预算性环境中，你可能需要研发，那么就自己去找人。如果在找各个部门协调的过程中，得不到配合，你可以找相应的负责人，让他去进行协调。如果负责人把整件事情捋顺了，那么就不能再找任何借口说，这个事情因为某个原因导致最后没有做成。</p><p>5、建立持续改进的研发文化</p><p>在团队落地的过程中，我会要求大家持续改进研发文化，希望能帮助大家每天进步一点点，那么具体该如何做呢？</p><p>1.经常做复盘</p><p>每次项目做完后，我们通常会花一个小时左右的时间做复盘。把项目过程中所遇到的问题列出来，并说明为什么不该出现问题的原因，最后指定到相应的人进行整改。</p><p>2.述职</p><p>在试用期结束后，需要写一份转正报告，那么报告中具体需要体现哪些内容呢？</p><p>1.总结试用期期间你做了哪些事情，形成了什么样的成果；<br/>2.分析自己做得不足的地方；<br/>3.下一个阶段的计划。</p><p>述职会参与人可能是同事，以及相关的领导。你可以在述职过程中做一些自我否定，因为一个人只有在自我否定后，别人才敢给你提意见。我们希望通过这样的方式，让大家在工作中沟通不再有隔阂。</p><p></p><p></p>", 
            "topic": [
                {
                    "tag": "技术管理", 
                    "tagLink": "https://api.zhihu.com/topics/19624229"
                }
            ], 
            "comments": [
                {
                    "userName": "知乎用户", 
                    "userLink": "https://www.zhihu.com/people/0", 
                    "content": "<p>说白了，技术就是轮子，目前就是各种轮子的运用技巧。创新轮子？想多了吧，能把现有的轮子完美应用，比你造新轮子强多了。你以为用户知道什么？应用才是王道</p>", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/51134699", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 0, 
            "title": "服务器虚拟化技术入门", 
            "content": "<p>Virtualization is the fundamental technology that powers cloud computing, which includes hardware virtualization, operating-system-level virtualization, network virtualization and storage virtualization and etc. </p><p>In this article we focus on hardware virtualization and operating-system-level virtualization. </p><h2><b>Hardware virtualization (Virtual machine)</b></h2><p><b>WHAT</b></p><p>Hardware virtualization technology creates virtual machines, which makes it possible for the OS of a physical server to run on a virtual layer i.e. the hypervisor. Multiple VMs can be run on the same physical server, each with their own OS.</p><p>Virtual Machine: guest OS is running on each VM.</p><p>Hypervisor: virtual machine monitor which is a process separating a computer&#39;s OS and application from the underlying physical hardware.</p><p>Virtual Host: Physical server with virtualization layer.</p><p><b>WHY</b></p><p>Reducing the total number of physical servers, which will reduce the total cost.</p><p>A physical machine can be split to multiple VMs, each can have dedicated purpose. </p><p>Software developers can easily restart the VM to a previous state in case their applications crash on the VM.</p><p><b>How</b></p><p>Hypervisor is the key technology to implement VM.</p><p>Type 1</p><p>VMware ESX and ESXi</p><p>Microsoft Hyper-V</p><p>Citrix XenServer</p><p>Oracle VM</p><p class=\"ztext-empty-paragraph\"><br/></p><p>Type 2</p><p>VMware Workstation/Fusion/Player\t</p><p>VMware Server</p><p>Microsoft Virtual PC</p><p>Oracle VM VirtualBox</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-050800b49c66a45765ba27715fa9d152_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"715\" data-rawheight=\"336\" class=\"origin_image zh-lightbox-thumb\" width=\"715\" data-original=\"https://pic3.zhimg.com/v2-050800b49c66a45765ba27715fa9d152_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;715&#39; height=&#39;336&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"715\" data-rawheight=\"336\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"715\" data-original=\"https://pic3.zhimg.com/v2-050800b49c66a45765ba27715fa9d152_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-050800b49c66a45765ba27715fa9d152_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-8d9e169b3c33cb831ab8c8e0f94b9967_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"818\" data-rawheight=\"343\" class=\"origin_image zh-lightbox-thumb\" width=\"818\" data-original=\"https://pic4.zhimg.com/v2-8d9e169b3c33cb831ab8c8e0f94b9967_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;818&#39; height=&#39;343&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"818\" data-rawheight=\"343\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"818\" data-original=\"https://pic4.zhimg.com/v2-8d9e169b3c33cb831ab8c8e0f94b9967_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-8d9e169b3c33cb831ab8c8e0f94b9967_b.jpg\"/></figure><h2><b>Operating-system-level virtualization(Container)</b></h2><p><b>WHAT</b></p><p>A container is a standard unit of software that packages up code and all its dependencies.</p><p>A container is used to deploy and run distributed applications without launching an entire VM for each application.</p><p>Multiple isolated applications run on a single host and access the same OS kernel.</p><p>A container is managed by the OS kernel and has its own isolated memory, CPU, storage, process table and networking interfaces.</p><p>Container image: is a lightweight, standalone, executable package of software that includes everything needed to run an application.</p><p><b>WHY</b></p><p>Containers isolate software from its environment and ensure that it works uniformly despite differences for instance between development and staging.</p><p>It solves the problem of traditional application which entangle the application&#39;s executables, configuration, libraries, and lifecycles with each other and with the host OS.</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>VM vs Containers</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-068b9790bffd891a2f2558e1719b0f57_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"553\" data-rawheight=\"343\" class=\"origin_image zh-lightbox-thumb\" width=\"553\" data-original=\"https://pic4.zhimg.com/v2-068b9790bffd891a2f2558e1719b0f57_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;553&#39; height=&#39;343&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"553\" data-rawheight=\"343\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"553\" data-original=\"https://pic4.zhimg.com/v2-068b9790bffd891a2f2558e1719b0f57_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-068b9790bffd891a2f2558e1719b0f57_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-62e52db4c558ae0fde8dcac17850eeca_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"675\" data-rawheight=\"343\" class=\"origin_image zh-lightbox-thumb\" width=\"675\" data-original=\"https://pic3.zhimg.com/v2-62e52db4c558ae0fde8dcac17850eeca_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;675&#39; height=&#39;343&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"675\" data-rawheight=\"343\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"675\" data-original=\"https://pic3.zhimg.com/v2-62e52db4c558ae0fde8dcac17850eeca_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-62e52db4c558ae0fde8dcac17850eeca_b.jpg\"/></figure><p><b>Types of Containers</b></p><p>Application container: a single application to execute within the container. For instance: Docker.</p><p>System container: supports multiple applications being executed within the container. For instance: LXC.</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-1a40ab84dd13f533a266d1975652632d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"536\" data-rawheight=\"343\" class=\"origin_image zh-lightbox-thumb\" width=\"536\" data-original=\"https://pic2.zhimg.com/v2-1a40ab84dd13f533a266d1975652632d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;536&#39; height=&#39;343&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"536\" data-rawheight=\"343\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"536\" data-original=\"https://pic2.zhimg.com/v2-1a40ab84dd13f533a266d1975652632d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-1a40ab84dd13f533a266d1975652632d_b.jpg\"/></figure><p><b>Docker vs LXC</b></p><p>LXC is an OS-level virtualization. Docker is based on LXC and relies on the OS.</p><p><b>HOW</b></p><p>Namespaces and Cgroups are two major technologies to implement LXC container.</p><p>Namespaces are a feature of the Linux kernel;</p><p>Namespaces partition kernel resources such that one set of processes sees one set of resources while another set of processes sees a different set of resources.</p><p class=\"ztext-empty-paragraph\"><br/></p><p>Cgroups are used to allocate resources (CPU, memory, and network bandwidth) among user-defined groups of tasks running on a system.</p><p>Cgroups can prevent a bug or bad code from disrupting an entire machine.</p><p>Resource limiting: groups can be set to not exceed a configured memory limit.</p><p>Prioritization: some groups may get a larger share of CPU utilization or disk I/O throughput.</p><p>Accounting: measures a group&#39;s resource usage.</p><p>Control: freezing groups of processes, their checking pointing and restarting.</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>Namespaces vs Cgroups</b></p><p>Namespaces = limits what you can see</p><p>Cgroups = limits how much you can use</p><p></p><p></p><p></p><p></p><p></p><p></p>", 
            "topic": [
                {
                    "tag": "虚拟化", 
                    "tagLink": "https://api.zhihu.com/topics/19578791"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/47680224", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 0, 
            "title": "Day 84 来自于实战的技术管理心得", 
            "content": "<h2>解决技术团队的管理问题，需要从以下几个方面入手。</h2><ol><li><b>建立可以落地的管理体系。</b></li></ol><p>在矩阵式管理体系下，需要明确项目经理、产品经理、开发经理三者的职责，确保三者配合默契，发挥出在项目执行过程中的作用。项目经理是项目的直接责任人，负责项目各个关键节点的跟踪，负责需求管理，任务跟踪。产品经理负责需求和产品设计。开发经理负责技术方案。</p><p><b>2. 建立骨干团队</b></p><p>坚持『以技术为本，人人都要做实事』的理念来用人。</p><p>通过调整、招聘、内部提拔，组建骨干队伍。</p><p>对于不合格的管理干部，要坚决辞退。</p><p>在各个开发部建立了各个项目小组，任命小组负责人。</p><p><b>3. 控制人员流失</b></p><p>通过各部门沟通，1对1沟通，宣传公司的愿景，阶段性成果落地，加强中层干部的管理和沟通，打造『尊重、平等、沟通、互动』的氛围。</p><p><b>4. 确保研发过程中关键环节落地</b></p><p>由PMO统一管理和接收需求，明确需求优先级。</p><p>开发部门要做好接口技术方案和各个模块的技术方案。</p><p>开发人员要确保功能性bug为0。</p><p>测试要从用户的角度做系统测试，提高测试效率和效果。</p><p>做好充分的上线准备，做好人员互备，确保每次上线都可以成功，第二天有备份人员待命解决紧急问题。</p><p><b>5. 采用数据驱动和OWERSHIP的理念来管理团队。</b></p><p>每个月要从多个纬度（任务数、有效工时、测试bug数量、线上bug数量、修复bug数量等）来统计每一位开发的工作，让数据来决定绩效。</p><p>每件事都要有owner。作为owner，需要自发的寻找资源和帮助，完成目标。</p>", 
            "topic": [
                {
                    "tag": "项目管理", 
                    "tagLink": "https://api.zhihu.com/topics/19560856"
                }, 
                {
                    "tag": "项目经理", 
                    "tagLink": "https://api.zhihu.com/topics/19564273"
                }, 
                {
                    "tag": "产品经理", 
                    "tagLink": "https://api.zhihu.com/topics/19551325"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/43293516", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 2, 
            "title": "3. Big Data", 
            "content": "<h2><b>Where does Big Data come from?</b></h2><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-9c05c67393596d495ede154eb9a756be_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"926\" data-rawheight=\"411\" class=\"origin_image zh-lightbox-thumb\" width=\"926\" data-original=\"https://pic3.zhimg.com/v2-9c05c67393596d495ede154eb9a756be_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;926&#39; height=&#39;411&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"926\" data-rawheight=\"411\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"926\" data-original=\"https://pic3.zhimg.com/v2-9c05c67393596d495ede154eb9a756be_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-9c05c67393596d495ede154eb9a756be_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><ul><li>Machine-Generated data: mobile, laptop, IoT (Internet of Things)</li><li>Organization-Generated data: structured but often siloed.</li><li>Generated by People: social media</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-1498246d47cf0e94bf91ebfae9c981a2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"557\" data-rawheight=\"361\" class=\"origin_image zh-lightbox-thumb\" width=\"557\" data-original=\"https://pic3.zhimg.com/v2-1498246d47cf0e94bf91ebfae9c981a2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;557&#39; height=&#39;361&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"557\" data-rawheight=\"361\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"557\" data-original=\"https://pic3.zhimg.com/v2-1498246d47cf0e94bf91ebfae9c981a2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-1498246d47cf0e94bf91ebfae9c981a2_b.jpg\"/></figure><h2><b>What is big data?</b></h2><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-3d80739ddc39cba623df2d10bda8656c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"932\" data-rawheight=\"384\" class=\"origin_image zh-lightbox-thumb\" width=\"932\" data-original=\"https://pic1.zhimg.com/v2-3d80739ddc39cba623df2d10bda8656c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;932&#39; height=&#39;384&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"932\" data-rawheight=\"384\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"932\" data-original=\"https://pic1.zhimg.com/v2-3d80739ddc39cba623df2d10bda8656c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-3d80739ddc39cba623df2d10bda8656c_b.jpg\"/></figure><h2><b>5Vs of Big Data</b></h2><p>IBM suggest to use 5Vs to identify big data.</p><p><b>Volume</b> refers to the vast amount of data generated every second.</p><ul><li>Email</li><li>Twitter</li><li>photos</li><li>video clip</li><li>Sensor data</li></ul><p>For example, Facebook: </p><ul><li>we send 10 billion messages per day, </li><li>click the like button 4.5 billion times per day</li><li>upload 350 million new pictures every day</li></ul><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-da51ead283863ef5c725b5fb6622c4cd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"797\" data-rawheight=\"360\" class=\"origin_image zh-lightbox-thumb\" width=\"797\" data-original=\"https://pic2.zhimg.com/v2-da51ead283863ef5c725b5fb6622c4cd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;797&#39; height=&#39;360&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"797\" data-rawheight=\"360\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"797\" data-original=\"https://pic2.zhimg.com/v2-da51ead283863ef5c725b5fb6622c4cd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-da51ead283863ef5c725b5fb6622c4cd_b.jpg\"/></figure><p><b>Velocity</b> refers to the speed at which <b>new</b> data is generated and the speed at which data moves around.</p><ul><li>Social media message goes viral in minutes;</li><li>Credit card transactions are checked for fraudulent activities</li><ul><li>Credit card company is tracking your every move.</li><li>Advances in how card providers and networks process massive amounts of data from card usage means they often alert consumers to potential fraud before consumers notice anything amiss.</li><li>Use case: That&#39;s what happened to Ted Sindzinski, a digital marketer who lives in Orange County, Calif. A few months ago, out of the blue, his card provider called and asked him if he had recently made a purchase at the women&#39;s retailer Anthropologie. He hadn&#39;t. The company immediately shut down his card and denied several more online charges. &#34;I was surprised when [the card provider] called me. I know card fraud can happen to anyone, but I didn&#39;t think I&#39;d have an issue given how diligent I am,&#34; Sindzinski says. He still doesn&#39;t know how or where the fraudster got his card number.</li></ul><li>Trading systems to analyze social media networks to pick up signals that trigger decisions to buy or sell shares.</li></ul><p class=\"ztext-empty-paragraph\"><br/></p><p><b>Variety</b> refers to different types of data we can now use.</p><p>structured data: can neatly fits into tables or relational databases. </p><p>unstructured data: photos, video sequences, social medial updates, sensor data, voice recording...</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-13da05a9748a8d947bf286a34a5f5173_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"608\" data-rawheight=\"284\" class=\"origin_image zh-lightbox-thumb\" width=\"608\" data-original=\"https://pic4.zhimg.com/v2-13da05a9748a8d947bf286a34a5f5173_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;608&#39; height=&#39;284&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"608\" data-rawheight=\"284\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"608\" data-original=\"https://pic4.zhimg.com/v2-13da05a9748a8d947bf286a34a5f5173_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-13da05a9748a8d947bf286a34a5f5173_b.jpg\"/></figure><p><b>Veracity</b> refers to the messiness or trustworthiness of the data. </p><ul><li>Quality </li><li>Accuracy</li></ul><p>For example: twitter posts with hashtags, abbreviations, typos and colloquial speech.</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>Value</b> refers to our ability to turn our data into value.</p><p>It helps companies to better understand and serve customers. Example: the recommendations made by Amazon or Netflix.</p><p>It allows companies to optimize their processes. Example: Uber is able to predict demand, dynamically price journeys and send the closest driver to the customers.</p><p>It improves our health care: Government agencies can now predict flu outbreaks.</p><p>It helps us to improve security: Government and law enforcement use big data to foil terrorist attacks and detect cyber crime.</p><h2><b>Challenge of Big Data</b></h2><ul><li>How to store data?</li><li>How to analyze data?</li><li>Can we use traditional database technology?</li></ul><p><b>Solution</b></p><p>distributed systems: data is stored in different locations, connected by networks and brought together by software.</p><ul><li>HDFS</li><li>Map/Reduce</li><li>No</li></ul><p class=\"ztext-empty-paragraph\"><br/></p><p>zettabyte = 2(70)bytes</p><h2><b>Why big data?</b></h2><p>Application makes big data valuable.</p><p>Big Data -&gt; Better Models -&gt; Higher Precision</p><p>Big Data -&gt; Personalized marketing data -&gt; Happy customers!</p><h2><b>How to use big data?</b></h2><p>Recommendation Engines</p><p>Examples:</p><p>amazon: </p><p>netflix:</p><p class=\"ztext-empty-paragraph\"><br/></p><h2><b>Sentiment Analysis</b></h2><p>Sentiment analysis is <i>contextual mining of text </i>which identifies and extracts <i>subjective</i> information in source material, and helping a business to understand the social sentiment of their <i>brand, product or service</i> while monitoring <i>online conversations</i>.</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>How</b>?</p><p>Tools: AI techniques. Deep learning.</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>Sentiment Analysis</b> </p><p>is the most common text classification tool that analyses an incoming message and tells whether the underlying sentiment is positive, negative our neutral.</p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.paralleldots.com/sentiment-analysis\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">paralleldots.com/sentim</span><span class=\"invisible\">ent-analysis</span><span class=\"ellipsis\"></span></a></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-73474f195099493fcb8c00b3c6758b3d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"841\" data-rawheight=\"364\" class=\"origin_image zh-lightbox-thumb\" width=\"841\" data-original=\"https://pic2.zhimg.com/v2-73474f195099493fcb8c00b3c6758b3d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;841&#39; height=&#39;364&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"841\" data-rawheight=\"364\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"841\" data-original=\"https://pic2.zhimg.com/v2-73474f195099493fcb8c00b3c6758b3d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-73474f195099493fcb8c00b3c6758b3d_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p><b>Intent Analysis</b></p><p>This classifier tells whether the underlying intention behind a sentence is opinion, news, marketing, complaint, suggestion, appreciation, and query. This is trained on our proprietary dataset.<br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-ce7d54f589e71a1c666c91717399f6df_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"666\" data-rawheight=\"411\" class=\"origin_image zh-lightbox-thumb\" width=\"666\" data-original=\"https://pic4.zhimg.com/v2-ce7d54f589e71a1c666c91717399f6df_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;666&#39; height=&#39;411&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"666\" data-rawheight=\"411\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"666\" data-original=\"https://pic4.zhimg.com/v2-ce7d54f589e71a1c666c91717399f6df_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-ce7d54f589e71a1c666c91717399f6df_b.jpg\"/></figure><p><b> Emotion Analysis</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-2a3cd9418521b79e7136ba209c19ee9a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"829\" data-rawheight=\"347\" class=\"origin_image zh-lightbox-thumb\" width=\"829\" data-original=\"https://pic3.zhimg.com/v2-2a3cd9418521b79e7136ba209c19ee9a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;829&#39; height=&#39;347&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"829\" data-rawheight=\"347\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"829\" data-original=\"https://pic3.zhimg.com/v2-2a3cd9418521b79e7136ba209c19ee9a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-2a3cd9418521b79e7136ba209c19ee9a_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p><b>Benefit from Sentiment Analysis </b></p><ul><li>Improve Customer Satisfaction</li></ul><p>Sentiment analysis quantifies the perception of current and potential customers on careful examination of their feedback. This helps you in streamlining the focus on customer satisfaction and building an appealing branding technique which directly improves your bottomline.</p><ul><li>Brand-Watching</li></ul><p>Enterprises can analyze how people are reacting to their marketing campaigns on social media platforms like Youtube, Facebook, Twitter, and Instagram. This gives them an objective feedback about the content that works and empowers them in fine tuning their marketing strategy accordingly.</p><p class=\"ztext-empty-paragraph\"><br/></p><h2><b>How to collect data?</b></h2><p>Probe</p><h2><b>How to process big data?</b></h2><p class=\"ztext-empty-paragraph\"><br/></p><p><b>Understand Problems with Big Data and Traditional System with a Story</b></p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>Introduction to Kafka</b></p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>Introduction to Flume</b></p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>Introduction to Hadoop</b></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>", 
            "topic": [
                {
                    "tag": "大数据", 
                    "tagLink": "https://api.zhihu.com/topics/19740929"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/42838844", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 0, 
            "title": "团队管理：Day 24", 
            "content": "<p>这是我在10月份项目启动大会上的讲话，对技术团队的承诺和要求。</p><ol><li>我们管理层努力创造一个平等、尊总、沟通、互动的工作氛围，让我们的技术人员可以抛去不必要的烦恼，专注技术，保质保量按时完成项目任务。</li><li>在项目管理上，合理评估工作量，正确评估风险，规范需求文档，强调开发阶段设计文档和编码质量，加强端到端的测试，充分做好上线工作。</li><li>做好2周一次的迭代，在迭代周期的开发阶段，尽量避免需求变更；在测试阶段，严格把关需求变更。</li></ol>", 
            "topic": [
                {
                    "tag": "管理", 
                    "tagLink": "https://api.zhihu.com/topics/19553265"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/42821867", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 1, 
            "title": "项目过程中需求变更的场景、风险和对策分析", 
            "content": "<p>在项目过程中，尤其是在一个迭代周期中（比如2周），如果有需求变更，对于项目的风险和成本都有影响。根据笔者经验，做了如下分析，共勉。</p><p>场景：1个2周的迭代周期中，开发时间6天，测试时间3天，上线1天。</p><p>需求变更可以分成两种情况：1 增加新需求 2 调整现有的需求</p><p>需求变更发生的时间点：开发阶段和测试阶段。</p><p>1 开发阶段的需求变更</p><p>1）增加新需求 </p><p>风险：中。需要重新评估工作量，推迟上线时间</p><p>成本：如果该新需求对于现在的技术方案没有太多影响，相对独立，则成本小。否则，成本中。</p><p>对团队的影响：小。一般来说，团队可以接受，前提是上线时间顺延。</p><p>对策：做好团队疏导工作，让团队了解该新需求的重要性和紧迫性。</p><p>2）需求变更</p><p>风险：大。需要重新评估工作量，推迟上线时间</p><p>成本：高。导致技术方案重新修订甚至推翻重来，已经花费的工时的成果为0</p><p>对团队的影响：中。由于丧失了阶段性成果，需要重头再来，团队心理上难以接受。</p><p>对策：需要从市场、客户和公司目标来疏导，做好团队心理疏导工作。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>2 测试阶段的需求变更</p><p>风险：高。将导致上线时间推迟达3-5天。</p><p>成本：高。无论是哪一种类型的变更，在次阶段都是高昂的成本。开发成本上面已经提及。测试需要回归（重新测试）该变更可能影响的地方。即使一个看似简单的改动，如果是整个流程或者规则的一个环节，都需要全覆盖的回归。特别要强调的是，每一次变更，都需要折腾一遍，代价极高。</p><p>对团队的影响：高。阶段性成果彻底损失，上线时间大大延长，团队心理上难以接受。</p><p>对策：客观和理性的与团队沟通。产品和项目管理团队要勇于承担责任，承认项目管理团队在该变更上管理的不力，承认产品在需求上把控的不力。认可开发测试团队的工作。做好心理疏导工作。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>总结：在1个2周的迭代周期里，尽可能避免需求变更。减少新需求，杜绝需求调整。尽可能在2周的迭代中锁定需求，确保阶段性成果。把新的需求可以放在下一个迭代周期里，好处是可以有阶段性成果，缺点是有2周的需求偏差。作为一个互联网公司，能否接受2周的偏差，取决于公司的市场和商业模式。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>以上是个人愚见，欢迎拍砖。</p><p></p><p></p>", 
            "topic": [
                {
                    "tag": "风险控制", 
                    "tagLink": "https://api.zhihu.com/topics/19572931"
                }, 
                {
                    "tag": "项目管理", 
                    "tagLink": "https://api.zhihu.com/topics/19560856"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/41724895", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 0, 
            "title": "MySQL 内存监控和释放 (整理非原创)", 
            "content": "<h2><b>原理</b></h2><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-12eaa1ca8d4d3352a51e36eefe324980_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"48\" class=\"origin_image zh-lightbox-thumb\" width=\"500\" data-original=\"https://pic1.zhimg.com/v2-12eaa1ca8d4d3352a51e36eefe324980_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;500&#39; height=&#39;48&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"48\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"500\" data-original=\"https://pic1.zhimg.com/v2-12eaa1ca8d4d3352a51e36eefe324980_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-12eaa1ca8d4d3352a51e36eefe324980_b.jpg\"/></figure><p>(该图片转自<a href=\"https://link.zhihu.com/?target=https%3A//www.howtoforge.com/linux-free-command/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Linux Free Command Explained for Beginners (6 Examples)</a>）<br/> </p><ul><li>total</li></ul><p>系统可支配使用的内存总数。</p><ul><li>free</li></ul><p>系统尚未使用的内存。（free和是swap，在/proc/meminfo）</p><ul><li>used</li></ul><p>used=total-free-buffers-cache。</p><ul><li>shared</li></ul><p>被tmpfs使用的内存。(/proc/meminfo)</p><ul><li>buffers</li></ul><p>内核缓存使用的内存。</p><ul><li>cache</li></ul><p>被缓存页和slab。</p><p>（slab是一组连续的内存页，由slab分配器分配。这些内存将来被分割为相同大小的段，便于缓存管理。）</p><ul><li>buff/cache</li></ul><p>buffers 和 cache的总和。</p><ul><li>available</li></ul><p>available≈free+buffers+cached</p><p>估计的内存数，用来启动一个新的应用，不包含swapping。</p><p>系统中有些内存虽然已被使用但是可以回收的，比如cache/buffer、slab都有一部分可以回收，所以free不能代表全部可用的内存，这部分可回收的内存加上free才是系统可用的内存。</p><p>与free的关键区别点在于, free是说的系统层面，available是说的应用程序层面。</p><h2><b>手动释放内存</b></h2><ul><li>主机执行sync命令</li></ul><p>目的：sync 命令将所有未写的系统缓冲区写到磁盘中</p><p># sync</p><ul><li>数据库执行刷新日志缓存、表缓存</li></ul><p> mysql&gt; flush logs; -- 关闭当前的二进制日志文件并创建一个新文件<br/> Query OK, 0 rows affected (0.00 sec)<br/> mysql&gt; flush tables; -- 关闭所有打开的表，同时该操作将会清空查询缓存中的内容<br/> Query OK, 0 rows affected (0.00 sec)</p><ul><li> 缓存释放</li></ul><p>  # /proc/sys/vm/drop_caches <br/> </p><p>说明：/proc是一个虚拟文件系统，我们可以通过对它的读写操作做为与kernel实体间进行通信的一种手段。也就是说可以通过修改/proc中的文件，来对当前kernel的行为做出调整。那么我们可以通过调整/proc/sys/vm/drop_caches来释放内存</p><p>drop_caches的值可以是0-3之间的数字，代表不同的含义：<br/>0：不释放（系统默认值）<br/>1：释放页缓存<br/>2：释放dentries和inodes<br/>3：释放所有缓存</p><ul><li>参数优化调整</li></ul><p> innodb_flush_method</p><p>innodb_flush_method这个参数控制着innodb数据文件及redo log的打开、刷写模式。</p><p> innodb_flush_method=O_DIRECT<br/> O_DIRECT模式：数据文件的写入操作是直接从mysql innodb buffer到磁盘的，并不用通过操作系统的缓冲，而真正的完成也是在flush这步,日志还是要经过OS缓冲；</p>", 
            "topic": [
                {
                    "tag": "计算机科学", 
                    "tagLink": "https://api.zhihu.com/topics/19580349"
                }, 
                {
                    "tag": "科技", 
                    "tagLink": "https://api.zhihu.com/topics/19556664"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/39394134", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 0, 
            "title": "2. From Web 1.0 to Web 3.0", 
            "content": "<p><b>Web 1.0</b></p><p>The internet before 1999 is called <b>Read-Only</b> web. It allowed users to search for information and read it. However, there was very little in the way of user interaction or content contribution.</p><p>Applications: chat room, MSN messanger, Web portal (Yahoo).</p><p><b>Web 2.0</b></p><p><b>Read-Write-Publish</b> web.</p><p>Users can contribute content and interact with other web users. This era empowered the common user with a few new concepts like Blogs, Social-Media &amp; Video-Streaming. </p><p>Applications: Twitter, YouTube, Facebook, Wechat, Tencent QQ</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-4ad26c9df31e4e63d90fb644117e6e44_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1324\" data-rawheight=\"691\" class=\"origin_image zh-lightbox-thumb\" width=\"1324\" data-original=\"https://pic1.zhimg.com/v2-4ad26c9df31e4e63d90fb644117e6e44_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1324&#39; height=&#39;691&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1324\" data-rawheight=\"691\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1324\" data-original=\"https://pic1.zhimg.com/v2-4ad26c9df31e4e63d90fb644117e6e44_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-4ad26c9df31e4e63d90fb644117e6e44_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-cc43e204e9458385ef0956110f57c425_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1159\" data-rawheight=\"732\" class=\"origin_image zh-lightbox-thumb\" width=\"1159\" data-original=\"https://pic2.zhimg.com/v2-cc43e204e9458385ef0956110f57c425_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1159&#39; height=&#39;732&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1159\" data-rawheight=\"732\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1159\" data-original=\"https://pic2.zhimg.com/v2-cc43e204e9458385ef0956110f57c425_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-cc43e204e9458385ef0956110f57c425_b.jpg\"/></figure><p><b>Web 3.0</b></p><p>Integrated data</p><p>Semantic search</p><p>AI: Recommended</p><p>IoT: Any device can be connected together.</p><p>AR: the boundary of real life and online has disappeared.</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-843049c3279de16c1a19b9caf33916ac_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1238\" data-rawheight=\"558\" class=\"origin_image zh-lightbox-thumb\" width=\"1238\" data-original=\"https://pic1.zhimg.com/v2-843049c3279de16c1a19b9caf33916ac_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1238&#39; height=&#39;558&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1238\" data-rawheight=\"558\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1238\" data-original=\"https://pic1.zhimg.com/v2-843049c3279de16c1a19b9caf33916ac_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-843049c3279de16c1a19b9caf33916ac_b.jpg\"/></figure><p><b>Semantic search</b></p><p>It is a data searching technique in a which a search query aims to not only find keywords, but to determine the <b>intent </b>and <b>contextual </b>meaning of the words a person is using for search.</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-5072511b3ca3bbbc0dbce3cbe9672a62_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1266\" data-rawheight=\"971\" class=\"origin_image zh-lightbox-thumb\" width=\"1266\" data-original=\"https://pic3.zhimg.com/v2-5072511b3ca3bbbc0dbce3cbe9672a62_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1266&#39; height=&#39;971&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1266\" data-rawheight=\"971\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1266\" data-original=\"https://pic3.zhimg.com/v2-5072511b3ca3bbbc0dbce3cbe9672a62_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-5072511b3ca3bbbc0dbce3cbe9672a62_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>If we search Cristiano Ronaldo through the Google search, we can see the consolidated data for him: current teams, born, height etc.</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-3d007d652e5a8b0326001a30f7b4b3ff_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1313\" data-rawheight=\"569\" class=\"origin_image zh-lightbox-thumb\" width=\"1313\" data-original=\"https://pic4.zhimg.com/v2-3d007d652e5a8b0326001a30f7b4b3ff_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1313&#39; height=&#39;569&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1313\" data-rawheight=\"569\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1313\" data-original=\"https://pic4.zhimg.com/v2-3d007d652e5a8b0326001a30f7b4b3ff_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-3d007d652e5a8b0326001a30f7b4b3ff_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-d6db5affdd58ba2faef1ee0763eccf7a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1283\" data-rawheight=\"619\" class=\"origin_image zh-lightbox-thumb\" width=\"1283\" data-original=\"https://pic3.zhimg.com/v2-d6db5affdd58ba2faef1ee0763eccf7a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1283&#39; height=&#39;619&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1283\" data-rawheight=\"619\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1283\" data-original=\"https://pic3.zhimg.com/v2-d6db5affdd58ba2faef1ee0763eccf7a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-d6db5affdd58ba2faef1ee0763eccf7a_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-20a552e3a1f0712efc828ff3b49435b7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1346\" data-rawheight=\"604\" class=\"origin_image zh-lightbox-thumb\" width=\"1346\" data-original=\"https://pic4.zhimg.com/v2-20a552e3a1f0712efc828ff3b49435b7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1346&#39; height=&#39;604&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1346\" data-rawheight=\"604\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1346\" data-original=\"https://pic4.zhimg.com/v2-20a552e3a1f0712efc828ff3b49435b7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-20a552e3a1f0712efc828ff3b49435b7_b.jpg\"/></figure><p></p><p></p><p></p><p></p><p></p>", 
            "topic": [
                {
                    "tag": "Web 应用", 
                    "tagLink": "https://api.zhihu.com/topics/19589205"
                }, 
                {
                    "tag": "科技", 
                    "tagLink": "https://api.zhihu.com/topics/19556664"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/36858084", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 0, 
            "title": "CTO说读后感言", 
            "content": "<p>最近花了几天时间，断断续续读完了《CTO说》，掩卷沉思，记下几点感言。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>CTO养成路径</p><p>如何从一个有一技之长的程序员，成为一个中层技术管理者，再到CTO，每个阶段都需要掌握哪些技能和知识？每个阶段都有哪些挑战？</p><p class=\"ztext-empty-paragraph\"><br/></p><p>从这个路径来看，一个CTO首先是个技术牛人。程序员阶段需要在技术深度上拓展，在中层技术管理者层需要增加技术宽度和人际技能。CTO这一层要求商业方面的知识。</p><p>CTO的知识图谱里，主要包括以下三个方面：</p><ul><li>技术架构</li><li>团队管理：技术和产品</li><li>商业模式</li></ul>", 
            "topic": [
                {
                    "tag": "科技", 
                    "tagLink": "https://api.zhihu.com/topics/19556664"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/36331619", 
            "userName": "会飞的猪", 
            "userLink": "https://www.zhihu.com/people/1e0cb4a43d97cd8d25b1471b06e6ceb1", 
            "upvote": 0, 
            "title": "Agile实战", 
            "content": "<p><b>前言</b></p><p>笔者在硅谷一家网络公司任职时，担任过1年半的Scrum master，拥有Scrum master证书，并且负责在全公司推广培训Agile。本文根据笔者在实施Agile过程中的实战经验，与大家分享一些干货，抱砖引玉，有不足之处，不吝赐教。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>Agile VS Water Flow</b></p><p>关于二者的区别，网上的文章很多。笔者认为，主要的区别在于，Agile把产品、开发、测试合并成了一个Scrum Team，从而可以快速迭代，快速发现问题。</p><p>产品开发的各个关键环节，Agile和Water Flow基本上都有。</p><ul><li>需求分析</li><li>功能设计</li><li>Coding &amp; UT</li><li>测试（功能、容量、压力等）</li></ul><p>Agile一个主要改进是：在每一个Sprint（一般是2周的一个迭代周期）里，都具有以上4个环节。这样的好处是快速迭代，快速发现问题，拥抱变化。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>角色 （roles）</b></p><p>Agile里的一个team称为Scrum team。由以下角色构成：</p><ul><li>Scrum master</li><li>Product owner</li><li>Scrum development team：开发、测试、自动化测试。</li></ul><p>笔者的Scrum team主要是由一位Scrum master（笔者）、Product Owner（公司的产品经理）、3位C++开发、2位Java开发、1位测试（系统测试）、1位自动化测试团队经理（他负责具体安排自动化测试开发工作的安排），共9个人。</p><p>开发要负责功能性测试，确保功能性bug为0.（Corner Case除外）</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>工具（tools）</b></p><p>Confluence: 文档协作管理。即所有的需求文档、设计文档都在Confluence上。包括文档的review、评论等。</p><p>Jira：Feature开发任务管理采用Sprint模式。运维任务管理跟踪使用Kanpan。</p><p>TestLink：测试用例管理和bug跟踪</p><p>Jenkin：确保CI/CD。每天晚上自动生成build、自动部署到测试机、自动化测试、产生测试报告。我们的系统需要部署到至少4台或者11台Linux VM上。</p><p>Git: 代码版本管理</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>自动化测试开发框架</b></p><p>采用流行的Selenium框架开发WEB UI以及后端服务器的自动化测试用例。Yaml用来描述测试用例。语言采用Java。</p><p>这一块也是投入比较大的地方。刚开始的时候，1个自动化测试开发人员1天只能完成2个用例，后来基本上是3-4个。从CI的角度看，这个投入是必须的。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>实施中的问题</b></p><ul><li>Scrum master ！= project manager</li><li>Scrum master工作量如何饱和？如何在时间比较零散的情况下，为公司创造更多价值？</li></ul><p>Scrum master每天至少要花费30%的时间来1）协调内外部的资源 2) 查看每天的测试报告，并且分配任务。这导致Scrum master的时间比较零散，但是从成本的角度看，又不可能希望Scrum master是全职的。笔者就要承担需求分析以及设计的工作，以及一些coding的工作。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>小结</b></p><ul><li>Culture</li><li>Think</li><li>Code</li><li>Deliver</li><li>Run</li><li>Manage</li><li>Learn</li></ul>", 
            "topic": [
                {
                    "tag": "科技", 
                    "tagLink": "https://api.zhihu.com/topics/19556664"
                }, 
                {
                    "tag": "敏捷", 
                    "tagLink": "https://api.zhihu.com/topics/19557144"
                }, 
                {
                    "tag": "Scrum", 
                    "tagLink": "https://api.zhihu.com/topics/19567775"
                }
            ], 
            "comments": []
        }
    ], 
    "url": "https://zhuanlan.zhihu.com/c_183006996"
}

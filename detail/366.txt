{
    "title": "古德曼汽车工业", 
    "description": "分享自制开发工具\n工作心得、项目经验分享\n", 
    "followers": [
        "https://www.zhihu.com/people/li-zhi-jun-85-61", 
        "https://www.zhihu.com/people/wang-wen-56-19", 
        "https://www.zhihu.com/people/wych-33", 
        "https://www.zhihu.com/people/duan-ji-lue", 
        "https://www.zhihu.com/people/bear-76-72", 
        "https://www.zhihu.com/people/cloudwl", 
        "https://www.zhihu.com/people/jojo-16-12-94", 
        "https://www.zhihu.com/people/zhi-duo-duo-78", 
        "https://www.zhihu.com/people/yan-lei-57-27", 
        "https://www.zhihu.com/people/da-shuai-32-52", 
        "https://www.zhihu.com/people/liker292", 
        "https://www.zhihu.com/people/jeff-77-10", 
        "https://www.zhihu.com/people/dummleon", 
        "https://www.zhihu.com/people/fei-dian-51", 
        "https://www.zhihu.com/people/ye-xiao-1-61", 
        "https://www.zhihu.com/people/hao-yu-80", 
        "https://www.zhihu.com/people/wo-xiang-kao-yan-77", 
        "https://www.zhihu.com/people/sandor-sh", 
        "https://www.zhihu.com/people/tao-hua-99-72", 
        "https://www.zhihu.com/people/qi-zi-95-71", 
        "https://www.zhihu.com/people/li-hong-shuang-73", 
        "https://www.zhihu.com/people/carrycai-1", 
        "https://www.zhihu.com/people/xiao-wei-41-60", 
        "https://www.zhihu.com/people/you-zi-9-26", 
        "https://www.zhihu.com/people/wo-shi-yige-ren-min-79", 
        "https://www.zhihu.com/people/mu-hang-80", 
        "https://www.zhihu.com/people/tu-bie-jun-56", 
        "https://www.zhihu.com/people/zhang-xian-yun-80", 
        "https://www.zhihu.com/people/shi-xian-sheng-18-62", 
        "https://www.zhihu.com/people/yang-qing-ning-98", 
        "https://www.zhihu.com/people/guo-si-yang", 
        "https://www.zhihu.com/people/dian-qi-sha-shou-92", 
        "https://www.zhihu.com/people/xinyaping", 
        "https://www.zhihu.com/people/mariner-95", 
        "https://www.zhihu.com/people/feng-shui-li-zhi", 
        "https://www.zhihu.com/people/devins", 
        "https://www.zhihu.com/people/jixihot", 
        "https://www.zhihu.com/people/li-kui-1-12", 
        "https://www.zhihu.com/people/ya-zhi-xin-yu", 
        "https://www.zhihu.com/people/he-wei-80-76", 
        "https://www.zhihu.com/people/ugo-73", 
        "https://www.zhihu.com/people/xiao-qing-xiang-68-83", 
        "https://www.zhihu.com/people/he-wei-4-61", 
        "https://www.zhihu.com/people/feng-feng-78-77", 
        "https://www.zhihu.com/people/li-ling-12-18-63", 
        "https://www.zhihu.com/people/sam-7-27", 
        "https://www.zhihu.com/people/milanlover0000", 
        "https://www.zhihu.com/people/bu-fu-shao-hua-84-69", 
        "https://www.zhihu.com/people/ha-ha-74-69-50", 
        "https://www.zhihu.com/people/san-bao-27-53", 
        "https://www.zhihu.com/people/akjarjash", 
        "https://www.zhihu.com/people/tai-tou-kan-tian-kong-28", 
        "https://www.zhihu.com/people/evil-scythe", 
        "https://www.zhihu.com/people/will-48-78", 
        "https://www.zhihu.com/people/xiao-pang-gong", 
        "https://www.zhihu.com/people/li-bin-long-95", 
        "https://www.zhihu.com/people/lu-wei-3-41", 
        "https://www.zhihu.com/people/DreSanders", 
        "https://www.zhihu.com/people/zhang-bai-qiao-23", 
        "https://www.zhihu.com/people/sldao971", 
        "https://www.zhihu.com/people/shang-cheng-zhi-11", 
        "https://www.zhihu.com/people/mu-se-65", 
        "https://www.zhihu.com/people/lu-peng-29-83", 
        "https://www.zhihu.com/people/gong-sun-xiao-bai-long", 
        "https://www.zhihu.com/people/qinhan2018", 
        "https://www.zhihu.com/people/wang-ya-53-63", 
        "https://www.zhihu.com/people/ma19910922", 
        "https://www.zhihu.com/people/clockhunter", 
        "https://www.zhihu.com/people/xu-yang-34-58", 
        "https://www.zhihu.com/people/wym-19-87", 
        "https://www.zhihu.com/people/guo-da-xia-16-74", 
        "https://www.zhihu.com/people/chen-chen-50-76-46-56", 
        "https://www.zhihu.com/people/wu-kong-j", 
        "https://www.zhihu.com/people/zi-qiang-bu-xi-31-20", 
        "https://www.zhihu.com/people/wang-jack-95", 
        "https://www.zhihu.com/people/jackstudy", 
        "https://www.zhihu.com/people/ma-jun-21-33", 
        "https://www.zhihu.com/people/xia-peng-fei-77-81", 
        "https://www.zhihu.com/people/eric-81-73", 
        "https://www.zhihu.com/people/jian-li-la-la-la", 
        "https://www.zhihu.com/people/yang-jin-chen-20-18", 
        "https://www.zhihu.com/people/fei-mu-98-94", 
        "https://www.zhihu.com/people/da-die-12-96", 
        "https://www.zhihu.com/people/da-hong-deng-long-gao-gao-gua-76", 
        "https://www.zhihu.com/people/lu-guan-43", 
        "https://www.zhihu.com/people/liu-xiao-37-78-73", 
        "https://www.zhihu.com/people/li-zhuo-18-52", 
        "https://www.zhihu.com/people/jason-28-98", 
        "https://www.zhihu.com/people/xiang-yang-35-11", 
        "https://www.zhihu.com/people/lonelybag-79", 
        "https://www.zhihu.com/people/xing-jiong-tu-shu", 
        "https://www.zhihu.com/people/merit-85", 
        "https://www.zhihu.com/people/xie-qiu-yu-78", 
        "https://www.zhihu.com/people/kan-kan-60-9", 
        "https://www.zhihu.com/people/fan-14-84", 
        "https://www.zhihu.com/people/bin-89-87", 
        "https://www.zhihu.com/people/ma-ji-53-63", 
        "https://www.zhihu.com/people/da-long-mao-25-70", 
        "https://www.zhihu.com/people/hai-bian-de-feng-64-55", 
        "https://www.zhihu.com/people/yanghuoer", 
        "https://www.zhihu.com/people/yang-bo-76-64", 
        "https://www.zhihu.com/people/wei-jin-qiu-27", 
        "https://www.zhihu.com/people/yuan-wei-62-15-36", 
        "https://www.zhihu.com/people/zhong-lei-52-64", 
        "https://www.zhihu.com/people/sun-guo-an-29", 
        "https://www.zhihu.com/people/xu-de-ze-27", 
        "https://www.zhihu.com/people/lulibin-13", 
        "https://www.zhihu.com/people/kidwish", 
        "https://www.zhihu.com/people/17621039982", 
        "https://www.zhihu.com/people/lzf-20-99", 
        "https://www.zhihu.com/people/be-may-29", 
        "https://www.zhihu.com/people/xu-ming-ming-78-15", 
        "https://www.zhihu.com/people/yao-yi-zheng-84", 
        "https://www.zhihu.com/people/autyan", 
        "https://www.zhihu.com/people/wu-xing-59-49", 
        "https://www.zhihu.com/people/mo-se-92-56", 
        "https://www.zhihu.com/people/yuan-feng-98-19", 
        "https://www.zhihu.com/people/lwj-23-89", 
        "https://www.zhihu.com/people/li-chang-qing-83", 
        "https://www.zhihu.com/people/chen-zhen-4-74", 
        "https://www.zhihu.com/people/man-tou-xi-fan-86", 
        "https://www.zhihu.com/people/fany-17-28", 
        "https://www.zhihu.com/people/zheng-zhi-nan-94", 
        "https://www.zhihu.com/people/li-zhi-67-19", 
        "https://www.zhihu.com/people/liang-da-yan-80", 
        "https://www.zhihu.com/people/tianrui007", 
        "https://www.zhihu.com/people/wang-yong-47-92", 
        "https://www.zhihu.com/people/jian-heng-yong-yi-jiao-shou", 
        "https://www.zhihu.com/people/yang-zi-60-38-90", 
        "https://www.zhihu.com/people/chai-dian-xiao-chu-sheng-86", 
        "https://www.zhihu.com/people/mark-57-7", 
        "https://www.zhihu.com/people/ge-bi-lao-li-72", 
        "https://www.zhihu.com/people/xiao-da-jiang-7", 
        "https://www.zhihu.com/people/jack-67-76", 
        "https://www.zhihu.com/people/yu-xiao-pang-26-19", 
        "https://www.zhihu.com/people/zhang-da-91-37", 
        "https://www.zhihu.com/people/liu-zhi-dong", 
        "https://www.zhihu.com/people/student-ye", 
        "https://www.zhihu.com/people/autopower", 
        "https://www.zhihu.com/people/yangping78", 
        "https://www.zhihu.com/people/xue-liang-70", 
        "https://www.zhihu.com/people/chen-ji-chang-80-55", 
        "https://www.zhihu.com/people/chen-xiao-xi-88", 
        "https://www.zhihu.com/people/frankwang-97", 
        "https://www.zhihu.com/people/li-yu-27-59", 
        "https://www.zhihu.com/people/zheng-hui-1-46", 
        "https://www.zhihu.com/people/xiao-hei-50-42-85", 
        "https://www.zhihu.com/people/nuaalht", 
        "https://www.zhihu.com/people/fei-tian-xiao-zhu-68", 
        "https://www.zhihu.com/people/shi-zhen-42-91", 
        "https://www.zhihu.com/people/chen-xiao-xi-42-18", 
        "https://www.zhihu.com/people/matthewzhenggong", 
        "https://www.zhihu.com/people/wu-la-la-67-24-13", 
        "https://www.zhihu.com/people/xiang-wang-yu-jiang-hu-20-94", 
        "https://www.zhihu.com/people/me-cuiz", 
        "https://www.zhihu.com/people/shao-jie-89", 
        "https://www.zhihu.com/people/liu-hui-56-43-81", 
        "https://www.zhihu.com/people/wang-da-ke-66-28", 
        "https://www.zhihu.com/people/zhangsan-97-39", 
        "https://www.zhihu.com/people/YPHFree", 
        "https://www.zhihu.com/people/xu-yin-da-58", 
        "https://www.zhihu.com/people/zhan-mu-si-91", 
        "https://www.zhihu.com/people/liu-chao-91-74-63", 
        "https://www.zhihu.com/people/yu-ming-6-1", 
        "https://www.zhihu.com/people/liu-liang-66-97", 
        "https://www.zhihu.com/people/ge-ha-53", 
        "https://www.zhihu.com/people/xiang-marshall", 
        "https://www.zhihu.com/people/wai-xiang-ren-35", 
        "https://www.zhihu.com/people/gghjk-98", 
        "https://www.zhihu.com/people/zhang-ze-ping-88", 
        "https://www.zhihu.com/people/yu-jiao-shou-61", 
        "https://www.zhihu.com/people/zhong-er-boy-53", 
        "https://www.zhihu.com/people/marble-45", 
        "https://www.zhihu.com/people/wang-hai-jian-71", 
        "https://www.zhihu.com/people/fwang16", 
        "https://www.zhihu.com/people/xiao-bo-xiao-bo-66", 
        "https://www.zhihu.com/people/tong-xiao-hui-26", 
        "https://www.zhihu.com/people/zhang-xiao-fan-52-3", 
        "https://www.zhihu.com/people/tang-mi-25-29", 
        "https://www.zhihu.com/people/xia-yu-71-71-60", 
        "https://www.zhihu.com/people/wa-ha-ha-bu-yao-qian", 
        "https://www.zhihu.com/people/jax-59", 
        "https://www.zhihu.com/people/zhang-wei-72-65", 
        "https://www.zhihu.com/people/zhou-13-85-79", 
        "https://www.zhihu.com/people/tanson-33", 
        "https://www.zhihu.com/people/xiong-xiong-15-5-80", 
        "https://www.zhihu.com/people/gogo-91-76", 
        "https://www.zhihu.com/people/dz-li-4", 
        "https://www.zhihu.com/people/ying-zheng-78-49", 
        "https://www.zhihu.com/people/ertfyang", 
        "https://www.zhihu.com/people/wang_yuanfeng", 
        "https://www.zhihu.com/people/liu-yuan-qing-46", 
        "https://www.zhihu.com/people/ni-zhao-hui-24", 
        "https://www.zhihu.com/people/eq6102", 
        "https://www.zhihu.com/people/feng-lin-shuang-ye", 
        "https://www.zhihu.com/people/ma-cheng-yan-48", 
        "https://www.zhihu.com/people/sheng-lai-zi-you-81", 
        "https://www.zhihu.com/people/li-dong-11-62", 
        "https://www.zhihu.com/people/zy-shi", 
        "https://www.zhihu.com/people/yi-chu-88", 
        "https://www.zhihu.com/people/lijuqqkiko", 
        "https://www.zhihu.com/people/sun-yiyan-1", 
        "https://www.zhihu.com/people/my-bodhi", 
        "https://www.zhihu.com/people/yup-20-71", 
        "https://www.zhihu.com/people/lu-bo-86-31", 
        "https://www.zhihu.com/people/anhuang-14", 
        "https://www.zhihu.com/people/xie-shu-qi-15", 
        "https://www.zhihu.com/people/ze-yicheng-zhong-lao-93-95", 
        "https://www.zhihu.com/people/gu-zhi-xin-12", 
        "https://www.zhihu.com/people/ying-le-49-89", 
        "https://www.zhihu.com/people/dao-wo-75", 
        "https://www.zhihu.com/people/zhicheng-yang", 
        "https://www.zhihu.com/people/xuwlly", 
        "https://www.zhihu.com/people/chen-ze-68-56", 
        "https://www.zhihu.com/people/voca-liu", 
        "https://www.zhihu.com/people/ye-cha-4", 
        "https://www.zhihu.com/people/da-chou-chou-90"
    ], 
    "article": [
        {
            "url": "https://zhuanlan.zhihu.com/p/87985689", 
            "userName": "思想", 
            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
            "upvote": 2, 
            "title": "嵌入式C语言环境下的CAN总线通讯协议", 
            "content": "<p>本文转载在我的微信公众号：<b>古德曼汽车工业。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1774\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb\" width=\"1774\" data-original=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1774&#39; height=&#39;408&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1774\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1774\" data-original=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_b.jpg\"/></figure><p><b>希望关注本专栏的朋友，也能一并关注微信公众号。</b></p><p>原文地址：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247484131%26idx%3D1%26sn%3D17905df53aff017a30520d6fd605a8ce%26chksm%3Dce80d377f9f75a616812c81a5b8ea2457691559e6a064e68ae419b998947b00f83a8ae9f8da4%26token%3D1791389902%26lang%3Dzh_CN%23rd\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">嵌入式C语言环境下的CAN总线通讯协议</a></p><p>相信本公众号的读者对CAN通讯协议肯定都不陌生，各位在采集CAN总线信号、分析数据的时候是否想过，这些信号在电控单元（ECU）中通讯协议是如何实现的。本次内容介绍的是如何将CAN总线的通讯协议在C语言环境中实现。下面的内容需要有一点点的C语言基础，希望大家能坚持看完，一定会有所收获的。</p><p><b>1.结构体</b></p><p>通过前面文章《<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483692%26idx%3D1%26sn%3Df38a5ccf3d69bd06a88b27a07efc8d48%26chksm%3Dce80d0b8f9f759ae63f6f10061c3caacedcf226a6ecd4ccb0f1b5d3626dd2b4eccbbe062b918%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CAN总线(J1939)速成指南【1】</a>》的介绍，对于CAN通讯协议有三个非常重要的信息，分别是报文ID、数据场、解析与偏移。实现通讯协议的第一步就是定义一个报文的结构体。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-f1d61381810d27b443d008f07b7341f8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"235\" class=\"origin_image zh-lightbox-thumb\" width=\"700\" data-original=\"https://pic1.zhimg.com/v2-f1d61381810d27b443d008f07b7341f8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;700&#39; height=&#39;235&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"235\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"700\" data-original=\"https://pic1.zhimg.com/v2-f1d61381810d27b443d008f07b7341f8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-f1d61381810d27b443d008f07b7341f8_b.jpg\"/></figure><p><b>⚪ 定义报文ID</b></p><p>本次使用的例子是基于扩展ID，ID长度为29个位。由于C语言没有29位长度的数据类型所以使用32位数据类型UINT32。如果是标准ID使用16位数据类型UINT16即可。</p><p><b>小提示：数据类型</b></p><p>标准的C语言是没有UINT32、UINT16等这样的变量，这都是根据选用芯片的类型在宏中预先定义的。如：16位系统的UINT32 对应的C语言表达就是unsigned long，而对于32位系统的UINT32则对应的是usigned int。</p><p><b>⚪</b> <b>定义数据场</b></p><p>使用UINT8数据类型定义一个八字节的数组，用来存放数据场信息</p><p><b>⚪</b> <b>定义解析与偏移结构体</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-d54f06d4a50808bfb2a17dfb2c828341_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"758\" data-rawheight=\"211\" class=\"origin_image zh-lightbox-thumb\" width=\"758\" data-original=\"https://pic2.zhimg.com/v2-d54f06d4a50808bfb2a17dfb2c828341_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;758&#39; height=&#39;211&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"758\" data-rawheight=\"211\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"758\" data-original=\"https://pic2.zhimg.com/v2-d54f06d4a50808bfb2a17dfb2c828341_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-d54f06d4a50808bfb2a17dfb2c828341_b.jpg\"/></figure><p>需要另外在定义一个结构体，用来存放偏移与解析值。如上图，包含两个Float型数据。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-cb6ab0f1a66049be3724ccb3c6723142_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"719\" data-rawheight=\"269\" class=\"origin_image zh-lightbox-thumb\" width=\"719\" data-original=\"https://pic3.zhimg.com/v2-cb6ab0f1a66049be3724ccb3c6723142_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;719&#39; height=&#39;269&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"719\" data-rawheight=\"269\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"719\" data-original=\"https://pic3.zhimg.com/v2-cb6ab0f1a66049be3724ccb3c6723142_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-cb6ab0f1a66049be3724ccb3c6723142_b.jpg\"/></figure><p>在我们的报文结构体中对每一个信号的解析信息进行实例化。上图中的红色部分只用来说明如何调用【解析与偏移】结构体，后面会导入我们真正的例子信息。</p><p><b>2.矩阵</b></p><p>CAN数据帧包含64位的数据场，矩阵就是用来定义数据场如何划分的。这部分在通讯协议中体现在每个信号的起始位置与数据长度。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-15d1c718a62c6ca801e411f826a846dc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"778\" data-rawheight=\"723\" class=\"origin_image zh-lightbox-thumb\" width=\"778\" data-original=\"https://pic1.zhimg.com/v2-15d1c718a62c6ca801e411f826a846dc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;778&#39; height=&#39;723&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"778\" data-rawheight=\"723\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"778\" data-original=\"https://pic1.zhimg.com/v2-15d1c718a62c6ca801e411f826a846dc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-15d1c718a62c6ca801e411f826a846dc_b.jpg\"/></figure><p>这是【思想】使用Vetor CANdb++做的矩阵例子，以下称为【一号例子】。这个例子包含了一个16位数据、两个8位数据、一个32位数据，总共64位长度。数据位都对齐，不存在空位，十分完美。但是实际应用就不是这么美丽的了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-a933d0920a85d47a182a48c6eec055f7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"791\" data-rawheight=\"737\" class=\"origin_image zh-lightbox-thumb\" width=\"791\" data-original=\"https://pic4.zhimg.com/v2-a933d0920a85d47a182a48c6eec055f7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;791&#39; height=&#39;737&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"791\" data-rawheight=\"737\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"791\" data-original=\"https://pic4.zhimg.com/v2-a933d0920a85d47a182a48c6eec055f7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-a933d0920a85d47a182a48c6eec055f7_b.jpg\"/></figure><p>上图是【思想】定义的另一个矩阵，以下称为【二号例子】。这个矩阵就比较奇葩，一个12位数据、一个21位数据、一个3位数据、一个2位数据，并且数据与数据之间还存在着空位，整个数据场还剩下后面24位没利用到。</p><p><b>3.共同体</b></p><p>共同体这个知识点在C语言中比较冷门，【思想】在接触CAN协议栈之前也不是很清楚共同体用来干嘛的。所以就先介绍下这个知识点。</p><blockquote>所谓共用体，它表示的是几个变量共用一个内存位置，在不同的时间保存不同的数据类型和不同长度的变量。在共用体中，所有的成员共用一个空间，并且同一时间只能储存其中一个成员变量的值。当一个共用体被声明时，编译程序自动地产生一个变量，其长度（以字节byte为单位，一个byte是8个二进制位）为联合中最长的数据类型长度的整数倍。</blockquote><p>回到我们的CAN报文的数据场，由8个1字节的内存空间组成。每一个报文根据自身的矩阵信息对这个区域重新划分。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-2aa97d45a25574b4055a1eb3a92cbe61_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"810\" data-rawheight=\"561\" class=\"origin_image zh-lightbox-thumb\" width=\"810\" data-original=\"https://pic2.zhimg.com/v2-2aa97d45a25574b4055a1eb3a92cbe61_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;810&#39; height=&#39;561&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"810\" data-rawheight=\"561\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"810\" data-original=\"https://pic2.zhimg.com/v2-2aa97d45a25574b4055a1eb3a92cbe61_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-2aa97d45a25574b4055a1eb3a92cbe61_b.jpg\"/></figure><p>该段代码是【一号例子】，使用共同体描述矩阵信息。定义的共同体既可以通过字节数组（Bytes）数据进行读写，也可以根据位定义位结构体（Bits）的数据变量进行读写。在【解析与偏移】中也对结构体进行实例化，待后序初始化中进行赋值。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-3166087481dbbf1f408de61c049886c0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"769\" data-rawheight=\"702\" class=\"origin_image zh-lightbox-thumb\" width=\"769\" data-original=\"https://pic1.zhimg.com/v2-3166087481dbbf1f408de61c049886c0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;769&#39; height=&#39;702&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"769\" data-rawheight=\"702\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"769\" data-original=\"https://pic1.zhimg.com/v2-3166087481dbbf1f408de61c049886c0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-3166087481dbbf1f408de61c049886c0_b.jpg\"/></figure><p>【二号例子】由于数据位没有对齐并且存在空位，所以处理起来就稍微麻烦点。首先要处理数据长度不是常见的8、16、32，例如第一个数据是一个12位的数据，这里就使用【UINT16  Bit12:12;】先定义一个UINT16的数据，在通过【:12】定义有效数据长度只有12位。然后就是要处理空位的部分，正如上面矩阵中显示。第12、36、37为空位，就根据空位的长度定义一个UINT8的数据类型将空位补上。本例中的【UINT8  EMPTY_1:2;】。这里注意要优先保证数据位对齐，主要为了大小端字节序的自动化处理，这是一个很恶心的事情，以后会有专门的内容介绍。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-57e29ddaa75a410cca529d238eddd6eb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"641\" data-rawheight=\"284\" class=\"origin_image zh-lightbox-thumb\" width=\"641\" data-original=\"https://pic4.zhimg.com/v2-57e29ddaa75a410cca529d238eddd6eb_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;641&#39; height=&#39;284&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"641\" data-rawheight=\"284\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"641\" data-original=\"https://pic4.zhimg.com/v2-57e29ddaa75a410cca529d238eddd6eb_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-57e29ddaa75a410cca529d238eddd6eb_b.jpg\"/></figure><p>补充空位后的数据块位长度一定要为8的倍数，实现上图的对齐效果。其实共同体这个方法，适用于大部分的通讯协议，比如TCPIP、485、RS232等。</p><p><b>4.初始化</b></p><p>以上就已经介绍了如何在结构体中定义通讯协议，真正开始使用前还需要对结构体实例化，并对数据初始化。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-8a390bf9aea5aa589992a27f56da0bab_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"563\" data-rawheight=\"56\" class=\"origin_image zh-lightbox-thumb\" width=\"563\" data-original=\"https://pic4.zhimg.com/v2-8a390bf9aea5aa589992a27f56da0bab_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;563&#39; height=&#39;56&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"563\" data-rawheight=\"56\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"563\" data-original=\"https://pic4.zhimg.com/v2-8a390bf9aea5aa589992a27f56da0bab_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-8a390bf9aea5aa589992a27f56da0bab_b.png\"/></figure><p>根据前面创建的结构体名称，实例化为变量</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-7c56c4df34eabf7c85d4ec5463d0a95b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"689\" data-rawheight=\"443\" class=\"origin_image zh-lightbox-thumb\" width=\"689\" data-original=\"https://pic4.zhimg.com/v2-7c56c4df34eabf7c85d4ec5463d0a95b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;689&#39; height=&#39;443&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"689\" data-rawheight=\"443\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"689\" data-original=\"https://pic4.zhimg.com/v2-7c56c4df34eabf7c85d4ec5463d0a95b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-7c56c4df34eabf7c85d4ec5463d0a95b_b.jpg\"/></figure><p>初始化数据部分从上到下顺序分别为：</p><ul><li>对报文ID进行赋值，这里的ID在前面通过使用宏定义；</li><li>将64位的数据场全部填0；</li><li>对解析偏移结构体的参数进行赋值，填充位是不需要定义解析偏移参数的；</li></ul><p><b>5.接收解析与发送编码</b></p><p>这次【思想】挑选的两个例子，正好一个是发送、一个是接收，就能够很好的来说明解析与编码。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-6a4b5781f618c4b18fb70c6b3c0df9a4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"524\" data-rawheight=\"102\" class=\"origin_image zh-lightbox-thumb\" width=\"524\" data-original=\"https://pic1.zhimg.com/v2-6a4b5781f618c4b18fb70c6b3c0df9a4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;524&#39; height=&#39;102&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"524\" data-rawheight=\"102\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"524\" data-original=\"https://pic1.zhimg.com/v2-6a4b5781f618c4b18fb70c6b3c0df9a4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-6a4b5781f618c4b18fb70c6b3c0df9a4_b.jpg\"/></figure><p>例如对Spd信号的解析，左边的红框为BSW-&gt;ASW的接口变量，直接访问结构体中共同体下的Spd变量，与解析偏移结构体中的解析值与偏移值进行运算得到Spd的实际数值。至于ASW与BSW接口如何制作请见本公众号文章《<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483891%26idx%3D1%26sn%3D4afa769448137774add7fbb26331d80a%26chksm%3Dce80d067f9f759710309090f6ea13f339aefd178ac053df61f9f279e057badcf0f80cb927158%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Simulink代码生成应用教程</a>》</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-2f5c34412e4d691d4d441fa8f63e2e75_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"666\" data-rawheight=\"90\" class=\"origin_image zh-lightbox-thumb\" width=\"666\" data-original=\"https://pic2.zhimg.com/v2-2f5c34412e4d691d4d441fa8f63e2e75_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;666&#39; height=&#39;90&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"666\" data-rawheight=\"90\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"666\" data-original=\"https://pic2.zhimg.com/v2-2f5c34412e4d691d4d441fa8f63e2e75_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-2f5c34412e4d691d4d441fa8f63e2e75_b.png\"/></figure><p>对于发送报文就需要经过编码处理，红色框为ASW-&gt;BSW的接口变量，将接口变量与解析偏移结构体中的解析值与偏移运算。得到需要发送报文结构体中共同体下的发送数据。该运算与上面的解析运算为逆运算。</p><p><b>6.尾声</b></p><p>到目前为止，【思想】介绍了如何在C语言中实现CAN总线的报文结构，及其初始化、解析、编码等数据操作。由于篇幅限制，飞思卡尔与Intel的字节序问题及接口自动生成技术，将放到后续的文章中来讨论。</p><h2>推荐阅读</h2><h2><b>-----=========推荐阅读==========-----</b></h2><p><b><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247484053%26idx%3D1%26sn%3D0b33f5ff2983a6e474032dccd5401480%26chksm%3Dce80d301f9f75a17c972d6d71540937a521d87c9b7d3eeb06a0cec5184b5d349115b1744d405%26token%3D1791389902%26lang%3Dzh_CN%23rd\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ Simulink代码生成提高教程</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247484092%26idx%3D1%26sn%3Dede4aa6adc79c5ac2181b88f61e50a22%26chksm%3Dce80d328f9f75a3eba435d69f045b1c06ffd6fea8404d0213bfc160f9d5cd9f0198559b71410%26token%3D1791389902%26lang%3Dzh_CN%23rd\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ 增程式混合动力系统动力经济性仿真</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247484023%26idx%3D1%26sn%3D44d81c239dc2c96071f5d0c7babd8acf%26chksm%3Dce80d3e3f9f75af51a704af679bb66a948e130f923c96000f56754342399967f728a3ecb6998%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ S-Funciton应用实例</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483999%26idx%3D1%26sn%3Da858187ee759150bf618d15a6de0d30f%26chksm%3Dce80d3cbf9f75add611ddd1402d04b23e67cea2ac1c0669f2aab67dd88d88ca7b04f5c8f9bc7%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ 汽车工程师眼中的C#</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483983%26idx%3D1%26sn%3D7e811a86b936b3d3815df4050f851330%26chksm%3Dce80d3dbf9f75acd8d6665a3e32e644aca480eedaae61bf9b872a255bb9912df1e306678cde0%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ 工况路普的采集与数据处理</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483947%26idx%3D1%26sn%3D9c52b613947d5bd2644d02423f1997e3%26chksm%3Dce80d3bff9f75aa908be418383a2f6224f47e5a839828d3b6d472a7099cb1f5c8a730d4665e5%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ 混合动力节油的秘密-发动机万有特性</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483929%26idx%3D1%26sn%3D46057676f89ab8771af0d0e8202d7ca7%26chksm%3Dce80d38df9f75a9b55a1d823adb529e97018b24a66ec50dc2d793486fb9598e531172dded47e%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ AVL-CRUISE纯电动仿真策略提高教程</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483913%26idx%3D1%26sn%3D42ee206ecef5792a04f66f35dec3e61a%26chksm%3Dce80d39df9f75a8ba994d9cfbdf22f5790536b0d29ccda1cc5cb3c2821ce9e99fdc5652d27ac%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ AVL-CRUISE纯电动模型仿真策略</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483891%26idx%3D1%26sn%3D4afa769448137774add7fbb26331d80a%26chksm%3Dce80d067f9f759710309090f6ea13f339aefd178ac053df61f9f279e057badcf0f80cb927158%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ Simulink代码生成应用教程</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483861%26idx%3D1%26sn%3Dd5a9644b255c8b84b72c2208f48feb46%26chksm%3Dce80d041f9f75957f42ddfe12d174e615d12e85c83ae3a4b70874067d8f5584e2c0f20be610f%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ Sinmulink代码生成基础体验教程</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483838%26idx%3D1%26sn%3Dc4754b7a764a00c5a84d0e053515ddc7%26chksm%3Dce80d02af9f7593cd9df3639d3aca8698056ba415fc03d170e4f3907980df4e7b1e037a4b148%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ 燃料电池车(FCHEV)动力经济性建模与仿真</a></b></p>", 
            "topic": [
                {
                    "tag": "CAN总线", 
                    "tagLink": "https://api.zhihu.com/topics/19744765"
                }, 
                {
                    "tag": "C / C++", 
                    "tagLink": "https://api.zhihu.com/topics/19601705"
                }, 
                {
                    "tag": "通讯协议", 
                    "tagLink": "https://api.zhihu.com/topics/19833473"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/85544727", 
            "userName": "思想", 
            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
            "upvote": 9, 
            "title": "增程式混合动力系统动力经济性仿真", 
            "content": "<p>本文转载在我的微信公众号：<b>古德曼汽车工业。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1774\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb\" width=\"1774\" data-original=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1774&#39; height=&#39;408&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1774\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1774\" data-original=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_b.jpg\"/></figure><p><b>希望关注本专栏的朋友，也能一并关注微信公众号。</b></p><p>原文地址：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247484092%26idx%3D1%26sn%3Dede4aa6adc79c5ac2181b88f61e50a22%26chksm%3Dce80d328f9f75a3eba435d69f045b1c06ffd6fea8404d0213bfc160f9d5cd9f0198559b71410%26token%3D922134032%26lang%3Dzh_CN%23rd\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">增程式混合动力系统动力经济性仿真</a></p><p class=\"ztext-empty-paragraph\"><br/></p><h2><b>01-构型介绍</b></h2><p>七天假期【思想】并没有闲着。有网友小伙伴想看增程式汽车动力性经济性仿真，今天它来了。现如今的混合动力汽车在动力系统构型上已经五花八门。增程式混合动力也叫做串联，是其中比较容易实现的一种。混合动力装置通过电功率与整车需求功率耦合。整车行驶时由驱动电机驱动，消耗动力电池中的电能；增程器中的发动机带动ISG电机发电，为动力电池充电。这样一来发动机就不会直接参与整车驱动，发动机的转速与车速没有了直接联系。那就意味着可以更加灵活的安排控制发动机。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-19f559957d337fdaa24a590fee60b9a4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"685\" data-rawheight=\"401\" class=\"origin_image zh-lightbox-thumb\" width=\"685\" data-original=\"https://pic1.zhimg.com/v2-19f559957d337fdaa24a590fee60b9a4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;685&#39; height=&#39;401&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"685\" data-rawheight=\"401\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"685\" data-original=\"https://pic1.zhimg.com/v2-19f559957d337fdaa24a590fee60b9a4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-19f559957d337fdaa24a590fee60b9a4_b.jpg\"/></figure><p>新能源动力经济性仿真的工具有很多，如AMESim、Advisor、CRUISE M等，这些仿真软件的介绍和对比可以看下【思想】之前的文章《<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483774%26idx%3D1%26sn%3Deaccff3c40e927798dcab84495e1f356%26chksm%3Dce80d0eaf9f759fc8126d015ec5ccbdd4ed35e0a623e46b60ba78a701614386ea29b5a23ec90%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">部分仿真软件对比介绍</a>》。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-ef8a8e69f9627aca73b480fe398ce66b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"764\" data-rawheight=\"602\" class=\"origin_image zh-lightbox-thumb\" width=\"764\" data-original=\"https://pic4.zhimg.com/v2-ef8a8e69f9627aca73b480fe398ce66b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;764&#39; height=&#39;602&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"764\" data-rawheight=\"602\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"764\" data-original=\"https://pic4.zhimg.com/v2-ef8a8e69f9627aca73b480fe398ce66b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-ef8a8e69f9627aca73b480fe398ce66b_b.jpg\"/></figure><p>图中是一个增程式混合动力构型的CRUISE仿真模型，我们可以把他的动力系统分为两部分来理解。红色驱动部分与【思想】之前介绍的纯电动仿真模型一致，直接通过驱动电机经过减速器与车轮机械连接，而蓝色部分就是增程器部分，ISG电机负责发动机的启停及发电。</p><h2><b>02-模式分析</b></h2><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-64bbb12c201d4374e46fa8c369221be3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"578\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic4.zhimg.com/v2-64bbb12c201d4374e46fa8c369221be3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;578&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"578\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic4.zhimg.com/v2-64bbb12c201d4374e46fa8c369221be3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-64bbb12c201d4374e46fa8c369221be3_b.jpg\"/></figure><p>仿真用控制策略可以直接借用高级纯电动的架构，这个控制策略的架构在【思想】之前的文章中也介绍过，如果有落下内容的朋友赶紧回去看看《<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483929%26idx%3D1%26sn%3D46057676f89ab8771af0d0e8202d7ca7%26chksm%3Dce80d38df9f75a9b55a1d823adb529e97018b24a66ec50dc2d793486fb9598e531172dded47e%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">AVL-CRUISE纯电动仿真策略提高教程</a>》。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-53bbd6ceb1c88ff94f7409c94f22ae6d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"318\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-53bbd6ceb1c88ff94f7409c94f22ae6d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;318&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"318\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-53bbd6ceb1c88ff94f7409c94f22ae6d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-53bbd6ceb1c88ff94f7409c94f22ae6d_b.jpg\"/></figure><p>上图是在【Modes】模块中具体模式分类，左边保留纯电动下驱动与制动能量回收的模式。右边增加了增程器（APU）的控制策略，具体有如下几个策略：</p><h2><b>ApuStart/发动机启动</b></h2><p>该模式下由ISG消耗电能将发动机拉到工作转速区，该过程中发动机不喷油也不对外输出扭矩。仿真模型中的发动机模块的Switch设置为0；</p><h2><b>ApuStop/发动机停止</b></h2><p>该模式下由ISG电机提供反向扭矩，迅速把发动机转速减低到0，该过程中发动机也不工作。仿真模型中的发动机模块的Switch设置为0；</p><h2><b>发动机单点控制</b></h2><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-e07a338fbb1c804d195c7cc924d849ac_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"321\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic1.zhimg.com/v2-e07a338fbb1c804d195c7cc924d849ac_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;321&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"321\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic1.zhimg.com/v2-e07a338fbb1c804d195c7cc924d849ac_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e07a338fbb1c804d195c7cc924d849ac_b.jpg\"/></figure><p>该模式是最简单粗暴的控制逻辑，使用PID算法限定发动机的工作转速，再通过ISG电机设定发电扭矩，以此控制发动机定点工作。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-c8d9fa9d1b3a2f2480b9a15bcf5e9a22_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"684\" data-rawheight=\"573\" class=\"origin_image zh-lightbox-thumb\" width=\"684\" data-original=\"https://pic3.zhimg.com/v2-c8d9fa9d1b3a2f2480b9a15bcf5e9a22_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;684&#39; height=&#39;573&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"684\" data-rawheight=\"573\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"684\" data-original=\"https://pic3.zhimg.com/v2-c8d9fa9d1b3a2f2480b9a15bcf5e9a22_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-c8d9fa9d1b3a2f2480b9a15bcf5e9a22_b.jpg\"/></figure><p>从仿真的结果上看，这个点一般都会设置在燃油经济区内。但是实际的情况还要根据NVH等其他整车性能进行标定。AVL-CRUISE自带例子Range_Extender的Ver001就是单点控制的逻辑.</p><p>实际车辆上只需要把发动机切换到转速控制模式，通过向发动机发送需求转速来实现。具体的PID控制算法由ECU负责。</p><h2><b>发动机多点控制</b></h2><p>该模式的原理与上一个模式的原理是一样的，为了避免【机械能-电能】的冗余转换，并且延长电池寿命。标定工程师根据不同的整车需求功率选定了个不同的发动机工作点。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-590f6ca6c01954c1c92a62cbce73bf16_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"545\" data-rawheight=\"494\" class=\"origin_image zh-lightbox-thumb\" width=\"545\" data-original=\"https://pic3.zhimg.com/v2-590f6ca6c01954c1c92a62cbce73bf16_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;545&#39; height=&#39;494&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"545\" data-rawheight=\"494\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"545\" data-original=\"https://pic3.zhimg.com/v2-590f6ca6c01954c1c92a62cbce73bf16_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-590f6ca6c01954c1c92a62cbce73bf16_b.jpg\"/></figure><p>例如上图是一款阿特金森循环发动机，有非常宽大的经济区，可供选择的工作点非常多。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-cd9b7523d2f1a928c22916402e2cf1ff_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"770\" data-rawheight=\"506\" class=\"origin_image zh-lightbox-thumb\" width=\"770\" data-original=\"https://pic4.zhimg.com/v2-cd9b7523d2f1a928c22916402e2cf1ff_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;770&#39; height=&#39;506&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"770\" data-rawheight=\"506\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"770\" data-original=\"https://pic4.zhimg.com/v2-cd9b7523d2f1a928c22916402e2cf1ff_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-cd9b7523d2f1a928c22916402e2cf1ff_b.jpg\"/></figure><p>在该模式中需要有一个Stateflow作为状态机，结合SOC、需求功率、是否开空调等逻辑进行判断，编写不同工作点的切换逻辑。</p><h2><b>功率跟随算法</b></h2><p>这里的功率跟随的对象可以是SOC，也可以的是整车需求功率。由于功率=扭矩*转速/9500，需要标定一条发动机最优燃油工作线。该部分内容请大家关注【思想】之前的文章《<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483947%26idx%3D1%26sn%3D9c52b613947d5bd2644d02423f1997e3%26chksm%3Dce80d3bff9f75aa908be418383a2f6224f47e5a839828d3b6d472a7099cb1f5c8a730d4665e5%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">混合动力节油的秘密-发动机万有特性</a>》。增程器的发电功率与整车的需求功率进行耦合，这里的整车需求功率包括驱动的需求功率与电附件的功率。由于发动机的响应时间大于电机，所以通常这个模式用于稳态工况，例如高速巡航。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-19ca4025cdbe36a0daf3247df733d9ad_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"798\" data-rawheight=\"466\" class=\"origin_image zh-lightbox-thumb\" width=\"798\" data-original=\"https://pic2.zhimg.com/v2-19ca4025cdbe36a0daf3247df733d9ad_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;798&#39; height=&#39;466&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"798\" data-rawheight=\"466\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"798\" data-original=\"https://pic2.zhimg.com/v2-19ca4025cdbe36a0daf3247df733d9ad_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-19ca4025cdbe36a0daf3247df733d9ad_b.jpg\"/></figure><p>在仿真的结果的工况图中就能看到发动机工作点沿着最优燃油曲线移动，那AVL-CRUISE自带的增程式例子中的第二个版本就是功率跟随的算法。</p><h2><b>03-状态机</b></h2><p>除了发动机启停控制的两个模式外，发动机单点工作/发动机多点工作/功率跟随算法，这三个控制模式是工程师运用最多的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-a47468ab923bc9cb0b9ded48d6c0f537_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"447\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic4.zhimg.com/v2-a47468ab923bc9cb0b9ded48d6c0f537_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;447&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"447\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic4.zhimg.com/v2-a47468ab923bc9cb0b9ded48d6c0f537_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-a47468ab923bc9cb0b9ded48d6c0f537_b.jpg\"/></figure><p>通常项目会用到其中的一个或者多个曾程器控制算法，通过状态机Stateflow在这几个模式之间进行切换。</p><p>如果是高校的网友，可能还会接触到Fuzzy（模糊控制）这类的智能算法。这部分内容其实在实际工程很少应用，如果想了解这部分内容的网友可以留言告诉我，可以另外写一篇关于模糊控制的专题。</p><h2><b>04-APU匹配需要注意的问题</b></h2><p>由于增程式混合动力汽车的驱动模式依然只有电机参与，所以动力匹配的计算方式与纯电动基本一致。但每个项目的需求不同，所选的增程器功率有差别，增程器功率会影响车辆的续航里程。例如在高速工况中，增程器的需求功率较高，如果增程式功率比需求功率小，这样电池中的电量就会一直消耗，直到SOC过低整车限功率，SOC回到允许范围后再恢复电机的输出功率，这点问题是匹配计算中需要考虑的问题。</p><h2><b>05-精彩预告</b></h2><p>【思想】最近在规划AVL-CRUISE M软件的视频教程，预计年底或明年初能与各位网友。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-7dcd5272f83461bdd71fca76a95e7ae1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"584\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-7dcd5272f83461bdd71fca76a95e7ae1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;584&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"584\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-7dcd5272f83461bdd71fca76a95e7ae1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-7dcd5272f83461bdd71fca76a95e7ae1_b.jpg\"/></figure><h2><br/><b>-----=========推荐阅读==========-----</b></h2><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247484023%26idx%3D1%26sn%3D44d81c239dc2c96071f5d0c7babd8acf%26chksm%3Dce80d3e3f9f75af51a704af679bb66a948e130f923c96000f56754342399967f728a3ecb6998%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ S-Funciton应用实例</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483999%26idx%3D1%26sn%3Da858187ee759150bf618d15a6de0d30f%26chksm%3Dce80d3cbf9f75add611ddd1402d04b23e67cea2ac1c0669f2aab67dd88d88ca7b04f5c8f9bc7%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ 汽车工程师眼中的C#</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483983%26idx%3D1%26sn%3D7e811a86b936b3d3815df4050f851330%26chksm%3Dce80d3dbf9f75acd8d6665a3e32e644aca480eedaae61bf9b872a255bb9912df1e306678cde0%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ 工况路普的采集与数据处理</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483947%26idx%3D1%26sn%3D9c52b613947d5bd2644d02423f1997e3%26chksm%3Dce80d3bff9f75aa908be418383a2f6224f47e5a839828d3b6d472a7099cb1f5c8a730d4665e5%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ 混合动力节油的秘密-发动机万有特性</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483929%26idx%3D1%26sn%3D46057676f89ab8771af0d0e8202d7ca7%26chksm%3Dce80d38df9f75a9b55a1d823adb529e97018b24a66ec50dc2d793486fb9598e531172dded47e%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ AVL-CRUISE纯电动仿真策略提高教程</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483913%26idx%3D1%26sn%3D42ee206ecef5792a04f66f35dec3e61a%26chksm%3Dce80d39df9f75a8ba994d9cfbdf22f5790536b0d29ccda1cc5cb3c2821ce9e99fdc5652d27ac%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ AVL-CRUISE纯电动模型仿真策略</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483891%26idx%3D1%26sn%3D4afa769448137774add7fbb26331d80a%26chksm%3Dce80d067f9f759710309090f6ea13f339aefd178ac053df61f9f279e057badcf0f80cb927158%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ Simulink代码生成应用教程</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483861%26idx%3D1%26sn%3Dd5a9644b255c8b84b72c2208f48feb46%26chksm%3Dce80d041f9f75957f42ddfe12d174e615d12e85c83ae3a4b70874067d8f5584e2c0f20be610f%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ Sinmulink代码生成基础体验教程</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483838%26idx%3D1%26sn%3Dc4754b7a764a00c5a84d0e053515ddc7%26chksm%3Dce80d02af9f7593cd9df3639d3aca8698056ba415fc03d170e4f3907980df4e7b1e037a4b148%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ 燃料电池车(FCHEV)动力经济性建模与仿真</a></b><br/></p><p><br/> </p>", 
            "topic": [
                {
                    "tag": "仿真模拟", 
                    "tagLink": "https://api.zhihu.com/topics/19938310"
                }, 
                {
                    "tag": "新能源汽车", 
                    "tagLink": "https://api.zhihu.com/topics/19731651"
                }, 
                {
                    "tag": "汽车发动机", 
                    "tagLink": "https://api.zhihu.com/topics/19780325"
                }
            ], 
            "comments": [
                {
                    "userName": "张添琦", 
                    "userLink": "https://www.zhihu.com/people/9d4c24b6ba1652b64a084730c10cb545", 
                    "content": "<p>增程主要是绕开了变速箱，就解决了80%的问题，再一个电力驱动的平顺性，纯增程节油效果其实一般，跑高速电驱没优势，本田的那一套要高明一些，比丰田的混动高明，本田那一套可以通过增加电池容量就可以做增程，而丰田单纯加电池不行，要调整整个逻辑。</p>", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "思想", 
                            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
                            "content": "<p>很认同，但是最近增程火爆 是因为有补贴 哈哈</p><p></p>", 
                            "likes": 0, 
                            "replyToAuthor": "张添琦"
                        }
                    ]
                }, 
                {
                    "userName": "小柏小柏", 
                    "userLink": "https://www.zhihu.com/people/0db7ccfd2d301b82482288882e2a46d2", 
                    "content": "期待什么时候用s函数写个底层驱动模块啊用于代码生成的", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "思想", 
                            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
                            "content": "<p>已经有这方面文章了啊 上上一篇更新</p>", 
                            "likes": 0, 
                            "replyToAuthor": "小柏小柏"
                        }
                    ]
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/85389467", 
            "userName": "思想", 
            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
            "upvote": 0, 
            "title": "路谱数据滤波工具", 
            "content": "<p>本文转载在我的微信公众号：<b>古德曼汽车工业。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1774\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb\" width=\"1774\" data-original=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1774&#39; height=&#39;408&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1774\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1774\" data-original=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_b.jpg\"/></figure><p><b>希望关注本专栏的朋友，也能一并关注微信公众号。</b></p><p>原文地址：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247484073%26idx%3D1%26sn%3D192fe1593c623d69b3fe32a0de35c3a6%26chksm%3Dce80d33df9f75a2b27bf1a4d7b5d0e8507d116f3962a8a7bc635c298e8915ebee3f6cf7819a7%26token%3D1649859002%26lang%3Dzh_CN%23rd\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">路谱数据滤波工具</a></p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>来龙去脉</b></p><p>关注【古德曼汽车工业】的小伙伴们一定知道，【思想】有一部分精力集中在动力经济性仿真。燃油的、新能源的、商用车、乘用车，anyway，反正带轮子的都可以~之前有一篇关于路谱的文章-《<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483983%26idx%3D1%26sn%3D7e811a86b936b3d3815df4050f851330%26chksm%3Dce80d3dbf9f75acd8d6665a3e32e644aca480eedaae61bf9b872a255bb9912df1e306678cde0%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">工况路谱的采集与数据处理</a>》，这是一个商用车领域的奇葩路子。</p><p>文章中介绍了处理路谱数据的方法，但是在实际工程应用中还是会有很多懵逼的地方。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-a86a72cdba3e1f1d0d096de643ab3787_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"623\" data-rawheight=\"416\" class=\"origin_image zh-lightbox-thumb\" width=\"623\" data-original=\"https://pic4.zhimg.com/v2-a86a72cdba3e1f1d0d096de643ab3787_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;623&#39; height=&#39;416&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"623\" data-rawheight=\"416\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"623\" data-original=\"https://pic4.zhimg.com/v2-a86a72cdba3e1f1d0d096de643ab3787_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-a86a72cdba3e1f1d0d096de643ab3787_b.jpg\"/></figure><p>例如数据处理过后仿真车速仍无法跟随路谱车速，工程师还得再处理一次路谱数据，直到仿真车速能够跟随上路谱。通常处理一条运营线路的路谱，需要花费工程师3~7天时间。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-0b862c8e773dec7b4728d86730c2dff7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"733\" data-rawheight=\"325\" class=\"origin_image zh-lightbox-thumb\" width=\"733\" data-original=\"https://pic4.zhimg.com/v2-0b862c8e773dec7b4728d86730c2dff7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;733&#39; height=&#39;325&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"733\" data-rawheight=\"325\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"733\" data-original=\"https://pic4.zhimg.com/v2-0b862c8e773dec7b4728d86730c2dff7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-0b862c8e773dec7b4728d86730c2dff7_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>这时候【思想】的惰性上线了，为了躺着处理这一难题，把工程师从重复繁琐的工作解放出来，【思想】开始码程序。毕竟懒惰才是生产力，能躺着解决的事情为什么要坐着？言归正传，本期内容【思想】将要向各位围观群众介绍一款概念性的产品-<b>路谱数据滤波工具</b>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-e843e21d38bb7f5a52e241ceb13f92d5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"478\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-e843e21d38bb7f5a52e241ceb13f92d5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;478&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"478\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-e843e21d38bb7f5a52e241ceb13f92d5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-e843e21d38bb7f5a52e241ceb13f92d5_b.jpg\"/></figure><p>本工具采用的是之前介绍过的C#开发，相关文章请见《<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483999%26idx%3D1%26sn%3Da858187ee759150bf618d15a6de0d30f%26chksm%3Dce80d3cbf9f75add611ddd1402d04b23e67cea2ac1c0669f2aab67dd88d88ca7b04f5c8f9bc7%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">汽车工程师眼中的C#</a>》</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-e4fc1151d16ac0d2e549f88bd41d0c9d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"431\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-e4fc1151d16ac0d2e549f88bd41d0c9d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;431&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"431\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-e4fc1151d16ac0d2e549f88bd41d0c9d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-e4fc1151d16ac0d2e549f88bd41d0c9d_b.jpg\"/></figure><p>由于它是一个概念性的产品，所以界面也就不那么讲究，主要精力集中在功能的实现。</p><p><b>加载数据</b></p><p>采集的路谱数据需要预先处理，删除不必要的字段，将数据的时间转换为相对时长。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-92491115d4564af04902a112ec5fa926_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"414\" data-rawheight=\"204\" class=\"content_image\" width=\"414\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;414&#39; height=&#39;204&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"414\" data-rawheight=\"204\" class=\"content_image lazy\" width=\"414\" data-actualsrc=\"https://pic3.zhimg.com/v2-92491115d4564af04902a112ec5fa926_b.jpg\"/></figure><p>数据整理结果如上图，分别定义为：时长/经度/纬度/海拔/车速/行驶距离。正常导出的数据不会有行驶距离，这里需用在Excel中对经纬进行计算，具体公式请自行百度。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-9f25bd653a37fa7b1d2d615a75d04eef_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"650\" data-rawheight=\"354\" class=\"origin_image zh-lightbox-thumb\" width=\"650\" data-original=\"https://pic4.zhimg.com/v2-9f25bd653a37fa7b1d2d615a75d04eef_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;650&#39; height=&#39;354&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"650\" data-rawheight=\"354\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"650\" data-original=\"https://pic4.zhimg.com/v2-9f25bd653a37fa7b1d2d615a75d04eef_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-9f25bd653a37fa7b1d2d615a75d04eef_b.jpg\"/></figure><p>通过加载表格按钮，将处理后的路谱数据加载到工具中。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-9162bc8254e24d2c02524be7ad0678f8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"412\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic1.zhimg.com/v2-9162bc8254e24d2c02524be7ad0678f8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;412&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"412\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic1.zhimg.com/v2-9162bc8254e24d2c02524be7ad0678f8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-9162bc8254e24d2c02524be7ad0678f8_b.jpg\"/></figure><p>工具除了显示时间与车速的曲线，还能显示加速度、爬坡度、爬坡变化率。其中的坡度变化率来自坡度的微分运算。通过右上角复选项，可以控制显示区的显示内容。</p><p>该工具目前处于概念阶段，滤波对象为加速度与爬坡度变化率。选用了一个比较简单的比例形的滤波算法，对滤波对象进行处理。处理后数据再通过积分运算，得到滤波后的速度曲线/爬坡度曲线</p><p><b>滤波处理</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-7b6e843840e06649229f3885b9c0bc07_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"312\" data-thumbnail=\"https://pic4.zhimg.com/v2-7b6e843840e06649229f3885b9c0bc07_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-7b6e843840e06649229f3885b9c0bc07_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;312&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"312\" data-thumbnail=\"https://pic4.zhimg.com/v2-7b6e843840e06649229f3885b9c0bc07_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-7b6e843840e06649229f3885b9c0bc07_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-7b6e843840e06649229f3885b9c0bc07_b.gif\"/></figure><p>通过对加速度滤波参数的改变，可以看到速度曲线随之进行变化。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-4a9121c7e1fc3b5ab00404cc186739d8_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"312\" data-thumbnail=\"https://pic1.zhimg.com/v2-4a9121c7e1fc3b5ab00404cc186739d8_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-4a9121c7e1fc3b5ab00404cc186739d8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;312&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"312\" data-thumbnail=\"https://pic1.zhimg.com/v2-4a9121c7e1fc3b5ab00404cc186739d8_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-4a9121c7e1fc3b5ab00404cc186739d8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-4a9121c7e1fc3b5ab00404cc186739d8_b.gif\"/></figure><p>在爬坡度曲线中可以看到，在2000~2200s左右的爬坡度及其不正常，爬坡度达到400%。可以在软件中点选局部滤波，输入需要滤波的范围。调整爬坡度滤波参数，就能只对该段数据进行处理。</p><p>细心的你可以看到，前面的图片还有一些蓝色的点，这些蓝色的点是什么意思呢？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-0ed23928be7e11718b07cb8982f7823f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"431\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic4.zhimg.com/v2-0ed23928be7e11718b07cb8982f7823f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;431&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"431\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic4.zhimg.com/v2-0ed23928be7e11718b07cb8982f7823f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-0ed23928be7e11718b07cb8982f7823f_b.jpg\"/></figure><p>这是信号连续性检查的问题，上面红框的数据用于检查信号之间间隔多少秒，这样就可以找到信号中断的地方。</p><p><b>动力性检查</b></p><p>上面介绍了如何对车速与爬坡度进行滤波，但还有一个问题让工程师躺着的时候还是很困扰，那就是，我怎么指导我滤波后的结果是正确的呢？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-1316966677ff64d9a2e4b314bcf250b6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"582\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-1316966677ff64d9a2e4b314bcf250b6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;582&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"582\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-1316966677ff64d9a2e4b314bcf250b6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-1316966677ff64d9a2e4b314bcf250b6_b.jpg\"/></figure><p>这里【思想】提供了一个叫做动力性检查的功能，输入我们需要仿真车型信息包含：总质量/迎风面积/空阻系数等。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-ce089d1edf984ad3c633470e6c20f6f5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"678\" data-rawheight=\"166\" class=\"origin_image zh-lightbox-thumb\" width=\"678\" data-original=\"https://pic2.zhimg.com/v2-ce089d1edf984ad3c633470e6c20f6f5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;678&#39; height=&#39;166&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"678\" data-rawheight=\"166\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"678\" data-original=\"https://pic2.zhimg.com/v2-ce089d1edf984ad3c633470e6c20f6f5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-ce089d1edf984ad3c633470e6c20f6f5_b.jpg\"/></figure><p>根据汽车理论中的车辆力学公式，演算当前动力是否能够满足路谱需求，不满足则意味着该点的数据将会出现车速跟随不上路谱的问题。如上图，红色的点意味着动力性检查不通过的点。通过这种方式，就能在不运行CRUISE任务前就知道路谱数据哪里有问题，再通过局部滤波进行处理。</p><p>最后就是把路谱数据导出，供CRUISE仿真任务使用</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-041316fec363832f8e2d2dc6773c6f16_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"782\" data-rawheight=\"609\" class=\"origin_image zh-lightbox-thumb\" width=\"782\" data-original=\"https://pic3.zhimg.com/v2-041316fec363832f8e2d2dc6773c6f16_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;782&#39; height=&#39;609&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"782\" data-rawheight=\"609\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"782\" data-original=\"https://pic3.zhimg.com/v2-041316fec363832f8e2d2dc6773c6f16_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-041316fec363832f8e2d2dc6773c6f16_b.jpg\"/></figure><p>导出的路谱数据可以直接粘贴到CRUISE的Cycle任务中。</p><p><b>最后</b></p><p>本次介绍的路谱数据滤波工具，还处于概念设计阶段。因此暂时不会对个人提供试用。【思想】希望能与组织、高校合作完成该工具的后续开发。<br/></p><p><b>----------------============推荐阅读=============------------</b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247484023%26idx%3D1%26sn%3D44d81c239dc2c96071f5d0c7babd8acf%26chksm%3Dce80d3e3f9f75af51a704af679bb66a948e130f923c96000f56754342399967f728a3ecb6998%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ S-Funciton应用实例</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483999%26idx%3D1%26sn%3Da858187ee759150bf618d15a6de0d30f%26chksm%3Dce80d3cbf9f75add611ddd1402d04b23e67cea2ac1c0669f2aab67dd88d88ca7b04f5c8f9bc7%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ 汽车工程师眼中的C#</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483983%26idx%3D1%26sn%3D7e811a86b936b3d3815df4050f851330%26chksm%3Dce80d3dbf9f75acd8d6665a3e32e644aca480eedaae61bf9b872a255bb9912df1e306678cde0%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ 工况路普的采集与数据处理</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483947%26idx%3D1%26sn%3D9c52b613947d5bd2644d02423f1997e3%26chksm%3Dce80d3bff9f75aa908be418383a2f6224f47e5a839828d3b6d472a7099cb1f5c8a730d4665e5%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ 混合动力节油的秘密-发动机万有特性</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483929%26idx%3D1%26sn%3D46057676f89ab8771af0d0e8202d7ca7%26chksm%3Dce80d38df9f75a9b55a1d823adb529e97018b24a66ec50dc2d793486fb9598e531172dded47e%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ AVL-CRUISE纯电动仿真策略提高教程</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483913%26idx%3D1%26sn%3D42ee206ecef5792a04f66f35dec3e61a%26chksm%3Dce80d39df9f75a8ba994d9cfbdf22f5790536b0d29ccda1cc5cb3c2821ce9e99fdc5652d27ac%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ AVL-CRUISE纯电动模型仿真策略</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483891%26idx%3D1%26sn%3D4afa769448137774add7fbb26331d80a%26chksm%3Dce80d067f9f759710309090f6ea13f339aefd178ac053df61f9f279e057badcf0f80cb927158%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ Simulink代码生成应用教程</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483861%26idx%3D1%26sn%3Dd5a9644b255c8b84b72c2208f48feb46%26chksm%3Dce80d041f9f75957f42ddfe12d174e615d12e85c83ae3a4b70874067d8f5584e2c0f20be610f%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ Sinmulink代码生成基础体验教程</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483838%26idx%3D1%26sn%3Dc4754b7a764a00c5a84d0e053515ddc7%26chksm%3Dce80d02af9f7593cd9df3639d3aca8698056ba415fc03d170e4f3907980df4e7b1e037a4b148%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ 燃料电池车(FCHEV)动力经济性建模与仿真</a></b><br/></p><p><br/> </p>", 
            "topic": [
                {
                    "tag": "C#", 
                    "tagLink": "https://api.zhihu.com/topics/19590712"
                }, 
                {
                    "tag": "经济性", 
                    "tagLink": "https://api.zhihu.com/topics/20174827"
                }, 
                {
                    "tag": "汽车 GPS", 
                    "tagLink": "https://api.zhihu.com/topics/19820205"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/81866342", 
            "userName": "思想", 
            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
            "upvote": 18, 
            "title": "Simulink代码生成提高教程", 
            "content": "<p>本文转载在我的微信公众号：<b>古德曼汽车工业。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1774\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb\" width=\"1774\" data-original=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1774&#39; height=&#39;408&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1774\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1774\" data-original=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_b.jpg\"/></figure><p><b>希望关注本专栏的朋友，也能一并关注微信公众号。</b></p><p>原文地址：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247484053%26idx%3D1%26sn%3D0b33f5ff2983a6e474032dccd5401480%26chksm%3Dce80d301f9f75a17c972d6d71540937a521d87c9b7d3eeb06a0cec5184b5d349115b1744d405%26token%3D455825963%26lang%3Dzh_CN%23rd\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Simulink代码生成提高教程</a></p><p><b>前言</b></p><p>前两期文章《<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483891%26idx%3D1%26sn%3D4afa769448137774add7fbb26331d80a%26chksm%3Dce80d067f9f759710309090f6ea13f339aefd178ac053df61f9f279e057badcf0f80cb927158%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Simulink代码生成应用教程</a>》、《<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483861%26idx%3D1%26sn%3Dd5a9644b255c8b84b72c2208f48feb46%26chksm%3Dce80d041f9f75957f42ddfe12d174e615d12e85c83ae3a4b70874067d8f5584e2c0f20be610f%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Sinmulink代码生成基础体验教程</a>》中思想介绍了如何使用Simulink生成嵌入式代码，以及生成的代码如何移植到嵌入式开发环境。本期文章内容将继续深入，介绍下如何在Simulink中直接对嵌入式芯片配置，做到无需手工编写底层的嵌入式程序。市场上的这类产品一般由快速原型的厂家（如：华海科技、海博瑞德等）提供，需要安装厂家自己的目标系统，本期就来聊聊如何自制一个目标系统。</p><p><b>什么是自定义目标系统</b></p><p>在前面介绍代码生成的时候，第一步就是选择目标【Target Selection】，Matlab已经自带了不少目标系统，例如之前用的ert.tlc。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-7555f51df10453c541ebcd38cb13d86d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"585\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-7555f51df10453c541ebcd38cb13d86d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;585&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"585\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-7555f51df10453c541ebcd38cb13d86d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-7555f51df10453c541ebcd38cb13d86d_b.jpg\"/></figure><p>如果你安装了NIVeriStand、CRUISE或其他快速原型产品，这里就会多出来一些目标系统可以选择。自定义目标系统是为了让Simulink生成的代码能根据用户的需要，与底层驱动做集成</p><p><b>Simulink目标编译流程</b></p><p>制作自定义目标系统前，需要了解Simulink目标编译的流程，该部分内容来自Matlab内部帮助文件《Simulink Coder Target Language Complier》。之前的内容中介绍了如何将Simulink模型生成C代码，下面思想就来围观一下，当我们按下【编译】按钮后Matlab究竟做了哪些事。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-87e43dd9585cf7c748e205c22b5b6ebc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"589\" data-rawheight=\"502\" class=\"origin_image zh-lightbox-thumb\" width=\"589\" data-original=\"https://pic1.zhimg.com/v2-87e43dd9585cf7c748e205c22b5b6ebc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;589&#39; height=&#39;502&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"589\" data-rawheight=\"502\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"589\" data-original=\"https://pic1.zhimg.com/v2-87e43dd9585cf7c748e205c22b5b6ebc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-87e43dd9585cf7c748e205c22b5b6ebc_b.jpg\"/></figure><ul><li>第一步，Simulink会生成一个rtw文件，这个文件非常重要。它保存了Simulink模型中的所有信息，包含模块，模型配置、S函数等。</li><li>第二步，使用TLC语言，读取rtw文件中的信息，根据预先编写好的模板重新组织生成的C语言代码。通过这种方式就能获得与嵌入式开发环境兼容的代码。</li><li>第三步，依托编译器（C/C++），将C代码编译成exe或者dll文件。这一步只会在一些仿真软件中用到，例如NIVeriStand、dSpace、CRUISE。本次内容只涉及到C代码生成，所以这部分内容不过多介绍。</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-d33538106aa962d3ead155a611d7a636_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"593\" data-rawheight=\"362\" class=\"origin_image zh-lightbox-thumb\" width=\"593\" data-original=\"https://pic3.zhimg.com/v2-d33538106aa962d3ead155a611d7a636_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;593&#39; height=&#39;362&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"593\" data-rawheight=\"362\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"593\" data-original=\"https://pic3.zhimg.com/v2-d33538106aa962d3ead155a611d7a636_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-d33538106aa962d3ead155a611d7a636_b.jpg\"/></figure><p>上面是一个rtw文件，该文件会在编译过程中出现在代码生成的文件夹里。Matlab默认情况下这个文件在完成代码生成的时候会自行了断（被删除），如果有小伙伴门对rtw文件结构感兴趣，可以在Simulink模型配置中，把【Retain Rtw】选项勾选，这样完成代码生成动作后，这个文件就不会被删除。</p><p><b>自定义目标系统的文件组成</b></p><p>假设我们制作的目标系统名称为mygt，那就会包含如下文件：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-d1876b0ff0548f489738770aa090559c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"397\" data-rawheight=\"172\" class=\"content_image\" width=\"397\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;397&#39; height=&#39;172&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"397\" data-rawheight=\"172\" class=\"content_image lazy\" width=\"397\" data-actualsrc=\"https://pic1.zhimg.com/v2-d1876b0ff0548f489738770aa090559c_b.jpg\"/></figure><ul><li>系统TLC文件【mygt.tlc】</li><li>主函数TLC文件【mygt_stm32F407_srmain.tlc】</li><li>用于处理文件的TLC文件【mygt_file_process.tlc】</li><li>回调函数文件【mygt_callback_handler.m】</li><li>hook文件【mygt_make_trw_hook.m】</li><li>编译模板【mygt.tmf】</li></ul><p>每一个目标系统除了代码生成模板的设置外还会封装自己的Simulink模块。每个模块都会包含以下文件：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-8211320c22362740df0951fce272ffe5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"590\" data-rawheight=\"122\" class=\"origin_image zh-lightbox-thumb\" width=\"590\" data-original=\"https://pic2.zhimg.com/v2-8211320c22362740df0951fce272ffe5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;590&#39; height=&#39;122&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"590\" data-rawheight=\"122\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"590\" data-original=\"https://pic2.zhimg.com/v2-8211320c22362740df0951fce272ffe5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-8211320c22362740df0951fce272ffe5_b.jpg\"/></figure><ul><li>编译前的C mex S函数文件【mcu_can_config.c】</li><li>编译后的S函数文件【mcu_can_config.mexw32】</li><li>模块的TLC文件【mcu_can_config.tlc】<br/><b>系统TLC文件</b></li></ul><p>刚刚提到了，生成代码的第一步就是配置目标【Target selection】，所以创建自定义目标的第一步也就是设计一个自己的tlc模板。这个模板可以参考ert.tlc来创建。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-5e7f7f2c1ffb10640c4f58d22e7870ea_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"722\" data-rawheight=\"421\" class=\"origin_image zh-lightbox-thumb\" width=\"722\" data-original=\"https://pic3.zhimg.com/v2-5e7f7f2c1ffb10640c4f58d22e7870ea_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;722&#39; height=&#39;421&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"722\" data-rawheight=\"421\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"722\" data-original=\"https://pic3.zhimg.com/v2-5e7f7f2c1ffb10640c4f58d22e7870ea_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-5e7f7f2c1ffb10640c4f58d22e7870ea_b.jpg\"/></figure><p>系统TLC文件分为三个部分，顶部定义了自定义目标系统的名称，我们就叫它【This is My Target】。后面是编译选项，由于本次只生成C代码，所以编译模板选择【none】。中部的代码定义了生成代码的类型、语言等，直接照抄ert.tlc。底部定义了代码生成的文件夹命名格式、rtw设置直接引用ert.tlc、设置回调函数等。</p><p><b>回调函数</b></p><p>当我们在Target Selection中选择了系统TLC之后，会调用这个函数，对目标系统的常见配置进行初始化。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-ff2205372430f0db206674a55439f255_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"312\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-ff2205372430f0db206674a55439f255_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;312&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"312\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-ff2205372430f0db206674a55439f255_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-ff2205372430f0db206674a55439f255_b.jpg\"/></figure><p>例如这三部分分别为：设置ERT生成主函数、设置不进行编译、设置用户代码模板</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-3cd475a88a61e098e266bcfe9a035560_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"494\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic1.zhimg.com/v2-3cd475a88a61e098e266bcfe9a035560_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;494&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"494\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic1.zhimg.com/v2-3cd475a88a61e098e266bcfe9a035560_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-3cd475a88a61e098e266bcfe9a035560_b.jpg\"/></figure><p>上述回调函数对应到模型的参数配置中就是上图红色部分。当然你可以通过Matlab帮助找到你想设置参数的变量名</p><p><b>用于操作文件的TLC文件</b></p><p>该文件在本例中命名为mygt_ file_process.tlc，通过这个文件来选取使用哪个代码模板。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-d796e20c81dddc5032cd6068b9f5f425_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"679\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb\" width=\"679\" data-original=\"https://pic2.zhimg.com/v2-d796e20c81dddc5032cd6068b9f5f425_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;679&#39; height=&#39;419&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"679\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"679\" data-original=\"https://pic2.zhimg.com/v2-d796e20c81dddc5032cd6068b9f5f425_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-d796e20c81dddc5032cd6068b9f5f425_b.jpg\"/></figure><p>上图可知，本目标系统将调用mygt_stm32F407_srmain.tlc这个代码模板文件，这是一个STM32的Keil工程模板。如果你的项目使用的是CodeWarrior，就需要另外制作一个模板。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-e48174f79a385d9c7a65c08721d2efb0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"559\" data-rawheight=\"685\" class=\"origin_image zh-lightbox-thumb\" width=\"559\" data-original=\"https://pic1.zhimg.com/v2-e48174f79a385d9c7a65c08721d2efb0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;559&#39; height=&#39;685&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"559\" data-rawheight=\"685\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"559\" data-original=\"https://pic1.zhimg.com/v2-e48174f79a385d9c7a65c08721d2efb0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e48174f79a385d9c7a65c08721d2efb0_b.jpg\"/></figure><p>打开mygt_stm32F407_srmain.tlc我们可以看到这个文件会把生成的代码组织成一个keil工程的main.c格式。图中包含了需要引用的头文件，函数等等。这里用到很多tlc函数，这些函数具体什么可以去《Simulink Coder Target Language Complier》查找。</p><p><b>Hook文件</b></p><p>顾名思义就是一个钩子函数，它用来将代码生成的各阶段中断出来，插入自己想要加入的操作。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-a286722f5c6a3d8f33c64cbbd9de1084_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"581\" data-rawheight=\"390\" class=\"origin_image zh-lightbox-thumb\" width=\"581\" data-original=\"https://pic1.zhimg.com/v2-a286722f5c6a3d8f33c64cbbd9de1084_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;581&#39; height=&#39;390&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"581\" data-rawheight=\"390\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"581\" data-original=\"https://pic1.zhimg.com/v2-a286722f5c6a3d8f33c64cbbd9de1084_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-a286722f5c6a3d8f33c64cbbd9de1084_b.jpg\"/></figure><p>通过流程图，我们可以在每一个步骤进入前【before】、进入时【entry】、完成后【after】进行自定义操作。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-da57bc19aa99e87dde0e6df500ed25c3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"876\" data-rawheight=\"916\" class=\"origin_image zh-lightbox-thumb\" width=\"876\" data-original=\"https://pic4.zhimg.com/v2-da57bc19aa99e87dde0e6df500ed25c3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;876&#39; height=&#39;916&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"876\" data-rawheight=\"916\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"876\" data-original=\"https://pic4.zhimg.com/v2-da57bc19aa99e87dde0e6df500ed25c3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-da57bc19aa99e87dde0e6df500ed25c3_b.jpg\"/></figure><p>这就是一个Hook文件的结构，最常用就是在【exit】的时候，我们把生成的代码与IDE（集成开发环境）做集成。完成代码生成后可以直接用ukeil打开工程，甚至直接烧写单片机。这里调用了make_exit_hook函数。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-fb8f8e2661631b3b2fce38f73a6b5401_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"657\" data-rawheight=\"411\" class=\"origin_image zh-lightbox-thumb\" width=\"657\" data-original=\"https://pic2.zhimg.com/v2-fb8f8e2661631b3b2fce38f73a6b5401_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;657&#39; height=&#39;411&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"657\" data-rawheight=\"411\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"657\" data-original=\"https://pic2.zhimg.com/v2-fb8f8e2661631b3b2fce38f73a6b5401_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-fb8f8e2661631b3b2fce38f73a6b5401_b.jpg\"/></figure><p>这内容有点复杂，大致逻辑就是将生成的C文件与H文件复制到keil工程目录下，并把生成C文件、H文件写入工程描述中。</p><p><b>模块文件</b></p><p>上面主要介绍的是自定义目标系统的工作流程、包含哪些文件、具体有什么用。那大部分的自定义目标系统都会封装自己的Simulink模块库，用来对单片机的硬件进行配置</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-975d12136b083241151c5a9e453a3a3d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"503\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-975d12136b083241151c5a9e453a3a3d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;503&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"503\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-975d12136b083241151c5a9e453a3a3d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-975d12136b083241151c5a9e453a3a3d_b.jpg\"/></figure><p>例如：本次使用的例子是基于STM32F407芯片，所以就用S函数封装了一个CAN的初始化函数。对应的S函数名称就是MCU_Can_Config.mwx64。这部分如何创建S函数，调用S函数，Mask参数的设计。这部分在之前的《<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247484023%26idx%3D1%26sn%3D44d81c239dc2c96071f5d0c7babd8acf%26chksm%3Dce80d3e3f9f75af51a704af679bb66a948e130f923c96000f56754342399967f728a3ecb6998%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">S-Funciton应用实例</a>》中已经介绍过，这里不重复。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-53a9cb012950e81149a4ce90ab372135_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"605\" data-rawheight=\"471\" class=\"origin_image zh-lightbox-thumb\" width=\"605\" data-original=\"https://pic2.zhimg.com/v2-53a9cb012950e81149a4ce90ab372135_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;605&#39; height=&#39;471&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"605\" data-rawheight=\"471\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"605\" data-original=\"https://pic2.zhimg.com/v2-53a9cb012950e81149a4ce90ab372135_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-53a9cb012950e81149a4ce90ab372135_b.jpg\"/></figure><p>之前介绍S函数时没有介绍mdlRTW这个函数，该函数的功能是把S函数的参数、端口等信息写入RTW文件。后面通过模块的TLC文件来读取写入RTW文件中的相关信息</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-7bab0980f427d4dd441447470706d818_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"661\" data-rawheight=\"592\" class=\"origin_image zh-lightbox-thumb\" width=\"661\" data-original=\"https://pic1.zhimg.com/v2-7bab0980f427d4dd441447470706d818_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;661&#39; height=&#39;592&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"661\" data-rawheight=\"592\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"661\" data-original=\"https://pic1.zhimg.com/v2-7bab0980f427d4dd441447470706d818_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-7bab0980f427d4dd441447470706d818_b.jpg\"/></figure><p>在模块TLC文件中，定义该模块生成代码的格式，包含引用的外部函数，申明变量。另外这里的TLC函数还会到RTW文件中读取配置参数，配合模板生成代码。<br/><b>大功告成</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-dd7e91b655f5fd31eae7ffe59a3c632c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"390\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic1.zhimg.com/v2-dd7e91b655f5fd31eae7ffe59a3c632c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;390&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"390\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic1.zhimg.com/v2-dd7e91b655f5fd31eae7ffe59a3c632c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-dd7e91b655f5fd31eae7ffe59a3c632c_b.jpg\"/></figure><p>这是一个利用自定义目标系统开发的应用模型，使用了两个封装模块，分别用来配置CAN总线和接收CAN总线报文。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-72ede5e4f2e4ff00a55f7b305a75be62_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"394\" data-rawheight=\"134\" class=\"content_image\" width=\"394\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;394&#39; height=&#39;134&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"394\" data-rawheight=\"134\" class=\"content_image lazy\" width=\"394\" data-actualsrc=\"https://pic3.zhimg.com/v2-72ede5e4f2e4ff00a55f7b305a75be62_b.jpg\"/></figure><p>点击【编译】按钮就会调用keil打开工程或者直接写入单片机</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-0e99fa10ab4e34015f43c73c07ff90cd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"461\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-0e99fa10ab4e34015f43c73c07ff90cd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;461&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"461\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-0e99fa10ab4e34015f43c73c07ff90cd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-0e99fa10ab4e34015f43c73c07ff90cd_b.jpg\"/></figure><p>打开keil就能看到集成到开发环境的Simulink代码</p><p><b>最后</b>​</p><p>Simulink代码生成专题共三篇就此结束，最后这个提高篇涉及的内容比较多，可能很多人看了还不是很明白如何实现的。最后就来总结下一些知识点：S函数、TLC语言、M语言。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-16acce87c69d278dded66d7d864cc698_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"618\" data-rawheight=\"420\" class=\"origin_image zh-lightbox-thumb\" width=\"618\" data-original=\"https://pic1.zhimg.com/v2-16acce87c69d278dded66d7d864cc698_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;618&#39; height=&#39;420&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"618\" data-rawheight=\"420\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"618\" data-original=\"https://pic1.zhimg.com/v2-16acce87c69d278dded66d7d864cc698_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-16acce87c69d278dded66d7d864cc698_b.jpg\"/></figure><p>【思想】收集到的Matlab培训资料，及一个自定义目标系统的例子。请到公众号原文中获取资料信息。</p><p><b>----------------============推荐阅读=============------------</b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247484023%26idx%3D1%26sn%3D44d81c239dc2c96071f5d0c7babd8acf%26chksm%3Dce80d3e3f9f75af51a704af679bb66a948e130f923c96000f56754342399967f728a3ecb6998%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ S-Funciton应用实例</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483999%26idx%3D1%26sn%3Da858187ee759150bf618d15a6de0d30f%26chksm%3Dce80d3cbf9f75add611ddd1402d04b23e67cea2ac1c0669f2aab67dd88d88ca7b04f5c8f9bc7%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ 汽车工程师眼中的C#</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483983%26idx%3D1%26sn%3D7e811a86b936b3d3815df4050f851330%26chksm%3Dce80d3dbf9f75acd8d6665a3e32e644aca480eedaae61bf9b872a255bb9912df1e306678cde0%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ 工况路普的采集与数据处理</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483947%26idx%3D1%26sn%3D9c52b613947d5bd2644d02423f1997e3%26chksm%3Dce80d3bff9f75aa908be418383a2f6224f47e5a839828d3b6d472a7099cb1f5c8a730d4665e5%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ 混合动力节油的秘密-发动机万有特性</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483929%26idx%3D1%26sn%3D46057676f89ab8771af0d0e8202d7ca7%26chksm%3Dce80d38df9f75a9b55a1d823adb529e97018b24a66ec50dc2d793486fb9598e531172dded47e%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ AVL-CRUISE纯电动仿真策略提高教程</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483913%26idx%3D1%26sn%3D42ee206ecef5792a04f66f35dec3e61a%26chksm%3Dce80d39df9f75a8ba994d9cfbdf22f5790536b0d29ccda1cc5cb3c2821ce9e99fdc5652d27ac%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ AVL-CRUISE纯电动模型仿真策略</a> </b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483891%26idx%3D1%26sn%3D4afa769448137774add7fbb26331d80a%26chksm%3Dce80d067f9f759710309090f6ea13f339aefd178ac053df61f9f279e057badcf0f80cb927158%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ Simulink代码生成应用教程</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483861%26idx%3D1%26sn%3Dd5a9644b255c8b84b72c2208f48feb46%26chksm%3Dce80d041f9f75957f42ddfe12d174e615d12e85c83ae3a4b70874067d8f5584e2c0f20be610f%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ Sinmulink代码生成基础体验教程</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483838%26idx%3D1%26sn%3Dc4754b7a764a00c5a84d0e053515ddc7%26chksm%3Dce80d02af9f7593cd9df3639d3aca8698056ba415fc03d170e4f3907980df4e7b1e037a4b148%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">■ 燃料电池车(FCHEV)动力经济性建模与仿真</a></b><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-9f8cdffebe33ca4f9c8f51dd0ba83a48_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"248\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-9f8cdffebe33ca4f9c8f51dd0ba83a48_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;248&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"248\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-9f8cdffebe33ca4f9c8f51dd0ba83a48_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-9f8cdffebe33ca4f9c8f51dd0ba83a48_b.jpg\"/></figure>", 
            "topic": [
                {
                    "tag": "simulink", 
                    "tagLink": "https://api.zhihu.com/topics/19747197"
                }, 
                {
                    "tag": "C / C++", 
                    "tagLink": "https://api.zhihu.com/topics/19601705"
                }, 
                {
                    "tag": "嵌入式开发", 
                    "tagLink": "https://api.zhihu.com/topics/19610823"
                }
            ], 
            "comments": [
                {
                    "userName": "小柏小柏", 
                    "userLink": "https://www.zhihu.com/people/0db7ccfd2d301b82482288882e2a46d2", 
                    "content": "收到，感觉还是挺复杂的", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/80149331", 
            "userName": "思想", 
            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
            "upvote": 4, 
            "title": "S-Funciton应用实例", 
            "content": "<p>本文转载在我的微信公众号：<b>古德曼汽车工业。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1774\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb\" width=\"1774\" data-original=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1774&#39; height=&#39;408&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1774\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1774\" data-original=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_b.jpg\"/></figure><p><b>希望关注本专栏的朋友，也能一并关注微信公众号。</b></p><p>原文地址：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247484023%26idx%3D1%26sn%3D44d81c239dc2c96071f5d0c7babd8acf%26chksm%3Dce80d3e3f9f75af51a704af679bb66a948e130f923c96000f56754342399967f728a3ecb6998%26token%3D1217536375%26lang%3Dzh_CN%23rd\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">S-Function应用实例</a></p><h2>1、什么是S-Function</h2><p>S-Function也叫做S函数，是Simulink的系统函数。用户可以根据自己的算法开发自己的Simulink模块。主要应用场景如下：</p><p>■ 用户根据自己的算法，开发并封装成Simulink的功能的模块。例如一些特殊的滤波算法、图像处理算法等；</p><p>■ 提供外部软件接口，例如【思想】最拿手的CRUISE与Simulink联合仿真接口，去除Mask后本质上也是一个S函数；</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-a88be452e838cc1578274eefa22d3c6b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"575\" data-rawheight=\"216\" class=\"origin_image zh-lightbox-thumb\" width=\"575\" data-original=\"https://pic4.zhimg.com/v2-a88be452e838cc1578274eefa22d3c6b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;575&#39; height=&#39;216&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"575\" data-rawheight=\"216\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"575\" data-original=\"https://pic4.zhimg.com/v2-a88be452e838cc1578274eefa22d3c6b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-a88be452e838cc1578274eefa22d3c6b_b.jpg\"/></figure><p>■ 与RTW文件数据交互，这样就能够在模块中配置并控制Simulink  Embbed  Coder生成的C代码。如配置单片机的CAN波特率、配置锁相环、定时器等；</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-81af92fc7607f22093c59e9df95911d5_b.jpg\" data-size=\"normal\" data-rawwidth=\"457\" data-rawheight=\"467\" class=\"origin_image zh-lightbox-thumb\" width=\"457\" data-original=\"https://pic2.zhimg.com/v2-81af92fc7607f22093c59e9df95911d5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;457&#39; height=&#39;467&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"457\" data-rawheight=\"467\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"457\" data-original=\"https://pic2.zhimg.com/v2-81af92fc7607f22093c59e9df95911d5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-81af92fc7607f22093c59e9df95911d5_b.jpg\"/><figcaption>STM32的Simulink库模块</figcaption></figure><p>PS：其实一直很想介绍【Simulink代码生成-自定义目标代码的生成】，但是发现S函数是其关键，所以先介绍下背景知识。</p><p>S函数语言上支持M、C\\C++、Fortran，除了快被扫进历史垃圾堆的Fortran其余三种语言都挺常用；</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-857f2fb99bbb926c4c9f66fafb42a7b2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"575\" data-rawheight=\"295\" class=\"origin_image zh-lightbox-thumb\" width=\"575\" data-original=\"https://pic3.zhimg.com/v2-857f2fb99bbb926c4c9f66fafb42a7b2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;575&#39; height=&#39;295&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"575\" data-rawheight=\"295\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"575\" data-original=\"https://pic3.zhimg.com/v2-857f2fb99bbb926c4c9f66fafb42a7b2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-857f2fb99bbb926c4c9f66fafb42a7b2_b.jpg\"/></figure><p>以下的内容重点介绍属于Level 2的C Mex S函数。通过一个简单的例子，带领大家打造一个属于自己的模块。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-4142da7c1aa09d62ef93b91c506998cd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"139\" class=\"origin_image zh-lightbox-thumb\" width=\"576\" data-original=\"https://pic2.zhimg.com/v2-4142da7c1aa09d62ef93b91c506998cd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;576&#39; height=&#39;139&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"139\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"576\" data-original=\"https://pic2.zhimg.com/v2-4142da7c1aa09d62ef93b91c506998cd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-4142da7c1aa09d62ef93b91c506998cd_b.jpg\"/></figure><p>上图为本期例子，使用C语言封装一个y=(x1+x2)*2+k的s函数。其中x1与x2为外部输入的变量，而k为在模块GUI中设置的参数。</p><p><b>2、【.C】文件的结构</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-7be74211ecd6c5085289355792114eb9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"372\" class=\"origin_image zh-lightbox-thumb\" width=\"576\" data-original=\"https://pic2.zhimg.com/v2-7be74211ecd6c5085289355792114eb9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;576&#39; height=&#39;372&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"372\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"576\" data-original=\"https://pic2.zhimg.com/v2-7be74211ecd6c5085289355792114eb9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-7be74211ecd6c5085289355792114eb9_b.jpg\"/></figure><p>以上是C Mex S中C文件的结构，除了文件头宏定义要设置模块的名称外，还有几个函数的内容需要编写。</p><p>下面对本例中用的三个函数做详细介绍：</p><ul><li><b>mdlInitializeSizes</b></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-178ebd6a28e9a12afcbdebf233c97cd2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"575\" data-rawheight=\"502\" class=\"origin_image zh-lightbox-thumb\" width=\"575\" data-original=\"https://pic3.zhimg.com/v2-178ebd6a28e9a12afcbdebf233c97cd2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;575&#39; height=&#39;502&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"575\" data-rawheight=\"502\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"575\" data-original=\"https://pic3.zhimg.com/v2-178ebd6a28e9a12afcbdebf233c97cd2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-178ebd6a28e9a12afcbdebf233c97cd2_b.jpg\"/></figure><p>在mdlInitializeSizes函数中我们只需要关心高亮部分代码，这里的API函数含义如下表：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-e112f197b032380d111b2e2f557cb20f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"860\" data-rawheight=\"215\" class=\"origin_image zh-lightbox-thumb\" width=\"860\" data-original=\"https://pic4.zhimg.com/v2-e112f197b032380d111b2e2f557cb20f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;860&#39; height=&#39;215&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"860\" data-rawheight=\"215\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"860\" data-original=\"https://pic4.zhimg.com/v2-e112f197b032380d111b2e2f557cb20f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-e112f197b032380d111b2e2f557cb20f_b.jpg\"/></figure><p>本例中虽然只使用了一个输入口，但是输入口的数据宽度设置为动态。使用Simulink的mux模块，实现多个变量的输入。当然也能设置多个Port，各Port的数据类型也可以自行定义，这里就希望大家能举一反三。</p><ul><li><b>mdlInitializeSampleTimes</b></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-9f256a67ce645f8e618a904351259136_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"113\" class=\"origin_image zh-lightbox-thumb\" width=\"576\" data-original=\"https://pic3.zhimg.com/v2-9f256a67ce645f8e618a904351259136_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;576&#39; height=&#39;113&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"113\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"576\" data-original=\"https://pic3.zhimg.com/v2-9f256a67ce645f8e618a904351259136_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-9f256a67ce645f8e618a904351259136_b.jpg\"/></figure><p>mdlInitializeSampleTimes函数设置S-Function模块的采样时间。这里是通用设置，没有特殊需求一般不改动它。</p><ul><li><b>mdlOutputs</b></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-4ac6c7c22717a0c18a535cada801caec_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"290\" class=\"origin_image zh-lightbox-thumb\" width=\"576\" data-original=\"https://pic1.zhimg.com/v2-4ac6c7c22717a0c18a535cada801caec_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;576&#39; height=&#39;290&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"290\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"576\" data-original=\"https://pic1.zhimg.com/v2-4ac6c7c22717a0c18a535cada801caec_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-4ac6c7c22717a0c18a535cada801caec_b.jpg\"/></figure><p>本例的算法比较简单，所以直接在mdlOutputs函数中实现并输出。如果你有比较复杂的算法，可以自定义一个c语言静态函数，在mdlOutputs函数再去调用。</p><p>除了上面三个函数外还有一个很重要的函数WriteRTW()，负责把Simulink的数据写入RTW文件。在后面【Simulink代码生成-自定义目标代码的生成】会用到，本次内容就不详细介绍。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-fddeeca23278950c1dea26f3ac0df068_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"863\" data-rawheight=\"152\" class=\"origin_image zh-lightbox-thumb\" width=\"863\" data-original=\"https://pic1.zhimg.com/v2-fddeeca23278950c1dea26f3ac0df068_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;863&#39; height=&#39;152&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"863\" data-rawheight=\"152\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"863\" data-original=\"https://pic1.zhimg.com/v2-fddeeca23278950c1dea26f3ac0df068_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-fddeeca23278950c1dea26f3ac0df068_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-7be128e20a8f2635db41a2e1cb25d1cd_b.jpg\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"326\" class=\"origin_image zh-lightbox-thumb\" width=\"576\" data-original=\"https://pic2.zhimg.com/v2-7be128e20a8f2635db41a2e1cb25d1cd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;576&#39; height=&#39;326&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"326\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"576\" data-original=\"https://pic2.zhimg.com/v2-7be128e20a8f2635db41a2e1cb25d1cd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-7be128e20a8f2635db41a2e1cb25d1cd_b.jpg\"/><figcaption>Matlab帮助文件</figcaption></figure><p>函数的详细功能描述、输入参数、其返回值类型及具体例子，可以在Matlab搜索中获得。</p><p>完成【.C文件】的编写后，需要在Matlab中调用编译器对【.C文件】进行编译。由于Matlab存在32位和64位，调用的编译器也不一样。32位直接使用自带的lcc-win32即可，64位则需要额外安装的VS的C++编译器。</p><h2><b>3、编译</b></h2><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-79daae9ad34ac13ec58c509638992642_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"195\" class=\"origin_image zh-lightbox-thumb\" width=\"576\" data-original=\"https://pic3.zhimg.com/v2-79daae9ad34ac13ec58c509638992642_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;576&#39; height=&#39;195&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"195\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"576\" data-original=\"https://pic3.zhimg.com/v2-79daae9ad34ac13ec58c509638992642_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-79daae9ad34ac13ec58c509638992642_b.jpg\"/></figure><p>matlab通过mex -setup命令选择编译器</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-933fc51d05aea0bc14e5293a48cb951d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"271\" class=\"origin_image zh-lightbox-thumb\" width=\"576\" data-original=\"https://pic2.zhimg.com/v2-933fc51d05aea0bc14e5293a48cb951d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;576&#39; height=&#39;271&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"271\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"576\" data-original=\"https://pic2.zhimg.com/v2-933fc51d05aea0bc14e5293a48cb951d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-933fc51d05aea0bc14e5293a48cb951d_b.jpg\"/></figure><p>在Matlab命令行窗口，通过mex  【文件名.c】执行编译得到mexw文件。如果使用32位编译器生成的文件格式是mexw32，如果是64位则是mexw64格式。</p><h2><b>4、Simulink调用S函数</b></h2><p>在Simulink的库浏览器中搜索S-Function将模块，拖入Simulink工程中。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c4c6ec6296ef2cbe92a16681e6216303_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"315\" data-rawheight=\"147\" class=\"content_image\" width=\"315\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;315&#39; height=&#39;147&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"315\" data-rawheight=\"147\" class=\"content_image lazy\" width=\"315\" data-actualsrc=\"https://pic4.zhimg.com/v2-c4c6ec6296ef2cbe92a16681e6216303_b.jpg\"/></figure><p>在【S-function name】控件中填入刚刚编译的s函数名称，这里一定要注意，刚刚编译的mexw文件一定要存在matlab的路径中或者当前路径下，否则会出现找不到模块的错误。  </p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-9571daac27a2129e669d0d2a0439135c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"399\" data-rawheight=\"424\" class=\"content_image\" width=\"399\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;399&#39; height=&#39;424&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"399\" data-rawheight=\"424\" class=\"content_image lazy\" width=\"399\" data-actualsrc=\"https://pic1.zhimg.com/v2-9571daac27a2129e669d0d2a0439135c_b.jpg\"/></figure><p>S-function parameters中填入参数K，这个参数需要与GUI中设置的参数保持一致。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-544d1f8bd1a25bf4c192bec21286763b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"507\" class=\"origin_image zh-lightbox-thumb\" width=\"576\" data-original=\"https://pic4.zhimg.com/v2-544d1f8bd1a25bf4c192bec21286763b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;576&#39; height=&#39;507&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"507\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"576\" data-original=\"https://pic4.zhimg.com/v2-544d1f8bd1a25bf4c192bec21286763b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-544d1f8bd1a25bf4c192bec21286763b_b.jpg\"/></figure><p>右键S-Function模块-&gt;Mask-&gt;Create Mask就能给模块设置一个GUI</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-55a87f93627d52462b97b3ab82cc6e07_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"214\" class=\"origin_image zh-lightbox-thumb\" width=\"576\" data-original=\"https://pic4.zhimg.com/v2-55a87f93627d52462b97b3ab82cc6e07_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;576&#39; height=&#39;214&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"214\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"576\" data-original=\"https://pic4.zhimg.com/v2-55a87f93627d52462b97b3ab82cc6e07_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-55a87f93627d52462b97b3ab82cc6e07_b.jpg\"/></figure><p>添加一个Edit控件，Name设置成K，与S-Function中的S-function parameters保存一致。确保参数可以从GUI传递到S-Function。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-1e715df6b5680453260e2b98670981d3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"431\" data-rawheight=\"384\" class=\"origin_image zh-lightbox-thumb\" width=\"431\" data-original=\"https://pic4.zhimg.com/v2-1e715df6b5680453260e2b98670981d3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;431&#39; height=&#39;384&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"431\" data-rawheight=\"384\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"431\" data-original=\"https://pic4.zhimg.com/v2-1e715df6b5680453260e2b98670981d3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-1e715df6b5680453260e2b98670981d3_b.jpg\"/></figure><p>双击模块弹出的窗口就跟原生的S-Function模块有区别了，可以在这个界面对K进行赋值。如果想回来S-Function的配置界面就需要，右键模块-&gt;Mask-&gt;Look Under Mask。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-839533320a98c5b9e58eff1859211f54_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"378\" class=\"origin_image zh-lightbox-thumb\" width=\"550\" data-original=\"https://pic1.zhimg.com/v2-839533320a98c5b9e58eff1859211f54_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;550&#39; height=&#39;378&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"378\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"550\" data-original=\"https://pic1.zhimg.com/v2-839533320a98c5b9e58eff1859211f54_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-839533320a98c5b9e58eff1859211f54_b.jpg\"/></figure><p>通过mux模块将两个变量传递入S-Function，输出通过一个display模块显示结果。</p><h2><b>5、S-Function Builder</b></h2><p>其实，Simulink也有针对不太熟悉编写代码的用户开发的S-FunctionBuilder模块，但是个人觉得没有直接写C语言来的自由。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-a5acc17db1783f85fbbc792f6494e093_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"516\" class=\"origin_image zh-lightbox-thumb\" width=\"576\" data-original=\"https://pic4.zhimg.com/v2-a5acc17db1783f85fbbc792f6494e093_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;576&#39; height=&#39;516&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"516\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"576\" data-original=\"https://pic4.zhimg.com/v2-a5acc17db1783f85fbbc792f6494e093_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-a5acc17db1783f85fbbc792f6494e093_b.jpg\"/></figure><p>可以使用点选的方式配置S-Function的输入、输出、参数。尽可能的减少用户代码的编写量，可以在Matlab命令行中输入：sfbuilder_example，获取S-function buider的例子。</p><h2><b>7、总结</b></h2><p>本期内容通过一个非常简单的例子介绍了s函数的使用，【思想】觉得S函数的难点在<b><u>数据交互</u></b>。只要能打通S-Function与Simulink的数据交互，就能够自由的编写自己的Simulink模块。</p><p>开篇也介绍过，S函数可以用于制作自定义目标代码的生成库。后面也会带领大家接触这方面的内容。</p><h2><br/><b>--==推荐阅读==--</b></h2><p><b>①<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483999%26idx%3D1%26sn%3Da858187ee759150bf618d15a6de0d30f%26chksm%3Dce80d3cbf9f75add611ddd1402d04b23e67cea2ac1c0669f2aab67dd88d88ca7b04f5c8f9bc7%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">汽车工程师眼中的C#</a></b></p><p><b>②<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483983%26idx%3D1%26sn%3D7e811a86b936b3d3815df4050f851330%26chksm%3Dce80d3dbf9f75acd8d6665a3e32e644aca480eedaae61bf9b872a255bb9912df1e306678cde0%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">工况路普的采集与数据处理</a></b></p><p><b>③<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483947%26idx%3D1%26sn%3D9c52b613947d5bd2644d02423f1997e3%26chksm%3Dce80d3bff9f75aa908be418383a2f6224f47e5a839828d3b6d472a7099cb1f5c8a730d4665e5%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">混合动力节油的秘密-发动机万有特性</a></b></p><p><b>④<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483929%26idx%3D1%26sn%3D46057676f89ab8771af0d0e8202d7ca7%26chksm%3Dce80d38df9f75a9b55a1d823adb529e97018b24a66ec50dc2d793486fb9598e531172dded47e%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">AVL-CRUISE纯电动仿真策略提高教程</a></b></p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483913%26idx%3D1%26sn%3D42ee206ecef5792a04f66f35dec3e61a%26chksm%3Dce80d39df9f75a8ba994d9cfbdf22f5790536b0d29ccda1cc5cb3c2821ce9e99fdc5652d27ac%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">⑤AVL-CRUISE纯电动模型仿真策略</a><br/>⑥<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483891%26idx%3D1%26sn%3D4afa769448137774add7fbb26331d80a%26chksm%3Dce80d067f9f759710309090f6ea13f339aefd178ac053df61f9f279e057badcf0f80cb927158%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Simulink代码生成应用教程</a></b></p><p><b>⑦<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483861%26idx%3D1%26sn%3Dd5a9644b255c8b84b72c2208f48feb46%26chksm%3Dce80d041f9f75957f42ddfe12d174e615d12e85c83ae3a4b70874067d8f5584e2c0f20be610f%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Sinmulink代码生成基础体验教程</a></b></p><p><b>⑧<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483838%26idx%3D1%26sn%3Dc4754b7a764a00c5a84d0e053515ddc7%26chksm%3Dce80d02af9f7593cd9df3639d3aca8698056ba415fc03d170e4f3907980df4e7b1e037a4b148%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">燃料电池车(FCHEV)动力经济性建模与仿真</a></b></p><p></p>", 
            "topic": [
                {
                    "tag": "MATLAB", 
                    "tagLink": "https://api.zhihu.com/topics/19559252"
                }, 
                {
                    "tag": "simulink", 
                    "tagLink": "https://api.zhihu.com/topics/19747197"
                }, 
                {
                    "tag": "C / C++", 
                    "tagLink": "https://api.zhihu.com/topics/19601705"
                }
            ], 
            "comments": [
                {
                    "userName": "小柏小柏", 
                    "userLink": "https://www.zhihu.com/people/0db7ccfd2d301b82482288882e2a46d2", 
                    "content": "老师能不能出一篇关于自动生成的代码如何写其底层函数的文章啊", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/78212233", 
            "userName": "思想", 
            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
            "upvote": 15, 
            "title": "汽车工程师眼中的C#", 
            "content": "<p>本文转载在我的微信公众号：<b>古德曼汽车工业。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1774\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb\" width=\"1774\" data-original=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1774&#39; height=&#39;408&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1774\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1774\" data-original=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-f008ab945bea4a646bc5dee9fb82d8be_b.jpg\"/></figure><p><b>希望关注本专栏的朋友，也能一并关注微信公众号。</b></p><p>原文地址：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483999%26idx%3D1%26sn%3Da858187ee759150bf618d15a6de0d30f%26chksm%3Dce80d3cbf9f75add611ddd1402d04b23e67cea2ac1c0669f2aab67dd88d88ca7b04f5c8f9bc7%26token%3D159386369%26lang%3Dzh_CN%23rd\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">汽车工程师眼中的C#</a>​</p><h2><b>背景</b></h2><p>不少读者问过【思想】，公众号里的工具都是用什么编写的。答案就是C#。那么本期内容就是聊下C#，内容涉及C#的介绍、C#在汽车行业中的运用、分享【思想】的学习经历与C#视频教程，希望能给这个行业想学编程的工程师提供个思路。</p><h2><b>前言</b></h2><p>先从【思想】是如何结识C#的，那应该是大一，【思想】刚完成C语言的学习后就对编程有了很大的兴趣。所以就自学了C++，想做一些带界面的Windows程序。由于【思想】大学学的是机械设计与自动化，没系统的学习过数据结构这类的专业课，内存管理经常没做好，内存溢出等错误让【思想】差点放弃学习，后来在一位妹子的推荐下接触了C#，才挽回了一点信心。</p><h2><b>C#是什么？</b></h2><p>C#读作CSharp，它是微软.NET框架的其中一种与语言形式。起初的.NET框架编译器支持C#与VB,NET两种语言，C#的语法继承了C/C++，<a href=\"https://link.zhihu.com/?target=http%3A//VB.Net\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">VB.Net</span><span class=\"invisible\"></span></a>则继承了VB。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-8161e6b38b82bda07ae2cab416fc5d71_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"881\" data-rawheight=\"495\" class=\"origin_image zh-lightbox-thumb\" width=\"881\" data-original=\"https://pic2.zhimg.com/v2-8161e6b38b82bda07ae2cab416fc5d71_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;881&#39; height=&#39;495&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"881\" data-rawheight=\"495\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"881\" data-original=\"https://pic2.zhimg.com/v2-8161e6b38b82bda07ae2cab416fc5d71_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-8161e6b38b82bda07ae2cab416fc5d71_b.jpg\"/></figure><p>与Java、C++等一样，C#也是一种面向对象的编程语言。C#对学过C/C++语言的朋友是比较友好的，所以受众群体也比较广一点。现在主流的Windows系统（Win7以上版本）默认都支持.Net4.0，基本开发出来的程序也不需要额外的安装运行库，可直接运行。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-e7e9d078530a5307d515fd520107785b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"882\" data-rawheight=\"611\" class=\"origin_image zh-lightbox-thumb\" width=\"882\" data-original=\"https://pic4.zhimg.com/v2-e7e9d078530a5307d515fd520107785b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;882&#39; height=&#39;611&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"882\" data-rawheight=\"611\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"882\" data-original=\"https://pic4.zhimg.com/v2-e7e9d078530a5307d515fd520107785b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-e7e9d078530a5307d515fd520107785b_b.jpg\"/></figure><p>C#的官方开发环境就是宇宙最强IDE-VisualStudio。目前最新版已经出到2019，但是安装后的体积很大。简易想学习的可以安装比较早期的版本，推荐使用2015版。可以支持大家使用C#开发可执行文件（EXE），动态链接库(DLL)，甚至网页程序。</p><p>说了这么多，C#相较于C++到底有什么优势与不足呢？之前介绍过为什么【思想】结识了C#，这里就详细说说：在开发比较复杂的程序时，为什么要搭建数据结构。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-392ad00df4e4736f602292aa21cb6c8b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"324\" data-rawheight=\"402\" class=\"content_image\" width=\"324\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;324&#39; height=&#39;402&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"324\" data-rawheight=\"402\" class=\"content_image lazy\" width=\"324\" data-actualsrc=\"https://pic4.zhimg.com/v2-392ad00df4e4736f602292aa21cb6c8b_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>举个例子：在学习C语言的数组功能时，就直接int a[10]这么一个语句就搞定了。但是实际上我们希望数组的长度是动态的。这里就要用到链表、堆栈、列队等数据结构，同时我们还要对这些数据结构多排序检索等操作。这就需要程序员频繁对内存控件进行操作。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-e2418624b1b02101bb82890f2768ef53_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"705\" data-rawheight=\"203\" class=\"origin_image zh-lightbox-thumb\" width=\"705\" data-original=\"https://pic4.zhimg.com/v2-e2418624b1b02101bb82890f2768ef53_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;705&#39; height=&#39;203&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"705\" data-rawheight=\"203\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"705\" data-original=\"https://pic4.zhimg.com/v2-e2418624b1b02101bb82890f2768ef53_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-e2418624b1b02101bb82890f2768ef53_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>这就很容易出现问题，上图这样内存错误的情况也成为家常便饭。当时【思想】学习C++的时候也经常因为这种内存错误哭晕在厕所。</p><p>所以，【思想】个人认为C#最棒的优点就是它已经封装了非常丰富的数据结构，在编程时可以直接调用。复杂的数据结构问题，微软的工程师已经帮大家考虑好了。当然【思想】认为无法直接访问内存也是他的劣势，比如做CAN通讯，Socket通讯经常要操作结构体，在这方面C#并不够灵活。</p><h2><b>C#在汽车行业中的应用</b></h2><p>C#在汽车行业中的应用，有大一部分都是在电控系统开发工具的制作上。例如，开发一款控制器的同时，还需要设计一个上位机工具，用于开发及生产的阶段调试、售后故障诊断、程序的烧写、数据标定等。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-71a1bdbba5a1d7663edb5f52b842f0d2_b.jpg\" data-size=\"normal\" data-rawwidth=\"806\" data-rawheight=\"494\" class=\"origin_image zh-lightbox-thumb\" width=\"806\" data-original=\"https://pic3.zhimg.com/v2-71a1bdbba5a1d7663edb5f52b842f0d2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;806&#39; height=&#39;494&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"806\" data-rawheight=\"494\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"806\" data-original=\"https://pic3.zhimg.com/v2-71a1bdbba5a1d7663edb5f52b842f0d2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-71a1bdbba5a1d7663edb5f52b842f0d2_b.jpg\"/><figcaption>图片来源网络</figcaption></figure><p>C#的应用，让汽车工程只需要考虑自己专业方面的逻辑，复杂的数据结构完全可以托管给.net编译器，这样做出来的程序相对稳定，开发速度也比较快。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-44b24455e253d3663225914bd60990bb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"628\" data-rawheight=\"401\" class=\"origin_image zh-lightbox-thumb\" width=\"628\" data-original=\"https://pic4.zhimg.com/v2-44b24455e253d3663225914bd60990bb_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;628&#39; height=&#39;401&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"628\" data-rawheight=\"401\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"628\" data-original=\"https://pic4.zhimg.com/v2-44b24455e253d3663225914bd60990bb_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-44b24455e253d3663225914bd60990bb_b.jpg\"/></figure><p>另外，如果觉得C#的官方控件太过单一，也可以使用一些比较适合汽车领域的第三方控件，例如NI、Dotnetbar这类第三方控件，能够迅速的提高用户界面的品质，上图为NI国家仪器提供的第三方工业风格控件。</p><h2><b>思想作品介绍</b></h2><p>下面介绍一下【思想】开发的一些小工具，有一部分已经在之前的文章有过详细解析，还有一部分由于种种原因还没能跟大家见面，这里先预告一下，厉害的都会有的。</p><ul><li><b>底层与逻辑层交互接口生成工具</b></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-982db104da3d903f4fa80bb11f0e238a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"882\" data-rawheight=\"528\" class=\"origin_image zh-lightbox-thumb\" width=\"882\" data-original=\"https://pic3.zhimg.com/v2-982db104da3d903f4fa80bb11f0e238a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;882&#39; height=&#39;528&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"882\" data-rawheight=\"528\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"882\" data-original=\"https://pic3.zhimg.com/v2-982db104da3d903f4fa80bb11f0e238a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-982db104da3d903f4fa80bb11f0e238a_b.jpg\"/></figure><p>之前提到过的底层与逻辑层交互接口生成工具，导入DBC与IO输入表，可以大大缩短人工写代码的工作量。目前工具还处于开发阶段，具体生成的原理可以留意文章下方的推荐阅读。</p><ul><li><b>DBC与EXCEL转换工具</b></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-dd6e6a55f06ece06f3b41f9a1b7f572d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"881\" data-rawheight=\"412\" class=\"origin_image zh-lightbox-thumb\" width=\"881\" data-original=\"https://pic2.zhimg.com/v2-dd6e6a55f06ece06f3b41f9a1b7f572d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;881&#39; height=&#39;412&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"881\" data-rawheight=\"412\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"881\" data-original=\"https://pic2.zhimg.com/v2-dd6e6a55f06ece06f3b41f9a1b7f572d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-dd6e6a55f06ece06f3b41f9a1b7f572d_b.jpg\"/></figure><p>实现DBC文件与Excel表格文件的自由转换，详细的功能介绍可以看下之前的文章：<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483836%26idx%3D1%26sn%3D5c2255cf9a6b28fa338694a62826b94b%26chksm%3Dce80d028f9f7593ea108bc3c03703d2508c9e4d3cd655baa77376369e721e5d3e17ea26a8741%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Excel与DBC文件的互相转换</a></p><ul><li><b>CAN总线分析工具</b></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-82d11a5cc44c679569bfee38e7ab395c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"882\" data-rawheight=\"504\" class=\"origin_image zh-lightbox-thumb\" width=\"882\" data-original=\"https://pic1.zhimg.com/v2-82d11a5cc44c679569bfee38e7ab395c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;882&#39; height=&#39;504&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"882\" data-rawheight=\"504\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"882\" data-original=\"https://pic1.zhimg.com/v2-82d11a5cc44c679569bfee38e7ab395c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-82d11a5cc44c679569bfee38e7ab395c_b.jpg\"/></figure><p>后续古德曼汽车工业也会推出基于C#与周立功CAN卡组成的总线分析工具，目前处于测试阶段，敬请期待！大致功能就是在线通过dbc文件解析报文信息，并通过图形形式呈现，类似一个简易的CANoe。</p><ul><li><b>AVL-CRUISE自动化后处理工具</b></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-59a6f8bbe8734335be75aeca2cfb31c3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"882\" data-rawheight=\"578\" class=\"origin_image zh-lightbox-thumb\" width=\"882\" data-original=\"https://pic4.zhimg.com/v2-59a6f8bbe8734335be75aeca2cfb31c3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;882&#39; height=&#39;578&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"882\" data-rawheight=\"578\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"882\" data-original=\"https://pic4.zhimg.com/v2-59a6f8bbe8734335be75aeca2cfb31c3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-59a6f8bbe8734335be75aeca2cfb31c3_b.jpg\"/></figure><p>由于【思想】之前从事了一段时间的动力经济性仿真，也基于C#开发出了AVL-CRUISE自动化后处理工具，它可以自动的收集CRUISE仿真工程的参数与结果，自动归档到数据库。这个工具的功能已经十分完善，但是由于当前的数据保密，暂时还不能和大家见面。</p><h2><b>最后</b></h2><p>最后分享一下【思想】的学习方法。那就是在工作中学习，在折腾中学习。【思想】是一个非常爱折腾的人，应该可以称极客了，经常折腾一些朋友都不清楚干嘛的东西。也做过不少小东西，在这过程中学习了不少知识。除了折腾过C、C++、C#之外还学习过HTML、JavaScript、CSS、PHP，数据库也玩过ACCESS、Mssql、Mysql。也编写过自己的网站程序（可以在【原文链接】访问），分享自己的折腾经历。【思想】希望分享自己的学习方法，帮助到想自我学习的朋友们，希望大家也能够尝试下。</p><h2><b>推荐阅读</b></h2><p>①-<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483836%26idx%3D1%26sn%3D5c2255cf9a6b28fa338694a62826b94b%26chksm%3Dce80d028f9f7593ea108bc3c03703d2508c9e4d3cd655baa77376369e721e5d3e17ea26a8741%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Excel与DBC文件的互相转换</a></p><p>②-<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483838%26idx%3D2%26sn%3D3b34c19ed394560deb40202588266123%26chksm%3Dce80d02af9f7593cdecb0ec752e246f3223f8f13b6fe811bbd949f02f8dd386eb44fcc1d690c%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CRUISE与Isight联合仿真优化</a></p><p>③-<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483891%26idx%3D1%26sn%3D4afa769448137774add7fbb26331d80a%26chksm%3Dce80d067f9f759710309090f6ea13f339aefd178ac053df61f9f279e057badcf0f80cb927158%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Simulink代码生成应用教程</a></p><p>④-<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483983%26idx%3D1%26sn%3D7e811a86b936b3d3815df4050f851330%26chksm%3Dce80d3dbf9f75acd8d6665a3e32e644aca480eedaae61bf9b872a255bb9912df1e306678cde0%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">工况路普的采集与数据处理</a></p><p>⑤-<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483947%26idx%3D1%26sn%3D9c52b613947d5bd2644d02423f1997e3%26chksm%3Dce80d3bff9f75aa908be418383a2f6224f47e5a839828d3b6d472a7099cb1f5c8a730d4665e5%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">混合动力节油的秘密-发动机万有特性</a></p><p>⑥-<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483929%26idx%3D1%26sn%3D46057676f89ab8771af0d0e8202d7ca7%26chksm%3Dce80d38df9f75a9b55a1d823adb529e97018b24a66ec50dc2d793486fb9598e531172dded47e%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">AVL-CRUISE纯电动仿真策略提高教程</a></p><p>⑦-<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483838%26idx%3D1%26sn%3Dc4754b7a764a00c5a84d0e053515ddc7%26chksm%3Dce80d02af9f7593cd9df3639d3aca8698056ba415fc03d170e4f3907980df4e7b1e037a4b148%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">燃料电池车(FCHEV)动力经济性建模与仿真</a></p>", 
            "topic": [
                {
                    "tag": "C#", 
                    "tagLink": "https://api.zhihu.com/topics/19590712"
                }, 
                {
                    "tag": "上位机", 
                    "tagLink": "https://api.zhihu.com/topics/20075855"
                }, 
                {
                    "tag": "新能源汽车", 
                    "tagLink": "https://api.zhihu.com/topics/19731651"
                }
            ], 
            "comments": [
                {
                    "userName": "远峰", 
                    "userLink": "https://www.zhihu.com/people/533ab6d115870b27014002519f386661", 
                    "content": "[赞同]，难得。目前来讲，搞汽车系统的工程师，很少搞C++，C#的。", 
                    "likes": 1, 
                    "childComments": []
                }, 
                {
                    "userName": "馨声茉语", 
                    "userLink": "https://www.zhihu.com/people/337a6224383b6d75a5a511bbb9974690", 
                    "content": "VS2019安装后体积很大？", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "思想", 
                            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
                            "content": "2017有30好像", 
                            "likes": 0, 
                            "replyToAuthor": "馨声茉语"
                        }, 
                        {
                            "userName": "货车司机", 
                            "userLink": "https://www.zhihu.com/people/1447c1f7689f053c66e484257e963a95", 
                            "content": "选择组件自定义安装就没那么大吧。", 
                            "likes": 0, 
                            "replyToAuthor": "思想"
                        }
                    ]
                }, 
                {
                    "userName": "zhorv", 
                    "userLink": "https://www.zhihu.com/people/71b958a7591eb428a1eac900d3d03324", 
                    "content": "某垃圾211大学机械专业毕业，公家单位上班，非本专业工种，想过几年出来干，好找工作吗，目前在学前端和c#。", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "虽之夷狄不可弃也", 
                    "userLink": "https://www.zhihu.com/people/d9c15a6a226f74a5c1446564d2b090ba", 
                    "content": "同样机械专业，自学了两年C/ C++，当我拿起一千页的MFC程序设计，希望做一个界面时。才发现，怎么这么难[捂脸]果断放弃，开始学习C#[飙泪笑][飙泪笑][飙泪笑]", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/76826461", 
            "userName": "思想", 
            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
            "upvote": 0, 
            "title": "工况路普的采集与数据处理", 
            "content": "<p>​本文转载在我的微信公众号：<b>古德曼汽车工业。希望关注本专栏的朋友，也能一并关注微信公众号。</b></p><p>原文地址：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483983%26idx%3D1%26sn%3D7e811a86b936b3d3815df4050f851330%26chksm%3Dce80d3dbf9f75acd8d6665a3e32e644aca480eedaae61bf9b872a255bb9912df1e306678cde0%26token%3D958874640%26lang%3Dzh_CN%23rd\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">工况路普的采集与数据处理</a></p><h2><b>前言与背景</b></h2><p>前一段时间【思想】受一位网友委托，对其手中的GSP路谱数据进行动力经济性仿真。该路谱数据来自网友所在的公司，采集的是其出口到某国的轻卡的运行数据。</p><p>本期的内容【思想】就来和大家聊下路谱的采集与数据处理工作，这部分内容非常适合商用车的朋友们。商用车与乘用车不同，商用车的运行路线都相对比较固定，无论是客车还是载货车。所以，商用车领域经常会去采集目标客户运行的工况作为分析的样本数据。</p><h2><b>路谱采集</b></h2><p>这里说的路谱指是车辆在特性地区运行时，车速与时间的关系，请大家不要把它跟疲劳耐久试验的路谱混淆。采集的路谱可以用于动力经济性的仿真，也可以用于底盘测功机，再现实际工况。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-10b2a903cc6b2840d31b21019d69bc1e_b.jpg\" data-size=\"normal\" data-rawwidth=\"430\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb\" width=\"430\" data-original=\"https://pic3.zhimg.com/v2-10b2a903cc6b2840d31b21019d69bc1e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;430&#39; height=&#39;419&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"430\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"430\" data-original=\"https://pic3.zhimg.com/v2-10b2a903cc6b2840d31b21019d69bc1e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-10b2a903cc6b2840d31b21019d69bc1e_b.jpg\"/><figcaption>图片仅供参考，隐去品牌型号，需要的朋友请自行搜索</figcaption></figure><p>谱采集工具是像这样的手持式设备，采集时只需要将放在目标车上的固定位置，就能采集车辆的GPS数据，包含经纬度、海拔，衍生计算得到车速与距离。进行此类路谱数据分析时，由于GPS设备存在一定的误差，一定要结合数据本身与实际的路况特定。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-8ea40ed683049f1551aeeadd6abbc46f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"584\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-8ea40ed683049f1551aeeadd6abbc46f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;584&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"584\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-8ea40ed683049f1551aeeadd6abbc46f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-8ea40ed683049f1551aeeadd6abbc46f_b.jpg\"/></figure><p>在Google Earth中加载GPX文件，既可得到实际的路况信息。图片下方的图标显示的是车速与海拔的变化关系。【思想】总结以往的经验，得到以下这几种可能导致GPS数据异常的路况。</p><p><b>1、隧道</b></p><p>使用过车载导航设备的人一定会有这样的体会，车子一进入隧道就会失去GPS信号。设备将会切换至惯性导航，容易造成数据失真。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a191ab2a627fbeec3af3a28e7094adea_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"634\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-a191ab2a627fbeec3af3a28e7094adea_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;634&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"634\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-a191ab2a627fbeec3af3a28e7094adea_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-a191ab2a627fbeec3af3a28e7094adea_b.jpg\"/></figure><p>图蓝色的是车辆的实际轨迹，红色的是海拔变化轨迹。由于进入了隧道丢失了GPS信号。只有隧道出口与入口的信息，所以海拔曲线就拟合成山势的变化而非隧道内的海拔。从图下方的海拔变化曲线，就出现了一个及其不寻常的海拔变化。</p><p><b>2、盘山公路</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-deb4774e3c65cafce59a4bb7aaa2bbd0_b.jpg\" data-size=\"normal\" data-rawwidth=\"542\" data-rawheight=\"342\" class=\"origin_image zh-lightbox-thumb\" width=\"542\" data-original=\"https://pic1.zhimg.com/v2-deb4774e3c65cafce59a4bb7aaa2bbd0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;542&#39; height=&#39;342&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"542\" data-rawheight=\"342\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"542\" data-original=\"https://pic1.zhimg.com/v2-deb4774e3c65cafce59a4bb7aaa2bbd0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-deb4774e3c65cafce59a4bb7aaa2bbd0_b.jpg\"/><figcaption>盘山路工况</figcaption></figure><p>图中A点与B点在水平精纬度上差别可能并不太大，但是海拔可能变化比较厉害。由于GPS的误差问题，有可能A点就会被认为是B点导致海拔数据失真。</p><p><b>3、桥梁</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-df563e81aa7d149bbbca73e74831e8f1_b.jpg\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"349\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic2.zhimg.com/v2-df563e81aa7d149bbbca73e74831e8f1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;349&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"349\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic2.zhimg.com/v2-df563e81aa7d149bbbca73e74831e8f1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-df563e81aa7d149bbbca73e74831e8f1_b.jpg\"/><figcaption>桥梁工况</figcaption></figure><p>桥梁的问题与盘山公路的问题类似，由于GPS误差问题，导致识别出来的位置偏移桥面导致海拔数据是失真。</p><h2><b>从数据上分析</b></h2><p>GPX格式数据无法通过Google Earth直接读取，需要通过读取工具读取其中的GPS数据。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-b0b210df5ab8929f50233820bd76e529_b.jpg\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"725\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-b0b210df5ab8929f50233820bd76e529_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;725&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"725\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-b0b210df5ab8929f50233820bd76e529_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-b0b210df5ab8929f50233820bd76e529_b.jpg\"/><figcaption>GPX文件导出工具可以通过公众号回复【路谱工具】获得</figcaption></figure><p>在小工具中可以直接看到每个位置的GPS信息，全选可以导出excel格式文件。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f2120721117b4cacd15c9eec5626cccd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"774\" data-rawheight=\"470\" class=\"origin_image zh-lightbox-thumb\" width=\"774\" data-original=\"https://pic2.zhimg.com/v2-f2120721117b4cacd15c9eec5626cccd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;774&#39; height=&#39;470&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"774\" data-rawheight=\"470\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"774\" data-original=\"https://pic2.zhimg.com/v2-f2120721117b4cacd15c9eec5626cccd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f2120721117b4cacd15c9eec5626cccd_b.jpg\"/></figure><p>导出的数据中，可以根据GPS的位置数据与时间计算得到速度与距离，并且可以计算每一个步长的爬坡度有多少。这里的距离需要结合地球半径进行计算方可得到，公式可以自行百度下，这个容易能找到。</p><p>由于GPS数据失真情况的存在，导致如果直接使用导出来的数据做仿真，或者测功机再现工况，必然要出现当前实际车速跟随不上路谱车速的情况。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-4ced875133cbf07718d16c122aa28545_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"830\" data-rawheight=\"438\" class=\"origin_image zh-lightbox-thumb\" width=\"830\" data-original=\"https://pic2.zhimg.com/v2-4ced875133cbf07718d16c122aa28545_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;830&#39; height=&#39;438&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"830\" data-rawheight=\"438\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"830\" data-original=\"https://pic2.zhimg.com/v2-4ced875133cbf07718d16c122aa28545_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-4ced875133cbf07718d16c122aa28545_b.jpg\"/></figure><p>过计算可以得到一个行驶距离与爬坡度的关系图，如果对道路坡度没有概念的朋友可以去看看《公路工程技术标准》(JTGB01_2014)，里面有规定各级公路的最大坡度。曲线中有很多点都超过30%甚至超过了50%，显然是异常数据。根据上面介绍几种导致GSP数据失真的情况分析并修正。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-694bec068efc2fcac669276f0b429eb5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"801\" data-rawheight=\"409\" class=\"origin_image zh-lightbox-thumb\" width=\"801\" data-original=\"https://pic2.zhimg.com/v2-694bec068efc2fcac669276f0b429eb5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;801&#39; height=&#39;409&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"801\" data-rawheight=\"409\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"801\" data-original=\"https://pic2.zhimg.com/v2-694bec068efc2fcac669276f0b429eb5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-694bec068efc2fcac669276f0b429eb5_b.jpg\"/></figure><p>通常也可以在Matlab中设计一套滤波算法并结合实际路况的分析，修正错误的数据。这样得到的爬坡度是不是就美丽很多了呢？对于车速的处理就需要对加速度进行滤波，这里说的加速度包含了加速度与减速度。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-eb3070dd9125d9234af819b3ad3f9eba_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"807\" data-rawheight=\"546\" class=\"origin_image zh-lightbox-thumb\" width=\"807\" data-original=\"https://pic3.zhimg.com/v2-eb3070dd9125d9234af819b3ad3f9eba_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;807&#39; height=&#39;546&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"807\" data-rawheight=\"546\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"807\" data-original=\"https://pic3.zhimg.com/v2-eb3070dd9125d9234af819b3ad3f9eba_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-eb3070dd9125d9234af819b3ad3f9eba_b.jpg\"/></figure><h2><b>档位数据的处理</b></h2><p>到目前为止，GPS采集的数据已经基本处理完，也基本能够满足经济性的分析需求。但是如果还需要做到更精确的分析，还需要获得该段数据的实际档位信息。如果是自动变速箱可以直接通过CAN总线获得档位信息，如果是手动档就需要采集发动机转速与动力链参数反算得到档位数据。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-f9ae9d3d6fa2f75dfcb03413e0d27d72_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"444\" data-rawheight=\"91\" class=\"origin_image zh-lightbox-thumb\" width=\"444\" data-original=\"https://pic3.zhimg.com/v2-f9ae9d3d6fa2f75dfcb03413e0d27d72_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;444&#39; height=&#39;91&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"444\" data-rawheight=\"91\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"444\" data-original=\"https://pic3.zhimg.com/v2-f9ae9d3d6fa2f75dfcb03413e0d27d72_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-f9ae9d3d6fa2f75dfcb03413e0d27d72_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-57440d7ff547f4b87c5ee835ac26d88b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"267\" data-rawheight=\"193\" class=\"content_image\" width=\"267\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;267&#39; height=&#39;193&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"267\" data-rawheight=\"193\" class=\"content_image lazy\" width=\"267\" data-actualsrc=\"https://pic4.zhimg.com/v2-57440d7ff547f4b87c5ee835ac26d88b_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-af0a910cab02b3c68f4d06387fad5f5e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"478\" class=\"origin_image zh-lightbox-thumb\" width=\"728\" data-original=\"https://pic3.zhimg.com/v2-af0a910cab02b3c68f4d06387fad5f5e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;728&#39; height=&#39;478&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"478\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"728\" data-original=\"https://pic3.zhimg.com/v2-af0a910cab02b3c68f4d06387fad5f5e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-af0a910cab02b3c68f4d06387fad5f5e_b.jpg\"/></figure><p>对根据公式计算得到的数据还是需要经过处理才可以使用，比如：需要对低车速的数据做滤波、排除空挡滑行等。这些工况的数据都需要过滤。</p><h2><b>总结</b></h2><p>本期内容，【思想】介绍了路谱的采集与数据处理。文中多次提到使用matlab做滤波，这里用到的滤波包含了：高通、低通、均值、中值、卡尔曼，需要根据自己实际的工程对滤波算法做出调整。如果你还想对本期内容有更深入的了解，可以转发本文到朋友圈后与【思想】共同交流。</p><p><b>推荐阅读</b></p><p><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483929%26idx%3D1%26sn%3D46057676f89ab8771af0d0e8202d7ca7%26chksm%3Dce80d38df9f75a9b55a1d823adb529e97018b24a66ec50dc2d793486fb9598e531172dded47e%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">1、AVL-CRUISE纯电动仿真策略提高教程</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483947%26idx%3D1%26sn%3D9c52b613947d5bd2644d02423f1997e3%26chksm%3Dce80d3bff9f75aa908be418383a2f6224f47e5a839828d3b6d472a7099cb1f5c8a730d4665e5%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2、混合动力节油的秘密-发动机万有特性</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483913%26idx%3D1%26sn%3D42ee206ecef5792a04f66f35dec3e61a%26chksm%3Dce80d39df9f75a8ba994d9cfbdf22f5790536b0d29ccda1cc5cb3c2821ce9e99fdc5652d27ac%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">3、AVL-CRUISE纯电动模型仿真策略</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483838%26idx%3D1%26sn%3Dc4754b7a764a00c5a84d0e053515ddc7%26chksm%3Dce80d02af9f7593cd9df3639d3aca8698056ba415fc03d170e4f3907980df4e7b1e037a4b148%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">4、燃料电池车(FCHEV)动力经济性建模与仿真</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483838%26idx%3D2%26sn%3D3b34c19ed394560deb40202588266123%26chksm%3Dce80d02af9f7593cdecb0ec752e246f3223f8f13b6fe811bbd949f02f8dd386eb44fcc1d690c%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">5、CRUISE与Isight联合仿真优化</a><br/></p><p><br/> </p>", 
            "topic": [
                {
                    "tag": "仿真模拟", 
                    "tagLink": "https://api.zhihu.com/topics/19938310"
                }, 
                {
                    "tag": "滤波算法", 
                    "tagLink": "https://api.zhihu.com/topics/19592200"
                }, 
                {
                    "tag": "经济性", 
                    "tagLink": "https://api.zhihu.com/topics/20174827"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/75598796", 
            "userName": "思想", 
            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
            "upvote": 8, 
            "title": "混合动力节油的秘密-发动机万有特性", 
            "content": "<p>本文转载在我的微信公众号：<b>古德曼汽车工业</b>。公众号文章都会知识星球、知乎进行转载，请有兴趣的朋友可以关注我的微信公众号</p><p>原文地址：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26tempkey%3DMTAxOV9mSlhlOGhLNU9ORUVoTThqY09OcGlYOUN3ZkNWbHluZFVGYURxT3I5S2wxeVc1M014dTU3M3JCOWJ4Y0F2ZGNrQ1lJUUIwSl9zWm5LMkxwM1NfQjF0LV9rWEg3UEtPY0FEcVVEM053VWxGU3pHWkVKWGg3NlhBOEk5Vjd5TmtwUHRNNDZkN0Rfb0d2Uld2cHI1Y3pUTlpMNHBHZlFBSmRTZlNGMjJ3fn4%253D%26chksm%3D4e80d3bd79f75aab899eb82b2fabb8ad18a2c7fbae1e778b90238a0a6daa43e296bd1b177a60%23rd\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">混合动力节油的秘密-发动机万有特性</a>​<b>​</b>​</p><h2>前言</h2><p>近年随混合动力汽车的普及，不少朋友常常问为什么混合动力会节油。把油转换成电再通过电驱动汽车，多增加一次转换不就会多一次效率损失吗？本公众号的读者大部分是汽车工程师或者汽车相关专业的学生，本期【思想】从发动机万有特性来看混合动力为什么节油。内容可能比较枯燥，但是看完绝对会有收获！在此之前先要介绍什么是发动机万有特性？</p><h2>什么是万有特性</h2><p>发动机万有特性数据反应了发动机在不同转速不同扭矩下的油耗情况，发动机厂可以通过调整点火提前角、喷油时机、喷油量等参数调整数据，来达到动力、排放、经济性的统一与妥协。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-9501328f284e0ce126ee2c88494635cf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"583\" data-rawheight=\"323\" class=\"origin_image zh-lightbox-thumb\" width=\"583\" data-original=\"https://pic4.zhimg.com/v2-9501328f284e0ce126ee2c88494635cf_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;583&#39; height=&#39;323&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"583\" data-rawheight=\"323\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"583\" data-original=\"https://pic4.zhimg.com/v2-9501328f284e0ce126ee2c88494635cf_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-9501328f284e0ce126ee2c88494635cf_b.jpg\"/></figure><p>发动机部门提供的数据包含转速、扭矩、平均有效压力、比油耗、燃油消耗量、功率。有时候数据不会给这么全，可以自己通过换算关系计算得到完整数据。扭矩/平均有效压力反应的是负荷，在万有特性图上为y轴，他们的换算关系为：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b9f35c608fb42335c0079c6a86237760_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"218\" data-rawheight=\"77\" class=\"content_image\" width=\"218\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;218&#39; height=&#39;77&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"218\" data-rawheight=\"77\" class=\"content_image lazy\" width=\"218\" data-actualsrc=\"https://pic1.zhimg.com/v2-b9f35c608fb42335c0079c6a86237760_b.jpg\"/></figure><p>BMEP：平均有效压力，单位MPa；</p><p>Pe：功率，单位kw；</p><p>V：发动机排量，单位L；</p><p>n：发动机转速，单位rpm；</p><p>比油耗/燃油消耗量反应的是经济性，在万有特性图上为z轴，他们的换算为：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-d376329c15a7e57c4d1fd1259fdcb525_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"195\" data-rawheight=\"53\" class=\"content_image\" width=\"195\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;195&#39; height=&#39;53&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"195\" data-rawheight=\"53\" class=\"content_image lazy\" width=\"195\" data-actualsrc=\"https://pic2.zhimg.com/v2-d376329c15a7e57c4d1fd1259fdcb525_b.png\"/></figure><p>B：每小时燃料消耗量，单位kg/h；</p><p>Be：比油耗，单位g/kw·h；</p><p>P：功率，单位kw；</p><p>可以选用Matlab、Uniplot、Orgin绘制万有特性曲线</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-e7ca906b02269f37cc4acc8a48200b7f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"572\" data-rawheight=\"643\" class=\"origin_image zh-lightbox-thumb\" width=\"572\" data-original=\"https://pic4.zhimg.com/v2-e7ca906b02269f37cc4acc8a48200b7f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;572&#39; height=&#39;643&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"572\" data-rawheight=\"643\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"572\" data-original=\"https://pic4.zhimg.com/v2-e7ca906b02269f37cc4acc8a48200b7f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-e7ca906b02269f37cc4acc8a48200b7f_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>以上是使用Uniplot绘制的万有特性曲线，图中X轴为转速（rpm），Y轴为扭矩（NM），Z轴（等高线）为比油耗（g/kwh），蓝色的曲线为功率线。比油耗反应的是每克燃料转换多少输出能量，反应的是燃料的转化效率，数值越大效率越差。越靠近经济区等燃油消耗线变化就越平缓，越远离经济区变化越剧烈。了解完发动机万有特性后，还需要弄清楚发动机万有特性如何影响传统燃油车的动力经济性的。</p><h2>传统燃油车发动机工况分析</h2><p>与船用、发电机用的发动机不同，根据汽车理论的知识，汽车发动机的转速与整车的车速耦合，扭矩与整车的阻力耦合，发动机功率与整车需求功率耦合。所以车辆正常行驶过程中发动机的工况点会散布在万有特性图中。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-49234eacd1479b401a7ebe6876f3428c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"507\" data-rawheight=\"546\" class=\"origin_image zh-lightbox-thumb\" width=\"507\" data-original=\"https://pic1.zhimg.com/v2-49234eacd1479b401a7ebe6876f3428c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;507&#39; height=&#39;546&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"507\" data-rawheight=\"546\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"507\" data-original=\"https://pic1.zhimg.com/v2-49234eacd1479b401a7ebe6876f3428c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-49234eacd1479b401a7ebe6876f3428c_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>在前面的万有特性曲线中增加两条白线分别为四档、五档的阻力线（示意！非实际阻力！），和A、B、C、D四个工况点。举一个例子解释阻力线，例如：A点在五档的阻力线上，表示该车辆如果要在5档发动机转速为3000，发动机输出的扭矩不能够小于A点对应的扭矩值。那么ABCD四个点之间又有什么关系呢？</p><p>A与B：功率相同，扭矩转速不同，由于功率相同可以认为，在B点从四档升五档后发动机工况点迁移至A；</p><p>B与C：转速相同，但是扭矩、功率均不同，且B点时变速箱只能工作在四档；</p><p>C与D：转速相同，比油耗相同，功率扭矩均不同。注意这里是比油耗(g/kw·h)相同，由于D点的功率比C点大，所以燃油消耗量（kg/h）上D一定会大于C点。</p><p>严格上来说不能说ABCD四个点哪个更好哪个更差，只能说ABCD四点是发动机对四种不同工况所做出的响应。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-15eda2052078de73a97d74f8e34bb7ed_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"418\" data-rawheight=\"418\" class=\"content_image\" width=\"418\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;418&#39; height=&#39;418&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"418\" data-rawheight=\"418\" class=\"content_image lazy\" width=\"418\" data-actualsrc=\"https://pic2.zhimg.com/v2-15eda2052078de73a97d74f8e34bb7ed_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>上面图片运行NEDC循环工况后，统计的发动机工作点。可以看到发动机大部分都工作在低负荷区，这个区间的比油耗大、效率低，尤其是汽油机表现更为突出。针对传统燃油车的劣势混合动力汽车上发动机工作点又是如何控制的呢？</p><h2>混合动力汽车发动机工况分析</h2><p>混合动力汽车中，由于系统中加入了电机，使得发动机的控制变得非常灵活。对于整个系统来说，只要发动机提高的效率大于机械能与电能转化的效率损失就能够达到节油的效果</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-e102232eedbbda27dca48d672ddd0287_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"431\" data-rawheight=\"485\" class=\"origin_image zh-lightbox-thumb\" width=\"431\" data-original=\"https://pic4.zhimg.com/v2-e102232eedbbda27dca48d672ddd0287_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;431&#39; height=&#39;485&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"431\" data-rawheight=\"485\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"431\" data-original=\"https://pic4.zhimg.com/v2-e102232eedbbda27dca48d672ddd0287_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-e102232eedbbda27dca48d672ddd0287_b.jpg\"/></figure><p>正如上面介绍的比油耗（g/kwh）反应的是发动机从化学能转换为机械能的效率，那么就能从万有特性中找到一条燃油最优工作曲线（Optimal Operating Line）。图上有两个工况点A与B，由于有了电机的参与。当整车需求扭矩在A点时，可以让发动机工作在C点，A到C之间的扭矩由电机提供；当需求扭矩在B点时，也让发动机工作在C点，B到C之间多余的扭矩利用电机转化为电能。由于屏蔽了发动机低负荷区，经济区占比较大转速范围的阿特金森循环发动机很受混合动力汽车的青睐。当然混合动力的构型也决定了发动机的控制方式，上图的让发动机处于最优工作曲线适用于并联、混联、功率平衡策略的增程式构型。以下介绍另外两种工况分布：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-9a7636c9b692716cd9bdd3a61c188d35_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"597\" data-rawheight=\"545\" class=\"origin_image zh-lightbox-thumb\" width=\"597\" data-original=\"https://pic2.zhimg.com/v2-9a7636c9b692716cd9bdd3a61c188d35_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;597&#39; height=&#39;545&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"597\" data-rawheight=\"545\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"597\" data-original=\"https://pic2.zhimg.com/v2-9a7636c9b692716cd9bdd3a61c188d35_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-9a7636c9b692716cd9bdd3a61c188d35_b.jpg\"/></figure><p>上图为功率分流构型的发动机工况点。发动机固定转速，根据需求的不同控制输出功率。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-7ec7cec3e97844aebe3b9ef62e09f90b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"537\" data-rawheight=\"582\" class=\"origin_image zh-lightbox-thumb\" width=\"537\" data-original=\"https://pic4.zhimg.com/v2-7ec7cec3e97844aebe3b9ef62e09f90b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;537&#39; height=&#39;582&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"537\" data-rawheight=\"582\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"537\" data-original=\"https://pic4.zhimg.com/v2-7ec7cec3e97844aebe3b9ef62e09f90b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-7ec7cec3e97844aebe3b9ef62e09f90b_b.jpg\"/></figure><p>还有一种就是发动机定点工作，通常用于单点或多点工况的增程式构型上，根据整车功率在ABCD四个工作点进行转换。</p><h2>总结</h2><p>通过以上内容可以总结得到：混合动力节油的“秘密”是通过负荷转嫁的方式，提高了发动机的效率，避免发动机工作在万有特性曲线中经济性恶劣的区域。【思想】希望本期内容可以帮助大家读懂发动机万有特性，并理解混合动力汽车发动机的控制思路。</p>", 
            "topic": [
                {
                    "tag": "发动机", 
                    "tagLink": "https://api.zhihu.com/topics/19577780"
                }, 
                {
                    "tag": "混合动力汽车", 
                    "tagLink": "https://api.zhihu.com/topics/19910009"
                }, 
                {
                    "tag": "新能源汽车", 
                    "tagLink": "https://api.zhihu.com/topics/19731651"
                }
            ], 
            "comments": [
                {
                    "userName": "今夕何夕", 
                    "userLink": "https://www.zhihu.com/people/dcca75284a315987d7cc64dbe8396d36", 
                    "content": "虽然看不懂，但是点赞就好了", 
                    "likes": 1, 
                    "childComments": [
                        {
                            "userName": "思想", 
                            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
                            "content": "谢谢，可能我写的不好，下次改进", 
                            "likes": 0, 
                            "replyToAuthor": "今夕何夕"
                        }
                    ]
                }, 
                {
                    "userName": "今夕何夕", 
                    "userLink": "https://www.zhihu.com/people/dcca75284a315987d7cc64dbe8396d36", 
                    "content": "总而言之一个原则，削峰填谷，尽量保持内燃机在最高效率运行", 
                    "likes": 1, 
                    "childComments": []
                }, 
                {
                    "userName": "以知补知", 
                    "userLink": "https://www.zhihu.com/people/a88f6042816ba7bf434e75c0fa3b39e4", 
                    "content": "红色，绿色区域代表什么，燃油经济性跟比油耗有啥关系", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "思想", 
                            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
                            "content": "绿色的比油耗低，红色高，比油耗是功率与油耗的比，反响发动机的燃油效率", 
                            "likes": 0, 
                            "replyToAuthor": "以知补知"
                        }, 
                        {
                            "userName": "以知补知", 
                            "userLink": "https://www.zhihu.com/people/a88f6042816ba7bf434e75c0fa3b39e4", 
                            "content": "谢谢", 
                            "likes": 0, 
                            "replyToAuthor": "思想"
                        }
                    ]
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/74923404", 
            "userName": "思想", 
            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
            "upvote": 4, 
            "title": "Excel与DBC文件的互相转换", 
            "content": "<p>本文转载在我的微信公众号：<b>古德曼汽车工业</b>。公众号文章都会知识星球、知乎进行转载，请有兴趣的朋友可以关注我的微信公众号</p><p>原文地址：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483799%26idx%3D1%26sn%3Dc8b1c54f5529e1a04fcccf9e88b2ee4b%26chksm%3Dce80d003f9f759153796e9027bccf6d431093df756dc7538447d8ca4273bd992163639dc3ada%26token%3D79692440%26lang%3Dzh_CN%23rd\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Excel与DBC文件的互相转换</a>​<b>​</b></p><p><b>初衷</b></p><p>开发这款软件的初衷，为了想减轻电器工程师的工作负担。主机厂电器工程师与各个供应商定了CAN通讯协议后，就需要使用CANoe提供的CANdb++ Editor创建dbc文件。这是一个繁琐的工作，一不小心就有可能输入错误，给后面的调试分析造成困扰。</p><p>本工具由【思想】开发，提供了DBC转表格，以及表格转DBC的功能。提供了个简单的导出导入模板，【思想】也可以根据您企业或者项目的需求定制模板，这样对接协议直接按模板来，就能进一步的节省工作时间以及提高工作效率。</p><p><b>软件功能的视频演示请点击原文地址</b></p><p><b>软件功能介绍</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-ea92585d0bac32a204fb86307fbfe9ee_b.jpg\" data-rawwidth=\"408\" data-rawheight=\"248\" data-size=\"normal\" data-caption=\"\" class=\"content_image\" width=\"408\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;408&#39; height=&#39;248&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"408\" data-rawheight=\"248\" data-size=\"normal\" data-caption=\"\" class=\"content_image lazy\" width=\"408\" data-actualsrc=\"https://pic3.zhimg.com/v2-ea92585d0bac32a204fb86307fbfe9ee_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>DBC转换工具提供，DBC与Excel文件的导入、DBC与Excel文件导出功能</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-6b20a56be6779534cd137e0888db9de1_b.jpg\" data-rawwidth=\"1052\" data-rawheight=\"491\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1052\" data-original=\"https://pic2.zhimg.com/v2-6b20a56be6779534cd137e0888db9de1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1052&#39; height=&#39;491&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1052\" data-rawheight=\"491\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1052\" data-original=\"https://pic2.zhimg.com/v2-6b20a56be6779534cd137e0888db9de1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-6b20a56be6779534cd137e0888db9de1_b.jpg\"/></figure><p>选择文件加载后可在软件界面看到以表格显示的协议内容，可以一次性加载多个文件，在左侧选项卡进行文件间的切换</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-b696e99c3d0fc13cee153fbd22839aaa_b.jpg\" data-rawwidth=\"1044\" data-rawheight=\"239\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1044\" data-original=\"https://pic3.zhimg.com/v2-b696e99c3d0fc13cee153fbd22839aaa_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1044&#39; height=&#39;239&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1044\" data-rawheight=\"239\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1044\" data-original=\"https://pic3.zhimg.com/v2-b696e99c3d0fc13cee153fbd22839aaa_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-b696e99c3d0fc13cee153fbd22839aaa_b.jpg\"/></figure><p>右键选择报文之后，可以对该条报文进行删除。删除后再次保存dbc后，就能现实对<b>dbc文件的分割工作</b>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-ae66e7142471b8ee043decbe9bb57520_b.jpg\" data-rawwidth=\"1080\" data-rawheight=\"700\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-ae66e7142471b8ee043decbe9bb57520_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;700&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1080\" data-rawheight=\"700\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-ae66e7142471b8ee043decbe9bb57520_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-ae66e7142471b8ee043decbe9bb57520_b.jpg\"/></figure><p>加载多个文件后导出的EXCEL表格，以工作簿的形式区分不同的文件。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-11d12d8df0432d2ada2a43e4feaed728_b.jpg\" data-rawwidth=\"1080\" data-rawheight=\"617\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-11d12d8df0432d2ada2a43e4feaed728_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;617&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1080\" data-rawheight=\"617\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-11d12d8df0432d2ada2a43e4feaed728_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-11d12d8df0432d2ada2a43e4feaed728_b.jpg\"/></figure><p>选择导出DBC文件后需要选取保存文件夹，用于保存生成的DBC文件。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-c22e0bc5e26dd6d40c2248302d57df2a_b.jpg\" data-rawwidth=\"1080\" data-rawheight=\"578\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-c22e0bc5e26dd6d40c2248302d57df2a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;578&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1080\" data-rawheight=\"578\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-c22e0bc5e26dd6d40c2248302d57df2a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-c22e0bc5e26dd6d40c2248302d57df2a_b.jpg\"/></figure><p>为了方便导入Excel的编辑。提供了一个导出模板的功能【操作】-【获取导入模板】。</p><p><b>获取方式：请关注微信公众号【古德曼汽车工业】</b></p>", 
            "topic": [], 
            "comments": [
                {
                    "userName": "知乎用户", 
                    "userLink": "https://www.zhihu.com/people/0", 
                    "content": "<p>15年的时候做过Excel转dbc，只能用固定的模板，不支持建节点，报文周期等……</p>", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "思想", 
                            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
                            "content": "这些需求可以定制啊，不是问题", 
                            "likes": 0, 
                            "replyToAuthor": "知乎用户"
                        }
                    ]
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/74609765", 
            "userName": "思想", 
            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
            "upvote": 5, 
            "title": "AVL-CRUISE纯电动仿真策略提高教程", 
            "content": "<p>本文转载在我的微信公众号：<b>古德曼汽车工业</b>。公众号文章都会知识星球、知乎进行转载，请有兴趣的朋友可以关注我的微信公众号</p><p>原文地址：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483929%26idx%3D1%26sn%3D46057676f89ab8771af0d0e8202d7ca7%26chksm%3Dce80d38df9f75a9b55a1d823adb529e97018b24a66ec50dc2d793486fb9598e531172dded47e%26token%3D1064448466%26lang%3Dzh_CN%23rd\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">AVL-CRUISE纯电动仿真策略提高教程</a>​</p><h2>前言</h2><p>上期内容《<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483913%26idx%3D1%26sn%3D42ee206ecef5792a04f66f35dec3e61a%26chksm%3Dce80d39df9f75a8ba994d9cfbdf22f5790536b0d29ccda1cc5cb3c2821ce9e99fdc5652d27ac%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">AVL-CRUISE纯电动模型仿真策略</a>》发布后，就有做仿真的同行朋友反应那个控制策略太简单了。【思想】开设这个订阅号的初衷就是为了把基础知识、技能介绍清楚，帮助想学习的朋友尽快入门，能够独立完成新能源控制策略的建模。</p><h2>AVL推荐模型架构</h2><p>上一期《<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483913%26idx%3D1%26sn%3D42ee206ecef5792a04f66f35dec3e61a%26chksm%3Dce80d39df9f75a8ba994d9cfbdf22f5790536b0d29ccda1cc5cb3c2821ce9e99fdc5652d27ac%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">AVL-CRUISE纯电动模型仿真策略</a>》文章分析了AVL-CRUISE纯电动汽车仿真控制模型。控制逻辑本身没有什么问题，但是逻辑架构却存在不小问题。主要问题就是没有对逻辑进行划分，所有的逻辑都堆在ROOT层。有代码编写经验的朋友可以想象下，这就好比把所有的代码都写到main函数下。虽不影响策略的执行效果，但降低了逻辑策略的可读性，也对其他工程师的理解与维护照成麻烦。本期的内容将介绍一种AVL公司推荐的Simulink模型架构，帮助大家将模型进行合理的分层。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-848ebd3be216e8bcbdb4cdd68167f4b1_b.jpg\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"578\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-848ebd3be216e8bcbdb4cdd68167f4b1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;578&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"578\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-848ebd3be216e8bcbdb4cdd68167f4b1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-848ebd3be216e8bcbdb4cdd68167f4b1_b.jpg\"/><figcaption>分层建模效果</figcaption></figure><p>上图就是根据推荐的架构对上期的控制策略进行划分的结果。下面先来介绍下具体的功能分层。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-846846834c6b20ce554f0edd684e5380_b.jpg\" data-size=\"normal\" data-rawwidth=\"859\" data-rawheight=\"324\" class=\"origin_image zh-lightbox-thumb\" width=\"859\" data-original=\"https://pic1.zhimg.com/v2-846846834c6b20ce554f0edd684e5380_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;859&#39; height=&#39;324&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"859\" data-rawheight=\"324\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"859\" data-original=\"https://pic1.zhimg.com/v2-846846834c6b20ce554f0edd684e5380_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-846846834c6b20ce554f0edd684e5380_b.jpg\"/><figcaption>流程图</figcaption></figure><p><b>·信号输入检查</b></p><p>对输入Simulink的信号进行检查，例如：超出范围，无穷大；</p><p>统一所有输入信号的数据类型，全部转换为double；</p><p><b>·总线信号创建</b></p><p>通过Bus Creator将输入的信号组织成总线信号，并对每一个信号命名，后续调用的时候只需要通过Bus Selector对信号进行选取；</p><p><b>·通用计算模块</b></p><p>把一些可能会被后面模块用到的中间变量集中在这里计算，避免后面模块重复计算，造成逻辑的冗余；</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-9533f0416b1a5cadc132a5523eb8d184_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"869\" data-rawheight=\"398\" class=\"origin_image zh-lightbox-thumb\" width=\"869\" data-original=\"https://pic1.zhimg.com/v2-9533f0416b1a5cadc132a5523eb8d184_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;869&#39; height=&#39;398&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"869\" data-rawheight=\"398\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"869\" data-original=\"https://pic1.zhimg.com/v2-9533f0416b1a5cadc132a5523eb8d184_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-9533f0416b1a5cadc132a5523eb8d184_b.jpg\"/></figure><p><b>·模式设计</b></p><p>仿真策略需要对每一个工况下动力总成中各部件的输出扭矩进行分配计算，也就是我们常说的能量管理策略。如上图为某混动车型的模式划分，有发动机直驱动、电机直驱、并联驱动等。具体每一个模式需要输出多少扭矩都在【模式设计】中进行计算与分配；</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-b07a5fe0520d4bee8d15f77dca60aacd_b.jpg\" data-size=\"normal\" data-rawwidth=\"718\" data-rawheight=\"353\" class=\"origin_image zh-lightbox-thumb\" width=\"718\" data-original=\"https://pic2.zhimg.com/v2-b07a5fe0520d4bee8d15f77dca60aacd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;718&#39; height=&#39;353&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"718\" data-rawheight=\"353\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"718\" data-original=\"https://pic2.zhimg.com/v2-b07a5fe0520d4bee8d15f77dca60aacd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-b07a5fe0520d4bee8d15f77dca60aacd_b.jpg\"/><figcaption>Stateflow</figcaption></figure><p><b>·状态切换</b></p><p>根据输入信号判断当前车辆所处的模式，例如：车速与制动踏板不为0，这两进入制动模式。在【状态切换】中，除了使用常见的Simulink的逻辑计算模块外还会使用到Stateflow插件。通过在Stateflow中创建不同的状态框，用连线的方式设定各模式状态切换的条件。从不同的模式中选择对应模式的控制信号进行输出。</p><p><b>·信号输出检查</b></p><p>对即将输出的控制信号多检查，过滤掉异常值的部分。例如，需求扭矩大于电机最大能力的，负荷率大于1的等等。</p><p>从模块的划分就能看出，主要核心就是【模式计算】与【状态切换】，这部分策略的开发需要花费大量的时间进行设计与调试，也是整个建模工作的重点与难点。</p><h2>根据实际需求调整架构</h2><p>AVL推荐的这个Simulink编程架构，虽然不一定是最好，但是非常适合初学者。实际应用中还可以对这个架构进行调整。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b74237fc100fa8568b927ddb2614c978_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"688\" data-rawheight=\"498\" class=\"origin_image zh-lightbox-thumb\" width=\"688\" data-original=\"https://pic1.zhimg.com/v2-b74237fc100fa8568b927ddb2614c978_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;688&#39; height=&#39;498&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"688\" data-rawheight=\"498\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"688\" data-original=\"https://pic1.zhimg.com/v2-b74237fc100fa8568b927ddb2614c978_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b74237fc100fa8568b927ddb2614c978_b.jpg\"/></figure><p>由于本例的输入信号比较少，数据复杂度也比较低，多分出来一层没有太大意义。所以将【信号检查】与【总线创建】这两个部分合并。在【通用计算】子系统中，对制动扭矩与制动器系数进行计算。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-39e115760830876f63b597aaa2eb60ec_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"814\" data-rawheight=\"414\" class=\"origin_image zh-lightbox-thumb\" width=\"814\" data-original=\"https://pic1.zhimg.com/v2-39e115760830876f63b597aaa2eb60ec_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;814&#39; height=&#39;414&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"814\" data-rawheight=\"414\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"814\" data-original=\"https://pic1.zhimg.com/v2-39e115760830876f63b597aaa2eb60ec_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-39e115760830876f63b597aaa2eb60ec_b.jpg\"/></figure><p>将原有的控制策略拆分成为【驱动模式】与【制动模式】，最后将结果汇聚成为总线传递到下一个子系统。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-86904b9c4ecb4200c698d306b9ad13c0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"789\" data-rawheight=\"377\" class=\"origin_image zh-lightbox-thumb\" width=\"789\" data-original=\"https://pic1.zhimg.com/v2-86904b9c4ecb4200c698d306b9ad13c0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;789&#39; height=&#39;377&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"789\" data-rawheight=\"377\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"789\" data-original=\"https://pic1.zhimg.com/v2-86904b9c4ecb4200c698d306b9ad13c0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-86904b9c4ecb4200c698d306b9ad13c0_b.jpg\"/></figure><h2>总结</h2><p>本期使用的控制逻辑与上一期一致，所以不多做控制了逻辑的介绍。重点介绍如何对模型进行分层，提高模型的可读与可维护性，也方便模型的调试工作。当然本期也是为后面【并联】与【增程式】控制策略的介绍做知识储备。</p><p><b>相关AVL-CRUISE专题内容：</b></p><p>1、<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483838%26idx%3D3%26sn%3Dfddfcc8020466a15933284ba38a69915%26chksm%3Dce80d02af9f7593c65a568b103bbd1fc7fdc7fa912b40e29d31bce3e23c7c9b56ca8b4f0043d%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CRUISE与Simulink联合仿真介绍</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483913%26idx%3D1%26sn%3D42ee206ecef5792a04f66f35dec3e61a%26chksm%3Dce80d39df9f75a8ba994d9cfbdf22f5790536b0d29ccda1cc5cb3c2821ce9e99fdc5652d27ac%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2、AVL-CRUISE纯电动模型仿真策略</a></p>", 
            "topic": [
                {
                    "tag": "计算机仿真", 
                    "tagLink": "https://api.zhihu.com/topics/19623604"
                }, 
                {
                    "tag": "经济性", 
                    "tagLink": "https://api.zhihu.com/topics/20174827"
                }, 
                {
                    "tag": "新能源", 
                    "tagLink": "https://api.zhihu.com/topics/19561556"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/73602880", 
            "userName": "思想", 
            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
            "upvote": 7, 
            "title": "AVL-CRUISE纯电动模型仿真策略​", 
            "content": "<p>本文转载在我的微信公众号：<b>古德曼汽车工业</b>。公众号文章都会知识星球、知乎进行转载，请有兴趣的朋友可以关注我的微信公众号</p><p>原文地址：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483913%26idx%3D1%26sn%3D42ee206ecef5792a04f66f35dec3e61a%26chksm%3Dce80d39df9f75a8ba994d9cfbdf22f5790536b0d29ccda1cc5cb3c2821ce9e99fdc5652d27ac%26token%3D795507278%26lang%3Dzh_CN%23rd\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">AVL-CRUISE纯电动模型仿真策略</a>​</p><p>本期内容：CRUISE纯电动汽车仿真控制策略分析、仿真策略与实际控制策略的区别。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-b8e9d7d85b8e9aa86b3e96a0abe2380b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"644\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic4.zhimg.com/v2-b8e9d7d85b8e9aa86b3e96a0abe2380b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;644&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"644\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic4.zhimg.com/v2-b8e9d7d85b8e9aa86b3e96a0abe2380b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-b8e9d7d85b8e9aa86b3e96a0abe2380b_b.jpg\"/></figure><p>相信很多人对这个模型都比较熟悉，如果你没有这个模型，联系【思想】就可以免费获得！接下来大致介绍下整车模型。纯电动构型为电机直驱动，电机通过主减速器-差速器-制动器，将动力传递至轮边。驱动状态下，动力电池通过inverter向电机提供电能；制动回收时，电机通过inverter向电池充电。模型还带上了BMS模块，用于限制母线电流，另外还有低压电附件单元。本文的重点放在这个模型的能量回收策略如何实现，CRUISE建模部分就不做深入介绍。</p><h2><b>联合仿真及控制信号介绍</b></h2><p>例子中使用的是Matlab DLL的联合仿真方式，该方法需要将Simulink模型编译成dll文件，通过Matlab DLL模块加载控制策略。关于联合仿真总结请大家再次翻阅下前面的文章《<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483838%26idx%3D3%26sn%3Dfddfcc8020466a15933284ba38a69915%26chksm%3Dce80d02af9f7593c65a568b103bbd1fc7fdc7fa912b40e29d31bce3e23c7c9b56ca8b4f0043d%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CRUISE与Simulink联合仿真介绍</a>》。CRUISE中数据控制总线不会直接在模型中显示出来，为了让大家更清楚的了解控制信号如何连接，总结为下表：</p><p>输入（CRUISE各模块-&gt;Simulink）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-0fa9cd5ea41b8eae9e0e81839dec0234_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"630\" data-rawheight=\"378\" class=\"origin_image zh-lightbox-thumb\" width=\"630\" data-original=\"https://pic1.zhimg.com/v2-0fa9cd5ea41b8eae9e0e81839dec0234_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;630&#39; height=&#39;378&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"630\" data-rawheight=\"378\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"630\" data-original=\"https://pic1.zhimg.com/v2-0fa9cd5ea41b8eae9e0e81839dec0234_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-0fa9cd5ea41b8eae9e0e81839dec0234_b.jpg\"/></figure><p>输出（Smulink-&gt;CRUISE各模块）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b217c7726d34aeec56bb758f53efba50_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"639\" data-rawheight=\"138\" class=\"origin_image zh-lightbox-thumb\" width=\"639\" data-original=\"https://pic1.zhimg.com/v2-b217c7726d34aeec56bb758f53efba50_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;639&#39; height=&#39;138&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"639\" data-rawheight=\"138\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"639\" data-original=\"https://pic1.zhimg.com/v2-b217c7726d34aeec56bb758f53efba50_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b217c7726d34aeec56bb758f53efba50_b.jpg\"/></figure><p>在介绍Simulink策略前，先看下整个控制策略的流程图</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-b8d30f832743e7ccf69614b034c23ef7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"666\" data-rawheight=\"504\" class=\"origin_image zh-lightbox-thumb\" width=\"666\" data-original=\"https://pic4.zhimg.com/v2-b8d30f832743e7ccf69614b034c23ef7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;666&#39; height=&#39;504&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"666\" data-rawheight=\"504\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"666\" data-original=\"https://pic4.zhimg.com/v2-b8d30f832743e7ccf69614b034c23ef7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-b8d30f832743e7ccf69614b034c23ef7_b.jpg\"/></figure><p>本次使用的Simulink模型不是很规范比较混乱，使用流程图可以帮助对Simulink不熟的朋友更快的理解策略</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-c2e1a9fa59d6c2f71566957e6d5e936a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"551\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic3.zhimg.com/v2-c2e1a9fa59d6c2f71566957e6d5e936a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;551&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"551\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic3.zhimg.com/v2-c2e1a9fa59d6c2f71566957e6d5e936a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-c2e1a9fa59d6c2f71566957e6d5e936a_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>打开项目路径下的Userdata文件夹中的Simulink文件，结合上面的功能框图与逻辑流程图。</p><p>【1】信号输入接口，接收来自CRUISE的输出信号；</p><p>【2】数据处理，统一所有输入信号数据类型；</p><p>【3】判断是否进入制动模式、判断系统是否允许能量回收；</p><p>【4】计算整车制动需求扭矩；</p><p>【5】计算机械制动补偿的压力；</p><p>【6】根据电机最大回收能力限制回收扭矩；</p><p>【7】判断是否需要机械制动；</p><p>【8】根据车速与减速度限制电机回收扭矩；</p><p>【9】信号输出接口，将控制信号发送给CRUISE；</p><p>在【4】中现需要计算制动下整车的需求制动扭矩，公式如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-8f4244d5703258aac0d5f5940564e6cb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"594\" data-rawheight=\"334\" class=\"origin_image zh-lightbox-thumb\" width=\"594\" data-original=\"https://pic4.zhimg.com/v2-8f4244d5703258aac0d5f5940564e6cb_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;594&#39; height=&#39;334&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"594\" data-rawheight=\"334\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"594\" data-original=\"https://pic4.zhimg.com/v2-8f4244d5703258aac0d5f5940564e6cb_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-8f4244d5703258aac0d5f5940564e6cb_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-b540e5aa902c8de916eb540181c66f96_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"400\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic3.zhimg.com/v2-b540e5aa902c8de916eb540181c66f96_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;400&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"400\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic3.zhimg.com/v2-b540e5aa902c8de916eb540181c66f96_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-b540e5aa902c8de916eb540181c66f96_b.jpg\"/></figure><p>在我们的模型中，把除了Cockpit的制动气压外的参数在Subsystem中计算。由于前后制动器的参数不一样，所以前后相加乘2获得4个制动器的制动力矩。通过主减速器速比就能换算成电机端的需求扭矩。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-093d86ec42555caa2adadfe2952c8688_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"652\" data-rawheight=\"360\" class=\"origin_image zh-lightbox-thumb\" width=\"652\" data-original=\"https://pic1.zhimg.com/v2-093d86ec42555caa2adadfe2952c8688_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;652&#39; height=&#39;360&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"652\" data-rawheight=\"360\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"652\" data-original=\"https://pic1.zhimg.com/v2-093d86ec42555caa2adadfe2952c8688_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-093d86ec42555caa2adadfe2952c8688_b.jpg\"/></figure><p>Subsystem中的参数源于图中CRUISE整车模型中制动器的参数设置（上图的红框部分）。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-8c03e8fcbd280262024b1bb952657bfa_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"610\" data-rawheight=\"214\" class=\"origin_image zh-lightbox-thumb\" width=\"610\" data-original=\"https://pic3.zhimg.com/v2-8c03e8fcbd280262024b1bb952657bfa_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;610&#39; height=&#39;214&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"610\" data-rawheight=\"214\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"610\" data-original=\"https://pic3.zhimg.com/v2-8c03e8fcbd280262024b1bb952657bfa_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-8c03e8fcbd280262024b1bb952657bfa_b.jpg\"/></figure><p>在【8】中通过车速与减速度限制电机回收扭矩</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-6975a8bb79fa262e20f705d19ae12243_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"706\" data-rawheight=\"503\" class=\"origin_image zh-lightbox-thumb\" width=\"706\" data-original=\"https://pic4.zhimg.com/v2-6975a8bb79fa262e20f705d19ae12243_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;706&#39; height=&#39;503&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"706\" data-rawheight=\"503\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"706\" data-original=\"https://pic4.zhimg.com/v2-6975a8bb79fa262e20f705d19ae12243_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-6975a8bb79fa262e20f705d19ae12243_b.jpg\"/></figure><p>这里的eBrake_Coeff_vel与eBrake_Coeff_Accel来自CRUISE中的GeneralMap模块，GenerMap模块定义一个扭矩变化的斜率，在车速处于5~7之间电机回收扭矩根据查表得到系数进行限制，系数的变换范围位0-1。</p><h2><b>VCU策略与仿真策略的区别</b></h2><p>有很多人问过【思想】，实际VCU程序的需求扭矩如何计算、回收扭矩如何计算？其实，VCU程序包含很多标定量，包含扭矩踏板Map、制动踏板Map等等。例如：驱动扭矩是通过油门踏板开度与车速确定驱动的需求扭矩，还需要根据不同的电机标定数据。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-15e357cd10636dfb1404d94c5d9e152d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"734\" data-rawheight=\"452\" class=\"origin_image zh-lightbox-thumb\" width=\"734\" data-original=\"https://pic2.zhimg.com/v2-15e357cd10636dfb1404d94c5d9e152d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;734&#39; height=&#39;452&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"734\" data-rawheight=\"452\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"734\" data-original=\"https://pic2.zhimg.com/v2-15e357cd10636dfb1404d94c5d9e152d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-15e357cd10636dfb1404d94c5d9e152d_b.jpg\"/></figure><p>由于这类扭矩标定数据都是各个公司的机密，【思想】无法取得，所以根据大致的趋势杜撰的PedalMap作为例子。</p><h2><b>预告</b></h2><p>大致介绍过本例中的控制策略，你是否对这个策略有了理解？作为一个曾经的初学者，【思想】深知这模型对初学者来说是不友善的。因为所有逻辑都集中在一起，没有比较细致的功能划分，当然这可能是因为作者觉得逻辑不算复杂没必要进行划分。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-76b149a071d2b824d76dceb5a6a2a0a9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"841\" data-rawheight=\"540\" class=\"origin_image zh-lightbox-thumb\" width=\"841\" data-original=\"https://pic2.zhimg.com/v2-76b149a071d2b824d76dceb5a6a2a0a9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;841&#39; height=&#39;540&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"841\" data-rawheight=\"540\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"841\" data-original=\"https://pic2.zhimg.com/v2-76b149a071d2b824d76dceb5a6a2a0a9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-76b149a071d2b824d76dceb5a6a2a0a9_b.jpg\"/></figure><p>所以在下一期的内容里，【思想】会介绍AVL推荐的仿真建模架构，为了后续比较复杂的并联与增程策略做个知识储备，请大家关注更新。</p>", 
            "topic": [
                {
                    "tag": "simulink", 
                    "tagLink": "https://api.zhihu.com/topics/19747197"
                }, 
                {
                    "tag": "电动汽车", 
                    "tagLink": "https://api.zhihu.com/topics/19561561"
                }, 
                {
                    "tag": "仿真模拟", 
                    "tagLink": "https://api.zhihu.com/topics/19938310"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/72923052", 
            "userName": "思想", 
            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
            "upvote": 16, 
            "title": "Simulink代码生成应用教程", 
            "content": "<p>本文同样来之微信同名公众号：<b>古德曼汽车工业-《</b><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483891%26idx%3D1%26sn%3D4afa769448137774add7fbb26331d80a%26chksm%3Dce80d067f9f759710309090f6ea13f339aefd178ac053df61f9f279e057badcf0f80cb927158%26mpshare%3D1%26scene%3D23%26srcid%3D%23rd\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Simulink代码生成应用教程</a>》，觉得本专栏内容对你有帮助，可以关注下公众号。感谢支持！</p><p>上一期《<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483861%26idx%3D1%26sn%3Dd5a9644b255c8b84b72c2208f48feb46%26chksm%3Dce80d041f9f75957f42ddfe12d174e615d12e85c83ae3a4b70874067d8f5584e2c0f20be610f%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Simulink代码生成基础体验教程</a>》中介绍了如何使用Simulink生成代码，及生成代码的一些设置。阅读过上一期的朋友们想必对如何生成代码已经有了解，但很多人会问【思想】生成的代码如何使用？本期【思想】就给大家介绍一下如何将Simulink自动生成的代码移植到嵌入式开发环境。</p><h2>控制器基础介绍</h2><p>首先要搞清楚控制器底层驱动（BWS）的大致工作流程。本期不是专门讲底层如何设计，所以抛开Bootloader/标定等功能及其调度过程。由于每家公司的设计思路、芯片选择都不一样，所以只对通用部分的思路进行阐述。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-1be1d3657446dadd8fe959466dcb127f_b.jpg\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"467\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic4.zhimg.com/v2-1be1d3657446dadd8fe959466dcb127f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;467&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"467\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic4.zhimg.com/v2-1be1d3657446dadd8fe959466dcb127f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-1be1d3657446dadd8fe959466dcb127f_b.jpg\"/><figcaption>嵌入式工程中Simulink代码工作的方式</figcaption></figure><p>控制器或控制单元本质就是一个简易的计算机，一样具有输入与输出功能。如图：输入信号类型有CAN/Lin/开关信号/ATD，输出信号类型有CAN/Lin/开关信号。每个零部件的控制器（xCU）都会有一个工作步长，简单的理解就是有个定时器。定时器控制每一次【输入-计算-输出】所间隔的时间。步长功能可通过单片机内部的定时器（模数递减器/实时定时器等）实现，在嵌入式开发环境中的【定时器中断函数】中实现。</p><h2>例子介绍</h2><p>本文意在科普教学，为了避免涉及其他厂家的机密，【思想】在演示过程中使用的模型例子为前面一期《<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483861%26idx%3D1%26sn%3Dd5a9644b255c8b84b72c2208f48feb46%26chksm%3Dce80d041f9f75957f42ddfe12d174e615d12e85c83ae3a4b70874067d8f5584e2c0f20be610f%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Simulink代码生成基础体验教程</a>》中的Matlab模型。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-27f881585f96af341baa310a2fe00e92_b.jpg\" data-size=\"normal\" data-rawwidth=\"677\" data-rawheight=\"445\" class=\"origin_image zh-lightbox-thumb\" width=\"677\" data-original=\"https://pic3.zhimg.com/v2-27f881585f96af341baa310a2fe00e92_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;677&#39; height=&#39;445&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"677\" data-rawheight=\"445\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"677\" data-original=\"https://pic3.zhimg.com/v2-27f881585f96af341baa310a2fe00e92_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-27f881585f96af341baa310a2fe00e92_b.jpg\"/><figcaption>前面一期介绍的代码生成模型</figcaption></figure><p>模型有两个输入x，y，一个输出z。为了配合本期内容，单片机选用MC9S12XEP100并假设x、y通过控制器的CAN模块接收，计算得到的结果z通过控制器的CAN模块发送，k为标定量。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-de8058c604f509959d15da7795c86d00_b.png\" data-size=\"normal\" data-rawwidth=\"180\" data-rawheight=\"70\" class=\"content_image\" width=\"180\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;180&#39; height=&#39;70&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"180\" data-rawheight=\"70\" class=\"content_image lazy\" width=\"180\" data-actualsrc=\"https://pic1.zhimg.com/v2-de8058c604f509959d15da7795c86d00_b.png\"/><figcaption>申明的接口变量</figcaption></figure><p>在开发环境中对申明In_X、In_Y、Celib_K、Out_Z对应x、y、z、k，所谓接口变量名称</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-1a6c6eda1472192fda2ca5d0aba224e2_b.jpg\" data-size=\"normal\" data-rawwidth=\"458\" data-rawheight=\"151\" class=\"origin_image zh-lightbox-thumb\" width=\"458\" data-original=\"https://pic3.zhimg.com/v2-1a6c6eda1472192fda2ca5d0aba224e2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;458&#39; height=&#39;151&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"458\" data-rawheight=\"151\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"458\" data-original=\"https://pic3.zhimg.com/v2-1a6c6eda1472192fda2ca5d0aba224e2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-1a6c6eda1472192fda2ca5d0aba224e2_b.jpg\"/><figcaption>嵌入式开发环境中的中断函数</figcaption></figure><p>在MC9S12XEP100的开发环境CodeWarrior5.2中，根据前一小节介绍的中断函数。其中ModelInput()对应【模型输入函数】作为模型变量的输入接口，ModelOuput()对应【模型输出函数】作为模型计算结果的输出接口，VcuApp_setp()对应的就是【Sinmulink模型代码】。</p><h2>Simulink模型的修改</h2><p>上面介绍完了底层驱动的接口部分，接着我们就需要对Simulink模型进行调整。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-0a8dea37179d7b2fd9366337f54517db_b.jpg\" data-size=\"normal\" data-rawwidth=\"686\" data-rawheight=\"338\" class=\"origin_image zh-lightbox-thumb\" width=\"686\" data-original=\"https://pic4.zhimg.com/v2-0a8dea37179d7b2fd9366337f54517db_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;686&#39; height=&#39;338&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"686\" data-rawheight=\"338\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"686\" data-original=\"https://pic4.zhimg.com/v2-0a8dea37179d7b2fd9366337f54517db_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-0a8dea37179d7b2fd9366337f54517db_b.jpg\"/><figcaption>Simulink中的数据管理器</figcaption></figure><p>在Simulink的数据管理器中，创建与接口变量一致的信号名。这里需要特别注意是，信号类型一定要为Simulink.Signal，如果是一个map数组，这里要改为Simulink.Param。另外，数据存储类型从Auto切换到ImportedExtren，意为Simulink生成的代码不会重新申明变量，而是使用extren标志为外部引用变量。效果等等在生成后的代码中进行展示。当然也可以使用其他的数据存储类型，有兴趣的话大家可以都尝试下，看看哪个更加符合自身项目的需求。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b3125f39f12a88dacc0dd2b57b7cd868_b.jpg\" data-size=\"normal\" data-rawwidth=\"514\" data-rawheight=\"117\" class=\"origin_image zh-lightbox-thumb\" width=\"514\" data-original=\"https://pic1.zhimg.com/v2-b3125f39f12a88dacc0dd2b57b7cd868_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;514&#39; height=&#39;117&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"514\" data-rawheight=\"117\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"514\" data-original=\"https://pic1.zhimg.com/v2-b3125f39f12a88dacc0dd2b57b7cd868_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b3125f39f12a88dacc0dd2b57b7cd868_b.jpg\"/><figcaption>Matlab Workplace</figcaption></figure><p>完成信号创建之后会在Matlab的Workplace提示，注意将其保存为mat文件。每次打开模型进行代码生成时候都要加载mat中的信号信息。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-422239f7288ebc3b57445db1ec3077fd_b.jpg\" data-size=\"normal\" data-rawwidth=\"597\" data-rawheight=\"858\" class=\"origin_image zh-lightbox-thumb\" width=\"597\" data-original=\"https://pic2.zhimg.com/v2-422239f7288ebc3b57445db1ec3077fd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;597&#39; height=&#39;858&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"597\" data-rawheight=\"858\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"597\" data-original=\"https://pic2.zhimg.com/v2-422239f7288ebc3b57445db1ec3077fd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-422239f7288ebc3b57445db1ec3077fd_b.jpg\"/><figcaption>模型变更</figcaption></figure><p>对上一期的模型结构进行调整，使用DataStoreRead取代In模块，DataStoreWrite取代Out模块，使用Product模块替换Gain模块。由于我们底层定时器中断中Simulink模型接口函数名为VcuApp_step()，所以模型的文件名也更改为VcuApp.slx。                    </p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-71c5d8723a4e5df67e147f988233c43f_b.jpg\" data-size=\"normal\" data-rawwidth=\"719\" data-rawheight=\"213\" class=\"origin_image zh-lightbox-thumb\" width=\"719\" data-original=\"https://pic4.zhimg.com/v2-71c5d8723a4e5df67e147f988233c43f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;719&#39; height=&#39;213&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"719\" data-rawheight=\"213\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"719\" data-original=\"https://pic4.zhimg.com/v2-71c5d8723a4e5df67e147f988233c43f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-71c5d8723a4e5df67e147f988233c43f_b.jpg\"/><figcaption>生成的业务逻辑代码</figcaption></figure><p>VcuApp_Private.h中定义变量的代码前面都加了extren，表示引用了之前在底层驱动中定义的变量。                    </p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-8ab296ceedccef4a69173af4ae1233d8_b.jpg\" data-size=\"normal\" data-rawwidth=\"714\" data-rawheight=\"198\" class=\"origin_image zh-lightbox-thumb\" width=\"714\" data-original=\"https://pic1.zhimg.com/v2-8ab296ceedccef4a69173af4ae1233d8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;714&#39; height=&#39;198&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"714\" data-rawheight=\"198\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"714\" data-original=\"https://pic1.zhimg.com/v2-8ab296ceedccef4a69173af4ae1233d8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-8ab296ceedccef4a69173af4ae1233d8_b.jpg\"/><figcaption>引用的外部变量</figcaption></figure><p>VcuApp_Private.h中定义变量的代码前面都加了extren，表示引用了之前在底层驱动中定义的变量。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-c26e02416cf114a8e5daafca33d2ce7c_b.jpg\" data-size=\"normal\" data-rawwidth=\"641\" data-rawheight=\"406\" class=\"origin_image zh-lightbox-thumb\" width=\"641\" data-original=\"https://pic1.zhimg.com/v2-c26e02416cf114a8e5daafca33d2ce7c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;641&#39; height=&#39;406&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"641\" data-rawheight=\"406\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"641\" data-original=\"https://pic1.zhimg.com/v2-c26e02416cf114a8e5daafca33d2ce7c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-c26e02416cf114a8e5daafca33d2ce7c_b.jpg\"/><figcaption>Code Warrior引用生成的代码文件</figcaption></figure><p>在CodeWarrior中创建一个RCP文件夹，把生成的C文件与h文件加入工程，注意ert_main.c这个文件不要加进来。保存工程后就能通过嵌入式环境编译二进制文件了。</p><h2>总结</h2><p>本次教程，介绍的是手工创建接口变量、Simulnk信号线等。在实际工程中，输入输出信号可能会有几十上百个。如果都用手工创建信号及移植代码，这工作量无疑是惊人的，而且整个过程容不得半点错误。因此实际工作中需要一些自动化的生成工具，直接把这部分繁琐的工作取代掉。以下是【思想】设计的一款根据通讯协议直接生成代码的工具原型，以后有时间再单独介绍该款工具。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-f1d357d03ac28bc88e814f7224f10b44_b.jpg\" data-size=\"normal\" data-rawwidth=\"676\" data-rawheight=\"262\" class=\"origin_image zh-lightbox-thumb\" width=\"676\" data-original=\"https://pic1.zhimg.com/v2-f1d357d03ac28bc88e814f7224f10b44_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;676&#39; height=&#39;262&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"676\" data-rawheight=\"262\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"676\" data-original=\"https://pic1.zhimg.com/v2-f1d357d03ac28bc88e814f7224f10b44_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-f1d357d03ac28bc88e814f7224f10b44_b.jpg\"/><figcaption>接口快速生成工具</figcaption></figure><p>另外，如果你使用过其他家的快速原型产品，例如华海科技、海博瑞德等，就可以直接在Simulink配置整个嵌入式工程，无需自己设计输入输出接口。后面【思想】会在《Sinmulink代码生成提高教程》中跟大家分享这方面的经验。</p><p>通过今天的教程，大家是否能够动手使用Simulink代码生成做个简单的控制器例子呢？虽然实际操作要比这个复杂的多，细节也存在区别，但是大体的思路是不会改变的。希望本文可以帮助到想学习这方面技能的朋友。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-1a7f0e005006d0139e1d1cd7bd881d23_b.jpg\" data-size=\"normal\" data-rawwidth=\"1418\" data-rawheight=\"804\" class=\"origin_image zh-lightbox-thumb\" width=\"1418\" data-original=\"https://pic4.zhimg.com/v2-1a7f0e005006d0139e1d1cd7bd881d23_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1418&#39; height=&#39;804&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1418\" data-rawheight=\"804\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1418\" data-original=\"https://pic4.zhimg.com/v2-1a7f0e005006d0139e1d1cd7bd881d23_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-1a7f0e005006d0139e1d1cd7bd881d23_b.jpg\"/><figcaption>请与【思想的QQ：188493886】联系获得本文Simulink例子文件。项目由于Matlab2018打包。</figcaption></figure><p></p><p></p>", 
            "topic": [
                {
                    "tag": "simulink", 
                    "tagLink": "https://api.zhihu.com/topics/19747197"
                }, 
                {
                    "tag": "MATLAB", 
                    "tagLink": "https://api.zhihu.com/topics/19559252"
                }, 
                {
                    "tag": "嵌入式开发", 
                    "tagLink": "https://api.zhihu.com/topics/19610823"
                }
            ], 
            "comments": [
                {
                    "userName": "择一城终老", 
                    "userLink": "https://www.zhihu.com/people/ad189344d83a25cb7666ee3645361890", 
                    "content": "非常棒，之前做了一个TCU的快速原型，做的是bsw这部分，一直想对模型这块搞得清楚一点，nice!", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "思想", 
                    "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
                    "content": "感谢大佬支持", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "择一城终老", 
                            "userLink": "https://www.zhihu.com/people/ad189344d83a25cb7666ee3645361890", 
                            "content": "小白一个[捂脸]", 
                            "likes": 0, 
                            "replyToAuthor": "思想"
                        }
                    ]
                }, 
                {
                    "userName": "远峰", 
                    "userLink": "https://www.zhihu.com/people/533ab6d115870b27014002519f386661", 
                    "content": "<p>一直纠结在代码的一键生成，搞了一段时间的TLC。你这个思路还不错，可以在手工代码和模型中做个接口。</p>", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "思想", 
                            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
                            "content": "这个靠tlc的，我后面也会介绍，比较麻烦，还没想怎么写", 
                            "likes": 0, 
                            "replyToAuthor": "远峰"
                        }
                    ]
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/72367211", 
            "userName": "思想", 
            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
            "upvote": 12, 
            "title": "Sinmulink代码生成基础体验教程", 
            "content": "<p><b>本文来自我的微信公众号【<i>古德曼汽车工业</i>】，欢迎大家关注</b></p><h3><b>前言</b></h3><p>一个完整的控制器（xCU）嵌入式程序在逻辑架构均可分为两层：一个是应用逻辑层（Application Software），用来表达整个控制逻辑的实现算法；还有一个是基础软件层（Basic Software）也就是常说的底层驱动，负责芯片功能进行初始化，例如：定时器、锁相环、CAN、SPI等。逻辑层与基础软件层之间需要有一个接口层（Interface Layer）实现数据的交互。</p><p>Simulink代码生成技术的出现很好的解决的控制器程序开发的分工问题，控制策略由各专业工程师开发，而底层驱动由嵌入式工程师完成。控制策略工程师可利用Simulink强大的建模与测试功能开发控制策略模型，最后将生成嵌入式代码与底层驱动一起编译成二进制文件。另外，如果硬件变更或者硬件升级，只需要修改驱动成代码不需要更改测试好的逻辑层策略。</p><p><b>代码生成工具</b></p><p>早期Simulink代码生成主要依托dSpace公司的TargetLink实现。安装了TargetLink后，在Simulink中就会出现TargetLink自带的元件库，如果你原先仿真时用的为Simulink的标准原件，就需要将模型转换成TargetLink模型。近几年由于Simulink EmbeddedCoder在技术上日趋成熟，并且推广力度也便较大。所以越来越多厂家开始使用EmbeddedCoder生成嵌入式代码。接下来篇幅就来演示如何使用Simulink的EmbeddedCoder功能快速生成C语言代码。</p><h3><b>代码生成基础操作</b></h3><p>这部分内容为了让各位对嵌入式代码生成有个直观的感受，希望有兴趣的可以跟着一起练习下，【思想】当初学习也是从这部分开始的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-7c9ee5a0766f49f6fe7148eaa3c2ffe8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"364\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic1.zhimg.com/v2-7c9ee5a0766f49f6fe7148eaa3c2ffe8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;364&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"364\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic1.zhimg.com/v2-7c9ee5a0766f49f6fe7148eaa3c2ffe8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-7c9ee5a0766f49f6fe7148eaa3c2ffe8_b.jpg\"/></figure><p>以一个简单的模型为例，有两个输入分别为x、y，一个输出z。运算过程为z=（x+y）*k;</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-6a5726cd94ad78e4c3161511ab8ba862_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"292\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic3.zhimg.com/v2-6a5726cd94ad78e4c3161511ab8ba862_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;292&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"292\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic3.zhimg.com/v2-6a5726cd94ad78e4c3161511ab8ba862_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-6a5726cd94ad78e4c3161511ab8ba862_b.jpg\"/></figure><p>第一个重要的设置就是解算法，这里一定要设置为离散的定步长算法，并设置步长。因为所有的控制器内部都会有一个模数递减器，用来实现一个步长的精确定时。大部分控制一个步长都设置为10ms。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-3f93f1decc33799c341ea3b61c681c21_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"552\" data-rawheight=\"375\" class=\"origin_image zh-lightbox-thumb\" width=\"552\" data-original=\"https://pic2.zhimg.com/v2-3f93f1decc33799c341ea3b61c681c21_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;552&#39; height=&#39;375&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"552\" data-rawheight=\"375\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"552\" data-original=\"https://pic2.zhimg.com/v2-3f93f1decc33799c341ea3b61c681c21_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-3f93f1decc33799c341ea3b61c681c21_b.jpg\"/></figure><p>在模型设置中的代码生成选项，选取代码生成的模板。本次使用的时EmbeddedCoder，所以选择与其对应的ert.tlc。特别注意的是由于生成的代码不会使用Simulink的编译工具进行编译，所以需要勾选Generate Code Only，这样就只会生成C文件与h文件。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-22dbacc880665ae0f7d96436fb8235bf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"410\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic4.zhimg.com/v2-22dbacc880665ae0f7d96436fb8235bf_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;410&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"410\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic4.zhimg.com/v2-22dbacc880665ae0f7d96436fb8235bf_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-22dbacc880665ae0f7d96436fb8235bf_b.jpg\"/></figure><p>点击Build Model按钮或者使用快捷键Ctrl+B进行生成代码，生成的代码会有一个报告，包含模型的配置信息。在左边的框中提示了本次生成代码的文件，点击可以对代码进行查看。生成ert_main.c文件包含了一些模型的初始化并调用模型的主函数，正常开发过程中这个文件是不会被用到。Main函数正常都是由嵌入式工程在芯片开发环境中编写，通过调度层来调用模型函数。接口与调度这部分内容会在后面的文章中详细叙述，敬请关注。GenerateCode.c文件则就是存放Simulink模型生成代码的文件，还有若干个h文件和Simulink自带的引用文件。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-d360d091a277ee9af296f66442321d59_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"407\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic2.zhimg.com/v2-d360d091a277ee9af296f66442321d59_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;407&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"407\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic2.zhimg.com/v2-d360d091a277ee9af296f66442321d59_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-d360d091a277ee9af296f66442321d59_b.jpg\"/></figure><p>GenerateCode_Step函数中，就是Simulink模型生成C语言代码，可以看到这里的输入与输出都是以结构体的形式进行表达的，k值则是在WorkPlace中直接赋值。这样的代码可读性比较低，接下来就对模型进行更多的优化设置。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-3e63eacdd586f0c782fcb7e0a24d88d6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"169\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic3.zhimg.com/v2-3e63eacdd586f0c782fcb7e0a24d88d6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;169&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"169\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic3.zhimg.com/v2-3e63eacdd586f0c782fcb7e0a24d88d6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-3e63eacdd586f0c782fcb7e0a24d88d6_b.jpg\"/></figure><p>在Simulink数据管理器中使用mpt.Signal添加4个变量，分别命名为x、y、z、k设置数据类型、存储方式等，并且对k赋予初始值。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-2f6a12c7e0ce87abb79d0f09dae40e0f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"364\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic4.zhimg.com/v2-2f6a12c7e0ce87abb79d0f09dae40e0f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;364&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"364\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic4.zhimg.com/v2-2f6a12c7e0ce87abb79d0f09dae40e0f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-2f6a12c7e0ce87abb79d0f09dae40e0f_b.jpg\"/></figure><p>选中信号线并右键进入properites【属性】对话框，在SignalName中输入刚刚创建的变量名，并勾选Signal name must resolveto Simulink signal object。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-60b2379afc2b36deddbf2f53ab5485e3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"424\" data-rawheight=\"197\" class=\"origin_image zh-lightbox-thumb\" width=\"424\" data-original=\"https://pic4.zhimg.com/v2-60b2379afc2b36deddbf2f53ab5485e3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;424&#39; height=&#39;197&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"424\" data-rawheight=\"197\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"424\" data-original=\"https://pic4.zhimg.com/v2-60b2379afc2b36deddbf2f53ab5485e3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-60b2379afc2b36deddbf2f53ab5485e3_b.jpg\"/></figure><p>设置后的模型效果，可以看到这时候信号线上多了个关联图标并再次对模型生成代码。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-c4b950abcfc621d10e9a43e705c4251c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"410\" data-rawheight=\"340\" class=\"content_image\" width=\"410\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;410&#39; height=&#39;340&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"410\" data-rawheight=\"340\" class=\"content_image lazy\" width=\"410\" data-actualsrc=\"https://pic1.zhimg.com/v2-c4b950abcfc621d10e9a43e705c4251c_b.jpg\"/></figure><p>生成后的代码就可以看到与第一次生成的相比，那几个晦涩难懂的结构体已经被具体的变量名取代了。<b>以上这个部分很重要，这是后续接口层开发的要点。</b></p><h3><b>函数的封装</b></h3><p>手工写过代码的朋友一定有这样的经验，尽可能的要把相同逻辑的代码用一个函数封装起来。这样既可以很方便地调用代码，也能够减少代码冗余提高执行效率。同样的使用Simulink建模也需要考虑这个问题。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b01a8a36f8b1ce349c7dbcfd6993dccc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"188\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic1.zhimg.com/v2-b01a8a36f8b1ce349c7dbcfd6993dccc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;188&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"188\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic1.zhimg.com/v2-b01a8a36f8b1ce349c7dbcfd6993dccc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b01a8a36f8b1ce349c7dbcfd6993dccc_b.jpg\"/></figure><p>对刚刚的没模型进行简单的封装，并复制一个出来。两个子系统中的逻辑都是z=(x+y)*k，区别仅仅是输入与输出不同。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-966eec53820f12176f9abf958b8f34fd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"289\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic2.zhimg.com/v2-966eec53820f12176f9abf958b8f34fd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;289&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"289\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic2.zhimg.com/v2-966eec53820f12176f9abf958b8f34fd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-966eec53820f12176f9abf958b8f34fd_b.jpg\"/></figure><p>右键对Subsystem模块属性进行设置，勾选【Treat as atomic unit】设置为原子子系统，并自定义一个函数名。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-c535ef622f036a52b430c091faec419c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"261\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic1.zhimg.com/v2-c535ef622f036a52b430c091faec419c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;261&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"261\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic1.zhimg.com/v2-c535ef622f036a52b430c091faec419c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-c535ef622f036a52b430c091faec419c_b.jpg\"/></figure><p>生成代码后可以看到，左边两个Subsystem均调用了同一个函数。</p><h3><b>生成代码的设置</b></h3><p>生成代码的设置除了上面的选择编译模板一定要配置外，下面这几个选项也是需要注意的。如果比较细心的朋友会发现前面生成报告的硬件信息为Intel-&gt;x86-64 (Windows64)，在模型设置中可以对设备进行指派，设置芯片的厂家、型号、各数据类型的数据长度、甚至字节序。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-2df9c5902784f869a3132521c8db9012_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"376\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic3.zhimg.com/v2-2df9c5902784f869a3132521c8db9012_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;376&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"376\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic3.zhimg.com/v2-2df9c5902784f869a3132521c8db9012_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-2df9c5902784f869a3132521c8db9012_b.jpg\"/></figure><p>另外这部分是很容易被忽略的，这里可以根据不同的C语言标准来生成代码，支持C99和C89标准。做嵌入式开发的朋友一定要根据自己的开发环境来选择，如使用code warrior 5.2的朋友一定要选择C89，选择C99就会出现编译错误的问题。</p><h3><b>更多内容</b></h3><p>更多的基础设置及细节问题可以向思想索取Matlab官方培训视频及思想对该视频的学习笔记ppt</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-e8efd4d65056bd652a22e6891c651235_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"465\" data-rawheight=\"211\" class=\"origin_image zh-lightbox-thumb\" width=\"465\" data-original=\"https://pic2.zhimg.com/v2-e8efd4d65056bd652a22e6891c651235_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;465&#39; height=&#39;211&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"465\" data-rawheight=\"211\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"465\" data-original=\"https://pic2.zhimg.com/v2-e8efd4d65056bd652a22e6891c651235_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-e8efd4d65056bd652a22e6891c651235_b.jpg\"/></figure><p>​</p>", 
            "topic": [
                {
                    "tag": "simulink", 
                    "tagLink": "https://api.zhihu.com/topics/19747197"
                }, 
                {
                    "tag": "嵌入式开发", 
                    "tagLink": "https://api.zhihu.com/topics/19610823"
                }, 
                {
                    "tag": "单片机", 
                    "tagLink": "https://api.zhihu.com/topics/19577755"
                }
            ], 
            "comments": [
                {
                    "userName": "Nothing Serious", 
                    "userLink": "https://www.zhihu.com/people/a01d7ad605d6c5ac28b5933ec8b34895", 
                    "content": "有matlab官网培训视屏吗？", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "思想", 
                            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
                            "content": "有的请关注我微信公用号，古德曼汽车工业  并转发截图，即可获得", 
                            "likes": 0, 
                            "replyToAuthor": "Nothing Serious"
                        }, 
                        {
                            "userName": "思想", 
                            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
                            "content": "有的", 
                            "likes": 0, 
                            "replyToAuthor": "Nothing Serious"
                        }
                    ]
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/71859101", 
            "userName": "思想", 
            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
            "upvote": 2, 
            "title": "CAN总线(J1939)速成指南【1】", 
            "content": "<p>本文来自我的微信公众号【古德曼汽车工业】，欢迎大家关注</p><p>很久以前当思想对CAN总线还一窍不通的时候，尝试百度搜索过非常多的CAN总线相关的教程，包括J1939的中文译本。大部分看完之后还是没搞明白，本文思想将站在初学者的角度分享一些CAN总线的知识点。为了降低阅读门槛，本文只对CAN总线的数据帧进行解读。</p><p>为了降低阅读门槛，本文只对CAN总线的数据帧进行解读</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-0c39ae9c6413089287173c4e71588a08_b.jpg\" data-rawwidth=\"1024\" data-rawheight=\"304\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"1024\" data-original=\"https://pic1.zhimg.com/v2-0c39ae9c6413089287173c4e71588a08_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1024&#39; height=&#39;304&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1024\" data-rawheight=\"304\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1024\" data-original=\"https://pic1.zhimg.com/v2-0c39ae9c6413089287173c4e71588a08_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-0c39ae9c6413089287173c4e71588a08_b.jpg\"/><figcaption>报文结构</figcaption></figure><p>这是一个CAN扩展帧的完整结构图，针对刚入门的小伙伴来说。不需要每一个元素都理解，思想的套路是让大家先能看懂报文。至于其他的元素就在实际的工作中进行扩展学习。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-54d7f146470a7d7496049a041972ef79_b.jpg\" data-rawwidth=\"622\" data-rawheight=\"319\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"622\" data-original=\"https://pic2.zhimg.com/v2-54d7f146470a7d7496049a041972ef79_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;622&#39; height=&#39;319&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"622\" data-rawheight=\"319\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"622\" data-original=\"https://pic2.zhimg.com/v2-54d7f146470a7d7496049a041972ef79_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-54d7f146470a7d7496049a041972ef79_b.jpg\"/></figure><p>扩展帧头部有32位的仲裁字段，仲裁字段中对于我们最有用的就是<b>11位的标识符</b>和<b>18位的拓展标识符</b></p><p>这29位的数据就组成了我们通常所说的报文ID，或者叫做PGN（Parameter Group Number）。</p><p>以一个常见的发动机报文ID：0x18FEF100为例</p><p>0x：表示报文以16进制进行标识；</p><p>00：表示源地址（SA），长度8个位，表示该条报文由哪个部件的MCU发送出来，这里的00一般表示由发动机发出；</p><p>F1：表示PS，长度8个位，总线工程师根据实际需要进行定义，好比一个人的姓；</p><p>FE：表示PF，长度8个位，总线工程师根据实际需要进行定义，好比一个人的名字；</p><p>18：表示优先级（Priority），长度3个位，18对应的优先级位6；</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-e661895d93da427807851f4e3c42a310_b.jpg\" data-rawwidth=\"1080\" data-rawheight=\"116\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-e661895d93da427807851f4e3c42a310_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;116&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1080\" data-rawheight=\"116\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-e661895d93da427807851f4e3c42a310_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e661895d93da427807851f4e3c42a310_b.jpg\"/><figcaption>报文ID结构图</figcaption></figure><p>如上图的结构，Priority处于第27~29位，Priority的二进制表示位,对应到25~32这一个字节就是十六进制的0x18</p><p><b>数据段</b></p><p>数据段用于存放，当前报文所要传输的数据。每一帧数据最大可以存放8个字节，共64个位的数据。这64个位可以包含好很多个信号，总线工程师需要定义每一个信号的起始<b>位置、长度、分辨率、偏移量</b>。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-ccc4e0348d334f4e8cea7ac6a59ac3cc_b.jpg\" data-rawwidth=\"1010\" data-rawheight=\"471\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1010\" data-original=\"https://pic1.zhimg.com/v2-ccc4e0348d334f4e8cea7ac6a59ac3cc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1010&#39; height=&#39;471&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1010\" data-rawheight=\"471\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1010\" data-original=\"https://pic1.zhimg.com/v2-ccc4e0348d334f4e8cea7ac6a59ac3cc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-ccc4e0348d334f4e8cea7ac6a59ac3cc_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>以J1939-71为中EEC1报文为例子，下半部分可以看到数据段包含了哪些信号，在【Parameter Name】对他们进行描述。前面对应定义了该信号的启示位置【Start Position】与长度【Length】。需要注意的【Start Position】以字节为单位，如【1.5】表示第一个字节的第五个位。根据数据启示位置与长度截取出来的整数值成为<b>原值</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-1677cd594e41a17b55f94b9de21e6b47_b.jpg\" data-rawwidth=\"992\" data-rawheight=\"231\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"992\" data-original=\"https://pic4.zhimg.com/v2-1677cd594e41a17b55f94b9de21e6b47_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;992&#39; height=&#39;231&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"992\" data-rawheight=\"231\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"992\" data-original=\"https://pic4.zhimg.com/v2-1677cd594e41a17b55f94b9de21e6b47_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-1677cd594e41a17b55f94b9de21e6b47_b.jpg\"/></figure><p>【SPN】则是标准1939协议对该条信号数据的解析规则的定义，为了让大家容易搜索，搜索SPN 190就能够得到Engine Speed这条信号的解析规则。最需要关心的就是这个<b>分辨率</b>【Resoultion】，<b>偏移量</b>【Offset】。需要通过这两个参数对原值进行运算，得到<b>解析值</b></p><p>公式：</p><p><b>解析值=原值*分辨率+偏移量</b>（用于接收）</p><p><b>原值=（解析值-偏移量）/分辨率</b>（用于发送）</p><p>例子：设接收到的Engine Speed的原值为0x2EE0（十进制12000）,求发动机实际转速。</p><p>发动机转时候=12000*0.125+0=1500rpm</p><p><i>注：实际定义协议中不需要有SPN直接定义解析与偏移即可。</i></p><p class=\"ztext-empty-paragraph\"><br/></p><p>本文来自我的微信公众号【古德曼汽车工业】，欢迎大家关注</p>", 
            "topic": [
                {
                    "tag": "CAN总线", 
                    "tagLink": "https://api.zhihu.com/topics/19744765"
                }, 
                {
                    "tag": "整车控制器", 
                    "tagLink": "https://api.zhihu.com/topics/20046390"
                }, 
                {
                    "tag": "通讯协议", 
                    "tagLink": "https://api.zhihu.com/topics/19833473"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/71810280", 
            "userName": "思想", 
            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
            "upvote": 2, 
            "title": "燃料电池车(FCHEV)动力经济性建模与仿真", 
            "content": "<p><b>本文来自我的微信公众号【<i>古德曼汽车工业</i>】，欢迎大家关注</b></p><p><b>质子交换膜</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-1ad0e41697fd122aa1f5139542096b6c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"463\" data-rawheight=\"487\" class=\"origin_image zh-lightbox-thumb\" width=\"463\" data-original=\"https://pic1.zhimg.com/v2-1ad0e41697fd122aa1f5139542096b6c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;463&#39; height=&#39;487&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"463\" data-rawheight=\"487\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"463\" data-original=\"https://pic1.zhimg.com/v2-1ad0e41697fd122aa1f5139542096b6c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-1ad0e41697fd122aa1f5139542096b6c_b.jpg\"/></figure><p>燃料电池电动汽车上运用最多的电池为质子交换膜燃料电池（PEMFC），包括质子交换膜、催化剂、扩散层、双极板（阴、阳极板）。其工作原理是：氢气与水蒸汽（加湿，防止膜的阳极面过干）的混合气一同输入扩散到阳极催化剂层，在催化剂作用下发生氧化反应，一个氢分子分解为两个氢质子和两个电子。电子通过外电路形成电流，而氢质子则通过交换膜到达阴极，在阴极催化剂作用下与氧气、电子结合，生成水并释放热量。其中生成的热量和部分水随气流被带出电池内部, 另一部分水则在电渗力等作用下通过膜向阳极方向移动。</p><p><b>车载系统的组成</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-a69046150ce1ad23f73a0b36eccd0b1b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"875\" data-rawheight=\"391\" class=\"origin_image zh-lightbox-thumb\" width=\"875\" data-original=\"https://pic4.zhimg.com/v2-a69046150ce1ad23f73a0b36eccd0b1b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;875&#39; height=&#39;391&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"875\" data-rawheight=\"391\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"875\" data-original=\"https://pic4.zhimg.com/v2-a69046150ce1ad23f73a0b36eccd0b1b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-a69046150ce1ad23f73a0b36eccd0b1b_b.jpg\"/></figure><p>系统的组成包含了氢气罐、压缩机、电堆、动力电池、电机等。压缩机提供的氧气与高压氢气提供的氢气，在电堆中通过质子交换膜反应。得到电能与水。储能单元部分除了燃料电池组外，还需要一个动力动力电池。配合燃料电池组实现多种不同的驱动模式。能量管理策略要对燃料电池组与动力电池的能量进行合理的调度。</p><p><b>建模与仿真</b></p><p>本例选用的仿真软件为AVL-CRUISE v2015，当然也可以使用其他的仿真软件来实现，详情可以了稍早发布的文章：<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483774%26idx%3D1%26sn%3Deaccff3c40e927798dcab84495e1f356%26chksm%3Dce80d0eaf9f759fc8126d015ec5ccbdd4ed35e0a623e46b60ba78a701614386ea29b5a23ec90%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">部分仿真软件对比介绍</a></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b66de83d4f9ca4e39b969b81258f0a74_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"963\" data-rawheight=\"692\" class=\"origin_image zh-lightbox-thumb\" width=\"963\" data-original=\"https://pic1.zhimg.com/v2-b66de83d4f9ca4e39b969b81258f0a74_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;963&#39; height=&#39;692&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"963\" data-rawheight=\"692\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"963\" data-original=\"https://pic1.zhimg.com/v2-b66de83d4f9ca4e39b969b81258f0a74_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b66de83d4f9ca4e39b969b81258f0a74_b.jpg\"/></figure><p>CRUISE整车模型同上，主要的动力原件参数如下（仅供研究参考用）：<br/>动力电池：320V/5.6Ah；电机峰值扭矩240Nm；电机峰值功率70kW；燃料电池组最大输出功率73kW；DCDC最大转换功率80kW。</p><p><b>外部电源模块介绍</b></p><p>由于本次使用的是2015版CRUISE，还不支持燃料电池模块。但是另外提供了一个外部电源模块。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f1af4934cce429908e1a782a830787b1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"841\" data-rawheight=\"236\" class=\"origin_image zh-lightbox-thumb\" width=\"841\" data-original=\"https://pic2.zhimg.com/v2-f1af4934cce429908e1a782a830787b1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;841&#39; height=&#39;236&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"841\" data-rawheight=\"236\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"841\" data-original=\"https://pic2.zhimg.com/v2-f1af4934cce429908e1a782a830787b1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f1af4934cce429908e1a782a830787b1_b.jpg\"/></figure><p>ExternalBattery外部电源模块的神器之处在于，只要你有一个合理的电能转换模型。无论时燃料电池、同位素电池甚至钢铁侠的冷聚变反应堆，都想将其在Simulink中实现并通过CRUISE软件来调用。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-760b8ed4bc79d5c677a10d2c787129c9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"582\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-760b8ed4bc79d5c677a10d2c787129c9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;582&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"582\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-760b8ed4bc79d5c677a10d2c787129c9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-760b8ed4bc79d5c677a10d2c787129c9_b.jpg\"/></figure><p>对于燃料电池而已需要在模型中实现压缩机、质子交换、催化等复杂电化学反应过程。所以氢燃料电池模型建议大家使用研究机构或者供应商的资源获得，这样燃料电池才能有较高的准确性。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-f6f0fee47c4569c757b5862570ebf7a4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"781\" data-rawheight=\"276\" class=\"origin_image zh-lightbox-thumb\" width=\"781\" data-original=\"https://pic1.zhimg.com/v2-f6f0fee47c4569c757b5862570ebf7a4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;781&#39; height=&#39;276&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"781\" data-rawheight=\"276\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"781\" data-original=\"https://pic1.zhimg.com/v2-f6f0fee47c4569c757b5862570ebf7a4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-f6f0fee47c4569c757b5862570ebf7a4_b.jpg\"/></figure><p>外部电池【External Battery】与Matlab DLL一样都需要引用Simulink编译的Dll文件，这部分联合仿真的介绍可以请大家关注早前的文章：<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg3MTIzNzg4Mw%3D%3D%26mid%3D2247483782%26idx%3D1%26sn%3D6637d7e178b591c37a6c16d14582e8f4%26chksm%3Dce80d012f9f75904c8fd6e454fc0eebb52682a854454523892e478d25eca7b90e5f9a1d26c7b%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CRUISE与Simulink联合仿真介绍</a></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-b6e7236817e2338d54449215e6356f16_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"899\" data-rawheight=\"259\" class=\"origin_image zh-lightbox-thumb\" width=\"899\" data-original=\"https://pic3.zhimg.com/v2-b6e7236817e2338d54449215e6356f16_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;899&#39; height=&#39;259&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"899\" data-rawheight=\"259\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"899\" data-original=\"https://pic3.zhimg.com/v2-b6e7236817e2338d54449215e6356f16_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-b6e7236817e2338d54449215e6356f16_b.jpg\"/></figure><p>在模块的数据总线中定义输入与输出参数，除了输出电压是必备选项外，还需要额外的输出燃料电池组的功率、氢气与氧气的消耗率。</p><p><b>DC/DC模块</b></p><p>CRUISE软件提供了一个DCDC模块，主要作用：</p><p>1、直流电中不同电压之间的转换。如：320V转48V、320V转560V；</p><p>2、电流方向的控制，可以控制电流由低压侧流向高压侧或者从高压侧流向低压侧；</p><p>3、可以通过电压控制或者电流控制的行驶来实现对转换功率的控制。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-db55176a7974206376e7852741d255aa_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"972\" data-rawheight=\"673\" class=\"origin_image zh-lightbox-thumb\" width=\"972\" data-original=\"https://pic3.zhimg.com/v2-db55176a7974206376e7852741d255aa_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;972&#39; height=&#39;673&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"972\" data-rawheight=\"673\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"972\" data-original=\"https://pic3.zhimg.com/v2-db55176a7974206376e7852741d255aa_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-db55176a7974206376e7852741d255aa_b.jpg\"/></figure><p>本次的模型中，外部电源模块通过一个DCDC模块与整个高压电网连接。通过DCDC模块首先控制电流只能从燃料电池组侧流向电机侧，并且可以通过PID控制算法使得燃料电池的输出功率受控制。</p><p><b>能量管理策略的建立</b></p><p>能量管理策略在Simulink中完成建模，通过Matlab Dll模块完成Simulink与CRUISE的联合仿真。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-2c5d029b5240624a5e50fc48f38da6b0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"460\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-2c5d029b5240624a5e50fc48f38da6b0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;460&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"460\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-2c5d029b5240624a5e50fc48f38da6b0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-2c5d029b5240624a5e50fc48f38da6b0_b.jpg\"/></figure><p>由于AVL-CRUISE只做动力经济性仿真，能量管理策略只涉及到车型行驶状态下，不会有停车充电这样的待机模式。控制模型中工作模式一共有5个具体如下：</p><p><b>燃点电池组模式：</b>电机需求功率由燃料电池单独提供，策略通过计算电网的电压与电流计算需求功率，通过PID控制DCDC转换相应的功率；</p><p><b>纯电动模式：</b> 由动力电池单独提供电能，用于需求功率较低且SOC较高的工况下此时燃料电池组处于OFF状态；或者燃料电池组正处于WakeUp阶段；</p><p><b>行车充电模式：</b>该模式下动力电池SOC较低，燃料电池提供电机的需求功率外，还对蓄电池进行充电；</p><p><b>联合驱动模式：</b>当车辆处于爬坡或紧急加速下，电机需求功率大。此时燃料电池与动力电池共同提供功率；</p><p><b>制动能量回收：</b>动力电池用于保存制动回收的电能，DCDC处于关闭状态不进行能量转换；</p><p>在【行车充电】与【联合驱动】模式中，对燃料电池组的控制中。可以根据燃料电池厂家提供的特性曲线，选定单功率值或者多功率值进行控制。本文采用的例中从功率平衡的角度，燃料电池/动力电池（FCHEV）能量系统的结构采用了负载补偿性和负载跟随型两种方式，即燃料电池输出功率跟随电池SOC的变化而变化。这部分就根据实际的需求进行设计。</p><p>最后将策略编译后，运行NEDC循环</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-be207b5040d89d23c5e858d71d598de8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"973\" data-rawheight=\"615\" class=\"origin_image zh-lightbox-thumb\" width=\"973\" data-original=\"https://pic1.zhimg.com/v2-be207b5040d89d23c5e858d71d598de8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;973&#39; height=&#39;615&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"973\" data-rawheight=\"615\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"973\" data-original=\"https://pic1.zhimg.com/v2-be207b5040d89d23c5e858d71d598de8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-be207b5040d89d23c5e858d71d598de8_b.jpg\"/></figure><p>上图为速度与燃料电池组输出功率数据</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-9f8d449df9e2083f8a1398e1dd882125_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"989\" data-rawheight=\"629\" class=\"origin_image zh-lightbox-thumb\" width=\"989\" data-original=\"https://pic2.zhimg.com/v2-9f8d449df9e2083f8a1398e1dd882125_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;989&#39; height=&#39;629&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"989\" data-rawheight=\"629\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"989\" data-original=\"https://pic2.zhimg.com/v2-9f8d449df9e2083f8a1398e1dd882125_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-9f8d449df9e2083f8a1398e1dd882125_b.jpg\"/></figure><p>上图为燃料电池组氢气与氧气消耗曲线，以及电流变化曲线</p><p><b>总结</b></p><p>很多人会说燃料电池汽车动力经济性仿真其他工具也能做。不管AMESim、GT Suit等都有自带的燃料电池组及其控制模块。选择CRUISE主要还是因为该软件比较专注于动力经济性仿真领域，输出的结果有一定的代表性，然后就是【思想】对这款软件比较了解。CRUISE在2017版以后已经开始支持燃料电池模块。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-145f70e1d3cfb3ddba0812121551b636_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"579\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-145f70e1d3cfb3ddba0812121551b636_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;579&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"579\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-145f70e1d3cfb3ddba0812121551b636_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-145f70e1d3cfb3ddba0812121551b636_b.jpg\"/></figure><p>质子交换膜与压缩机等数学模型封装成独立的一个模块，用户可以根据供应商提供的数据修改参数。并且提供了一个自带模型，手里有新版CRUISE的小伙伴可以赶紧学习起来。</p><p><b>本文来自我的微信公众号【<i>古德曼汽车工业</i>】，欢迎大家关注</b></p>", 
            "topic": [
                {
                    "tag": "燃料电池汽车", 
                    "tagLink": "https://api.zhihu.com/topics/20005592"
                }, 
                {
                    "tag": "燃料电池 (Fuel cell)", 
                    "tagLink": "https://api.zhihu.com/topics/19884014"
                }, 
                {
                    "tag": "仿真模拟", 
                    "tagLink": "https://api.zhihu.com/topics/19938310"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/71784892", 
            "userName": "思想", 
            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
            "upvote": 0, 
            "title": "CRUISE与Simulink联合仿真介绍", 
            "content": "<p><b>本文来自我的微信公众号【<i>古德曼汽车工业</i>】</b></p><p>使用AVL-CRUISE仿真软件做新能源汽车动力经济性仿真时，无一例外的会遇到控制策略编写的问题。本文分析常用的几种AVL-CRUISE与Simulink联合仿真的方式及他们的优缺点，帮助大家选择合适的联合仿真方式。</p><p>介绍联合仿真前，我们先来看看AVL-CRUISE自带的Function模块，这个模块支持C语言与RPN-Formula，由于C语言比较灵活，所以应用也比较多。准确的说是一种模拟的C语言，支持基础的语法与函数，可以方便使用者做一些简单的策略（指针、结构体共同体这类的就不用想了）。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-984889712e555fea2e59d7b3d5405a1a_b.jpg\" data-rawwidth=\"554\" data-rawheight=\"439\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic3.zhimg.com/v2-984889712e555fea2e59d7b3d5405a1a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;439&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"554\" data-rawheight=\"439\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic3.zhimg.com/v2-984889712e555fea2e59d7b3d5405a1a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-984889712e555fea2e59d7b3d5405a1a_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>这个模块有一个特点就是代码不能太长（印象中是不超过400字符），如果你的控制逻辑相当复杂，那可能需要拆分成多个Function模块来实现。再者，就是输入输出都以数组的形式(a[0]~a[n],y[0]~y[n])，这给编程人员造成不少麻烦，需要通过看描述才能知道输入输出具体代表什么。<b>总的来说开发环境不太友好。</b></p><h3><b>Matlab API</b></h3><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-40799e872961de51fbdb2a773a53a3b4_b.png\" data-rawwidth=\"173\" data-rawheight=\"86\" data-size=\"normal\" data-caption=\"\" class=\"content_image\" width=\"173\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;173&#39; height=&#39;86&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"173\" data-rawheight=\"86\" data-size=\"normal\" data-caption=\"\" class=\"content_image lazy\" width=\"173\" data-actualsrc=\"https://pic1.zhimg.com/v2-40799e872961de51fbdb2a773a53a3b4_b.png\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>将Simulink保存的MDL文件直接加载到AVL-CRUISE的模块中，运行的时候需要同时开启Matlab与AVL-CRUISE两个软件</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-1b1c28859fa4c82438f15c1cacd94211_b.jpg\" data-rawwidth=\"554\" data-rawheight=\"425\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic2.zhimg.com/v2-1b1c28859fa4c82438f15c1cacd94211_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;425&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"554\" data-rawheight=\"425\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic2.zhimg.com/v2-1b1c28859fa4c82438f15c1cacd94211_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-1b1c28859fa4c82438f15c1cacd94211_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>这种仿真的优势很明显，工程师可以非常直观的看到每一个步长的执行过程，判断是否与预先设计的逻辑相符。缺点也非常突出，这样的仿真速度是一个步长一个步长的进行，速度会非常缓慢。实际使用中也不推荐大家使用。</p><h3><b>Matlab DLL</b></h3><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-e681ecbb78024b096801ebd142fca96c_b.png\" data-rawwidth=\"151\" data-rawheight=\"87\" data-size=\"normal\" data-caption=\"\" class=\"content_image\" width=\"151\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;151&#39; height=&#39;87&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"151\" data-rawheight=\"87\" data-size=\"normal\" data-caption=\"\" class=\"content_image lazy\" width=\"151\" data-actualsrc=\"https://pic1.zhimg.com/v2-e681ecbb78024b096801ebd142fca96c_b.png\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>Simulink控制策略模型使用代码生成技术转换为C语言，并且经过编译器生成dll文件格式。32位的Matlab使用自带的lcc-win32编译器，64位Matlab需要额外安装Win SDK7.1编译器，通过AVL-CRUISE提供的编译模块编译生成dll文件。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-0b840dd04fc081bea5035b0b26306f53_b.jpg\" data-rawwidth=\"337\" data-rawheight=\"228\" data-size=\"normal\" data-caption=\"\" class=\"content_image\" width=\"337\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;337&#39; height=&#39;228&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"337\" data-rawheight=\"228\" data-size=\"normal\" data-caption=\"\" class=\"content_image lazy\" width=\"337\" data-actualsrc=\"https://pic4.zhimg.com/v2-0b840dd04fc081bea5035b0b26306f53_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>根据不同编译器选择对应的CRUISE解算器，使用64位编译器Platform就应当选Win64</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-bbff98e85063dea577a896bfed8a2692_b.jpg\" data-rawwidth=\"554\" data-rawheight=\"315\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic3.zhimg.com/v2-bbff98e85063dea577a896bfed8a2692_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;315&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"554\" data-rawheight=\"315\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic3.zhimg.com/v2-bbff98e85063dea577a896bfed8a2692_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-bbff98e85063dea577a896bfed8a2692_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>仿真任务运行时，由CRUISE解算器调用编译过后的DLL文件，过程无需启用Matlab程序。仿真速度非常快，并且对策略进行封装后，策略闭源有助于保密。当然这种联合仿真方式也有个缺点，就是只能运行经济性任务。也是就说，它只适合运行Cycle类型的任务。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-af27c6789e9bdff4dcc469f3fbf456fa_b.jpg\" data-rawwidth=\"554\" data-rawheight=\"277\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic3.zhimg.com/v2-af27c6789e9bdff4dcc469f3fbf456fa_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;277&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"554\" data-rawheight=\"277\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic3.zhimg.com/v2-af27c6789e9bdff4dcc469f3fbf456fa_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-af27c6789e9bdff4dcc469f3fbf456fa_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>如果需要做动力性仿真，要么就设置一个能跑出动力性的循环工况（例如设置一个无法到达的车上，看看最后最高车速能稳定在多少与百公里加速时间），要不就是使用之前提到的Function模块设计个简单的动力性策略。</p><p><b><i>**如果您觉得文章对您有帮助，麻烦点击下关注，订阅号将会持续与您分享经验和小工具**</i></b></p><p class=\"ztext-empty-paragraph\"><br/></p><h3><b>CRUISE Interface</b></h3><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-7bdf276a22a8aeb6d87144906a7e993d_b.png\" data-rawwidth=\"142\" data-rawheight=\"83\" data-size=\"normal\" data-caption=\"\" class=\"content_image\" width=\"142\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;142&#39; height=&#39;83&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"142\" data-rawheight=\"83\" data-size=\"normal\" data-caption=\"\" class=\"content_image lazy\" width=\"142\" data-actualsrc=\"https://pic2.zhimg.com/v2-7bdf276a22a8aeb6d87144906a7e993d_b.png\"/></figure><p>Interface联合仿真，是通过AVL提供的Sfunction进行的，在Matlab中调用CRUISE的解算器，这个过程中无需要额外开启AVL-CRUISE。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-021ff9469e389df562197862ba35bbe4_b.jpg\" data-rawwidth=\"1080\" data-rawheight=\"607\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-021ff9469e389df562197862ba35bbe4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;607&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1080\" data-rawheight=\"607\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-021ff9469e389df562197862ba35bbe4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-021ff9469e389df562197862ba35bbe4_b.jpg\"/></figure><p>封装的S函数模块需要输入的参数有：CRUISE解算器的路径、CRUISE的模型路径、任务文件夹索引、任务的索引。其中任务文件夹索引、任务的索引用来描述第几个计算任务文件夹下的第几个任务。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-f1792d86343050311a94b15f5690c500_b.jpg\" data-rawwidth=\"327\" data-rawheight=\"223\" data-size=\"normal\" data-caption=\"\" class=\"content_image\" width=\"327\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;327&#39; height=&#39;223&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"327\" data-rawheight=\"223\" data-size=\"normal\" data-caption=\"\" class=\"content_image lazy\" width=\"327\" data-actualsrc=\"https://pic1.zhimg.com/v2-f1792d86343050311a94b15f5690c500_b.jpg\"/></figure><p>S函数的输出为CRUISE的输入接口，S函数的输入为CRUISE的输出接口。S函数的信号数要与CRUISE的接口信号数量严格一一对应。即便有的S函数的输出端口在CRUISE中没有实际作用，也要在CRUISE将该信号连接到Monitor上，否则S函数是会报错。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-aa28d81bcbb723a00045a9707e45d8af_b.jpg\" data-rawwidth=\"554\" data-rawheight=\"302\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic4.zhimg.com/v2-aa28d81bcbb723a00045a9707e45d8af_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;302&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"554\" data-rawheight=\"302\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic4.zhimg.com/v2-aa28d81bcbb723a00045a9707e45d8af_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-aa28d81bcbb723a00045a9707e45d8af_b.jpg\"/></figure><p>在Simulink中点击运行，就可以在加入的示波器中看到图形。这种方式的运行速度虽然不如Dll方式来的快，但是比Matlab API快不少了，也方便工程师比较直观的看到整个策略逻辑执行的过程，提高调试策略的效率。这种使用Simulink通过S函数调用CRUISE工程的方式也方便广大搞学术研究的朋友，在Matlab实现更多高大上的优化算法。但问题也不是没有，每一次仿真只能够运行一个仿真任务（通过任务文件夹索引与任务索引来确定）。</p><h3><b>FMU</b></h3><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-169e228fb85eab14ba21a3a00e24e0a8_b.png\" data-rawwidth=\"152\" data-rawheight=\"80\" data-size=\"normal\" data-caption=\"\" class=\"content_image\" width=\"152\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;152&#39; height=&#39;80&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"152\" data-rawheight=\"80\" data-size=\"normal\" data-caption=\"\" class=\"content_image lazy\" width=\"152\" data-actualsrc=\"https://pic1.zhimg.com/v2-169e228fb85eab14ba21a3a00e24e0a8_b.png\"/></figure><p>FMU文件是基于FMI协议进行封装模型文件。FMI协议是独立于建模软件的标准接口协议，可以用于集成不同的软件建立的不同详细程度的模型，进行MIL/SIL/HIL仿真。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-30c72ad2fae1102cb0a085795d3abe7e_b.jpg\" data-rawwidth=\"554\" data-rawheight=\"242\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic3.zhimg.com/v2-30c72ad2fae1102cb0a085795d3abe7e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;242&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"554\" data-rawheight=\"242\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic3.zhimg.com/v2-30c72ad2fae1102cb0a085795d3abe7e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-30c72ad2fae1102cb0a085795d3abe7e_b.jpg\"/></figure><p>其实FMU文件的本质还是上面讲过的DLL方式，它对DLL文件再一次进行封装。文件中增加了输入与输出口的描述信息。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-3eabcd2d896633cf736c10ecd456aaa9_b.jpg\" data-rawwidth=\"554\" data-rawheight=\"135\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic2.zhimg.com/v2-3eabcd2d896633cf736c10ecd456aaa9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;135&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"554\" data-rawheight=\"135\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic2.zhimg.com/v2-3eabcd2d896633cf736c10ecd456aaa9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-3eabcd2d896633cf736c10ecd456aaa9_b.jpg\"/></figure><p>导入FMU文件后，点击解包就能看到输入输出信号的描述</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-ad02dbb47f3d54cf3167078c53679935_b.jpg\" data-rawwidth=\"545\" data-rawheight=\"373\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"545\" data-original=\"https://pic2.zhimg.com/v2-ad02dbb47f3d54cf3167078c53679935_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;545&#39; height=&#39;373&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"545\" data-rawheight=\"373\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"545\" data-original=\"https://pic2.zhimg.com/v2-ad02dbb47f3d54cf3167078c53679935_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-ad02dbb47f3d54cf3167078c53679935_b.jpg\"/></figure><p>FMU文件的导出需要在Matlab中安装一个插件在Matlab的项目管理状态下，将Simulink导出为FMU文件</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c102f9f16d7876475cc3fe7d0eade2d7_b.jpg\" data-rawwidth=\"554\" data-rawheight=\"271\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic4.zhimg.com/v2-c102f9f16d7876475cc3fe7d0eade2d7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;271&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"554\" data-rawheight=\"271\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic4.zhimg.com/v2-c102f9f16d7876475cc3fe7d0eade2d7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-c102f9f16d7876475cc3fe7d0eade2d7_b.jpg\"/></figure><p>既然本质与Dll方式一致，所以优缺点就与DLL方式是一样，就不重复说明</p><h3><b>最后使用表格的形式总结下内容</b></h3><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-53ddcb949ab92386fd85de183154a895_b.jpg\" data-rawwidth=\"554\" data-rawheight=\"208\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic2.zhimg.com/v2-53ddcb949ab92386fd85de183154a895_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;208&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"554\" data-rawheight=\"208\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic2.zhimg.com/v2-53ddcb949ab92386fd85de183154a895_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-53ddcb949ab92386fd85de183154a895_b.jpg\"/></figure><p>每种联合仿真方式都有自己的特点，需要根据自身编程习惯，项目需求等，选择合适的仿真方式</p><p><b>关于CRUISE更多咨询可以关注我的微信公用号【古德曼汽车工业】，或私信联系我</b></p>", 
            "topic": [
                {
                    "tag": "simulink", 
                    "tagLink": "https://api.zhihu.com/topics/19747197"
                }, 
                {
                    "tag": "经济性", 
                    "tagLink": "https://api.zhihu.com/topics/20174827"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/71561119", 
            "userName": "思想", 
            "userLink": "https://www.zhihu.com/people/59e278fe29f72d5b0187cf42a1c0099d", 
            "upvote": 1, 
            "title": "CRUISE与Isight联合仿真优化", 
            "content": "<p><b>本文来自我的微信公众号【<i>古德曼汽车工业</i>】欢迎大家关注</b></p><h2><b>需要解决什么问题？</b></h2><p>动力连参数优化</p><p>    动力链匹配期间，经常会遇到主减速优化，变速箱速比优化，甚至换挡策略优化这类寻找最优值的问题。项目要求性能匹配工程师，根据已经确定的动力性指标，找到一组经济性最优的配置。</p><p>逻辑阈值的优化</p><p>    另外由于目前新能源汽车的能量管理策略大部分是基于逻辑门开发的。所以这样的控制策略中就会有非常多的判断阈值，如：并联驱动模式与纯电驱动切换的阈值、前后电机扭矩分配系数等。也是需要策略工程师在满足动力性指标的前提下寻找最优值。</p><h2><b>Isight软件介绍</b></h2><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-9ec91d99b8295e34ceb45e4ed0bdffe5_b.jpg\" data-rawwidth=\"454\" data-rawheight=\"238\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"454\" data-original=\"https://pic2.zhimg.com/v2-9ec91d99b8295e34ceb45e4ed0bdffe5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;454&#39; height=&#39;238&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"454\" data-rawheight=\"238\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"454\" data-original=\"https://pic2.zhimg.com/v2-9ec91d99b8295e34ceb45e4ed0bdffe5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-9ec91d99b8295e34ceb45e4ed0bdffe5_b.jpg\"/></figure><p>    Ds Isight为法国著名飞机制造公司达索旗下的一款多功能优化工具软件。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-40d9c9b4eef6e21c76277129c1cd2edb_b.jpg\" data-rawwidth=\"716\" data-rawheight=\"579\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"716\" data-original=\"https://pic4.zhimg.com/v2-40d9c9b4eef6e21c76277129c1cd2edb_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;716&#39; height=&#39;579&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"716\" data-rawheight=\"579\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"716\" data-original=\"https://pic4.zhimg.com/v2-40d9c9b4eef6e21c76277129c1cd2edb_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-40d9c9b4eef6e21c76277129c1cd2edb_b.jpg\"/></figure><p>   Isight软件本身集成了多种常用的优化算法（如：NLPQLP、遗传算法等等），并对算法进行了封装。封装算法的好处是非常容易上手，用户直接修改参数就可以对算法进行调整，十分方便。</p><h2><b>CRUISE与Isight联合仿真优化</b></h2><p>联合仿真接口</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-57c4eb4b93f3b70910df077f8910e55b_b.jpg\" data-rawwidth=\"878\" data-rawheight=\"604\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"878\" data-original=\"https://pic4.zhimg.com/v2-57c4eb4b93f3b70910df077f8910e55b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;878&#39; height=&#39;604&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"878\" data-rawheight=\"604\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"878\" data-original=\"https://pic4.zhimg.com/v2-57c4eb4b93f3b70910df077f8910e55b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-57c4eb4b93f3b70910df077f8910e55b_b.jpg\"/></figure><p>    Isight目前已经集成了非常多软件的运行接口，很遗憾暂时不支持CRUISE。但是Isight提供了一个Simcode的功能模块，允许用户通过自定义批处理文件作为联合仿真的接口。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-6db5f7bc50c6979427e1957b88ef92e7_b.jpg\" data-rawwidth=\"1080\" data-rawheight=\"564\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-6db5f7bc50c6979427e1957b88ef92e7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;564&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1080\" data-rawheight=\"564\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-6db5f7bc50c6979427e1957b88ef92e7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-6db5f7bc50c6979427e1957b88ef92e7_b.jpg\"/></figure><p>    批处理文件包含的信息有<b>CRUISE解算器的位置、需要调用的CRUISE工程位置</b>。这样就不需要启动CRUISE软件，也能对工程进行仿真计算。</p><p>Bat生成工具</p><p>    如果bat文件每次都用人工创建，难免偶尔出现问题，所以【思想】开发一款可以自动生成bat的工具，免除手工创建的烦恼。关于本工具请关注公众号【古德曼汽车工业】相关文章，或直接私信联系我。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-1cd0e1a1470c835f5424c8ac98ba1696_b.jpg\" data-rawwidth=\"641\" data-rawheight=\"197\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"641\" data-original=\"https://pic3.zhimg.com/v2-1cd0e1a1470c835f5424c8ac98ba1696_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;641&#39; height=&#39;197&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"641\" data-rawheight=\"197\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"641\" data-original=\"https://pic3.zhimg.com/v2-1cd0e1a1470c835f5424c8ac98ba1696_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-1cd0e1a1470c835f5424c8ac98ba1696_b.jpg\"/></figure><p>联合仿真优化流程</p><p>首先需要了解下CRUISE工程中，相关的文件存储了哪些内容：</p><p><b>dbf文件：</b>用于保存模型中各个模块的参数信息，如发动机数据、电机数据、档位信息、换挡策略等。</p><p><b>log文件：</b>用于保存仿真计算的任务结果数据，其中包含Summary.log/Cruise.log/Result.log</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-cd01ca88b5adb172fd7bf048b3f246f8_b.jpg\" data-rawwidth=\"381\" data-rawheight=\"151\" data-size=\"normal\" data-caption=\"\" class=\"content_image\" width=\"381\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;381&#39; height=&#39;151&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"381\" data-rawheight=\"151\" data-size=\"normal\" data-caption=\"\" class=\"content_image lazy\" width=\"381\" data-actualsrc=\"https://pic1.zhimg.com/v2-cd01ca88b5adb172fd7bf048b3f246f8_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>    Isight操作CRUISE项目中的dbf文件，读取并修改优化变量，通过bat文件以命令行的形式，调用CRUISE运行仿真任务。每当结束一次仿真任务，Isight软件通过读取log文件获取边界数据与目标数据，通过优化算法生成新的变量值再次写入dbf文件，并且使用Calculator功能对变量间的数值关系作限制，确保变量间的关系符合实际。如此循环迭代优化，直到满足优化算法设置的退出条件。</p><p>总结一下</p><p>    既然Isight可以用Bat批处理的形式调用CRUISE工程，那么我们也能够使用自己熟悉的开发语言，如：C#、Python等，开发更加先进的优化算法取代掉Isight，该部分内容请关注后续文章。</p><h2><b>纯电动两档箱换挡策略优化</b></h2><p>    下面用一个纯电动两档箱换挡策略优化的实例，演示Isight与CRUISE联合仿真优化。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-d4bd26f3e9ef42a2ba1aa00f9698f0bd_b.jpg\" data-rawwidth=\"904\" data-rawheight=\"672\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"904\" data-original=\"https://pic2.zhimg.com/v2-d4bd26f3e9ef42a2ba1aa00f9698f0bd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;904&#39; height=&#39;672&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"904\" data-rawheight=\"672\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"904\" data-original=\"https://pic2.zhimg.com/v2-d4bd26f3e9ef42a2ba1aa00f9698f0bd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-d4bd26f3e9ef42a2ba1aa00f9698f0bd_b.jpg\"/></figure><p>    虽然AVL-CRUISE自带了一个换挡策略优化工具GSP，但是这个模块完全是为内燃机开发的。模块中需要输入不少内燃机的特性参数，这不符合电机的需求。所以需要结合Isight自带的优化算法，寻找最优的换挡策略。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-7f085afb1937a2b92a174c8ec42476c5_b.jpg\" data-rawwidth=\"1080\" data-rawheight=\"841\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-7f085afb1937a2b92a174c8ec42476c5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;841&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1080\" data-rawheight=\"841\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-7f085afb1937a2b92a174c8ec42476c5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-7f085afb1937a2b92a174c8ec42476c5_b.jpg\"/></figure><p>    可以看到这是一个两参数的换挡策略，包含了升档策略与降档策略。上图中对应的a、b、c、d分别为换挡次数、油门开度、升档车速、降档车速。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-7da8e840d1bf1ada93044ff07a11d97b_b.jpg\" data-rawwidth=\"1023\" data-rawheight=\"667\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1023\" data-original=\"https://pic4.zhimg.com/v2-7da8e840d1bf1ada93044ff07a11d97b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1023&#39; height=&#39;667&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1023\" data-rawheight=\"667\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1023\" data-original=\"https://pic4.zhimg.com/v2-7da8e840d1bf1ada93044ff07a11d97b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-7da8e840d1bf1ada93044ff07a11d97b_b.jpg\"/></figure><p>    如上文介绍的，换挡策略存放在dbf文件当中。需要Isight读取dbf中的换挡策略，并一一设置成为优化变量。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-a0e5bc2c3ba4064009655f845ae6db10_b.jpg\" data-rawwidth=\"978\" data-rawheight=\"521\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"978\" data-original=\"https://pic1.zhimg.com/v2-a0e5bc2c3ba4064009655f845ae6db10_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;978&#39; height=&#39;521&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"978\" data-rawheight=\"521\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"978\" data-original=\"https://pic1.zhimg.com/v2-a0e5bc2c3ba4064009655f845ae6db10_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-a0e5bc2c3ba4064009655f845ae6db10_b.jpg\"/></figure><p>   在输出选项卡中，读取不同的log文件，包含Cruise.log、Result.log，从中选取仿真的输出结果，分别作为目标与边界。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b29db5ef0537577a13176406b6962a68_b.jpg\" data-rawwidth=\"727\" data-rawheight=\"325\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"727\" data-original=\"https://pic1.zhimg.com/v2-b29db5ef0537577a13176406b6962a68_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;727&#39; height=&#39;325&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"727\" data-rawheight=\"325\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"727\" data-original=\"https://pic1.zhimg.com/v2-b29db5ef0537577a13176406b6962a68_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b29db5ef0537577a13176406b6962a68_b.jpg\"/></figure><p>   根据各自项目中制定的动力性指标，作为优化的边界。如本例中设置百公里加速时间、最大爬坡度、最高车速作为边界条件，并且赋予适当的边界上限与下限</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-05445b8f1bab6f6c61e6a761610c4095_b.jpg\" data-rawwidth=\"743\" data-rawheight=\"491\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"743\" data-original=\"https://pic2.zhimg.com/v2-05445b8f1bab6f6c61e6a761610c4095_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;743&#39; height=&#39;491&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"743\" data-rawheight=\"491\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"743\" data-original=\"https://pic2.zhimg.com/v2-05445b8f1bab6f6c61e6a761610c4095_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-05445b8f1bab6f6c61e6a761610c4095_b.jpg\"/></figure><p>    算法方面推荐大家使用多岛屿遗传算法，具有收敛快等特点。不同算法设置的参数项都不一样，这需要用户对调用的算法有一定的理论知识，然后再根据具体项目的需要来调整。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-50cd6d7740288f49bd2dcb811a811d9e_b.jpg\" data-rawwidth=\"1080\" data-rawheight=\"677\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-50cd6d7740288f49bd2dcb811a811d9e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;677&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1080\" data-rawheight=\"677\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-50cd6d7740288f49bd2dcb811a811d9e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-50cd6d7740288f49bd2dcb811a811d9e_b.jpg\"/></figure><p>     最后可以在结果管理器中查看，迭代计算过程中百公里电耗的变化情况。然后打开CRUISE的GB Program模块就能看到优化后的换挡策略。</p><p>关于CRUISE更多咨询可以关注我的微信公用号【古德曼汽车工业】，或私信联系我</p><p><br/> </p>", 
            "topic": [
                {
                    "tag": "新能源汽车", 
                    "tagLink": "https://api.zhihu.com/topics/19731651"
                }, 
                {
                    "tag": "经济性", 
                    "tagLink": "https://api.zhihu.com/topics/20174827"
                }, 
                {
                    "tag": "电动汽车", 
                    "tagLink": "https://api.zhihu.com/topics/19561561"
                }
            ], 
            "comments": []
        }
    ], 
    "url": "https://zhuanlan.zhihu.com/goodman"
}

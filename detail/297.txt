{
    "title": "软件自动化：缺陷修复与代码自动生成", 
    "description": "", 
    "followers": [
        "https://www.zhihu.com/people/xiao-tan-95-50", 
        "https://www.zhihu.com/people/dong-li-ming-97-45", 
        "https://www.zhihu.com/people/e-e-e-wo-bu-shuai", 
        "https://www.zhihu.com/people/idasummer", 
        "https://www.zhihu.com/people/nayami-kido", 
        "https://www.zhihu.com/people/ghj-84", 
        "https://www.zhihu.com/people/he-jia-wei-64-29", 
        "https://www.zhihu.com/people/xuan-wen-long-68", 
        "https://www.zhihu.com/people/neko-28-33", 
        "https://www.zhihu.com/people/manus", 
        "https://www.zhihu.com/people/hu-ying-cong-59", 
        "https://www.zhihu.com/people/tian-xiao-kang-26", 
        "https://www.zhihu.com/people/TTNULL", 
        "https://www.zhihu.com/people/bu-ke-miao-shu-43", 
        "https://www.zhihu.com/people/rrrrinbo", 
        "https://www.zhihu.com/people/dddavid-82", 
        "https://www.zhihu.com/people/shendong-21-60", 
        "https://www.zhihu.com/people/go-ho", 
        "https://www.zhihu.com/people/link-24-63", 
        "https://www.zhihu.com/people/yi-xin-10", 
        "https://www.zhihu.com/people/shqking", 
        "https://www.zhihu.com/people/fang-peng-cheng-52", 
        "https://www.zhihu.com/people/bestrv", 
        "https://www.zhihu.com/people/vicky-zhang-87", 
        "https://www.zhihu.com/people/wang-fei-36-46", 
        "https://www.zhihu.com/people/tan-suan-gai-12-31", 
        "https://www.zhihu.com/people/bai-yu-chan-31", 
        "https://www.zhihu.com/people/lin-78-91-49", 
        "https://www.zhihu.com/people/dun-ni-wu-shan", 
        "https://www.zhihu.com/people/yun-ji-sang-51", 
        "https://www.zhihu.com/people/le-you-shen", 
        "https://www.zhihu.com/people/tang-tang-19-47-40", 
        "https://www.zhihu.com/people/wang-a-guo-87", 
        "https://www.zhihu.com/people/wang-cheng-lin-72-2", 
        "https://www.zhihu.com/people/lucky-code", 
        "https://www.zhihu.com/people/zhong-zhi-44-40", 
        "https://www.zhihu.com/people/chen-xiao-yu-7-96", 
        "https://www.zhihu.com/people/zhu-chen-guang-69", 
        "https://www.zhihu.com/people/qiaoanlu", 
        "https://www.zhihu.com/people/reseted1548775774657", 
        "https://www.zhihu.com/people/tian-cheng-jin", 
        "https://www.zhihu.com/people/chen-ran-72-38", 
        "https://www.zhihu.com/people/sinojoy", 
        "https://www.zhihu.com/people/sproblvem", 
        "https://www.zhihu.com/people/ou-jia-fei", 
        "https://www.zhihu.com/people/YukiSou", 
        "https://www.zhihu.com/people/kun-gao-5", 
        "https://www.zhihu.com/people/abdlocker", 
        "https://www.zhihu.com/people/zheduanyin", 
        "https://www.zhihu.com/people/jian-tie", 
        "https://www.zhihu.com/people/lion-don", 
        "https://www.zhihu.com/people/wei-chi-xue-liang", 
        "https://www.zhihu.com/people/qian-nian-zhi-hou-95", 
        "https://www.zhihu.com/people/shen-bin-33", 
        "https://www.zhihu.com/people/tbabm", 
        "https://www.zhihu.com/people/wyl-30-81", 
        "https://www.zhihu.com/people/dale-yang-75", 
        "https://www.zhihu.com/people/wang-shang-wen-61", 
        "https://www.zhihu.com/people/yifei.teng", 
        "https://www.zhihu.com/people/zhou-jia-yu-59", 
        "https://www.zhihu.com/people/typoway", 
        "https://www.zhihu.com/people/lan-lan-lan-lan-96-82", 
        "https://www.zhihu.com/people/xu-yong-77-26", 
        "https://www.zhihu.com/people/wenwen-wang-42", 
        "https://www.zhihu.com/people/zhaojinxiang", 
        "https://www.zhihu.com/people/yu-hua-49-23", 
        "https://www.zhihu.com/people/Nicekingwei", 
        "https://www.zhihu.com/people/neolith2016", 
        "https://www.zhihu.com/people/lambda-5", 
        "https://www.zhihu.com/people/li-yu-90", 
        "https://www.zhihu.com/people/liu-jin-jian-58", 
        "https://www.zhihu.com/people/songmao", 
        "https://www.zhihu.com/people/zhu-feng-min-73", 
        "https://www.zhihu.com/people/lisil4", 
        "https://www.zhihu.com/people/chenjie-23", 
        "https://www.zhihu.com/people/shengrang", 
        "https://www.zhihu.com/people/wayne-xu-16", 
        "https://www.zhihu.com/people/csxqli", 
        "https://www.zhihu.com/people/loss_of_name", 
        "https://www.zhihu.com/people/monad-process", 
        "https://www.zhihu.com/people/dreaminpast", 
        "https://www.zhihu.com/people/2bdenny", 
        "https://www.zhihu.com/people/happyxzw", 
        "https://www.zhihu.com/people/secwtacherinzhihu", 
        "https://www.zhihu.com/people/woctordho", 
        "https://www.zhihu.com/people/cang-hai-bian-zhou", 
        "https://www.zhihu.com/people/lenged2016", 
        "https://www.zhihu.com/people/snowpacer", 
        "https://www.zhihu.com/people/indexmotion", 
        "https://www.zhihu.com/people/Garfy", 
        "https://www.zhihu.com/people/jello-chen", 
        "https://www.zhihu.com/people/le-bu-lang-39-61", 
        "https://www.zhihu.com/people/andrew-liu-92", 
        "https://www.zhihu.com/people/rei-hawking", 
        "https://www.zhihu.com/people/halfer53", 
        "https://www.zhihu.com/people/heartstone", 
        "https://www.zhihu.com/people/fengxueren", 
        "https://www.zhihu.com/people/juking-61", 
        "https://www.zhihu.com/people/yong_lee", 
        "https://www.zhihu.com/people/jlangplusplus", 
        "https://www.zhihu.com/people/huang-hao-94-83", 
        "https://www.zhihu.com/people/txhwind", 
        "https://www.zhihu.com/people/white-water", 
        "https://www.zhihu.com/people/meng-meng-meng-bao-bao-57", 
        "https://www.zhihu.com/people/xchan", 
        "https://www.zhihu.com/people/wang-er-46-91", 
        "https://www.zhihu.com/people/kinglong-29", 
        "https://www.zhihu.com/people/zhanba", 
        "https://www.zhihu.com/people/Kaoet", 
        "https://www.zhihu.com/people/xiu-yang-68", 
        "https://www.zhihu.com/people/NotDeep", 
        "https://www.zhihu.com/people/gu-lu-5", 
        "https://www.zhihu.com/people/changchun.fan", 
        "https://www.zhihu.com/people/leolai", 
        "https://www.zhihu.com/people/zimpha", 
        "https://www.zhihu.com/people/shor", 
        "https://www.zhihu.com/people/kaoyanzz", 
        "https://www.zhihu.com/people/pan-guo-sheng-50", 
        "https://www.zhihu.com/people/tomi-57-19", 
        "https://www.zhihu.com/people/duan-xing-99", 
        "https://www.zhihu.com/people/chen-wei-teng-63", 
        "https://www.zhihu.com/people/Adrian145", 
        "https://www.zhihu.com/people/6yaoye", 
        "https://www.zhihu.com/people/lu-jian-dong-32", 
        "https://www.zhihu.com/people/sissel-wu", 
        "https://www.zhihu.com/people/Mr-Bear-5", 
        "https://www.zhihu.com/people/zha-shi-ming", 
        "https://www.zhihu.com/people/ren-sheng-lv-zhe-15", 
        "https://www.zhihu.com/people/Are_you_Well", 
        "https://www.zhihu.com/people/will-mcavoy", 
        "https://www.zhihu.com/people/zhinengxiugaiyici", 
        "https://www.zhihu.com/people/zsf222", 
        "https://www.zhihu.com/people/ucme", 
        "https://www.zhihu.com/people/xlzhihu", 
        "https://www.zhihu.com/people/zhou-xiao-long-22-97", 
        "https://www.zhihu.com/people/chen-xiao-bai-68-21", 
        "https://www.zhihu.com/people/wentao-wang-51", 
        "https://www.zhihu.com/people/wei-jian-feng-26-15", 
        "https://www.zhihu.com/people/henry-zhao-37", 
        "https://www.zhihu.com/people/ZHANG_Yushan", 
        "https://www.zhihu.com/people/sddcreerf", 
        "https://www.zhihu.com/people/chu-xuan-90", 
        "https://www.zhihu.com/people/hemupang", 
        "https://www.zhihu.com/people/ben-wong-67", 
        "https://www.zhihu.com/people/jass-lin", 
        "https://www.zhihu.com/people/dongqiu", 
        "https://www.zhihu.com/people/twofrogs", 
        "https://www.zhihu.com/people/cao-dong-yu-52", 
        "https://www.zhihu.com/people/lliu", 
        "https://www.zhihu.com/people/lei-ying-18-84", 
        "https://www.zhihu.com/people/chen-long-82-66", 
        "https://www.zhihu.com/people/RoniZeng", 
        "https://www.zhihu.com/people/max_xbw", 
        "https://www.zhihu.com/people/xue-jie-98-1", 
        "https://www.zhihu.com/people/bacchus", 
        "https://www.zhihu.com/people/riddle-49", 
        "https://www.zhihu.com/people/ba-shan-miao-yin-shi", 
        "https://www.zhihu.com/people/jcvb", 
        "https://www.zhihu.com/people/guan-yu-xiang-7", 
        "https://www.zhihu.com/people/he-ze-zhou-26", 
        "https://www.zhihu.com/people/boojum", 
        "https://www.zhihu.com/people/miraclefeng", 
        "https://www.zhihu.com/people/jiang-yan-yan-75", 
        "https://www.zhihu.com/people/yu-sheng-52-46", 
        "https://www.zhihu.com/people/zzyo-25", 
        "https://www.zhihu.com/people/yun_lin", 
        "https://www.zhihu.com/people/lu-si-rui-91", 
        "https://www.zhihu.com/people/ji-ru-yi-3", 
        "https://www.zhihu.com/people/xiao-ying-46-67", 
        "https://www.zhihu.com/people/ling-feng-22-38", 
        "https://www.zhihu.com/people/yan-xun-yu-73", 
        "https://www.zhihu.com/people/long-gzwen-ran"
    ], 
    "article": [
        {
            "url": "https://zhuanlan.zhihu.com/p/42341874", 
            "userName": "熊英飞", 
            "userLink": "https://www.zhihu.com/people/10502758c54b069c4ff010120a85037c", 
            "upvote": 105, 
            "title": "我为什么研究自动缺陷修复", 
            "content": "<p>在知乎上开了一个专栏，准备不定期更新系列文章介绍缺陷修复技术。本文是第一篇，主要介绍缺陷修复研究的意义。后续计划内容还包括缺陷修复目前的技术体系介绍和主要挑战总结。欢迎各位读者留下宝贵意见。</p><h2>缺陷修复技术介绍</h2><p>缺陷修复技术大概是从2000年开始有较多研究。最早的研究集中在演化缺陷修复，即如何在软件制品被修改的时候自动修复演化引入的不一致缺陷，产生了双向变换等技术。后来的研究重心转到了更通用的程序缺陷修复上，即给定一个程序和一个该程序不满足的规约（可以是不完备的规约，比如测试等），研究如何自动的生成程序上的补丁使得该程序满足规约。</p><p>目前，程序缺陷修复的研究已经吸引了软件工程、程序语言、人工智能、形式化验证等四个社区的大量研究人员投入。根据社区网站<a href=\"https://link.zhihu.com/?target=http%3A//program-repair.org\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">program-repair.org</span><span class=\"invisible\"></span></a>统计，仅2017一年就有39篇缺陷修复论文发表在各个不同领域的主流会议上。</p><h2>研究缺陷修复的产业意义</h2><p>当前缺陷修复技术在产业界的主要作用是辅助程序员修复缺陷，提高缺陷修复的效率和质量。缺陷修复是软件开发过程中的主要活动之一。比如软件工程的部分经典文献表明，软件维护占软件成本的90%以上[8]，而软件维护中35.6%的活动都是在修复缺陷[9]。而来自2013年剑桥大学的一份报告更是估算现代软件开发中缺陷修复占用成本达到了50%[10]。已有研究表明[1]，当程序员有自动生成的高质量补丁作为参考时，修复的效率和质量都有显著提升。</p><p>一项技术有没有产业意义，其实看各个大公司的行动就比较清楚了。从我回国发表了一批缺陷修复论文之后，就不断有国内公司和研究所找我交流缺陷修复的相关技术。就我目前了解的情况，华为和阿里都有较大的团队专门从事缺陷修复工具的开发，360公司和多个航空航天的研究所都有专人跟踪研究缺陷修复技术，有没有开发工具尚不清楚。</p><p>最初交流的时候，我其实对应用价值也有疑惑的：按目前缺陷修复技术的发展水平，能修复的缺陷只占全部缺陷的很小一部分，你们为什么不等到学术界研究更成熟之后再采用这些技术？最早把我说服的是华为的工程师：你看，我们华为公司几万名程序员，每人每天都花大量的时间在修复缺陷。哪怕是只能自动修复1%的缺陷，给每名程序员节省千分之一的开发时间，对于整个公司来说就是每年千万元级的成本节省。后来阿里等公司的工程师也表达了类似的观点。</p><p>除了节约成本，很多航空航天的研究所向我强调的是缺陷修复在提高软件质量上的作用。程序员修复缺陷的时候很可能引入其他缺陷。以我们开发的内存/资源泄漏修复技术为例，虽然现在有很多工具都能查找内存泄漏，但修复内存泄漏仍然是比较困难的，一不小心就会引入重复释放（double-free），使用前释放（use-after-free）等问题，而这些问题都会直接导致程序崩溃。在实践中，常常出现在软件发布前发现了内存泄漏，开发团队连夜开会讨论却最终决定保险起见不修复的情况。而采用我们的技术，可以保证找到的补丁都是安全的，即确保不会出现上述问题，从而提高了软件的质量。</p><p>另外，最近一些航空航天领域的学者甚至开始设想一个全新的应用场景。在卫星等无人值守的航天设备中，有时会出现发射之后因为软件缺陷失联的情况。一旦无法联系，相当于上亿的投入就打了水漂。如果能在卫星内植入一套缺陷修复技术，在卫星出现故障的时候试图自动修复软件的缺陷，至少有一定概率能救回这些卫星，也就提高了整体系统的健壮性。</p><p>除了国内公司，海外大公司也在缺陷修复技术持续投入。谷歌是这方面的先行者之一。在发表在Communications of ACM上的论文[2]中，谷歌公司的工程师认为修复检查出的缺陷是一项昂贵(expensive)和高风险(risky)的工作，并率先开发了支持修复的缺陷检查工具Tricorder[3]。而富士通更是投入了大量力量开展缺陷修复研究，有多篇修复领域的前沿论文都来自于富士通公司[4-6]。最近，Facebook也公布了自己的缺陷修复工具<a href=\"https://link.zhihu.com/?target=https%3A//code.fb.com/developer-tools/finding-and-fixing-software-bugs-automatically-with-sapfix-and-sapienz/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">SapFix</a>，用于修复安卓的缺陷修复。</p><p>事实上，我们团队的修复技术也已经被应用到了多个领域。国内某顶级IT企业已经和我们完成了一期合作，我们的工具已经在该企业内部测试环境检查超过数百万行代码并修复了多处缺陷。目前我们正在讨论第二期面向更多缺陷类型的下一步合作。Linux社区的新一代内核配置工具开发项目已经选用了我们的交互式配置修复技术，相关项目负责人在调研了多个配置修复技术之后，认为我们的技术是“最实用的技术之一”。我们的技术还在其他多家企业和学术项目中有应用，同时非常欢迎业界和我们讨论技术合作。</p><h2>研究缺陷修复的学术意义</h2><p>已故软件领域学术泰斗徐家福先生很早就指出提高软件生产率的根本途径是软件自动化[7]，即尽可能自动化软件开发中的各项活动。徐先生对于软件自动化给出了广义和狭义两方面的定义。广义包括自动化软件开发中的各项活动，即包括分析、设计、编码、测试、调试、修复等各项活动。而更核心的狭义定义就是只自动化从软件需求规约到代码的过程。实现软件自动化一直是软件学科研究人员的最高理想之一。</p><p>同徐先生研究软件自动化的年代不同，现代计算机学科的发展对软件自动化提出了更强的需求。目前是一个计算机技术高度发展的年代，在各行各业，数字设备都在取代传统设备，而数字设备越来越多地依赖软件控制，也就是说，各行各业都有大量的软件需求。面对这些需求，有限的程序员数量将会是制约产业发展的重要因素。通过软件自动化，从根本上提高软件生产率，有望大幅缓解这一制约的矛盾。</p><p>现在我们回到缺陷修复。一方面，缺陷自动修复技术属于广义的软件自动化技术。另一方面，在我看来，研究缺陷修复更是实现狭义软件自动化的有效途径。在现代开发过程如敏捷开发中，软件开发是一个不断修改软件的迭代过程。即程序员和用户紧密联系，根据用户反馈不断添加功能或者修复缺陷。而缺陷和新功能往往并没有清楚的界限，其实都是现有的软件系统并没有满足用户的需求。那么，我们从缺陷修复开始研究，不断试图自动修复更难的缺陷，也许有一天就可以自动完成新功能的实现，最终实现自动开发软件系统。同时，这条路线也保证了，如果最后的最高理想难以实现，中间产生的任何研究结果都是可以应用的。</p><h2>缺陷自动修复/软件自动化能实现吗？</h2><p>常常收到的一条反馈是：自动缺陷修复/软件自动化这么难，真的有可能最终做出来并达到良好效果的吗？作为博士生/青年教师应该投入这一方向吗？</p><p>对于这个问题我的首先回答是：做科研就不要惧怕困难的问题。有很多问题都是经过几代人前仆后继的努力才解决的。比如现在火爆的深度学习，就是起源于上世纪60年代的人工神经网络，经过五十多年的发展才有今天的应用。而数学物理学等传统学科中研究了几百年的困难问题比比皆是。事实上，这类困难的问题是正应该学术界研究的，因为无论你是否彻底解决了问题，只要有进展都可以写成论文发表出来，而突破性进展也会被同行认可（参考陈景润/张益唐）。另一方面，如果我们可以预期一个领域在短期内就能获得突破，那么很大概率这个领域已经不适合学术界研究了。因为工业界会有很多公司投入资本开展研究，而学术界的的力量往往是无法和大资本抗衡的。</p><p>当然，作为研究人员，对于一个长期研究的问题，确实需要有一些证据说服自己这个问题最终是可以做出来的。对于我们来说，这里最大的不确定性在于软件的需求其实几乎不能被完整表达成规约的，那么对于一个需求不是完全清楚的软件系统，自动修复技术真的能修复缺陷吗？为了解答这个疑问，我们做过一个受控实验，让程序员在不了解软件需求的情况下去修复大型软件系统中的50个随机缺陷[11]。实验结果表明，即使不了解软件的功能，该程序员仍然修复了超过90%的缺陷，正确率也超过了90%。如果我们假设程序员在修复过程中经验和策略都能够通过某种方式转变成算法，那么缺陷修复系统也至少有望达到了类似的修复率和正确率，其应用前景还是非常可观的。同时，我们看到剩下不能被修复的缺陷和修复错误的缺陷也确实是由于程序员不够了解软件需求导致的，因此我们也在研究交互式的修复技术[12]，当修复系统对于某方面不够清楚的时候，通过向用户提问来获取所需的信息。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>[1] Yida Tao, Jindae Kim, Sunghun Kim, Chang Xu: Automatically generated patches as debugging aids: a human study. SIGSOFT FSE 2014: 64-74</p><p>[2] Caitlin Sadowski, Edward Aftandilian, Alex Eagle, Liam Miller-Cushon, Ciera Jaspan: Lessons from building static analysis tools at Google. Commun. ACM 61(4): 58-66 (2018)</p><p>[3] Caitlin Sadowski, Jeffrey van Gogh, Ciera Jaspan, Emma Söderberg, Collin Winter: Tricorder: Building a Program Analysis Ecosystem. ICSE 2015: 598-608</p><p>[4] Ripon K. Saha, Yingjun Lyu, Hiroaki Yoshida, Mukul R. Prasad: ELIXIR: effective object oriented program repair. ASE 2017: 648-659</p><p>[5] Ripon K. Saha, Yingjun Lyu, Wing Lam, Hiroaki Yoshida, Mukul R. Prasad: Bugs.jar: a large-scale, diverse dataset of real-world Java bugs. MSR 2018: 10-13</p><p>[6] Ben Mehne, Hiroaki Yoshida, Mukul R. Prasad, Koushik Sen, Divya Gopinath, Sarfraz Khurshid: Accelerating Search-Based Program Repair. ICST 2018: 227-238</p><p>[7] 徐家福. 软件自动化. 计算机研究与发展, 1988 (11): 9-15</p><p>[8] R. C. Seacord, D. Plakosh, and G. A. Lewis, Modernizing legacy systems: software technologies, engineering processes, and business practices. Addison-Wesley Professional, 2003</p><p>[9] B. P. Lientz, E. B. Swanson, and G. E. Tompkins, “Characteristics of application software maintenance,”Commun. ACM, vol. 21, no. 6, pp. 466–471, 1978.</p><p>[10] Britton et al. Quantify the time and cost saved using reversible debuggers. Cambridge report, 2013</p><p>[11] Jiajun Jiang, Yingfei Xiong: Can defects be fixed with weak test suites? An analysis of 50 defects from Defects4J. CoRR abs/1705.04149 (2017)</p><p>[12] Yingfei Xiong, Hansheng Zhang, Arnaud Hubaux, Steven She, Jie Wang, Krzysztof Czarnecki: Range Fixes: Interactive Error Resolution for Software Configuration. IEEE Trans. Software Eng. 41(6): 603-619 (2015)</p><p></p>", 
            "topic": [
                {
                    "tag": "计算机科学", 
                    "tagLink": "https://api.zhihu.com/topics/19580349"
                }, 
                {
                    "tag": "软件工程", 
                    "tagLink": "https://api.zhihu.com/topics/19557552"
                }, 
                {
                    "tag": "Bug 修复", 
                    "tagLink": "https://api.zhihu.com/topics/19629729"
                }
            ], 
            "comments": [
                {
                    "userName": "栗板", 
                    "userLink": "https://www.zhihu.com/people/c9a565070875d96b3e9286a7cb87fe03", 
                    "content": "点赞是美德", 
                    "likes": 1, 
                    "childComments": []
                }, 
                {
                    "userName": "刘勇", 
                    "userLink": "https://www.zhihu.com/people/2898f829f8d2a1293953fe346a914615", 
                    "content": "赞！", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "hazelnutsgz", 
                    "userLink": "https://www.zhihu.com/people/a2e3d9ef09ae2daa5562ef5322c80e77", 
                    "content": "老师还招phd么（逃", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "saturnman", 
                    "userLink": "https://www.zhihu.com/people/fcb62009551c59f33d6ed9e58e1fe648", 
                    "content": "其实是合理的，因为大部分软件运行到不正确的状态中时，并不是做了离谱的操作而不可恢复。很多只是一小范围内的状态不正确。如果将这个范围确定并关闭这块功能，软件本身其他部分应该还能完全正常运行的。从底层向上通盘考虑比较合理。", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "dreamlost", 
                    "userLink": "https://www.zhihu.com/people/7d914f0ca0a339aebcddd34f23283307", 
                    "content": "对比静态分析中的缺陷模式  判空 资源泄露这样的问题感觉问题不大 而需求功能点与代码的匹配应该是需要一个庞大的样本库才可以较好的支持 而样本库的补充来源于人肉及机器的自动生成 另外自动化的初衷是提升效率等 如果缺陷修复能够一定程度提升程序开发维护效率 理论上没有企业人员规模基数还是大的 只是目前这样的场景感不明显 一言不合感觉又和AI建立联系了  ", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "sean", 
                    "userLink": "https://www.zhihu.com/people/79f49b85f2efe0684e0888a41f67e90d", 
                    "content": "老师还招博士么？", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "CYXu", 
                    "userLink": "https://www.zhihu.com/people/bfd98e7f7116c696317fbb14463b97c6", 
                    "content": "<p>老师，文章很赞，坐等更新，哈哈哈哈</p>", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }
    ], 
    "url": "https://zhuanlan.zhihu.com/softwareAutomation"
}

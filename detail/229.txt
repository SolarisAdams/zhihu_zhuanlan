{
    "title": "OpenCV学习笔记", 
    "description": "关于OpenCV（开源计算机视觉库）的学习笔记，详细记录学习过程中的遇到的一些值得注意的重点和坑，以及相关的C++和Python3的API使用技巧。", 
    "followers": [
        "https://www.zhihu.com/people/gaoyangtc", 
        "https://www.zhihu.com/people/dao-yuan-15-30", 
        "https://www.zhihu.com/people/zhang-da-da-75-79-97", 
        "https://www.zhihu.com/people/andrew-yang", 
        "https://www.zhihu.com/people/xiao-zhang-7-11", 
        "https://www.zhihu.com/people/san-dan-71-41", 
        "https://www.zhihu.com/people/dan-zhou-tao", 
        "https://www.zhihu.com/people/zu-zhi-92-67", 
        "https://www.zhihu.com/people/wu-xu-yong", 
        "https://www.zhihu.com/people/nlx-85", 
        "https://www.zhihu.com/people/zhan-hai-zhu", 
        "https://www.zhihu.com/people/zhuoxiaohuang", 
        "https://www.zhihu.com/people/ZeyuChen", 
        "https://www.zhihu.com/people/liang-77-84-18", 
        "https://www.zhihu.com/people/hu-luan-chang-ge-de-shu-bao-du", 
        "https://www.zhihu.com/people/gitshr", 
        "https://www.zhihu.com/people/ma-ming-yang-39", 
        "https://www.zhihu.com/people/yang-yi-hua-78", 
        "https://www.zhihu.com/people/cwzhihu", 
        "https://www.zhihu.com/people/sunhsu", 
        "https://www.zhihu.com/people/peng44", 
        "https://www.zhihu.com/people/honggle", 
        "https://www.zhihu.com/people/wu-wu-65-41", 
        "https://www.zhihu.com/people/rock-stone-23", 
        "https://www.zhihu.com/people/HaynesRuan", 
        "https://www.zhihu.com/people/jiang-ming-yue-23", 
        "https://www.zhihu.com/people/liye-21", 
        "https://www.zhihu.com/people/tang-ya-20110908", 
        "https://www.zhihu.com/people/wei-shi-15-15", 
        "https://www.zhihu.com/people/lu-run-zhe", 
        "https://www.zhihu.com/people/xiao-tai-yang-22-12", 
        "https://www.zhihu.com/people/dian-xiao-er-36-81", 
        "https://www.zhihu.com/people/li-legend", 
        "https://www.zhihu.com/people/zhou-peng-23-92-4", 
        "https://www.zhihu.com/people/wang-li-mei-45-41", 
        "https://www.zhihu.com/people/wang-chao-fan-32-43", 
        "https://www.zhihu.com/people/yagami-25-20", 
        "https://www.zhihu.com/people/xiao-lu-11-7-76", 
        "https://www.zhihu.com/people/cha-na-qing-chun", 
        "https://www.zhihu.com/people/wen-zhe-88-63", 
        "https://www.zhihu.com/people/1108-47-35", 
        "https://www.zhihu.com/people/xiong-mao-57-44", 
        "https://www.zhihu.com/people/yu-mo-ye-81", 
        "https://www.zhihu.com/people/kun-peng-a-yong", 
        "https://www.zhihu.com/people/x-ray-18-80", 
        "https://www.zhihu.com/people/mMatix", 
        "https://www.zhihu.com/people/qi-che-ren-82", 
        "https://www.zhihu.com/people/xiaohe-97-98", 
        "https://www.zhihu.com/people/clive-69", 
        "https://www.zhihu.com/people/yandrewz", 
        "https://www.zhihu.com/people/zhouxun1983", 
        "https://www.zhihu.com/people/leexy-57", 
        "https://www.zhihu.com/people/whyygug", 
        "https://www.zhihu.com/people/sherry-33-85-20", 
        "https://www.zhihu.com/people/zhangsan-97-39", 
        "https://www.zhihu.com/people/mo-ha-28-49", 
        "https://www.zhihu.com/people/xia-e-20", 
        "https://www.zhihu.com/people/end-3-38", 
        "https://www.zhihu.com/people/SevenStudio", 
        "https://www.zhihu.com/people/gui-ke-82", 
        "https://www.zhihu.com/people/ChauLY", 
        "https://www.zhihu.com/people/gu-cheng-79-46", 
        "https://www.zhihu.com/people/yan-mei-12-54", 
        "https://www.zhihu.com/people/feng-tong-shuai", 
        "https://www.zhihu.com/people/lee-gates", 
        "https://www.zhihu.com/people/crossover-48-45", 
        "https://www.zhihu.com/people/insight-jing", 
        "https://www.zhihu.com/people/peng-yuan-62", 
        "https://www.zhihu.com/people/feiying-93", 
        "https://www.zhihu.com/people/nuo-wei-si-ji-kou-qiao-dan", 
        "https://www.zhihu.com/people/zhang-xi-ning-64", 
        "https://www.zhihu.com/people/shi-jue-xiao-bai-7", 
        "https://www.zhihu.com/people/zhang-17-89", 
        "https://www.zhihu.com/people/dgjk1010", 
        "https://www.zhihu.com/people/li-ya-bo-93", 
        "https://www.zhihu.com/people/yang-xu-chang-18", 
        "https://www.zhihu.com/people/hobbyz", 
        "https://www.zhihu.com/people/lang-jun-27", 
        "https://www.zhihu.com/people/po-mo-11", 
        "https://www.zhihu.com/people/ralph-lau", 
        "https://www.zhihu.com/people/mang-fu-68-63", 
        "https://www.zhihu.com/people/peng-xiao-zi-57", 
        "https://www.zhihu.com/people/wang-peng-80-50", 
        "https://www.zhihu.com/people/yubt007", 
        "https://www.zhihu.com/people/chao-ji-wu-di-xiao-ke-ai-59-48", 
        "https://www.zhihu.com/people/yizhi-bai-59", 
        "https://www.zhihu.com/people/tang-yu-xuan-96-86", 
        "https://www.zhihu.com/people/lieh-90", 
        "https://www.zhihu.com/people/yue-hu-79", 
        "https://www.zhihu.com/people/wang-can-7-3", 
        "https://www.zhihu.com/people/kang-da-90-63", 
        "https://www.zhihu.com/people/lan-jing-ling-12-66", 
        "https://www.zhihu.com/people/zhang-li-84-25-1", 
        "https://www.zhihu.com/people/fucktheholl", 
        "https://www.zhihu.com/people/guang-shi-da-ru", 
        "https://www.zhihu.com/people/yliang-sou-sou-yyddu", 
        "https://www.zhihu.com/people/ytx-76", 
        "https://www.zhihu.com/people/xiao-ding-de-nan-gua-di", 
        "https://www.zhihu.com/people/hua-xue-cheng-47", 
        "https://www.zhihu.com/people/fan-fan-91-91", 
        "https://www.zhihu.com/people/fpga-97", 
        "https://www.zhihu.com/people/www.sxencon.com", 
        "https://www.zhihu.com/people/feng-xing-long-5", 
        "https://www.zhihu.com/people/feng-gun-cao-77-37", 
        "https://www.zhihu.com/people/skyyoog", 
        "https://www.zhihu.com/people/spl-36", 
        "https://www.zhihu.com/people/wdj-31", 
        "https://www.zhihu.com/people/yang-fang-fang-70", 
        "https://www.zhihu.com/people/you-ge-sa-long-87", 
        "https://www.zhihu.com/people/kasama1981", 
        "https://www.zhihu.com/people/yuan-zi-7-31", 
        "https://www.zhihu.com/people/tang-jun-lan-87", 
        "https://www.zhihu.com/people/xjc635", 
        "https://www.zhihu.com/people/lang-jun-le-26", 
        "https://www.zhihu.com/people/hong-se-25"
    ], 
    "article": [
        {
            "url": "https://zhuanlan.zhihu.com/p/55836547", 
            "userName": "Sitnalta", 
            "userLink": "https://www.zhihu.com/people/d7d2a47379c34e374f8729a9f7ba4899", 
            "upvote": 7, 
            "title": "OpenCV学习笔记（二） 基本工具与常用函数", 
            "content": "<p>真是惭愧，上一篇笔记还是一年前写的，现在opencv已经出到版本4了，今年专栏文章会尽量保证不断更不停更。文章中理论性的东西会相对较少，更偏向于结合工程中的实际应用来学习，以具体代码来实现相关功能。另外，每篇文章基本上是个人结合官方文档和Google到的相关资料，尽可能规范且易于理解和实现地总结整理得出，展示的所有代码均实际跑过。为了保证兼容性，对于旧的文章也会作相关更新。当然有错误和不准确的地方也请读者在评论区或私信指出，不胜感激。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>先简单介绍一下，OpenCV4相对于OpenCV3的一些新特性。</p><ul><li>OpenCV现在基于C++ 11库，需要符合C++ 11 标准的编译器。所需的最低CMake版本已提升至3.5.1。</li><li>很多来自OpenCV 1.x的C API已被删除。</li><li>在core模块中的部分功能（如在XML，YAML或JSON中存储和加载结构化数据）已在C++中完全重新实现，并且也删除了C API。</li><li>添加了新的模块G-API，它可以作为非常有效的基于图形的图像处理 pipeline的引擎。</li><li>dnn模块使用OpenVINO™工具包R4中的<a href=\"https://link.zhihu.com/?target=https%3A//github.com/opencv/dldt\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Deep Learning Deployment Toolkit</a>进行了更新。请参阅<a href=\"https://link.zhihu.com/?target=https%3A//github.com/opencv/opencv/wiki/Intel%27%2520rel%3D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">指南</a>如何构建和使用支持DLDT的OpenCV。</li><li>dnn模块现在包括实验性Vulkan backend，并支持ONNX格式的网络。</li><li>Kinect Fusion算法已针对CPU和GPU（OpenCL）进行实现和优化。</li><li>QR码检测器和解码器已添加到objdetect模块中。</li><li>非常高效且高质量的DIS密集光流算法已从opencv_contrib转移到video模块。</li><li>更多细节可以在之前的宣布中找到：更多细节可以在之前的宣布中找到：<a href=\"https://link.zhihu.com/?target=https%3A//opencv.org/opencv-4-0-0-alpha.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">4.0-alpha</a>，<a href=\"https://link.zhihu.com/?target=https%3A//opencv.org/opencv-4-0-0-beta.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">4.0-beta</a>，<a href=\"https://link.zhihu.com/?target=https%3A//opencv.org/opencv-4-0-0-rc.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">4.0-rc</a>和<a href=\"https://link.zhihu.com/?target=https%3A//github.com/opencv/opencv/wiki/ChangeLog%23version400\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">更新日志</a></li></ul><p class=\"ztext-empty-paragraph\"><br/></p><p>除了以上特性需要注意之外，基本的使用与先前版本是完全兼容的，在一般的图像处理操作上没有影响。以后的笔记都与时俱进，若无特殊说明，均是基于OpenCV4。关于OpenCV4的安装与3一样，参考上一篇笔记。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>先简单介绍下<b>位图</b>的概念，因为一些基本的图像操作都是基于位图和像素点的。</p><p><b>位图</b>（<b>Bitmap</b>），又称<b>栅格图</b>（英语：<b>Raster graphics</b>）或<b>点阵图</b>，是使用像素阵列(Pixel-array/Dot-matrix点阵)来表示的图像。</p><p>位图的像素都分配有特定的位置和颜色值。每个像素的颜色信息由RGB组合或者灰度值表示。</p><p>根据位深度,可将位图分为1、4、8、16、24及32位图像等。每个像素使用的信息位数越多，可用的颜色就越多，颜色表现就越逼真，相应的数据量越大。例如，位深度为 1 的像素位图只有两个可能的值（黑色和白色），所以又称为二值位图。位深度为 8 的图像有 28（即 256）个可能的值。位深度为 8 的灰度模式图像有 256 个可能的灰色值。</p><p>RGB图像由三个颜色通道组成。8 位/通道的 RGB 图像中的每个通道有 256 个可能的值，这意味着该图像有 1600 万个以上可能的颜色值。有时将带有 8 位/通道 (bpc) 的 RGB 图像称作 24 位图像（8 位 x 3 通道 = 24 位数据/像素）。通常将使用24位RGB组合数据位表示的的位图称为真彩色位图。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-4a12dd937eeeee460da854ab51c71c74_b.jpg\" data-rawwidth=\"354\" data-rawheight=\"400\" data-size=\"normal\" class=\"content_image\" width=\"354\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;354&#39; height=&#39;400&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"354\" data-rawheight=\"400\" data-size=\"normal\" class=\"content_image lazy\" width=\"354\" data-actualsrc=\"https://pic1.zhimg.com/v2-4a12dd937eeeee460da854ab51c71c74_b.jpg\"/><figcaption>位图与其放大细节</figcaption></figure><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>下面结合Python3工具，给出一些图像的基本操作代码和效果图。</p><p class=\"ztext-empty-paragraph\"><br/></p><h2><b>主要内容</b></h2><ol><li>读入并显示图像</li><li>获取图像高、宽和通道数</li><li>获取图像像素信息数</li><li>图像缩放</li><li>图像保存</li><li>彩图转灰度图</li><li>图像旋转</li><li>图像翻转</li><li>彩色图像三通道分离与合并</li><li>直接操作像素</li></ol><p class=\"ztext-empty-paragraph\"><br/></p><p><b>1. 读入并显示图像</b></p><div class=\"highlight\"><pre><code class=\"language-python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">cv2_imread</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"s2\">&#34;&#34;&#34;解决包含中文的路径cv2.imread无法打开的问题的函数&#34;&#34;&#34;</span>\n    <span class=\"k\">return</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imdecode</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fromfile</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">),</span> <span class=\"n\">flag</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&#34;__main__&#34;</span><span class=\"p\">:</span>\n    <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">cv2_imread</span><span class=\"p\">(</span><span class=\"s2\">&#34;C:</span><span class=\"se\">\\\\</span><span class=\"s2\">Users</span><span class=\"se\">\\\\</span><span class=\"s2\">11537</span><span class=\"se\">\\\\</span><span class=\"s2\">Desktop</span><span class=\"se\">\\\\</span><span class=\"s2\">新垣结衣.jpg&#34;</span><span class=\"p\">)</span>    <span class=\"c1\">#读入图像，第一个参数选一张自己计算机内的图片的路径</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s2\">&#34;orginal image&#34;</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"p\">)</span>    <span class=\"c1\">#显示图像</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>    <span class=\"c1\">#在键盘敲入字符前程序处于等待状态</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span>    <span class=\"c1\">#关闭所有窗口</span></code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>2. 获取图像高、宽和通道数</b></p><p>图像的高即是位图对应的矩阵行数，宽即是位图对应的矩阵列数，通道数表示每一个像素点包含的信息维数。灰度图通道数为1，彩色图像通道数为3（代表红绿蓝一个通道）</p><p>在python中，我们可以很直接的用读入图片的shape成员变量得到图像的这三个信息，其返回的是一个三元组，依次分别为高、宽、通道数。</p><div class=\"highlight\"><pre><code class=\"language-python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">cv2_imread</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"s2\">&#34;&#34;&#34;解决包含中文的路径cv2.imread无法打开的问题的函数&#34;&#34;&#34;</span>\n    <span class=\"k\">return</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imdecode</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fromfile</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">),</span> <span class=\"n\">flag</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&#34;__main__&#34;</span><span class=\"p\">:</span>\n\n    <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">cv2_imread</span><span class=\"p\">(</span><span class=\"s2\">&#34;C:</span><span class=\"se\">\\\\</span><span class=\"s2\">Users</span><span class=\"se\">\\\\</span><span class=\"s2\">11537</span><span class=\"se\">\\\\</span><span class=\"s2\">Desktop</span><span class=\"se\">\\\\</span><span class=\"s2\">新垣结衣.jpg&#34;</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>    <span class=\"c1\">#img.shape返回一个三元组，打印出这个三元组</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"s2\">&#34;图像的高为:{img.shape[0]}&#34;</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"s2\">&#34;图像的宽为:{img.shape[1]}&#34;</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"s2\">&#34;图像的通道数为:{img.shape[2]}&#34;</span><span class=\"p\">)</span></code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-7abb24753966ec40ea708e5b3b6109a2_b.jpg\" data-rawwidth=\"978\" data-rawheight=\"508\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"978\" data-original=\"https://pic3.zhimg.com/v2-7abb24753966ec40ea708e5b3b6109a2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;978&#39; height=&#39;508&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"978\" data-rawheight=\"508\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"978\" data-original=\"https://pic3.zhimg.com/v2-7abb24753966ec40ea708e5b3b6109a2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-7abb24753966ec40ea708e5b3b6109a2_b.jpg\"/><figcaption>运行图示</figcaption></figure><p class=\"ztext-empty-paragraph\"><br/></p><p><b>3. 获取图像像素信息数</b></p><p>跟2类似，图像的size成员变量直接表示图像所装载的信息数，其等于图像的行数、列数、通道数的乘积，即<b>img.size = img.shape[0]*img.shape[1]*img.shape[2]</b></p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>4. 图像缩放</b></p><p>使用cv2.resize方法。</p><p>语法为：cv2.resize(src, dsize[, dst[, fx[, fy[, interpolation]]]]) → dst</p><p>src：原图像</p><p>dst：目标图像</p><p>dsize：目标图像大小。</p><p>fx：可选项，水平轴上的比例因子。</p><p>fy：可选项，垂直轴上的比例因子。</p><p>其中可选项interpolation（插值）选项有：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-75caf3883f17e772bee41a27a8b99a83_b.jpg\" data-rawwidth=\"852\" data-rawheight=\"257\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"852\" data-original=\"https://pic4.zhimg.com/v2-75caf3883f17e772bee41a27a8b99a83_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;852&#39; height=&#39;257&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"852\" data-rawheight=\"257\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"852\" data-original=\"https://pic4.zhimg.com/v2-75caf3883f17e772bee41a27a8b99a83_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-75caf3883f17e772bee41a27a8b99a83_b.jpg\"/></figure><p>其中缩小图像用INTER_AREA更好，放大图像用 INTER_CUBIC更好。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>一个缩小图像的代码实例。resize中有两个坑需要注意，一个是第二个目标图像大小参数，这个二元组表示的是依次表示图像的宽和高，而不是shape中的高和宽的次序！另外，元组中的元素必须是整型。</p><div class=\"highlight\"><pre><code class=\"language-python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">cv2_imread</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"s2\">&#34;&#34;&#34;解决包含中文的路径cv2.imread无法打开的问题的函数&#34;&#34;&#34;</span>\n    <span class=\"k\">return</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imdecode</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fromfile</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">),</span> <span class=\"n\">flag</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&#34;__main__&#34;</span><span class=\"p\">:</span>\n\n    <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">cv2_imread</span><span class=\"p\">(</span><span class=\"s2\">&#34;C:</span><span class=\"se\">\\\\</span><span class=\"s2\">Users</span><span class=\"se\">\\\\</span><span class=\"s2\">11537</span><span class=\"se\">\\\\</span><span class=\"s2\">Desktop</span><span class=\"se\">\\\\</span><span class=\"s2\">新垣结衣.jpg&#34;</span><span class=\"p\">)</span>\n    <span class=\"n\">dst1</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">resize</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">960</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">),</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">INTER_AREA</span><span class=\"p\">)</span>    <span class=\"c1\">#等比缩小两倍</span>\n    <span class=\"n\">dst2</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">resize</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">//</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">//</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">INTER_AREA</span><span class=\"p\">)</span>    <span class=\"c1\">#等比缩小四倍</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s2\">&#34;Original image&#34;</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"p\">);</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s2\">&#34;Reduced by twice&#34;</span><span class=\"p\">,</span> <span class=\"n\">dst1</span><span class=\"p\">);</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s2\">&#34;Reduced by four times&#34;</span><span class=\"p\">,</span> <span class=\"n\">dst2</span><span class=\"p\">);</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>    <span class=\"c1\">#在键盘敲入字符前程序处于等待状态</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span>    <span class=\"c1\">#关闭所有窗口</span></code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-81aede161107bb55bcb6f65e627e06d5_b.jpg\" data-rawwidth=\"1366\" data-rawheight=\"768\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"1366\" data-original=\"https://pic2.zhimg.com/v2-81aede161107bb55bcb6f65e627e06d5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1366&#39; height=&#39;768&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1366\" data-rawheight=\"768\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1366\" data-original=\"https://pic2.zhimg.com/v2-81aede161107bb55bcb6f65e627e06d5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-81aede161107bb55bcb6f65e627e06d5_b.jpg\"/><figcaption>运行示例</figcaption></figure><p class=\"ztext-empty-paragraph\"><br/></p><p><b>5. 图像保存</b></p><p>很容易想到，有imread必有imwrite，所以保存图像可用imwrite(filename, img)函数。</p><p>即对于上面示例的两个缩放图像，可以用以下两行代码分别保存</p><p>imwrite(&#34;C:\\\\Users\\\\11537\\\\Desktop\\\\dst1.jpg&#34;, dst1)</p><p>imwrite(&#34;C:\\\\Users\\\\11537\\\\Desktop\\\\dst2.jpg&#34;, dst2)</p><p>但是，这函数有个坑，同样与cv2.read类似，对于包含中文的路径，保存会出现文件名乱码现象。所以推荐用以下方案。</p><p>cv2.imencode(&#39;.jpg&#39;, dst1)[1].tofile(&#39;C:\\\\Users\\\\11537\\\\Desktop\\\\dst1.jpg&#39;)</p><p>cv2.imencode(&#39;.jpg&#39;, dst1)[1].tofile(&#39;C:\\\\Users\\\\11537\\\\Desktop\\\\dst1.jpg&#39;) </p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>6. 彩图转灰度图</b></p><div class=\"highlight\"><pre><code class=\"language-python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">cv2_imread</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"s2\">&#34;&#34;&#34;解决包含中文的路径cv2.imread无法打开的问题的函数&#34;&#34;&#34;</span>\n    <span class=\"k\">return</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imdecode</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fromfile</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">),</span> <span class=\"n\">flag</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&#34;__main__&#34;</span><span class=\"p\">:</span>\n\n    <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">cv2_imread</span><span class=\"p\">(</span><span class=\"s2\">&#34;C:</span><span class=\"se\">\\\\</span><span class=\"s2\">Users</span><span class=\"se\">\\\\</span><span class=\"s2\">11537</span><span class=\"se\">\\\\</span><span class=\"s2\">Desktop</span><span class=\"se\">\\\\</span><span class=\"s2\">新垣结衣.jpg&#34;</span><span class=\"p\">)</span>\n    <span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">cvtColor</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">COLOR_RGB2GRAY</span><span class=\"p\">)</span>\n    <span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">resize</span><span class=\"p\">(</span><span class=\"n\">dst</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">dst</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">//</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">//</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">INTER_AREA</span><span class=\"p\">)</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s2\">&#34;dst&#34;</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"p\">)</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>    <span class=\"c1\">#在键盘敲入字符前程序处于等待状态</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span>    <span class=\"c1\">#关闭所有窗口</span>\n\n</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-8017f2c2f7cebb679c3a73608fe9dacd_b.jpg\" data-rawwidth=\"964\" data-rawheight=\"632\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"964\" data-original=\"https://pic2.zhimg.com/v2-8017f2c2f7cebb679c3a73608fe9dacd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;964&#39; height=&#39;632&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"964\" data-rawheight=\"632\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"964\" data-original=\"https://pic2.zhimg.com/v2-8017f2c2f7cebb679c3a73608fe9dacd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-8017f2c2f7cebb679c3a73608fe9dacd_b.jpg\"/><figcaption>运行示例</figcaption></figure><p><b>7. 图像旋转</b></p><p>opencv中对图像的旋转主要是先通过getRotationMatrix2D函数得到图像的旋转矩阵，然后再通过仿射变换函数warpAffine得到旋转后的图像。</p><p>函数语法：</p><p>cv2.getRotationMatrix2D(center, angle, scale)</p><p>cv2.warpAffine(src, M, dsize[, dst[, flags[, borderMode[, borderValue]]]]) → dst</p><p class=\"ztext-empty-paragraph\"><br/></p><p>对于getRotationMatrix2D:</p><p>center：旋转中心点</p><p>angle：旋转角度</p><p>scale：图像缩放因子</p><p class=\"ztext-empty-paragraph\"><br/></p><p>对于warpAffine:</p><p>src：输入图像</p><p>M：2 X 3 的变换矩阵.</p><p>dsize：目标图像大小</p><p>dst：目标图像</p><p>flags：目标图像的插值方法</p><p>borderMode：图像边界的处理方式</p><p>borderValue：当图像边界处理方式为BORDER_CONSTANT 时的填充值</p><p class=\"ztext-empty-paragraph\"><br/></p><div class=\"highlight\"><pre><code class=\"language-python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">cv2_imread</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"s2\">&#34;&#34;&#34;解决包含中文的路径cv2.imread无法打开的问题的函数&#34;&#34;&#34;</span>\n    <span class=\"k\">return</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imdecode</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fromfile</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">),</span> <span class=\"n\">flag</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&#34;__main__&#34;</span><span class=\"p\">:</span>\n\n    <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">cv2_imread</span><span class=\"p\">(</span><span class=\"s2\">&#34;C:</span><span class=\"se\">\\\\</span><span class=\"s2\">Users</span><span class=\"se\">\\\\</span><span class=\"s2\">11537</span><span class=\"se\">\\\\</span><span class=\"s2\">Desktop</span><span class=\"se\">\\\\</span><span class=\"s2\">新垣结衣.jpg&#34;</span><span class=\"p\">)</span>\n    <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">resize</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">//</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">//</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">INTER_AREA</span><span class=\"p\">)</span>\n    <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">getRotationMatrix2D</span><span class=\"p\">((</span><span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"mi\">90</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">warpAffine</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">,</span><span class=\"n\">M</span><span class=\"p\">,(</span><span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s2\">&#34;dst&#34;</span><span class=\"p\">,</span> <span class=\"n\">dst</span><span class=\"p\">)</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>    <span class=\"c1\">#在键盘敲入字符前程序处于等待状态</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span>    <span class=\"c1\">#关闭所有窗口</span></code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-981ec4b593bf33e9654d8a9970c5cadf_b.jpg\" data-rawwidth=\"964\" data-rawheight=\"630\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"964\" data-original=\"https://pic4.zhimg.com/v2-981ec4b593bf33e9654d8a9970c5cadf_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;964&#39; height=&#39;630&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"964\" data-rawheight=\"630\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"964\" data-original=\"https://pic4.zhimg.com/v2-981ec4b593bf33e9654d8a9970c5cadf_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-981ec4b593bf33e9654d8a9970c5cadf_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p><b>8. 图像翻转</b></p><p>使用cv2.flip函数。</p><p>cv2.flip(src, flipCode[, dst]) → dst</p><p>其中，flipCode参数为翻转模式，flipCode=0垂直翻转，flipCode&gt;0水平翻转，flipCode&lt;0水平垂直翻转。</p><div class=\"highlight\"><pre><code class=\"language-python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">cv2_imread</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"s2\">&#34;&#34;&#34;解决包含中文的路径cv2.imread无法打开的问题的函数&#34;&#34;&#34;</span>\n    <span class=\"k\">return</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imdecode</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fromfile</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">),</span> <span class=\"n\">flag</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&#34;__main__&#34;</span><span class=\"p\">:</span>\n\n    <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">cv2_imread</span><span class=\"p\">(</span><span class=\"s2\">&#34;C:</span><span class=\"se\">\\\\</span><span class=\"s2\">Users</span><span class=\"se\">\\\\</span><span class=\"s2\">11537</span><span class=\"se\">\\\\</span><span class=\"s2\">Desktop</span><span class=\"se\">\\\\</span><span class=\"s2\">新垣结衣.jpg&#34;</span><span class=\"p\">)</span>\n    <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">resize</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">//</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">//</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">INTER_AREA</span><span class=\"p\">)</span>\n    <span class=\"n\">dst1</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">flip</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>    <span class=\"c1\">#垂直翻转</span>\n    <span class=\"n\">dst2</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">flip</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>    <span class=\"c1\">#水平翻转</span>\n    <span class=\"n\">dst3</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">flip</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>    <span class=\"c1\">#水平垂直翻转</span>\n\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s2\">&#34;Original image&#34;</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"p\">)</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s2\">&#34;dst1&#34;</span><span class=\"p\">,</span> <span class=\"n\">dst1</span><span class=\"p\">)</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s2\">&#34;dst2&#34;</span><span class=\"p\">,</span> <span class=\"n\">dst2</span><span class=\"p\">)</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s2\">&#34;dst3&#34;</span><span class=\"p\">,</span> <span class=\"n\">dst3</span><span class=\"p\">)</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>    <span class=\"c1\">#在键盘敲入字符前程序处于等待状态</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span>    <span class=\"c1\">#关闭所有窗口</span></code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-eab1243458a12ac9c43967bbe9dab778_b.jpg\" data-rawwidth=\"969\" data-rawheight=\"661\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"969\" data-original=\"https://pic1.zhimg.com/v2-eab1243458a12ac9c43967bbe9dab778_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;969&#39; height=&#39;661&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"969\" data-rawheight=\"661\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"969\" data-original=\"https://pic1.zhimg.com/v2-eab1243458a12ac9c43967bbe9dab778_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-eab1243458a12ac9c43967bbe9dab778_b.jpg\"/><figcaption>运行示例</figcaption></figure><p><b>9. 彩色图像三通道分离与合并</b></p><p>分离用split函数，合并用merge函数。注意单元像素元组顺序依次为BGR而不是RGB！</p><div class=\"highlight\"><pre><code class=\"language-python\"><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">cv2_imread</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"s2\">&#34;&#34;&#34;解决包含中文的路径cv2.imread无法打开的问题的函数&#34;&#34;&#34;</span>\n    <span class=\"k\">return</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imdecode</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fromfile</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">),</span> <span class=\"n\">flag</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&#34;__main__&#34;</span><span class=\"p\">:</span>\n\n    <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">cv2_imread</span><span class=\"p\">(</span><span class=\"s2\">&#34;C:</span><span class=\"se\">\\\\</span><span class=\"s2\">Users</span><span class=\"se\">\\\\</span><span class=\"s2\">11537</span><span class=\"se\">\\\\</span><span class=\"s2\">Desktop</span><span class=\"se\">\\\\</span><span class=\"s2\">新垣结衣.jpg&#34;</span><span class=\"p\">)</span>\n    <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">resize</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">//</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">//</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">INTER_AREA</span><span class=\"p\">)</span>\n    \n    <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">)</span>\n    <span class=\"n\">merged</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">merge</span><span class=\"p\">([</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">])</span>\n\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s2\">&#34;R&#34;</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">)</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s2\">&#34;G&#34;</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">)</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s2\">&#34;B&#34;</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s2\">&#34;Merged&#34;</span><span class=\"p\">,</span> <span class=\"n\">merged</span><span class=\"p\">)</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>    <span class=\"c1\">#在键盘敲入字符前程序处于等待状态</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span>    <span class=\"c1\">#关闭所有窗口</span></code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-d08697ebd894eb98a0e40b312c142b25_b.jpg\" data-rawwidth=\"967\" data-rawheight=\"660\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"967\" data-original=\"https://pic2.zhimg.com/v2-d08697ebd894eb98a0e40b312c142b25_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;967&#39; height=&#39;660&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"967\" data-rawheight=\"660\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"967\" data-original=\"https://pic2.zhimg.com/v2-d08697ebd894eb98a0e40b312c142b25_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-d08697ebd894eb98a0e40b312c142b25_b.jpg\"/><figcaption>运行图示</figcaption></figure><p class=\"ztext-empty-paragraph\"><br/></p><p><b>10. 直接操作像素</b></p><p>对于彩色图调用img[row,col]可获取该像素的一个三元组(g, b ,r)，对于灰度图调用img[row,col]可获取该像素的灰度值。同理也可直接赋值。例如:</p><p>img[50, 60] = (0，0，255)    #将50行60列的相素变为红色</p><p>img[50, 60, 2] = 255    #仅改变50行60列的R通道值，赋为255</p><p>img[50, 60][2] = 255    #另一种写法，效果同上</p><p>另外，Python还支持一种类似于切片的赋值，使用也非常方便。</p><p>例如：img[50:60, 100:200, 1] = 0    #将50至<b>59</b>行，100至<b>199</b>列，G通道值赋为0</p><p>一 个必须注意的坑点：</p><p>当我们读入一张图片后赋给img变量，并需对其进行像素的直接操作，但我们也需要保留一张原始图像进行其他处理操作。这时我们可能会写出这样的代码。</p><div class=\"highlight\"><pre><code class=\"language-python\"><span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">cv2_imread</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">)</span>\n<span class=\"n\">img2</span> <span class=\"o\">=</span> <span class=\"n\">img</span>\n<span class=\"c1\">#对img进行像素操作，得到已修改过的目标图像img，并保存</span>\n<span class=\"c1\">#对img2进行其他操作，得到目标图像dst，并保存</span></code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>这是一种典型的错误操作，问题出在第二行，Python基础比较好的读者可能知道其实img2 = img并不是真正意义上的复制操作，而只是一个引用传递，img和img2指向的是同一块内存单元（换句话说是指向的同一张图），故在对img2操作时，实际上是对已修改过的img进行操作，而非原始图像。</p><p>正确代码如下：</p><div class=\"highlight\"><pre><code class=\"language-text\">img = cv2_imread(filepath)\nimg2 = img.copy()\n#对img进行像素操作，得到已修改过的目标图像img，并保存\n#对img2进行其他操作，得到目标图像dst，并保存</code></pre></div><p>用img2 = img.copy() 代替img2 = img即可。</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>下一篇笔记记录总结有关于图像二值化处理相关内容。</p><p class=\"ztext-empty-paragraph\"><br/></p><h2><b>参考资料</b></h2><ol><li><a href=\"https://link.zhihu.com/?target=https%3A//opencv.org/opencv-4-0-0.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">OpenCV 4.0 - OpenCV library</a> </li></ol><p>2. <a href=\"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%25E4%25BD%258D%25E5%259B%25BE\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">zh.wikipedia.org/wiki/%</span><span class=\"invisible\">E4%BD%8D%E5%9B%BE</span><span class=\"ellipsis\"></span></a> </p>", 
            "topic": [
                {
                    "tag": "计算机视觉", 
                    "tagLink": "https://api.zhihu.com/topics/19590195"
                }, 
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }, 
                {
                    "tag": "OpenCV", 
                    "tagLink": "https://api.zhihu.com/topics/19587715"
                }
            ], 
            "comments": [
                {
                    "userName": "石晓菲", 
                    "userLink": "https://www.zhihu.com/people/8083bbd51d22471686e9ddf5fbf5cd12", 
                    "content": "楼主我需要帮助啊", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/31784840", 
            "userName": "Sitnalta", 
            "userLink": "https://www.zhihu.com/people/d7d2a47379c34e374f8729a9f7ba4899", 
            "upvote": 46, 
            "title": "OpenCV学习笔记（一） OpenCV简介及安装", 
            "content": "<p>因为最近想做图像处理、人脸检测/识别之类的相关开发，所以就开始补OpenCV的相关知识，便开个专栏用于记录学习历程和在学习过程中遇到的一些值得注意的重点和坑。学习过程基本上也是面向官方文档和Google。</p><p class=\"ztext-empty-paragraph\"><br/></p><h2>简介</h2><p>OpenCV(开源的计算机视觉库)是基于BSD协议,因此它可免费用于学术和商业用途。其提供C++,C,Python和Java接口,支持Windows,Linux,Mac OS,iOS和Android。OpenCV致力于高效运算和即时应用开发。因其是用优化的C/C++编写的，故其可以充分利用多核处理优势。并且还启用了OpenSL,它可以利用底层异构计算平台的硬件加速。广泛运用在世界各地,OpenCV拥有超过4.7万人的用户社区和超过1400万的下载次数。从互动艺术、矿山检查、网络地图到先进的机器人技术都有OpenCV的身影。</p><p>它包含了数百个计算机视觉算法。它有一个模块化的结构，囊括了几个共享的或静态的库，其中包括：</p><p class=\"ztext-empty-paragraph\"><br/></p><ul><li><b>Core functionality（核心功能）</b>：一个简洁基本且模块化的数据结构，包含了多维数组（矩阵）和用于其他模块的基本功能。</li><li><b>Image processing（图像处理）</b>：包括线性和非线性的图像滤波、几何图像转换（缩放、仿射和透视调整）、颜色模式转换、直方图等等。</li><li><b>Video（视频）</b>：一个视频分析模块，其包含了运动估计、背景消除和目标跟踪算法。</li><li><b>Calib3d</b>：提供基本的多视图几何算法、平面和立体影像校正、物体定位、立体通信算法和三维重建。</li><li><b>Features2d</b>：显著特征探测器、描述符和描述符匹配器。</li><li><b>Objectect</b>：检测对象和预定义的类的实例（例如：脸部、眼睛、杯子、人、车等等）。</li><li><b>Highgui（图形界面）</b>：提供一个简单易用的UI。</li><li><b>Video I/O</b>：提供一个简单易用的视频捕获和编码解码界面。</li><li><b>GPU</b>：来自于不同的OpenCV模块的GPU加速算法。</li><li><b>......</b>一些其他的辅助模块，例如FLANN（神经网络）和Google测试封装、Python绑定等等。</li></ul><p>下面来讲一下OpenCV的下载和安装（C++和Python3 API）。</p><p class=\"ztext-empty-paragraph\"><br/></p><h2>C++</h2><p>先从官网上下载好文件包：<a href=\"https://link.zhihu.com/?target=https%3A//opencv.org/releases.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Releases - OpenCV library</a></p><p>建议选择最新的3.3.1 Win Pack。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-ab79d53b09f8a3e92e8ee383db5787f4_b.jpg\" data-rawwidth=\"898\" data-rawheight=\"604\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"898\" data-original=\"https://pic1.zhimg.com/v2-ab79d53b09f8a3e92e8ee383db5787f4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;898&#39; height=&#39;604&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"898\" data-rawheight=\"604\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"898\" data-original=\"https://pic1.zhimg.com/v2-ab79d53b09f8a3e92e8ee383db5787f4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-ab79d53b09f8a3e92e8ee383db5787f4_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>下载好后，双击运行exe程序解压，选择一个解压后的目录。(其会自动生成一个opencv目录，不需要单独再创一个opencv目录。另，不建议将其解压到C盘根目录下的Program Files或Program File (x86)目录下，可能会因系统权限导致各种问题)</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-e30c6192db081ffac69c8db52cc577c8_b.jpg\" data-rawwidth=\"482\" data-rawheight=\"147\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"482\" data-original=\"https://pic1.zhimg.com/v2-e30c6192db081ffac69c8db52cc577c8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;482&#39; height=&#39;147&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"482\" data-rawheight=\"147\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"482\" data-original=\"https://pic1.zhimg.com/v2-e30c6192db081ffac69c8db52cc577c8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e30c6192db081ffac69c8db52cc577c8_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>解压完毕后，将其写入系统的环境变量中，向Path中添加一条：&#34;解压后opencv所在的文件夹目录\\opencv\\build\\x64\\vc14\\bin&#34;,例如我将其解压在C:\\Leon下，则添加：C:\\Leon\\opencv\\build\\x64\\vc14\\bin。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-abb64e79f1dadc3c8da952ff519a641f_b.jpg\" data-rawwidth=\"528\" data-rawheight=\"496\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"528\" data-original=\"https://pic4.zhimg.com/v2-abb64e79f1dadc3c8da952ff519a641f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;528&#39; height=&#39;496&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"528\" data-rawheight=\"496\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"528\" data-original=\"https://pic4.zhimg.com/v2-abb64e79f1dadc3c8da952ff519a641f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-abb64e79f1dadc3c8da952ff519a641f_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>这样OpenCV3.3.1就算安装好了，接下来就在自己IDE中配置一下就行。  </p><p>例如我C++开发环境是Visual Studio 2017，相应的项目创建配置流程如下：</p><p>1. 打开Visual Studio，新建一个项目（快捷键Ctrl+Shift+N）,项目名自取，选择好创建目录。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-daaaa9d3ee407b8453eb08a79f0fcc46_b.jpg\" data-rawwidth=\"939\" data-rawheight=\"580\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"939\" data-original=\"https://pic3.zhimg.com/v2-daaaa9d3ee407b8453eb08a79f0fcc46_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;939&#39; height=&#39;580&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"939\" data-rawheight=\"580\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"939\" data-original=\"https://pic3.zhimg.com/v2-daaaa9d3ee407b8453eb08a79f0fcc46_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-daaaa9d3ee407b8453eb08a79f0fcc46_b.jpg\"/><figcaption>第一步图</figcaption></figure><p>2. 新建一个C++文件（快捷键Ctrl+Shift+A）。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-890e1b7a2e5e22f52d03e5c27626142b_b.jpg\" data-rawwidth=\"941\" data-rawheight=\"578\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"941\" data-original=\"https://pic4.zhimg.com/v2-890e1b7a2e5e22f52d03e5c27626142b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;941&#39; height=&#39;578&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"941\" data-rawheight=\"578\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"941\" data-original=\"https://pic4.zhimg.com/v2-890e1b7a2e5e22f52d03e5c27626142b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-890e1b7a2e5e22f52d03e5c27626142b_b.jpg\"/><figcaption>第二步图</figcaption></figure><p>3. 将菜单栏下的Debug后的x86改为x64。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-e4f12cf6058480dd0dcc5b5662814007_b.jpg\" data-rawwidth=\"638\" data-rawheight=\"181\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"638\" data-original=\"https://pic4.zhimg.com/v2-e4f12cf6058480dd0dcc5b5662814007_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;638&#39; height=&#39;181&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"638\" data-rawheight=\"181\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"638\" data-original=\"https://pic4.zhimg.com/v2-e4f12cf6058480dd0dcc5b5662814007_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-e4f12cf6058480dd0dcc5b5662814007_b.jpg\"/><figcaption>第三步图</figcaption></figure><p>4. 单击右侧窗口的Property Manager（属性管理），或者点击菜单栏中的View（视图）-&gt;Other Windows（其他窗口）-&gt;Property Manager（属性管理）。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-e6986506075a03cd583e8f0e6d5bb76a_b.jpg\" data-rawwidth=\"1366\" data-rawheight=\"738\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"1366\" data-original=\"https://pic3.zhimg.com/v2-e6986506075a03cd583e8f0e6d5bb76a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1366&#39; height=&#39;738&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1366\" data-rawheight=\"738\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1366\" data-original=\"https://pic3.zhimg.com/v2-e6986506075a03cd583e8f0e6d5bb76a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-e6986506075a03cd583e8f0e6d5bb76a_b.jpg\"/><figcaption>第四步图</figcaption></figure><p>5. 右键属性管理窗口中的Debug | x64，选择Property（属性），编辑包含目录。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-5fc5c80d5d111228465f6e9b269170cb_b.jpg\" data-rawwidth=\"821\" data-rawheight=\"554\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"821\" data-original=\"https://pic4.zhimg.com/v2-5fc5c80d5d111228465f6e9b269170cb_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;821&#39; height=&#39;554&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"821\" data-rawheight=\"554\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"821\" data-original=\"https://pic4.zhimg.com/v2-5fc5c80d5d111228465f6e9b269170cb_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-5fc5c80d5d111228465f6e9b269170cb_b.jpg\"/><figcaption>第五步图</figcaption></figure><p>6. 添加三个目录路径并确定。（注意路径是你opencv安装的路径）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-5f8b33ac6cffa5ffab0de10054f120a0_b.jpg\" data-rawwidth=\"402\" data-rawheight=\"445\" data-size=\"normal\" class=\"content_image\" width=\"402\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;402&#39; height=&#39;445&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"402\" data-rawheight=\"445\" data-size=\"normal\" class=\"content_image lazy\" width=\"402\" data-actualsrc=\"https://pic1.zhimg.com/v2-5f8b33ac6cffa5ffab0de10054f120a0_b.jpg\"/><figcaption>第六步图</figcaption></figure><p>7. 同理，添加库目录，如图所示。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-f57458f4c08adda0bc7f258e8f504ca7_b.jpg\" data-rawwidth=\"821\" data-rawheight=\"557\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"821\" data-original=\"https://pic4.zhimg.com/v2-f57458f4c08adda0bc7f258e8f504ca7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;821&#39; height=&#39;557&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"821\" data-rawheight=\"557\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"821\" data-original=\"https://pic4.zhimg.com/v2-f57458f4c08adda0bc7f258e8f504ca7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-f57458f4c08adda0bc7f258e8f504ca7_b.jpg\"/><figcaption>第七步图1</figcaption></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-1bb9d504c6dc89e244e47b33eb9c5599_b.jpg\" data-rawwidth=\"403\" data-rawheight=\"446\" data-size=\"normal\" class=\"content_image\" width=\"403\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;403&#39; height=&#39;446&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"403\" data-rawheight=\"446\" data-size=\"normal\" class=\"content_image lazy\" width=\"403\" data-actualsrc=\"https://pic2.zhimg.com/v2-1bb9d504c6dc89e244e47b33eb9c5599_b.jpg\"/><figcaption>第七步图2</figcaption></figure><p>8. 添加附加依赖项。链接器-&gt;输入-&gt;附加依赖项。将opencv_world331d.lib键盘敲入（注意opencv版本，3.3.1是331，其他版本自行脑补）。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-6e4f06989535e48215a67d4d82dfe9f9_b.jpg\" data-rawwidth=\"821\" data-rawheight=\"554\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"821\" data-original=\"https://pic2.zhimg.com/v2-6e4f06989535e48215a67d4d82dfe9f9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;821&#39; height=&#39;554&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"821\" data-rawheight=\"554\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"821\" data-original=\"https://pic2.zhimg.com/v2-6e4f06989535e48215a67d4d82dfe9f9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-6e4f06989535e48215a67d4d82dfe9f9_b.jpg\"/><figcaption>第八步图1</figcaption></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-7e6da42fcfa1af30c3bb1926f8a77f75_b.jpg\" data-rawwidth=\"402\" data-rawheight=\"443\" data-size=\"normal\" class=\"content_image\" width=\"402\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;402&#39; height=&#39;443&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"402\" data-rawheight=\"443\" data-size=\"normal\" class=\"content_image lazy\" width=\"402\" data-actualsrc=\"https://pic2.zhimg.com/v2-7e6da42fcfa1af30c3bb1926f8a77f75_b.jpg\"/><figcaption>第八步图2</figcaption></figure><p>9. 确定，应用。库的导入已经完成了。接下来就可以开始OpenCV相关开发了。</p><p>10. 先将以下代码（功能是显示一张图片）写入项目中的Source.cpp文件，编译链接运行（快捷键Ctrl+F5），看是否能跑起来，跑起来了说明配置成功！</p><p class=\"ztext-empty-paragraph\"><br/></p><div class=\"highlight\"><pre><code class=\"language-cpp\"><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;opencv2/opencv.hpp&gt;</span><span class=\"cp\">\n</span><span class=\"cp\"></span><span class=\"k\">using</span> <span class=\"k\">namespace</span> <span class=\"n\">cv</span><span class=\"p\">;</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\t<span class=\"n\">Mat</span> <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">&#34;C:</span><span class=\"se\">\\\\</span><span class=\"s\">Users</span><span class=\"se\">\\\\</span><span class=\"s\">11537</span><span class=\"se\">\\\\</span><span class=\"s\">Desktop</span><span class=\"se\">\\\\</span><span class=\"s\">新垣结衣.jpg&#34;</span><span class=\"p\">);</span>    <span class=\"c1\">//引号内选一张自己计算机内的图片的路径\n</span><span class=\"c1\"></span>\t<span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s\">&#34;新垣结衣&#34;</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"p\">);</span>    <span class=\"c1\">//打开一个窗口，显示图片\n</span><span class=\"c1\"></span>\t<span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>    <span class=\"c1\">//在键盘敲入字符前程序处于等待状态\n</span><span class=\"c1\"></span>\t<span class=\"n\">destroyAllWindows</span><span class=\"p\">();</span>    <span class=\"c1\">//关闭所有窗口\n</span><span class=\"c1\"></span>\t<span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>测试效果图如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-862fa6a52ee5edc466fe7859325a461a_b.jpg\" data-rawwidth=\"1366\" data-rawheight=\"746\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1366\" data-original=\"https://pic3.zhimg.com/v2-862fa6a52ee5edc466fe7859325a461a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1366&#39; height=&#39;746&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1366\" data-rawheight=\"746\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1366\" data-original=\"https://pic3.zhimg.com/v2-862fa6a52ee5edc466fe7859325a461a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-862fa6a52ee5edc466fe7859325a461a_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><h2>Python 3.x</h2><p>相对于C++，Python的Opencv库导入就相对简单很多了。一提及Python安装第三方库，大家第一时间会想到pip，的确pip是Python第三方库安装的利器。  </p><p>首先我们得先安装另一个第三方库numpy，这是opencv的依赖库，没有它无法进行python-opencv开发。  </p><p>很简单，保持有网状态命令行下输入pip install numpy，自动下载安装完后搞定。  </p><p>比较遗憾的是默认的pip源中没有opencv这个库，不能直接pip install opencv，不过这时候我们可以下载其whl文件，下载地址：<a href=\"https://link.zhihu.com/?target=https%3A//www.lfd.uci.edu/~gohlke/pythonlibs/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Extension Packages for Windows</a> </p><p>在页面中找到OpenCV栏，根据自己计算机中Python解释器版本选择下载文件。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-8da150638a3aaf6487e19210813ef538_b.jpg\" data-rawwidth=\"1366\" data-rawheight=\"739\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1366\" data-original=\"https://pic1.zhimg.com/v2-8da150638a3aaf6487e19210813ef538_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1366&#39; height=&#39;739&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1366\" data-rawheight=\"739\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1366\" data-original=\"https://pic1.zhimg.com/v2-8da150638a3aaf6487e19210813ef538_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-8da150638a3aaf6487e19210813ef538_b.jpg\"/></figure><p>下载好后，通过命令行到whl文件目录下，pip install [下载的whl完整文件名]。例如pip install opencv_python-3.3.1-cp36-cp36m-win_amd64.whl</p><p><i>tip: 可以通过这个方法下载其他whl文件，用法一样，可以在无网状态下直接pip install whl文件导入第三方库</i></p><p class=\"ztext-empty-paragraph\"><br/></p><p>对于PyCharm用了Virtualenv虚拟环境的用户，可以在IDE中打开命令行界面到该项目venv/Scripts目录下./pip install numpy以及whl文件导入虚拟目录site-packages文件夹中。</p><p>同样上个测试代码（功能是显示一张图片）：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">cv2_imread</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n<span class=\"s2\">&#34;&#34;&#34;解决包含中文的路径cv2.imread无法打开的问题的函数&#34;&#34;&#34;</span>\n    <span class=\"k\">return</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imdecode</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fromfile</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">),</span> <span class=\"n\">flag</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&#34;__main__&#34;</span><span class=\"p\">:</span>\n\n    <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">cv2_imread</span><span class=\"p\">(</span><span class=\"s2\">&#34;C:</span><span class=\"se\">\\\\</span><span class=\"s2\">Users</span><span class=\"se\">\\\\</span><span class=\"s2\">11537</span><span class=\"se\">\\\\</span><span class=\"s2\">Desktop</span><span class=\"se\">\\\\</span><span class=\"s2\">长泽雅美.jpg&#34;</span><span class=\"p\">)</span>    <span class=\"c1\">#第一个参数选一张自己计算机内的图片的路径</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s2\">&#34;Nagasawa Masami&#34;</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"p\">)</span>    <span class=\"c1\">#python的cv2.imshow第一个参数（即窗口名）为中文会乱码，至今未找到有效解决方案</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>    <span class=\"c1\">#在键盘敲入字符前程序处于等待状态</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span>    <span class=\"c1\">#关闭所有窗口</span></code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>测试效果图如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-63d587caed6dd1f43e201c0424b424fa_b.jpg\" data-rawwidth=\"1366\" data-rawheight=\"746\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1366\" data-original=\"https://pic3.zhimg.com/v2-63d587caed6dd1f43e201c0424b424fa_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1366&#39; height=&#39;746&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1366\" data-rawheight=\"746\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1366\" data-original=\"https://pic3.zhimg.com/v2-63d587caed6dd1f43e201c0424b424fa_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-63d587caed6dd1f43e201c0424b424fa_b.jpg\"/></figure><h2>小结</h2><p>一次OpenCV初体验，个人觉得可能是历史遗留问题（以前的OpenCV是完全由C实现的），OpenCV的OOP特性并不强，跟Python的另一个图像库pillow相比用起来感觉有点怪。不过不得不说，OpenCV还是挺强大的。至于C++和Python关于OpenCV接口问题，其实实现都大同小异，也没必要纠结于到底用C++好还是Python好，移植重构很容易。后续打算记录一下OpenCV关于图像和基于矩阵处理的相关笔记。</p><p class=\"ztext-empty-paragraph\"><br/></p><h2>参考文献</h2><ol><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.opencv.org/master/d1/dfb/intro.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">OpenCV: Introduction</a></li></ol>", 
            "topic": [
                {
                    "tag": "OpenCV", 
                    "tagLink": "https://api.zhihu.com/topics/19587715"
                }, 
                {
                    "tag": "计算机视觉", 
                    "tagLink": "https://api.zhihu.com/topics/19590195"
                }, 
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }
            ], 
            "comments": [
                {
                    "userName": "半步", 
                    "userLink": "https://www.zhihu.com/people/c817e76b0cb666410be88a709a099812", 
                    "content": "栏主是哪个高校的？", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "贺咔", 
                    "userLink": "https://www.zhihu.com/people/6add1156ea72d38b96fde9dac7f1bebc", 
                    "content": "肿么木有更新啦", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "Listen", 
                    "userLink": "https://www.zhihu.com/people/c7cde661d0a366109f285a66b46740e3", 
                    "content": "<p>谢谢答主详细的教程，但教程里有一点小错误希望你改一下，在VS2017里配置环境的第8点里，你文字写的是open_world331d.lib，但图片里是opencv_world331d.lib,我就只看了文字里的，结果郁闷了好久，偶然才看出来的。</p>", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "Sitnalta", 
                            "userLink": "https://www.zhihu.com/people/d7d2a47379c34e374f8729a9f7ba4899", 
                            "content": "已修改，非常感谢！", 
                            "likes": 0, 
                            "replyToAuthor": "Listen"
                        }
                    ]
                }, 
                {
                    "userName": "小崔", 
                    "userLink": "https://www.zhihu.com/people/e642ba82ec9a15fc39337f17c67bb568", 
                    "content": "请问一下，找不到opencv_world310d.dll   应该怎么办呀，谢谢(*°∀°)=3", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "我快完蛋了", 
                            "userLink": "https://www.zhihu.com/people/3d1174cf31f3f876a648845ba066ff83", 
                            "content": "你把你的问题百度。其实就是把一个文件复制过去就好了。", 
                            "likes": 0, 
                            "replyToAuthor": "小崔"
                        }
                    ]
                }
            ]
        }
    ], 
    "url": "https://zhuanlan.zhihu.com/c_147125547"
}

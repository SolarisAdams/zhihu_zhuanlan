{
    "title": "Pretty Tech", 
    "description": "", 
    "followers": [
        "https://www.zhihu.com/people/zhang-zi-cheng-81", 
        "https://www.zhihu.com/people/zhong-gui-71", 
        "https://www.zhihu.com/people/yuzhonglele", 
        "https://www.zhihu.com/people/guan-dou-dou-51", 
        "https://www.zhihu.com/people/mrx-92-43", 
        "https://www.zhihu.com/people/bo-he-mao-xiao-de-huang-mei-gui", 
        "https://www.zhihu.com/people/huang-tao-44-63", 
        "https://www.zhihu.com/people/changeself", 
        "https://www.zhihu.com/people/pazoron", 
        "https://www.zhihu.com/people/warship-16", 
        "https://www.zhihu.com/people/limitmhw", 
        "https://www.zhihu.com/people/zhu-jia-qi-11-97", 
        "https://www.zhihu.com/people/you-ren-shuo-wo-shi-ge-shen-shi", 
        "https://www.zhihu.com/people/li-wen-hao-36-32", 
        "https://www.zhihu.com/people/sam-xia", 
        "https://www.zhihu.com/people/MrSix", 
        "https://www.zhihu.com/people/a-si-dun-30-72", 
        "https://www.zhihu.com/people/mu-jian-guo", 
        "https://www.zhihu.com/people/zhang-han-wen-82", 
        "https://www.zhihu.com/people/missway-kk", 
        "https://www.zhihu.com/people/johnny-63-54", 
        "https://www.zhihu.com/people/lie-cheng", 
        "https://www.zhihu.com/people/wang-zi-tao-89", 
        "https://www.zhihu.com/people/liang-yan-78-26", 
        "https://www.zhihu.com/people/fangweimin-2015", 
        "https://www.zhihu.com/people/quxiaofeng", 
        "https://www.zhihu.com/people/gao-xiang-26-92", 
        "https://www.zhihu.com/people/yu-sui-wu-tong", 
        "https://www.zhihu.com/people/lleibnitz", 
        "https://www.zhihu.com/people/fg-asd-27", 
        "https://www.zhihu.com/people/pyfxiaodi", 
        "https://www.zhihu.com/people/he-yang-27-30", 
        "https://www.zhihu.com/people/liu-ban-xian-5-37", 
        "https://www.zhihu.com/people/zuo-zai-hong-lou-jin-zai-xi-you", 
        "https://www.zhihu.com/people/zzy-64-81", 
        "https://www.zhihu.com/people/zhang-meng-57-11-48", 
        "https://www.zhihu.com/people/watersp3", 
        "https://www.zhihu.com/people/huangaijun-59", 
        "https://www.zhihu.com/people/wen-yi-96-78-37", 
        "https://www.zhihu.com/people/zhu-fu-84-90", 
        "https://www.zhihu.com/people/zhiwei-chi", 
        "https://www.zhihu.com/people/yu-li-39-82", 
        "https://www.zhihu.com/people/kai-xin-de-shao-la", 
        "https://www.zhihu.com/people/xue-wu-76-68", 
        "https://www.zhihu.com/people/sjhstone", 
        "https://www.zhihu.com/people/tomlin-43", 
        "https://www.zhihu.com/people/danielei", 
        "https://www.zhihu.com/people/ye-xue-bi-xi", 
        "https://www.zhihu.com/people/lu-xiao-78-88", 
        "https://www.zhihu.com/people/mo-yu-chen-46", 
        "https://www.zhihu.com/people/ci-yao", 
        "https://www.zhihu.com/people/wang-zhi-gang-72", 
        "https://www.zhihu.com/people/shi-zi-jun-22", 
        "https://www.zhihu.com/people/dui-bu-qi-57-10", 
        "https://www.zhihu.com/people/xiao-la-ji-75-9", 
        "https://www.zhihu.com/people/xiao-mo-46-9", 
        "https://www.zhihu.com/people/mo-shi-mo-wang-xin-8", 
        "https://www.zhihu.com/people/ma-yong-6-26", 
        "https://www.zhihu.com/people/jiu-ye-20-63", 
        "https://www.zhihu.com/people/ling-luo-77-75"
    ], 
    "article": [
        {
            "url": "https://zhuanlan.zhihu.com/p/33730201", 
            "userName": "召唤法师", 
            "userLink": "https://www.zhihu.com/people/5f9805884a2b4b5b0e1604b4d7df5dba", 
            "upvote": 215, 
            "title": "宇宙飞船3D模型自动生成脚本——Blender", 
            "content": "<h2>     在 GitHub 搜索 3D、Python 时发现了这么一个有意思的代码，能随机设计、自动生成宇宙飞船！！！  </h2><h2>先看一下它是怎么工作吧：               </h2><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-7c63ce0b7583a16e7f8440692580226c_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"480\" data-rawheight=\"270\" data-thumbnail=\"https://pic1.zhimg.com/v2-7c63ce0b7583a16e7f8440692580226c_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"480\" data-original=\"https://pic1.zhimg.com/v2-7c63ce0b7583a16e7f8440692580226c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;480&#39; height=&#39;270&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"480\" data-rawheight=\"270\" data-thumbnail=\"https://pic1.zhimg.com/v2-7c63ce0b7583a16e7f8440692580226c_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"480\" data-original=\"https://pic1.zhimg.com/v2-7c63ce0b7583a16e7f8440692580226c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-7c63ce0b7583a16e7f8440692580226c_b.gif\"/></figure><h2>有意思吧 ：）</h2><p>具体工作流程是：</p><p>  1.从一个盒子开始；</p><p>  2.创建飞船外壳：挤出盒子 前/后 面几次，并且每次添加随机变化；</p><p>  3.随机开启 X向镜像（horizontal symmetry）</p><p>  4.为外壳添加不对称性：随机选择一些面进行类似第二步的操作，并且每次调整缩放值；</p><p>  5.为外壳添加细节：将每个面根据其方向分类，并添加诸如：引擎、武器、天线、灯，等等；</p><p>  6.将模型倒角（Bevel modifier）；</p><p class=\"ztext-empty-paragraph\"><br/></p><p>精简有趣的代码，这也给一些喜欢建模的人士一些启发，当我们并不刻意要求模型长的和要求一模一样时，那么就可以采用这种按照一定规则和基础元件在一定范围内随机设计、自动生成模型的方法，想想看，避免重复建模，可以省掉多少时间!</p><p>After all, Life&#39;s short right?</p><h2>看看这个小代码设计的宇宙飞船吧：</h2><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-9ba44b2383f9fbdc278b5f0c8f77d6a3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"540\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-9ba44b2383f9fbdc278b5f0c8f77d6a3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1920&#39; height=&#39;540&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"540\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-9ba44b2383f9fbdc278b5f0c8f77d6a3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-9ba44b2383f9fbdc278b5f0c8f77d6a3_b.jpg\"/></figure><p>不比多数设计师设计的差对吗 ： ）</p><p>下载地址：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/a1studmuffin/SpaceshipGenerator/releases\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">SpaceshipGenerator</a></p><p>GitHub：</p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/a1studmuffin/SpaceshipGenerator\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-b23d4c12a2a9b076f4dc36a9d8eab194_ipico.jpg\" data-image-width=\"400\" data-image-height=\"400\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">a1studmuffin/SpaceshipGenerator</a><p></p>", 
            "topic": [
                {
                    "tag": "Blender", 
                    "tagLink": "https://api.zhihu.com/topics/19710903"
                }, 
                {
                    "tag": "3D 建模", 
                    "tagLink": "https://api.zhihu.com/topics/19630455"
                }
            ], 
            "comments": [
                {
                    "userName": "YLIN丶", 
                    "userLink": "https://www.zhihu.com/people/372bbd84585f1a80b102b1d722c42a2f", 
                    "content": "哈哈，有意思，也很牛逼", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "知乎用户", 
                    "userLink": "https://www.zhihu.com/people/0", 
                    "content": "??要失业了要失业了哈哈哈", 
                    "likes": 2, 
                    "childComments": []
                }, 
                {
                    "userName": "知乎用户", 
                    "userLink": "https://www.zhihu.com/people/0", 
                    "content": "这个插件我看过，很有意思。不过觉得建模最好不要用类似的自动生成插件。", 
                    "likes": 1, 
                    "childComments": [
                        {
                            "userName": "Xi Yang", 
                            "userLink": "https://www.zhihu.com/people/c08234d11797acf6dfb365c5cb690975", 
                            "content": "为啥？", 
                            "likes": 0, 
                            "replyToAuthor": "知乎用户"
                        }, 
                        {
                            "userName": "Xi Yang", 
                            "userLink": "https://www.zhihu.com/people/c08234d11797acf6dfb365c5cb690975", 
                            "content": "卧槽拉到最底下我知道为啥了，长得丑……", 
                            "likes": 3, 
                            "replyToAuthor": "知乎用户"
                        }
                    ]
                }, 
                {
                    "userName": "Xi Yang", 
                    "userLink": "https://www.zhihu.com/people/c08234d11797acf6dfb365c5cb690975", 
                    "content": "有意思！", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "知乎用户", 
                    "userLink": "https://www.zhihu.com/people/0", 
                    "content": "真的就…毫无设计感", 
                    "likes": 2, 
                    "childComments": []
                }, 
                {
                    "userName": "三只小猪捡贝壳", 
                    "userLink": "https://www.zhihu.com/people/0cba8e3930819d3054146e07f9232d37", 
                    "content": "帅爆了！", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "三原色的诺基亚", 
                    "userLink": "https://www.zhihu.com/people/0b2453cc4154772ee7387663dd989fd4", 
                    "content": "被图片骗进来了", 
                    "likes": 1, 
                    "childComments": []
                }, 
                {
                    "userName": "想求真", 
                    "userLink": "https://www.zhihu.com/people/3c95880f2a3a834a2b8542f2ae1b4490", 
                    "content": "以前收藏过", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "知乎用户", 
                    "userLink": "https://www.zhihu.com/people/0", 
                    "content": "小时候用过3d max里面的一个插件，能生成星球大战模式的飞船建模，比如一个球一搞就变成死星了，一个三角形一搞就变成歼星舰了，等于是先有个大致形状然后加细节，我说实话……感觉比这个好…………", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "知乎用户", 
                    "userLink": "https://www.zhihu.com/people/0", 
                    "content": "牛逼牝", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "知乎用户", 
                    "userLink": "https://www.zhihu.com/people/0", 
                    "content": "<p>做底稿的灵感来源不错？可以提供一些型的突破</p>", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "zjnever", 
                    "userLink": "https://www.zhihu.com/people/af553276d96e8b522a2d170b27937e2c", 
                    "content": "最好是能多个盒子一起做成坐标中心，然后互相之前可以设置权重", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "冻化石", 
                    "userLink": "https://www.zhihu.com/people/e31f3ca2c7c69b29ffece17589ef006a", 
                    "content": "然而做cg有特写那种还是要老老实实刷高模，画贴图ヽ(ー_ー )ノ做远景舰队撑场面还行", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "绒面革", 
                    "userLink": "https://www.zhihu.com/people/b73007335e27c034e5245dbbc4177a64", 
                    "content": "米玛塔尔", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "7075T6", 
                    "userLink": "https://www.zhihu.com/people/cf8daac6eb7bd1a73c4fe8f321c38841", 
                    "content": "<p>CCP不愁新飞船设计了</p>", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "知乎用户", 
                    "userLink": "https://www.zhihu.com/people/0", 
                    "content": "GIF有点丑?", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/30516154", 
            "userName": "召唤法师", 
            "userLink": "https://www.zhihu.com/people/5f9805884a2b4b5b0e1604b4d7df5dba", 
            "upvote": 5, 
            "title": "炫酷HTML5前端设计源码分析笔记——画沙", 
            "content": "<p>       前段时间在网上闲逛无意间看到了一款十分cool的前端设计，所以就抱着学习的心态将她的源代码详细的分析了一下，请各位读者跟着我的脚步，因为等我们结束了分析，你就会明白看似漂亮复杂的网页背后竟是多么简单优雅的数学原理。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.html5tricks.com/demo/html5-canvas-particle-effect/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">HTML5 Canvas粒子模拟效果DEMO演示</a></p><p class=\"ztext-empty-paragraph\"><br/></p><p>请你先看一下上面的网页效果，，，怎么样是不是很cool？</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"kd\">var</span> <span class=\"nx\">NUM_PARTICLES</span> <span class=\"o\">=</span> <span class=\"p\">(</span> <span class=\"p\">(</span> <span class=\"nx\">ROWS</span> <span class=\"o\">=</span> <span class=\"mi\">100</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span> <span class=\"nx\">COLS</span> <span class=\"o\">=</span> <span class=\"mi\">300</span> <span class=\"p\">)</span> <span class=\"p\">),</span>\n    <span class=\"nx\">THICKNESS</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">pow</span><span class=\"p\">(</span> <span class=\"mi\">80</span><span class=\"p\">,</span> <span class=\"mi\">2</span> <span class=\"p\">),</span>\n    <span class=\"nx\">SPACING</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n    <span class=\"nx\">MARGIN</span> <span class=\"o\">=</span> <span class=\"mi\">100</span><span class=\"p\">,</span>\n    <span class=\"nx\">COLOR</span> <span class=\"o\">=</span> <span class=\"mi\">220</span><span class=\"p\">,</span>\n    <span class=\"nx\">DRAG</span> <span class=\"o\">=</span> <span class=\"mf\">0.95</span><span class=\"p\">,</span>\n    <span class=\"nx\">EASE</span> <span class=\"o\">=</span> <span class=\"mf\">0.25</span><span class=\"p\">,</span>\n    \n    <span class=\"cm\">/*\n</span><span class=\"cm\">    \n</span><span class=\"cm\">    used for sine approximation, but Math.sin in Chrome is still fast enough :)http://jsperf.com/math-sin-vs-sine-approximation\n</span><span class=\"cm\">\n</span><span class=\"cm\">    B = 4 / Math.PI,\n</span><span class=\"cm\">    C = -4 / Math.pow( Math.PI, 2 ),\n</span><span class=\"cm\">    P = 0.225,\n</span><span class=\"cm\">\n</span><span class=\"cm\">    */</span>\n\n    <span class=\"nx\">container</span><span class=\"p\">,</span>\n    <span class=\"nx\">particle</span><span class=\"p\">,</span>\n    <span class=\"nx\">canvas</span><span class=\"p\">,</span>\n    <span class=\"nx\">mouse</span><span class=\"p\">,</span>\n    <span class=\"nx\">stats</span><span class=\"p\">,</span>\n    <span class=\"nx\">list</span><span class=\"p\">,</span>\n    <span class=\"nx\">ctx</span><span class=\"p\">,</span>\n    <span class=\"nx\">tog</span><span class=\"p\">,</span>\n    <span class=\"nx\">man</span><span class=\"p\">,</span>\n    <span class=\"nx\">dx</span><span class=\"p\">,</span> <span class=\"nx\">dy</span><span class=\"p\">,</span>\n    <span class=\"nx\">mx</span><span class=\"p\">,</span> <span class=\"nx\">my</span><span class=\"p\">,</span>\n    <span class=\"nx\">d</span><span class=\"p\">,</span> <span class=\"nx\">t</span><span class=\"p\">,</span> <span class=\"nx\">f</span><span class=\"p\">,</span>\n    <span class=\"nx\">a</span><span class=\"p\">,</span> <span class=\"nx\">b</span><span class=\"p\">,</span>\n    <span class=\"nx\">i</span><span class=\"p\">,</span> <span class=\"nx\">n</span><span class=\"p\">,</span>\n    <span class=\"nx\">w</span><span class=\"p\">,</span> <span class=\"nx\">h</span><span class=\"p\">,</span>\n    <span class=\"nx\">p</span><span class=\"p\">,</span> <span class=\"nx\">s</span><span class=\"p\">,</span>\n    <span class=\"nx\">r</span><span class=\"p\">,</span> <span class=\"nx\">c</span>\n    <span class=\"p\">;</span>\n\n<span class=\"nx\">particle</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"nx\">vx</span><span class=\"o\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n  <span class=\"nx\">vy</span><span class=\"o\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n  <span class=\"nx\">x</span><span class=\"o\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n  <span class=\"nx\">y</span><span class=\"o\">:</span> <span class=\"mi\">0</span>\n<span class=\"p\">};</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">init</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n  <span class=\"nx\">container</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span> <span class=\"s1\">&#39;container&#39;</span> <span class=\"p\">);</span>\n  <span class=\"nx\">canvas</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">createElement</span><span class=\"p\">(</span> <span class=\"s1\">&#39;canvas&#39;</span> <span class=\"p\">);</span>\n  \n  <span class=\"nx\">ctx</span> <span class=\"o\">=</span> <span class=\"nx\">canvas</span><span class=\"p\">.</span><span class=\"nx\">getContext</span><span class=\"p\">(</span> <span class=\"s1\">&#39;2d&#39;</span> <span class=\"p\">);</span>\n  <span class=\"nx\">man</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><span class=\"p\">;</span>\n  <span class=\"nx\">tog</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"p\">;</span>\n  \n  <span class=\"nx\">list</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n  \n  <span class=\"nx\">w</span> <span class=\"o\">=</span> <span class=\"nx\">canvas</span><span class=\"p\">.</span><span class=\"nx\">width</span> <span class=\"o\">=</span> <span class=\"nx\">COLS</span> <span class=\"o\">*</span> <span class=\"nx\">SPACING</span> <span class=\"o\">+</span> <span class=\"nx\">MARGIN</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">;</span>\n  <span class=\"nx\">h</span> <span class=\"o\">=</span> <span class=\"nx\">canvas</span><span class=\"p\">.</span><span class=\"nx\">height</span> <span class=\"o\">=</span> <span class=\"nx\">ROWS</span> <span class=\"o\">*</span> <span class=\"nx\">SPACING</span> <span class=\"o\">+</span> <span class=\"nx\">MARGIN</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">;</span>\n  \n  <span class=\"nx\">container</span><span class=\"p\">.</span><span class=\"nx\">style</span><span class=\"p\">.</span><span class=\"nx\">marginLeft</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">round</span><span class=\"p\">(</span> <span class=\"nx\">w</span> <span class=\"o\">*</span> <span class=\"o\">-</span><span class=\"mf\">0.5</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;px&#39;</span><span class=\"p\">;</span>\n  <span class=\"nx\">container</span><span class=\"p\">.</span><span class=\"nx\">style</span><span class=\"p\">.</span><span class=\"nx\">marginTop</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">round</span><span class=\"p\">(</span> <span class=\"nx\">h</span> <span class=\"o\">*</span> <span class=\"o\">-</span><span class=\"mf\">0.5</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;px&#39;</span><span class=\"p\">;</span>\n  \n  <span class=\"k\">for</span> <span class=\"p\">(</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">NUM_PARTICLES</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    \n    <span class=\"nx\">p</span> <span class=\"o\">=</span> <span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">(</span> <span class=\"nx\">particle</span> <span class=\"p\">);</span>\n    <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">=</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">ox</span> <span class=\"o\">=</span> <span class=\"nx\">MARGIN</span> <span class=\"o\">+</span> <span class=\"nx\">SPACING</span> <span class=\"o\">*</span> <span class=\"p\">(</span> <span class=\"nx\">i</span> <span class=\"o\">%</span> <span class=\"nx\">COLS</span> <span class=\"p\">);</span>\n    <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">=</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">oy</span> <span class=\"o\">=</span> <span class=\"nx\">MARGIN</span> <span class=\"o\">+</span> <span class=\"nx\">SPACING</span> <span class=\"o\">*</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">floor</span><span class=\"p\">(</span> <span class=\"nx\">i</span> <span class=\"o\">/</span> <span class=\"nx\">COLS</span> <span class=\"p\">);</span>\n    \n    <span class=\"nx\">list</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">p</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"nx\">container</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span><span class=\"p\">(</span> <span class=\"s1\">&#39;mousemove&#39;</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n    <span class=\"nx\">bounds</span> <span class=\"o\">=</span> <span class=\"nx\">container</span><span class=\"p\">.</span><span class=\"nx\">getBoundingClientRect</span><span class=\"p\">();</span>\n    <span class=\"nx\">mx</span> <span class=\"o\">=</span> <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">clientX</span> <span class=\"o\">-</span> <span class=\"nx\">bounds</span><span class=\"p\">.</span><span class=\"nx\">left</span><span class=\"p\">;</span>\n    <span class=\"nx\">my</span> <span class=\"o\">=</span> <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">clientY</span> <span class=\"o\">-</span> <span class=\"nx\">bounds</span><span class=\"p\">.</span><span class=\"nx\">top</span><span class=\"p\">;</span>\n    <span class=\"nx\">man</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"p\">;</span>\n    \n  <span class=\"p\">});</span>\n  \n  <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"k\">typeof</span> <span class=\"nx\">Stats</span> <span class=\"o\">===</span> <span class=\"s1\">&#39;function&#39;</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">body</span><span class=\"p\">.</span><span class=\"nx\">appendChild</span><span class=\"p\">(</span> <span class=\"p\">(</span> <span class=\"nx\">stats</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">Stats</span><span class=\"p\">()</span> <span class=\"p\">).</span><span class=\"nx\">domElement</span> <span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n  \n  <span class=\"nx\">container</span><span class=\"p\">.</span><span class=\"nx\">appendChild</span><span class=\"p\">(</span> <span class=\"nx\">canvas</span> <span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">step</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">stats</span> <span class=\"p\">)</span> <span class=\"nx\">stats</span><span class=\"p\">.</span><span class=\"nx\">begin</span><span class=\"p\">();</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">tog</span> <span class=\"o\">=</span> <span class=\"o\">!</span><span class=\"nx\">tog</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"o\">!</span><span class=\"nx\">man</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n\n      <span class=\"nx\">t</span> <span class=\"o\">=</span> <span class=\"o\">+</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">()</span> <span class=\"o\">*</span> <span class=\"mf\">0.001</span><span class=\"p\">;</span>\n      <span class=\"nx\">mx</span> <span class=\"o\">=</span> <span class=\"nx\">w</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span> <span class=\"o\">+</span> <span class=\"p\">(</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">cos</span><span class=\"p\">(</span> <span class=\"nx\">t</span> <span class=\"o\">*</span> <span class=\"mf\">2.1</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">cos</span><span class=\"p\">(</span> <span class=\"nx\">t</span> <span class=\"o\">*</span> <span class=\"mf\">0.9</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">w</span> <span class=\"o\">*</span> <span class=\"mf\">0.45</span> <span class=\"p\">);</span>\n      <span class=\"nx\">my</span> <span class=\"o\">=</span> <span class=\"nx\">h</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span> <span class=\"o\">+</span> <span class=\"p\">(</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">sin</span><span class=\"p\">(</span> <span class=\"nx\">t</span> <span class=\"o\">*</span> <span class=\"mf\">3.2</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">tan</span><span class=\"p\">(</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">sin</span><span class=\"p\">(</span> <span class=\"nx\">t</span> <span class=\"o\">*</span> <span class=\"mf\">0.8</span> <span class=\"p\">)</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">h</span> <span class=\"o\">*</span> <span class=\"mf\">0.45</span> <span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n      \n    <span class=\"k\">for</span> <span class=\"p\">(</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">NUM_PARTICLES</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n      \n      <span class=\"nx\">p</span> <span class=\"o\">=</span> <span class=\"nx\">list</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">];</span>\n      \n      <span class=\"nx\">d</span> <span class=\"o\">=</span> <span class=\"p\">(</span> <span class=\"nx\">dx</span> <span class=\"o\">=</span> <span class=\"nx\">mx</span> <span class=\"o\">-</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">dx</span> <span class=\"o\">+</span> <span class=\"p\">(</span> <span class=\"nx\">dy</span> <span class=\"o\">=</span> <span class=\"nx\">my</span> <span class=\"o\">-</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">dy</span><span class=\"p\">;</span>\n      <span class=\"nx\">f</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"nx\">THICKNESS</span> <span class=\"o\">/</span> <span class=\"nx\">d</span><span class=\"p\">;</span>\n\n      <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">d</span> <span class=\"o\">&lt;</span> <span class=\"nx\">THICKNESS</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">t</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">atan2</span><span class=\"p\">(</span> <span class=\"nx\">dy</span><span class=\"p\">,</span> <span class=\"nx\">dx</span> <span class=\"p\">);</span>\n        <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">vx</span> <span class=\"o\">+=</span> <span class=\"nx\">f</span> <span class=\"o\">*</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">cos</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"p\">);</span>\n        <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">vy</span> <span class=\"o\">+=</span> <span class=\"nx\">f</span> <span class=\"o\">*</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">sin</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"p\">);</span>\n      <span class=\"p\">}</span>\n\n      <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">+=</span> <span class=\"p\">(</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">vx</span> <span class=\"o\">*=</span> <span class=\"nx\">DRAG</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">ox</span> <span class=\"o\">-</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">EASE</span><span class=\"p\">;</span>\n      <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">+=</span> <span class=\"p\">(</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">vy</span> <span class=\"o\">*=</span> <span class=\"nx\">DRAG</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">oy</span> <span class=\"o\">-</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">EASE</span><span class=\"p\">;</span>\n\n    <span class=\"p\">}</span>\n\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n\n    <span class=\"nx\">b</span> <span class=\"o\">=</span> <span class=\"p\">(</span> <span class=\"nx\">a</span> <span class=\"o\">=</span> <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">createImageData</span><span class=\"p\">(</span> <span class=\"nx\">w</span><span class=\"p\">,</span> <span class=\"nx\">h</span> <span class=\"p\">)</span> <span class=\"p\">).</span><span class=\"nx\">data</span><span class=\"p\">;</span>\n\n    <span class=\"k\">for</span> <span class=\"p\">(</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">NUM_PARTICLES</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n\n      <span class=\"nx\">p</span> <span class=\"o\">=</span> <span class=\"nx\">list</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">];</span>\n      <span class=\"nx\">b</span><span class=\"p\">[</span><span class=\"nx\">n</span> <span class=\"o\">=</span> <span class=\"p\">(</span> <span class=\"o\">~~</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">+</span> <span class=\"p\">(</span> <span class=\"o\">~~</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">*</span> <span class=\"nx\">w</span> <span class=\"p\">)</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">b</span><span class=\"p\">[</span><span class=\"nx\">n</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">b</span><span class=\"p\">[</span><span class=\"nx\">n</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">COLOR</span><span class=\"p\">,</span> <span class=\"nx\">b</span><span class=\"p\">[</span><span class=\"nx\">n</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">255</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">putImageData</span><span class=\"p\">(</span> <span class=\"nx\">a</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span> <span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">stats</span> <span class=\"p\">)</span> <span class=\"nx\">stats</span><span class=\"p\">.</span><span class=\"nx\">end</span><span class=\"p\">();</span>\n\n  <span class=\"nx\">requestAnimationFrame</span><span class=\"p\">(</span> <span class=\"nx\">step</span> <span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">init</span><span class=\"p\">();</span>\n<span class=\"nx\">step</span><span class=\"p\">();</span>\n</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>上面的就是实现这个效果的所有代码了。</p><p>函数只有两个，顾名思义，就是初始化init()与每一步step()；init()里面没有什么难理解的地方，就是创建与初始化画布（ &lt;canvas&gt;&lt; &lt;/canvas&gt; ），循环创建与初始化画布上的粒子，并且创建一个鼠标移动的事件绑定函数。</p><p>实现效果的核心代码在step()里我们现在来一步步详细分析它：</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">tog</span> <span class=\"o\">=</span> <span class=\"o\">!</span><span class=\"nx\">tog</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n</code></pre></div><p>这一句的作用相当于开了两个线程并发运行，因为初始化的时候tog是true，所以第一次进入函数不会进入这个 if 但是第二次就会进入，因为：</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"nx\">requestAnimationFrame</span><span class=\"p\">(</span> <span class=\"nx\">step</span> <span class=\"p\">);</span>\n</code></pre></div><p>一次在画布上绘制，一次修改各个粒子的位置。</p><div class=\"highlight\"><pre><code class=\"language-js\">   <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"o\">!</span><span class=\"nx\">man</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n\n      <span class=\"nx\">t</span> <span class=\"o\">=</span> <span class=\"o\">+</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">()</span> <span class=\"o\">*</span> <span class=\"mf\">0.001</span><span class=\"p\">;</span>\n      <span class=\"nx\">mx</span> <span class=\"o\">=</span> <span class=\"nx\">w</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span> <span class=\"o\">+</span> <span class=\"p\">(</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">cos</span><span class=\"p\">(</span> <span class=\"nx\">t</span> <span class=\"o\">*</span> <span class=\"mf\">2.1</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">cos</span><span class=\"p\">(</span> <span class=\"nx\">t</span> <span class=\"o\">*</span> <span class=\"mf\">0.9</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">w</span> <span class=\"o\">*</span> <span class=\"mf\">0.45</span> <span class=\"p\">);</span>\n      <span class=\"nx\">my</span> <span class=\"o\">=</span> <span class=\"nx\">h</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span> <span class=\"o\">+</span> <span class=\"p\">(</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">sin</span><span class=\"p\">(</span> <span class=\"nx\">t</span> <span class=\"o\">*</span> <span class=\"mf\">3.2</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">tan</span><span class=\"p\">(</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">sin</span><span class=\"p\">(</span> <span class=\"nx\">t</span> <span class=\"o\">*</span> <span class=\"mf\">0.8</span> <span class=\"p\">)</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">h</span> <span class=\"o\">*</span> <span class=\"mf\">0.45</span> <span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n</code></pre></div><p>在初始化的时候man=false，而在鼠标移动事件的监听函数里，你会发现总是man=true，只要你看了那个演示网页你就会明白，这是一段实现模拟鼠标移动的代码，上述代码的实现你基本上可以认为，是让模拟出的虚拟鼠标随机的移动。</p><div class=\"highlight\"><pre><code class=\"language-js\">   <span class=\"k\">for</span> <span class=\"p\">(</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">NUM_PARTICLES</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n      \n      <span class=\"nx\">p</span> <span class=\"o\">=</span> <span class=\"nx\">list</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">];</span>\n      \n      <span class=\"nx\">d</span> <span class=\"o\">=</span> <span class=\"p\">(</span> <span class=\"nx\">dx</span> <span class=\"o\">=</span> <span class=\"nx\">mx</span> <span class=\"o\">-</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">dx</span> <span class=\"o\">+</span> <span class=\"p\">(</span> <span class=\"nx\">dy</span> <span class=\"o\">=</span> <span class=\"nx\">my</span> <span class=\"o\">-</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">dy</span><span class=\"p\">;</span>\n      <span class=\"nx\">f</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"nx\">THICKNESS</span> <span class=\"o\">/</span> <span class=\"nx\">d</span><span class=\"p\">;</span>\n\n      <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">d</span> <span class=\"o\">&lt;</span> <span class=\"nx\">THICKNESS</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">t</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">atan2</span><span class=\"p\">(</span> <span class=\"nx\">dy</span><span class=\"p\">,</span> <span class=\"nx\">dx</span> <span class=\"p\">);</span>\n        <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">vx</span> <span class=\"o\">+=</span> <span class=\"nx\">f</span> <span class=\"o\">*</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">cos</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"p\">);</span>\n        <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">vy</span> <span class=\"o\">+=</span> <span class=\"nx\">f</span> <span class=\"o\">*</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">sin</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"p\">);</span>\n      <span class=\"p\">}</span>\n\n      <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">+=</span> <span class=\"p\">(</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">vx</span> <span class=\"o\">*=</span> <span class=\"nx\">DRAG</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">ox</span> <span class=\"o\">-</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">EASE</span><span class=\"p\">;</span>\n      <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">+=</span> <span class=\"p\">(</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">vy</span> <span class=\"o\">*=</span> <span class=\"nx\">DRAG</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">oy</span> <span class=\"o\">-</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">EASE</span><span class=\"p\">;</span>\n\n    <span class=\"p\">}</span>\n</code></pre></div><p>这段代码就是核心之一了，它的作用是让画布上的粒子，根据你鼠标的位置，按照一定的规则修改坐标属性，然后在第二次循环的时候你就能看到粒子的位置变化了。我们细细看：</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"nx\">d</span> <span class=\"o\">=</span> <span class=\"p\">(</span> <span class=\"nx\">dx</span> <span class=\"o\">=</span> <span class=\"nx\">mx</span> <span class=\"o\">-</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">dx</span> <span class=\"o\">+</span> <span class=\"p\">(</span> <span class=\"nx\">dy</span> <span class=\"o\">=</span> <span class=\"nx\">my</span> <span class=\"o\">-</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">dy</span><span class=\"p\">;</span>\n</code></pre></div><p>mx与my是我们鼠标的坐标，p.x与p.y是图中某一个粒子的坐标，这里面做的事情就是用勾股定理求出鼠标坐标到粒子坐标的距离平方和。</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"nx\">f</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"nx\">THICKNESS</span> <span class=\"o\">/</span> <span class=\"nx\">d</span><span class=\"p\">;</span>\n</code></pre></div><p>THICKNESS是作者限制的一个范围的平方，你可以改下试试，f是距离差平方所占总限制距离平方的倒数。为什么是负号呢？因为是把粒子推开啊，往后面分析你就知道了。</p><div class=\"highlight\"><pre><code class=\"language-js\">     <span class=\"k\">if</span> <span class=\"p\">(</span> <span class=\"nx\">d</span> <span class=\"o\">&lt;</span> <span class=\"nx\">THICKNESS</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">t</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">atan2</span><span class=\"p\">(</span> <span class=\"nx\">dy</span><span class=\"p\">,</span> <span class=\"nx\">dx</span> <span class=\"p\">);</span>\n        <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">vx</span> <span class=\"o\">+=</span> <span class=\"nx\">f</span> <span class=\"o\">*</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">cos</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"p\">);</span>\n        <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">vy</span> <span class=\"o\">+=</span> <span class=\"nx\">f</span> <span class=\"o\">*</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">sin</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"p\">);</span>\n      <span class=\"p\">}</span>\n      <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">+=</span> <span class=\"p\">(</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">vx</span> <span class=\"o\">*=</span> <span class=\"nx\">DRAG</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">ox</span> <span class=\"o\">-</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">EASE</span><span class=\"p\">;</span>\n      <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">+=</span> <span class=\"p\">(</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">vy</span> <span class=\"o\">*=</span> <span class=\"nx\">DRAG</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">oy</span> <span class=\"o\">-</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">EASE</span><span class=\"p\">;</span>\n</code></pre></div><p>p.vx与p.vy是移动值之一，在范围内则按照上面的数学公式计算出移动值之一，然后得出更改后的粒子坐标，来我给你好好讲一下这个聪明的公式：</p><p>从公式可以看出，粒子的坐标更改在x轴与y轴上具有相同的规则，所以弄明白了任意一维度的运动方式，就明白了整体的运动逻辑；dx与dy是两个个方向向量，其合向量指向鼠标坐标mx,my，所以f * Math.cos(t)就相当于：cos(夹角值) / 距离比例；这个公式会使粒子x轴向的位移大小取决于角度余弦值与距离平方比例倒数大小。</p><p>想象一下，余弦值越大，意味着x轴分向量在合向量中所占比例越大，则粒子x轴向的位移也应该越大；比例倒数越大，则相应比例越小，意味着粒子与鼠标坐标离得越近，则粒子x轴向的位移越大，因为向量总是从粒子指向鼠标坐标的，所以才要在比例前加上负号改变向量方向，这里比例采用距离平方比的原因应该是想达到一种非线性变化的效果。</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">+=</span> <span class=\"p\">(</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">vx</span> <span class=\"o\">*=</span> <span class=\"nx\">DRAG</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">ox</span> <span class=\"o\">-</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">EASE</span><span class=\"p\">;</span>\n</code></pre></div><p>现在再来看最后一个公式就很好理解了，x轴向位移p.vx并不是与粒子x轴坐标累加上就清零的，而是每一次循环都根据步长逐渐累加逐渐减少，这样达到的效果就是让粒子跟被撞了一下一样，慢慢减慢每一次重绘的移动距离，相当于减小移动速度。而后面的那个算式很明显，就是让粒子如果不在原来的坐标上了，那么就按照步长慢慢回来，这样的话，每个粒子都一定有一个点能让其达到动态平衡并形成一个圈。</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"nx\">b</span><span class=\"p\">[</span><span class=\"nx\">n</span> <span class=\"o\">=</span> <span class=\"p\">(</span> <span class=\"o\">~~</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">+</span> <span class=\"p\">(</span> <span class=\"o\">~~</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">*</span> <span class=\"nx\">w</span> <span class=\"p\">)</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">b</span><span class=\"p\">[</span><span class=\"nx\">n</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">b</span><span class=\"p\">[</span><span class=\"nx\">n</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">COLOR</span><span class=\"p\">,</span> <span class=\"nx\">b</span><span class=\"p\">[</span><span class=\"nx\">n</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">255</span><span class=\"p\">;</span>\n</code></pre></div><p>在else语句里，这个语句的作用就是根据每一个粒子的坐标点，生成相应粒子，没什么好说的了，不了解的话，看看ctx.createImageData( w, h ).data 的data结构。</p><p><b>        就用这么简单的几行公式，就创造出这么一个神奇的demo。一切都那么自然对吗，掌握了数学，你就掌握了世界的规律！当你掌握了世界的规律，你当然可以创造一个有趣的世界！</b></p><p class=\"ztext-empty-paragraph\"><br/></p><p>另外，再说一下我对前端设计的一些理解，在其他纯粹的科技行业，你总有问题去指引你前进的方向；而前端设计不一样，你无法就在那坐着然后就能知道自己想要造个什么出来！我在当时分析完上面的demo后，才有了创造下面链接里的作品的灵感：</p><p><a href=\"https://link.zhihu.com/?target=http%3A//wow.techbrood.com/fiddle/37131%3Fvm%3Dfull\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">HTML5交互式创意设计--Lightning_Web - 踏得网</a></p><p>所以，我认为，前端设计的精髓就是去找到某个点让你能释放想像力，你只有看的更多，做的更多，才能发现更多有意思的事情，你的想像力才能有足够的动力去触碰到灵感，<b><i>只有想不到，没有做不到！</i></b></p><p></p>", 
            "topic": [
                {
                    "tag": "前端入门", 
                    "tagLink": "https://api.zhihu.com/topics/19590813"
                }, 
                {
                    "tag": "HTML5", 
                    "tagLink": "https://api.zhihu.com/topics/19557564"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/30586423", 
            "userName": "召唤法师", 
            "userLink": "https://www.zhihu.com/people/5f9805884a2b4b5b0e1604b4d7df5dba", 
            "upvote": 1, 
            "title": "炫酷HTML5前端设计源码分析笔记——残衣", 
            "content": "<p>有一款名为tearable-cloth（残衣）的HTML5前端交互式设计广为流传，早就想分析一下她的技术了，今天刚好有空，所以就有了这篇文章。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.yyyweb.com/demo/tearable-cloth/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">HTML5 Canvas可撕裂布料效果</a></p><p class=\"ztext-empty-paragraph\"><br/></p><p>源代码有些长，就不直接贴了，想收藏、研究或者二次利用的在这里下源码：</p><p class=\"ztext-empty-paragraph\"><br/></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.yyyweb.com/ctools/download.php%3Ftarget%3Dhttp%253A%252F%252Fwww.yyyweb.com%252Fdemo%252Ftearable-cloth%252Ftearable-cloth.rar\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">源码下载</a></p><p class=\"ztext-empty-paragraph\"><br/></p><p>可以将源码分为两大部分解读，<b>初始化 </b>与 <b>更新画面。</b></p><p>初始化：</p><p>        这一部分代码初始了画布，onmousedown、onmouseup、onmousemove、oncontextmenu 事件方法；方法的功能是，记录鼠标按键的状态，鼠标的前一时刻坐标（上一次进入该事件方法函数）与当前时刻坐标。并开始第二部分。</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"kd\">var</span> <span class=\"nx\">Cloth</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">points</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n\n    <span class=\"kd\">var</span> <span class=\"nx\">start_x</span> <span class=\"o\">=</span> <span class=\"nx\">canvas</span><span class=\"p\">.</span><span class=\"nx\">width</span> <span class=\"o\">/</span> <span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"nx\">cloth_width</span> <span class=\"o\">*</span> <span class=\"nx\">spacing</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">;</span>\n\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">y</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">y</span> <span class=\"o\">&lt;=</span> <span class=\"nx\">cloth_height</span><span class=\"p\">;</span> <span class=\"nx\">y</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">x</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">x</span> <span class=\"o\">&lt;=</span> <span class=\"nx\">cloth_width</span><span class=\"p\">;</span> <span class=\"nx\">x</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n            <span class=\"kd\">var</span> <span class=\"nx\">p</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">Point</span><span class=\"p\">(</span><span class=\"nx\">start_x</span> <span class=\"o\">+</span> <span class=\"nx\">x</span> <span class=\"o\">*</span> <span class=\"nx\">spacing</span><span class=\"p\">,</span> <span class=\"nx\">start_y</span> <span class=\"o\">+</span> <span class=\"nx\">y</span> <span class=\"o\">*</span> <span class=\"nx\">spacing</span><span class=\"p\">);</span>\n\n            <span class=\"nx\">x</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span> <span class=\"o\">&amp;&amp;</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">attach</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">points</span><span class=\"p\">[</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">points</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]);</span>\n            <span class=\"nx\">y</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"o\">&amp;&amp;</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">pin</span><span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">,</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">);</span>\n            <span class=\"nx\">y</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span> <span class=\"o\">&amp;&amp;</span> <span class=\"nx\">p</span><span class=\"p\">.</span><span class=\"nx\">attach</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">points</span><span class=\"p\">[</span><span class=\"nx\">x</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"nx\">y</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"nx\">cloth_width</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)])</span>\n\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">points</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div><p>上面是初始化中最核心的部分，即初始化<b>残衣</b>；<b>残衣</b>其实就是由一些点（粒子）和点与相邻点间的连线（弹力链接）组成的物体；初始化弹力链接的规则是：非第一列有一个左弹力链接点，非第一行有一个上弹力链接点，也就是说每个粒子最多能主动初始化两条弹力链接，一共最多能链接四个粒子。attach函数的功能就是将当前粒子所主动初始化的弹力链接所连的粒子的保存到当前粒子的constraints数组里。</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"kd\">var</span> <span class=\"nx\">Constraint</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">p1</span><span class=\"p\">,</span> <span class=\"nx\">p2</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">p1</span> <span class=\"o\">=</span> <span class=\"nx\">p1</span><span class=\"p\">;</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">p2</span> <span class=\"o\">=</span> <span class=\"nx\">p2</span><span class=\"p\">;</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">=</span> <span class=\"nx\">spacing</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n\n<span class=\"nx\">Point</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">attach</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">point</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">constraints</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span>\n        <span class=\"k\">new</span> <span class=\"nx\">Constraint</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"nx\">point</span><span class=\"p\">)</span>\n    <span class=\"p\">);</span>\n<span class=\"p\">};</span>\n</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>更新画面：</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"kd\">function</span> <span class=\"nx\">update</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">clearRect</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">canvas</span><span class=\"p\">.</span><span class=\"nx\">width</span><span class=\"p\">,</span> <span class=\"nx\">canvas</span><span class=\"p\">.</span><span class=\"nx\">height</span><span class=\"p\">);</span>\n\n    <span class=\"nx\">cloth</span><span class=\"p\">.</span><span class=\"nx\">update</span><span class=\"p\">();</span>\n    <span class=\"nx\">cloth</span><span class=\"p\">.</span><span class=\"nx\">draw</span><span class=\"p\">();</span>\n\n    <span class=\"nx\">requestAnimFrame</span><span class=\"p\">(</span><span class=\"nx\">update</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div><p>思路很明显，先更新，再画图，我们继续：</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"nx\">Cloth</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">update</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"nx\">physics_accuracy</span><span class=\"p\">;</span>\n\n    <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"nx\">i</span><span class=\"o\">--</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"kd\">var</span> <span class=\"nx\">p</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">points</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span>\n        <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"nx\">p</span><span class=\"o\">--</span><span class=\"p\">)</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">points</span><span class=\"p\">[</span><span class=\"nx\">p</span><span class=\"p\">].</span><span class=\"nx\">resolve_constraints</span><span class=\"p\">();</span><span class=\"c1\">//1\n</span><span class=\"c1\"></span>    <span class=\"p\">}</span>\n\n    <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">points</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span>\n    <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"nx\">i</span><span class=\"o\">--</span><span class=\"p\">)</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">points</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">].</span><span class=\"nx\">update</span><span class=\"p\">(</span><span class=\"mf\">.016</span><span class=\"p\">);</span><span class=\"c1\">//2\n</span><span class=\"c1\"></span><span class=\"p\">};</span>\n</code></pre></div><p>更新中又分了两步，先根据弹力链接长度变化（模拟弹力）更新各粒子坐标位置，再根据鼠标操作与模拟重力来更新坐标位置。</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"nx\">Point</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">resolve_constraints</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">pin_x</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span> <span class=\"o\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">pin_y</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">pin_x</span><span class=\"p\">;</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">pin_y</span><span class=\"p\">;</span>\n        <span class=\"k\">return</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">constraints</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span>\n    <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"nx\">i</span><span class=\"o\">--</span><span class=\"p\">)</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">constraints</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">].</span><span class=\"nx\">resolve</span><span class=\"p\">();</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">&gt;</span> <span class=\"nx\">boundsx</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"nx\">boundsx</span> <span class=\"o\">-</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">;</span>\n        \n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">&lt;</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">&gt;</span> <span class=\"nx\">boundsy</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"nx\">boundsy</span> <span class=\"o\">-</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">;</span>\n        \n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">&lt;</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div><p>结合初始化代码，每一个粒子如果y=0，则坐标不变。否则的话进入核心函数之一，剩余代码是在做一些边界限定，自己看下。</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"nx\">Constraint</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">resolve</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"c1\">//1\n</span><span class=\"c1\"></span>    <span class=\"kd\">var</span> <span class=\"nx\">diff_x</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">p1</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">-</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">p2</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">,</span>\n        <span class=\"nx\">diff_y</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">p1</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">-</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">p2</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">,</span>\n        <span class=\"nx\">dist</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">sqrt</span><span class=\"p\">(</span><span class=\"nx\">diff_x</span> <span class=\"o\">*</span> <span class=\"nx\">diff_x</span> <span class=\"o\">+</span> <span class=\"nx\">diff_y</span> <span class=\"o\">*</span> <span class=\"nx\">diff_y</span><span class=\"p\">),</span>\n        <span class=\"nx\">diff</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">-</span> <span class=\"nx\">dist</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"nx\">dist</span><span class=\"p\">;</span>\n    <span class=\"c1\">//2\n</span><span class=\"c1\"></span>    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">dist</span> <span class=\"o\">&gt;</span> <span class=\"nx\">tear_distance</span><span class=\"p\">)</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">p1</span><span class=\"p\">.</span><span class=\"nx\">remove_constraint</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">);</span>\n    <span class=\"c1\">//3\n</span><span class=\"c1\"></span>    <span class=\"kd\">var</span> <span class=\"nx\">px</span> <span class=\"o\">=</span> <span class=\"nx\">diff_x</span> <span class=\"o\">*</span> <span class=\"nx\">diff</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span><span class=\"p\">;</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">py</span> <span class=\"o\">=</span> <span class=\"nx\">diff_y</span> <span class=\"o\">*</span> <span class=\"nx\">diff</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span><span class=\"p\">;</span>\n    <span class=\"c1\">//4\n</span><span class=\"c1\"></span>    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">p1</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">+=</span> <span class=\"nx\">px</span><span class=\"p\">;</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">p1</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">+=</span> <span class=\"nx\">py</span><span class=\"p\">;</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">p2</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">-=</span> <span class=\"nx\">px</span><span class=\"p\">;</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">p2</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">-=</span> <span class=\"nx\">py</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n</code></pre></div><p>其函数功能为：根据两点距离差值，重新定位两点位置；具体实现思路为:</p><p>1:求出两点间的距离差，并用弹力链接的固定原长减去距离差的值与距离差做比。</p><p>2:如果距离差大于弹力链接的断裂距离则移除该条弹力链接。</p><p>3.将次公式与diff的公式整理一下可得，px = diff_x/dist ( this.length - dist )，px是值为长度变化向量的一半的x轴分量，py同理。</p><p>4:根据上述更新当前粒子p1，与链接粒子p2的坐标。</p><p>cloth.update()中的第一步已经分析完了，下面看第二部：</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"nx\">Point</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">update</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">delta</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">mouse</span><span class=\"p\">.</span><span class=\"nx\">down</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n        <span class=\"kd\">var</span> <span class=\"nx\">diff_x</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">-</span> <span class=\"nx\">mouse</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">,</span>\n            <span class=\"nx\">diff_y</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">-</span> <span class=\"nx\">mouse</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">,</span>\n            <span class=\"nx\">dist</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">sqrt</span><span class=\"p\">(</span><span class=\"nx\">diff_x</span> <span class=\"o\">*</span> <span class=\"nx\">diff_x</span> <span class=\"o\">+</span> <span class=\"nx\">diff_y</span> <span class=\"o\">*</span> <span class=\"nx\">diff_y</span><span class=\"p\">);</span>\n\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">mouse</span><span class=\"p\">.</span><span class=\"nx\">button</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">dist</span> <span class=\"o\">&lt;</span> <span class=\"nx\">mouse_influence</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">px</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"nx\">mouse</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">-</span> <span class=\"nx\">mouse</span><span class=\"p\">.</span><span class=\"nx\">px</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mf\">1.8</span><span class=\"p\">;</span>\n                <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">py</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"nx\">mouse</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">-</span> <span class=\"nx\">mouse</span><span class=\"p\">.</span><span class=\"nx\">py</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mf\">1.8</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n\n        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">dist</span> <span class=\"o\">&lt;</span> <span class=\"nx\">mouse_cut</span><span class=\"p\">)</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">constraints</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">add_force</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">gravity</span><span class=\"p\">);</span>\n\n    <span class=\"nx\">delta</span> <span class=\"o\">*=</span> <span class=\"nx\">delta</span><span class=\"p\">;</span>\n    <span class=\"nx\">nx</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">+</span> <span class=\"p\">((</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">-</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">px</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mf\">.99</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">((</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vx</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">delta</span><span class=\"p\">);</span>\n    <span class=\"nx\">ny</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">+</span> <span class=\"p\">((</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">-</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">py</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mf\">.99</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">((</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vy</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">delta</span><span class=\"p\">);</span>\n\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">px</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">;</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">py</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">;</span>\n\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">=</span> <span class=\"nx\">nx</span><span class=\"p\">;</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">=</span> <span class=\"nx\">ny</span><span class=\"p\">;</span>\n\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vy</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vx</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"p\">};</span>\n</code></pre></div><p>这个函数的功能有两个效果，一是让你能撕衣服与剪衣服，二是引入重力效果。</p><p>代码写的很工整，就不全分析了，这里有几个关键点需要注意一下，px可以理解为Previous，前一时刻x坐标，如果把程序第一次运行这个粒子的update函数称为当前时刻，那么第零次运行此粒子的update函数就为前一时刻。</p><p>如果粒子在鼠标左键点击范围内，则坐标为：鼠标移动距离×常量再加上重力影响，否则为此时刻与上一时刻坐标差值再加上重力影响。这样你鼠标移动的越快，就越有可能撕掉衣服。</p><p>这里有一个误区，就是有人会说似乎每一次进入该函数都会给相应粒子加上重力效果导致的位移；这是事实，但是因为还有弹力啊！并且如果当前时刻与前一时刻的坐标相同的话，重力的效果会小的可怜，这样就会导致人眼分辨不出粒子的运动，就像静止一样。你可以试试改变重力常量的值。</p><p>到次，代码的核心实现思路就分析完毕了^_^</p><p>这个代码给我的启发很大，其一就是：给人带来真实感的东西，其内部原理不一定真实，并且内部原理的真实度与真实感不成正比。比如这个代码的弹性链接机制，并没有遵守物理定律，并且原理简单，但只要我们肉眼分辨不出区别，那么她对于我们来说同样是真实的！幻术啊！！！</p><p><b>今后我只要看到任何神奇的代码都会像这样详细分析她，好的有趣的知识需要让更多人理解</b></p><p></p><p></p>", 
            "topic": [
                {
                    "tag": "HTML5", 
                    "tagLink": "https://api.zhihu.com/topics/19557564"
                }, 
                {
                    "tag": "HTML", 
                    "tagLink": "https://api.zhihu.com/topics/19551323"
                }, 
                {
                    "tag": "HTML 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19682124"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/30649554", 
            "userName": "召唤法师", 
            "userLink": "https://www.zhihu.com/people/5f9805884a2b4b5b0e1604b4d7df5dba", 
            "upvote": 2, 
            "title": "炫酷HTML5前端设计源码分析笔记——落焰", 
            "content": "<p>前几天发现一个比较有意思的设计，让人很容易联想到岩浆，看下演示：<br/></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.html5tricks.com/demo/html5-canvas-firestorm/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">HTML5 Canvas炫酷的火焰风暴动画DEMO演示</a></p><p class=\"ztext-empty-paragraph\"><br/></p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"cm\">/*/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/\n</span><span class=\"cm\">\n</span><span class=\"cm\">Vars\n</span><span class=\"cm\">\n</span><span class=\"cm\">=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=*/</span>\n\n<span class=\"kd\">var</span> <span class=\"nx\">c</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">createElement</span><span class=\"p\">(</span> <span class=\"s1\">&#39;canvas&#39;</span> <span class=\"p\">),</span>\n    <span class=\"nx\">ctx</span> <span class=\"o\">=</span> <span class=\"nx\">c</span><span class=\"p\">.</span><span class=\"nx\">getContext</span><span class=\"p\">(</span> <span class=\"s1\">&#39;2d&#39;</span> <span class=\"p\">),</span>\n    <span class=\"nx\">w</span> <span class=\"o\">=</span> <span class=\"nx\">c</span><span class=\"p\">.</span><span class=\"nx\">width</span> <span class=\"o\">=</span> <span class=\"mi\">1600</span><span class=\"p\">,</span>\n    <span class=\"nx\">h</span> <span class=\"o\">=</span> <span class=\"nx\">c</span><span class=\"p\">.</span><span class=\"nx\">height</span> <span class=\"o\">=</span> <span class=\"mi\">800</span><span class=\"p\">,</span>\n    <span class=\"nx\">particles</span> <span class=\"o\">=</span> <span class=\"p\">[],</span>\n    <span class=\"nx\">particleCount</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span><span class=\"p\">,</span>\n    <span class=\"nx\">particlePath</span> <span class=\"o\">=</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n    <span class=\"nx\">pillars</span> <span class=\"o\">=</span> <span class=\"p\">[],</span>\n    <span class=\"nx\">pillarCount</span> <span class=\"o\">=</span> <span class=\"mi\">110</span><span class=\"p\">,</span>\n    <span class=\"nx\">hue</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"nx\">hueRange</span> <span class=\"o\">=</span> <span class=\"mi\">60</span><span class=\"p\">,</span>\n    <span class=\"nx\">hueChange</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"nx\">gravity</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span>\n    <span class=\"nx\">lineWidth</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"nx\">lineCap</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;round&#39;</span><span class=\"p\">,</span>\n    <span class=\"nx\">PI</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">PI</span><span class=\"p\">,</span>\n    <span class=\"nx\">TWO_PI</span> <span class=\"o\">=</span> <span class=\"nx\">PI</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">;</span>\n\n<span class=\"cm\">/*/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/\n</span><span class=\"cm\">\n</span><span class=\"cm\">Utility\n</span><span class=\"cm\">\n</span><span class=\"cm\">=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=*/</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"nx\">min</span><span class=\"p\">,</span> <span class=\"nx\">max</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n\t<span class=\"k\">return</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">random</span><span class=\"p\">()</span> <span class=\"o\">*</span> <span class=\"p\">(</span> <span class=\"nx\">max</span> <span class=\"o\">-</span> <span class=\"nx\">min</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nx\">min</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">distance</span><span class=\"p\">(</span> <span class=\"nx\">a</span><span class=\"p\">,</span> <span class=\"nx\">b</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">dx</span> <span class=\"o\">=</span> <span class=\"nx\">a</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">-</span> <span class=\"nx\">b</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">,</span>\n      <span class=\"nx\">dy</span> <span class=\"o\">=</span> <span class=\"nx\">a</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">-</span> <span class=\"nx\">b</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">sqrt</span><span class=\"p\">(</span> <span class=\"nx\">dx</span> <span class=\"o\">*</span> <span class=\"nx\">dx</span> <span class=\"o\">+</span> <span class=\"nx\">dy</span> <span class=\"o\">*</span> <span class=\"nx\">dy</span> <span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"cm\">/*/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/\n</span><span class=\"cm\">\n</span><span class=\"cm\">Particle\n</span><span class=\"cm\">\n</span><span class=\"cm\">=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=*/</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">Particle</span><span class=\"p\">(</span> <span class=\"nx\">opt</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">path</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">reset</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">Particle</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">reset</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">radius</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">=</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">w</span> <span class=\"p\">);</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vx</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vy</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">hit</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n\n<span class=\"nx\">Particle</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">step</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">hit</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  \n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">unshift</span><span class=\"p\">(</span> <span class=\"p\">[</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"p\">]</span> <span class=\"p\">);</span>\n  <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">&gt;</span> <span class=\"nx\">particlePath</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">pop</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n \n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vy</span> <span class=\"o\">+=</span> <span class=\"nx\">gravity</span><span class=\"p\">;</span>\n      \n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">+=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vx</span><span class=\"p\">;</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">+=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vy</span><span class=\"p\">;</span>\n  \n  <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">&gt;</span> <span class=\"nx\">h</span> <span class=\"o\">+</span> <span class=\"mi\">10</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">reset</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n  \n  <span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"nx\">pillarCount</span><span class=\"p\">;</span>\n  <span class=\"k\">while</span><span class=\"p\">(</span> <span class=\"nx\">i</span><span class=\"o\">--</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">pillar</span> <span class=\"o\">=</span> <span class=\"nx\">pillars</span><span class=\"p\">[</span> <span class=\"nx\">i</span> <span class=\"p\">];</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"nx\">distance</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"nx\">pillar</span> <span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">radius</span> <span class=\"o\">+</span> <span class=\"nx\">pillar</span><span class=\"p\">.</span><span class=\"nx\">renderRadius</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vx</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vy</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vx</span> <span class=\"o\">+=</span> <span class=\"o\">-</span><span class=\"p\">(</span> <span class=\"nx\">pillar</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">-</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"mf\">0.03</span> <span class=\"p\">);</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vy</span> <span class=\"o\">+=</span> <span class=\"o\">-</span><span class=\"p\">(</span> <span class=\"nx\">pillar</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">-</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"mf\">0.03</span> <span class=\"p\">);</span>\n      <span class=\"nx\">pillar</span><span class=\"p\">.</span><span class=\"nx\">radius</span> <span class=\"o\">-=</span> <span class=\"mf\">0.1</span><span class=\"p\">;</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">hit</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n\n<span class=\"nx\">Particle</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">draw</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">beginPath</span><span class=\"p\">();</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">moveTo</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">,</span> <span class=\"o\">~~</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"p\">);</span>\n  <span class=\"k\">for</span><span class=\"p\">(</span> <span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">length</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">point</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">path</span><span class=\"p\">[</span> <span class=\"nx\">i</span> <span class=\"p\">];</span>\n    <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">lineTo</span><span class=\"p\">(</span> <span class=\"nx\">point</span><span class=\"p\">[</span> <span class=\"mi\">0</span> <span class=\"p\">],</span> <span class=\"o\">~~</span><span class=\"nx\">point</span><span class=\"p\">[</span> <span class=\"mi\">1</span> <span class=\"p\">]</span> <span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">strokeStyle</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;hsla(&#39;</span> <span class=\"o\">+</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"nx\">hue</span> <span class=\"o\">+</span> <span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">/</span> <span class=\"mi\">3</span> <span class=\"p\">),</span> <span class=\"nx\">hue</span> <span class=\"o\">+</span> <span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">/</span> <span class=\"mi\">3</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nx\">hueRange</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;, 50%, 30%, 0.3)&#39;</span><span class=\"p\">;</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">stroke</span><span class=\"p\">();</span>\n  \n  <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">hit</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">beginPath</span><span class=\"p\">();</span>\n    <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">arc</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"p\">,</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">25</span> <span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">TWO_PI</span> <span class=\"p\">);</span>\n    <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">fillStyle</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;hsla(&#39;</span> <span class=\"o\">+</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"nx\">hue</span> <span class=\"o\">+</span> <span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">/</span> <span class=\"mi\">3</span> <span class=\"p\">),</span> <span class=\"nx\">hue</span> <span class=\"o\">+</span> <span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">/</span> <span class=\"mi\">3</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nx\">hueRange</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;, 80%, 15%, 0.1)&#39;</span>\n    <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">fill</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n\n<span class=\"cm\">/*/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/\n</span><span class=\"cm\">\n</span><span class=\"cm\">Pillar\n</span><span class=\"cm\">\n</span><span class=\"cm\">=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=*/</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">Pillar</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">reset</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">Pillar</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">reset</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(){</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">radius</span> <span class=\"o\">=</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">200</span> <span class=\"p\">);</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">renderRadius</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">=</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">w</span> <span class=\"p\">);</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">=</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"nx\">h</span> <span class=\"o\">/</span> <span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"nx\">h</span> <span class=\"o\">/</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"nx\">h</span> <span class=\"p\">);</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">active</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n<span class=\"nx\">Pillar</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">step</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">active</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">radius</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">1</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">reset</span><span class=\"p\">();</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">renderRadius</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">radius</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">renderRadius</span> <span class=\"o\">&lt;</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">radius</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">renderRadius</span> <span class=\"o\">+=</span> <span class=\"mf\">0.5</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">active</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n\n<span class=\"nx\">Pillar</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">draw</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">beginPath</span><span class=\"p\">();</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">arc</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">renderRadius</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">TWO_PI</span><span class=\"p\">,</span> <span class=\"kc\">false</span> <span class=\"p\">);</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">fill</span><span class=\"p\">();</span>\n<span class=\"p\">};</span>\n\n<span class=\"cm\">/*/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/\n</span><span class=\"cm\">\n</span><span class=\"cm\">Init\n</span><span class=\"cm\">\n</span><span class=\"cm\">=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=*/</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">init</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">lineWidth</span> <span class=\"o\">=</span> <span class=\"nx\">lineWidth</span><span class=\"p\">;</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">lineCap</span> <span class=\"o\">=</span> <span class=\"nx\">lineCap</span><span class=\"p\">;</span>\n  \n  <span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"nx\">pillarCount</span><span class=\"p\">;</span>\n  <span class=\"k\">while</span><span class=\"p\">(</span> <span class=\"nx\">i</span><span class=\"o\">--</span> <span class=\"p\">){</span>\n    <span class=\"nx\">pillars</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span> <span class=\"k\">new</span> <span class=\"nx\">Pillar</span><span class=\"p\">()</span> <span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n  \n  <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">body</span><span class=\"p\">.</span><span class=\"nx\">appendChild</span><span class=\"p\">(</span> <span class=\"nx\">c</span> <span class=\"p\">);</span>\n  <span class=\"nx\">loop</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"cm\">/*/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/\n</span><span class=\"cm\">\n</span><span class=\"cm\">Step\n</span><span class=\"cm\">\n</span><span class=\"cm\">=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=*/</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">step</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">hue</span> <span class=\"o\">+=</span> <span class=\"nx\">hueChange</span><span class=\"p\">;</span>\n  \n  <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"nx\">particles</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">&lt;</span> <span class=\"nx\">particleCount</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">particles</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span> <span class=\"k\">new</span> <span class=\"nx\">Particle</span><span class=\"p\">()</span> <span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n  \n  <span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"nx\">particles</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span>\n  <span class=\"k\">while</span><span class=\"p\">(</span> <span class=\"nx\">i</span><span class=\"o\">--</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">particles</span><span class=\"p\">[</span> <span class=\"nx\">i</span> <span class=\"p\">].</span><span class=\"nx\">step</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n  \n  <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"nx\">pillarCount</span><span class=\"p\">;</span>\n  <span class=\"k\">while</span><span class=\"p\">(</span> <span class=\"nx\">i</span><span class=\"o\">--</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">pillars</span><span class=\"p\">[</span> <span class=\"nx\">i</span> <span class=\"p\">].</span><span class=\"nx\">step</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"cm\">/*/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/\n</span><span class=\"cm\">\n</span><span class=\"cm\">Draw\n</span><span class=\"cm\">\n</span><span class=\"cm\">=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=*/</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">draw</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">fillStyle</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;hsla(0, 0%, 0%, 0.1)&#39;</span><span class=\"p\">;</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">fillRect</span><span class=\"p\">(</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">w</span><span class=\"p\">,</span> <span class=\"nx\">h</span> <span class=\"p\">);</span>\n \n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">globalCompositeOperation</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;lighter&#39;</span><span class=\"p\">;</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"nx\">particles</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span>\n  <span class=\"k\">while</span><span class=\"p\">(</span> <span class=\"nx\">i</span><span class=\"o\">--</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">particles</span><span class=\"p\">[</span> <span class=\"nx\">i</span> <span class=\"p\">].</span><span class=\"nx\">draw</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n  \n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">globalCompositeOperation</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;source-over&#39;</span><span class=\"p\">;</span>\n  <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"nx\">pillarCount</span><span class=\"p\">;</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">fillStyle</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;rgba(20, 20, 20, 0.3)&#39;</span><span class=\"p\">;</span>\n  <span class=\"k\">while</span><span class=\"p\">(</span> <span class=\"nx\">i</span><span class=\"o\">--</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">pillars</span><span class=\"p\">[</span> <span class=\"nx\">i</span> <span class=\"p\">].</span><span class=\"nx\">draw</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"cm\">/*/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/\n</span><span class=\"cm\">\n</span><span class=\"cm\">Loop\n</span><span class=\"cm\">\n</span><span class=\"cm\">=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=*/</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">loop</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">requestAnimationFrame</span><span class=\"p\">(</span> <span class=\"nx\">loop</span> <span class=\"p\">);</span>\n  <span class=\"nx\">step</span><span class=\"p\">();</span>\n  <span class=\"nx\">draw</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"cm\">/*/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/\n</span><span class=\"cm\">\n</span><span class=\"cm\">Blast Off\n</span><span class=\"cm\">\n</span><span class=\"cm\">=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=/=*/</span>\n\n<span class=\"nx\">init</span><span class=\"p\">();</span>\n</code></pre></div><p>如你所见，代码很简短，去掉注释只有二百行左右，我们现在就来看下这个炫丽的效果是怎么实现的。</p><p class=\"ztext-empty-paragraph\"><br/></p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"kd\">function</span> <span class=\"nx\">Particle</span><span class=\"p\">(</span> <span class=\"nx\">opt</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">path</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">reset</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">Particle</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">reset</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">radius</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">=</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">w</span> <span class=\"p\">);</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vx</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vy</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">hit</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n<span class=\"kd\">function</span> <span class=\"nx\">Pillar</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">reset</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">Pillar</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">reset</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(){</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">radius</span> <span class=\"o\">=</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">200</span> <span class=\"p\">);</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">renderRadius</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">=</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">w</span> <span class=\"p\">);</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">=</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"nx\">h</span> <span class=\"o\">/</span> <span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"nx\">h</span> <span class=\"o\">/</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"nx\">h</span> <span class=\"p\">);</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">active</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n</code></pre></div><p>在初始化过程中，定义了两个主要对象，一个是粒子（Particle），一个是球体（Pillar）。</p><p>对象属性也很直观，就不细说了。</p><p>初始化函数中，按设置生成相应数量的对象后，就进入了loop()；功能就是先更新属性，后画图。</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"kd\">function</span> <span class=\"nx\">step</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">hue</span> <span class=\"o\">+=</span> <span class=\"nx\">hueChange</span><span class=\"p\">;</span>\n  \n  <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"nx\">particles</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">&lt;</span> <span class=\"nx\">particleCount</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">particles</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span> <span class=\"k\">new</span> <span class=\"nx\">Particle</span><span class=\"p\">()</span> <span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n  \n  <span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"nx\">particles</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span>\n  <span class=\"k\">while</span><span class=\"p\">(</span> <span class=\"nx\">i</span><span class=\"o\">--</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">particles</span><span class=\"p\">[</span> <span class=\"nx\">i</span> <span class=\"p\">].</span><span class=\"nx\">step</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n  \n  <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"nx\">pillarCount</span><span class=\"p\">;</span>\n  <span class=\"k\">while</span><span class=\"p\">(</span> <span class=\"nx\">i</span><span class=\"o\">--</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">pillars</span><span class=\"p\">[</span> <span class=\"nx\">i</span> <span class=\"p\">].</span><span class=\"nx\">step</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div><p>在更新属性的主要函数里更新每一个粒子与每一个球体的属性</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"nx\">Particle</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">step</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">hit</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  \n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">unshift</span><span class=\"p\">(</span> <span class=\"p\">[</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"p\">]</span> <span class=\"p\">);</span><span class=\"c1\">//1\n</span><span class=\"c1\"></span>  <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">&gt;</span> <span class=\"nx\">particlePath</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">pop</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n \n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vy</span> <span class=\"o\">+=</span> <span class=\"nx\">gravity</span><span class=\"p\">;</span><span class=\"c1\">//2    \n</span><span class=\"c1\"></span>  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">+=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vx</span><span class=\"p\">;</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">+=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vy</span><span class=\"p\">;</span>\n  <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">&gt;</span> <span class=\"nx\">h</span> <span class=\"o\">+</span> <span class=\"mi\">10</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">reset</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n  \n  <span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"nx\">pillarCount</span><span class=\"p\">;</span><span class=\"c1\">//3\n</span><span class=\"c1\"></span>  <span class=\"k\">while</span><span class=\"p\">(</span> <span class=\"nx\">i</span><span class=\"o\">--</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">pillar</span> <span class=\"o\">=</span> <span class=\"nx\">pillars</span><span class=\"p\">[</span> <span class=\"nx\">i</span> <span class=\"p\">];</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"nx\">distance</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"nx\">pillar</span> <span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">radius</span> <span class=\"o\">+</span> <span class=\"nx\">pillar</span><span class=\"p\">.</span><span class=\"nx\">renderRadius</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vx</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vy</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vx</span> <span class=\"o\">+=</span> <span class=\"o\">-</span><span class=\"p\">(</span> <span class=\"nx\">pillar</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">-</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"mf\">0.03</span> <span class=\"p\">);</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">vy</span> <span class=\"o\">+=</span> <span class=\"o\">-</span><span class=\"p\">(</span> <span class=\"nx\">pillar</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"o\">-</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"mf\">0.03</span> <span class=\"p\">);</span>\n      <span class=\"nx\">pillar</span><span class=\"p\">.</span><span class=\"nx\">radius</span> <span class=\"o\">-=</span> <span class=\"mf\">0.1</span><span class=\"p\">;</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">hit</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div><p>更新每一个粒子的函数所做的事情也非常简单：</p><p>1.记录上一时刻的粒子坐标（记录路径）。</p><p>2.根据规则（重力），更正粒子坐标，并检验是否超出窗口边界，如果超出则重置粒子属性。</p><p>3.（碰撞检测）判断粒子与球体圆心的距离，如果距离小于两物体半径和，则视为碰撞，改变粒子的位移变动量（在下一时刻累加），并把球体的半径减小相应数目。注意：这里把状态hit标记为true</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"nx\">Pillar</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">step</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">active</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">radius</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">1</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">reset</span><span class=\"p\">();</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">renderRadius</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">radius</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">renderRadius</span> <span class=\"o\">&lt;</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">radius</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">renderRadius</span> <span class=\"o\">+=</span> <span class=\"mf\">0.5</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">active</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div><p>球体的更新函数所做的事是：如果没有现在的半径还没到随机初始化的最大半径，则半径以0.5步长增长；若达到了，则保持半径与粒子互动；半径小于1则重置球体。</p><p>更新部分就完了，下面看绘画部分：</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"kd\">function</span> <span class=\"nx\">draw</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">fillStyle</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;hsla(0, 0%, 0%, 0.1)&#39;</span><span class=\"p\">;</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">fillRect</span><span class=\"p\">(</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">w</span><span class=\"p\">,</span> <span class=\"nx\">h</span> <span class=\"p\">);</span>\n \n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">globalCompositeOperation</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;lighter&#39;</span><span class=\"p\">;</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"nx\">particles</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span>\n  <span class=\"k\">while</span><span class=\"p\">(</span> <span class=\"nx\">i</span><span class=\"o\">--</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">particles</span><span class=\"p\">[</span> <span class=\"nx\">i</span> <span class=\"p\">].</span><span class=\"nx\">draw</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n  \n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">globalCompositeOperation</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;source-over&#39;</span><span class=\"p\">;</span>\n  <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"nx\">pillarCount</span><span class=\"p\">;</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">fillStyle</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;rgba(20, 20, 20, 0.3)&#39;</span><span class=\"p\">;</span>\n  <span class=\"k\">while</span><span class=\"p\">(</span> <span class=\"nx\">i</span><span class=\"o\">--</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">pillars</span><span class=\"p\">[</span> <span class=\"nx\">i</span> <span class=\"p\">].</span><span class=\"nx\">draw</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div><p>工整的格式，与更新一样，就是绘制每一个粒子与每一个球体。</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"nx\">Particle</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">draw</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">beginPath</span><span class=\"p\">();</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">moveTo</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">,</span> <span class=\"o\">~~</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"p\">);</span>\n  <span class=\"k\">for</span><span class=\"p\">(</span> <span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">length</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">point</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">path</span><span class=\"p\">[</span> <span class=\"nx\">i</span> <span class=\"p\">];</span>\n    <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">lineTo</span><span class=\"p\">(</span> <span class=\"nx\">point</span><span class=\"p\">[</span> <span class=\"mi\">0</span> <span class=\"p\">],</span> <span class=\"o\">~~</span><span class=\"nx\">point</span><span class=\"p\">[</span> <span class=\"mi\">1</span> <span class=\"p\">]</span> <span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">strokeStyle</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;hsla(&#39;</span> <span class=\"o\">+</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"nx\">hue</span> <span class=\"o\">+</span> <span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">/</span> <span class=\"mi\">3</span> <span class=\"p\">),</span> <span class=\"nx\">hue</span> <span class=\"o\">+</span> <span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">/</span> <span class=\"mi\">3</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nx\">hueRange</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;, 50%, 30%, 0.3)&#39;</span><span class=\"p\">;</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">stroke</span><span class=\"p\">();</span>\n  \n  <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">hit</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">beginPath</span><span class=\"p\">();</span>\n    <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">arc</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span> <span class=\"p\">,</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">25</span> <span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">TWO_PI</span> <span class=\"p\">);</span>\n    <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">fillStyle</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;hsla(&#39;</span> <span class=\"o\">+</span> <span class=\"nx\">rand</span><span class=\"p\">(</span> <span class=\"nx\">hue</span> <span class=\"o\">+</span> <span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">/</span> <span class=\"mi\">3</span> <span class=\"p\">),</span> <span class=\"nx\">hue</span> <span class=\"o\">+</span> <span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span> <span class=\"o\">/</span> <span class=\"mi\">3</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nx\">hueRange</span> <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;, 80%, 15%, 0.1)&#39;</span>\n    <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">fill</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div><p>粒子绘制函数的作用是：沿着粒子的路径，显示彗尾，这样设置的好处是看着更加自然，粒子速度越快，彗尾就会越长；随机颜色；如果粒子击中球体，则会显示一个固定范围内半径随机、颜色与粒子相同的圆（产生击中的动态效果）。</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"nx\">Pillar</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">draw</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">beginPath</span><span class=\"p\">();</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">arc</span><span class=\"p\">(</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">x</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">y</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">renderRadius</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">TWO_PI</span><span class=\"p\">,</span> <span class=\"kc\">false</span> <span class=\"p\">);</span>\n  <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">fill</span><span class=\"p\">();</span>\n<span class=\"p\">};</span>\n</code></pre></div><p>球体绘制函数就是绘制这个球体。。。。。</p><p>现在我们再回过头看一下她的整体流程，就会发现这么炫丽的效果的原理，其实就是一些十分简单的物体与动作的组合！所以，道理是：</p><p><b><i>任何幻术的目的是让观看者信以为真，我们不需要完全模拟真实的物理过程，只要看起来真假难辨，那么这个作品就成功了！！！</i></b></p>", 
            "topic": [
                {
                    "tag": "HTML", 
                    "tagLink": "https://api.zhihu.com/topics/19551323"
                }, 
                {
                    "tag": "HTML5", 
                    "tagLink": "https://api.zhihu.com/topics/19557564"
                }, 
                {
                    "tag": "HTML 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19682124"
                }
            ], 
            "comments": []
        }
    ], 
    "url": "https://zhuanlan.zhihu.com/fascinating"
}

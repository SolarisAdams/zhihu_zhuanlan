{
    "title": "风口寻猪", 
    "description": "", 
    "followers": [
        "https://www.zhihu.com/people/1445-22", 
        "https://www.zhihu.com/people/jian-man-30-58", 
        "https://www.zhihu.com/people/lin-en-bo-96", 
        "https://www.zhihu.com/people/qiewei-zhi-ge-yi-qu", 
        "https://www.zhihu.com/people/shui-shou-17-81", 
        "https://www.zhihu.com/people/mo-jin-huang-sha", 
        "https://www.zhihu.com/people/despacito-80", 
        "https://www.zhihu.com/people/chris-73-40", 
        "https://www.zhihu.com/people/sdy1009", 
        "https://www.zhihu.com/people/chong-chong-34-52-65", 
        "https://www.zhihu.com/people/shen-xin-ru-yi-26", 
        "https://www.zhihu.com/people/Name1050", 
        "https://www.zhihu.com/people/kreapht", 
        "https://www.zhihu.com/people/shui-shou-38-1", 
        "https://www.zhihu.com/people/ai-li-xi-ya-kai-si", 
        "https://www.zhihu.com/people/yan-er-pi-72", 
        "https://www.zhihu.com/people/yang-ming-98-26", 
        "https://www.zhihu.com/people/xiaolai080621", 
        "https://www.zhihu.com/people/hai-na-xiao-chuan-84", 
        "https://www.zhihu.com/people/an-feng-jiao-28", 
        "https://www.zhihu.com/people/ai-gang-jing-ye-wang-shi-fu", 
        "https://www.zhihu.com/people/shang-yi-xuan-33", 
        "https://www.zhihu.com/people/zhang-qi-guai-49", 
        "https://www.zhihu.com/people/tong-zi-14-11", 
        "https://www.zhihu.com/people/du-chen-ke-32", 
        "https://www.zhihu.com/people/zhe-ye-zhi-hu-69", 
        "https://www.zhihu.com/people/lisa-93-95", 
        "https://www.zhihu.com/people/goblinshen", 
        "https://www.zhihu.com/people/panpan-95-82-26", 
        "https://www.zhihu.com/people/shuang-mu-xian-sheng-68", 
        "https://www.zhihu.com/people/chi-zi-9-31", 
        "https://www.zhihu.com/people/stephen-34-51", 
        "https://www.zhihu.com/people/hao-nan-hai-an-du-yin", 
        "https://www.zhihu.com/people/zhang-qi-82-74", 
        "https://www.zhihu.com/people/jiang-ri-hui-13", 
        "https://www.zhihu.com/people/ren-ping-77", 
        "https://www.zhihu.com/people/guo-ling-14-51", 
        "https://www.zhihu.com/people/wang-yu-tian-24-20", 
        "https://www.zhihu.com/people/li-shen-20-75", 
        "https://www.zhihu.com/people/pi-wei-er", 
        "https://www.zhihu.com/people/binlr", 
        "https://www.zhihu.com/people/peter-zhang-57-59", 
        "https://www.zhihu.com/people/guan-li-ming-81", 
        "https://www.zhihu.com/people/wang-yue-61-36", 
        "https://www.zhihu.com/people/predator-li", 
        "https://www.zhihu.com/people/1314520yy", 
        "https://www.zhihu.com/people/webwolf", 
        "https://www.zhihu.com/people/wo-chi-hong-shao-rou-90", 
        "https://www.zhihu.com/people/chi-tu-zi-de-luo-bu-86", 
        "https://www.zhihu.com/people/ga-die-35", 
        "https://www.zhihu.com/people/zheng-yu-93-92-85", 
        "https://www.zhihu.com/people/dollartw", 
        "https://www.zhihu.com/people/chao-ace", 
        "https://www.zhihu.com/people/xiao-liu-10-77", 
        "https://www.zhihu.com/people/liu-dong-cheng-97", 
        "https://www.zhihu.com/people/liu-wen-jia-62", 
        "https://www.zhihu.com/people/sha-du-bu-dong-de-jie-jie-zi", 
        "https://www.zhihu.com/people/tian-zi-di-yi-hao-duan-tian-ya-23", 
        "https://www.zhihu.com/people/la-la-la-48-58-51", 
        "https://www.zhihu.com/people/xiao-gang-49-57-77", 
        "https://www.zhihu.com/people/guang-gun-jie-kuai-le-33-2", 
        "https://www.zhihu.com/people/yan-xiao-qi-75", 
        "https://www.zhihu.com/people/yustyle-29", 
        "https://www.zhihu.com/people/luons", 
        "https://www.zhihu.com/people/ke-ge-bu-ting", 
        "https://www.zhihu.com/people/wo-de-zhi-hui-meng", 
        "https://www.zhihu.com/people/yong-gan-de-xin-89-5-35", 
        "https://www.zhihu.com/people/liu-bo-liu-yan-jiao", 
        "https://www.zhihu.com/people/yu-chao-qiang", 
        "https://www.zhihu.com/people/liang-fan-29-1", 
        "https://www.zhihu.com/people/wen-zi-xi-fan-40", 
        "https://www.zhihu.com/people/hard-80-57", 
        "https://www.zhihu.com/people/yi-ke-bu-ji-zhi-liang-de-hua-kuai", 
        "https://www.zhihu.com/people/rui-feng-95-44", 
        "https://www.zhihu.com/people/chang-chang-74-18", 
        "https://www.zhihu.com/people/zhang-lei-lei-34-20", 
        "https://www.zhihu.com/people/arthurkin", 
        "https://www.zhihu.com/people/qinbanliang", 
        "https://www.zhihu.com/people/ban-ding-yuan-49", 
        "https://www.zhihu.com/people/xiaochun79", 
        "https://www.zhihu.com/people/charlex-18", 
        "https://www.zhihu.com/people/liang-nu-shi-43", 
        "https://www.zhihu.com/people/feifeifei-31", 
        "https://www.zhihu.com/people/tan-xiao-46", 
        "https://www.zhihu.com/people/zhaodengyun", 
        "https://www.zhihu.com/people/wei-wo-xin-you-82", 
        "https://www.zhihu.com/people/ou-ran-xun-zhe", 
        "https://www.zhihu.com/people/shang-wei-peng-86", 
        "https://www.zhihu.com/people/lin-wen-jia-6", 
        "https://www.zhihu.com/people/tang-bang-ju", 
        "https://www.zhihu.com/people/yu-wan-60-8-42", 
        "https://www.zhihu.com/people/wentian24", 
        "https://www.zhihu.com/people/yexvguang", 
        "https://www.zhihu.com/people/he-xin-", 
        "https://www.zhihu.com/people/wang-da-mo-93-29", 
        "https://www.zhihu.com/people/rexgct", 
        "https://www.zhihu.com/people/san-shi-er-li-59-10", 
        "https://www.zhihu.com/people/liang-liang-cai", 
        "https://www.zhihu.com/people/luan-lin-bao", 
        "https://www.zhihu.com/people/wang-liao-wang-ji-57", 
        "https://www.zhihu.com/people/er-qiao-91-96", 
        "https://www.zhihu.com/people/ing-82-4", 
        "https://www.zhihu.com/people/ygwlovech", 
        "https://www.zhihu.com/people/abner-77-93", 
        "https://www.zhihu.com/people/shmily-64-88", 
        "https://www.zhihu.com/people/freakly", 
        "https://www.zhihu.com/people/liu-wan-kai", 
        "https://www.zhihu.com/people/li-chao-76-21", 
        "https://www.zhihu.com/people/da-lian-mao-62-47", 
        "https://www.zhihu.com/people/sun-zhen-68-86", 
        "https://www.zhihu.com/people/ban-dao-mi-yin-66", 
        "https://www.zhihu.com/people/mei-hao-12-93", 
        "https://www.zhihu.com/people/yuan-juan-7-83", 
        "https://www.zhihu.com/people/ji28058058", 
        "https://www.zhihu.com/people/avic-yujincheng", 
        "https://www.zhihu.com/people/yu-er-lang-92"
    ], 
    "article": [
        {
            "url": "https://zhuanlan.zhihu.com/p/68494438", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 1, 
            "title": "你真的了解人工智能吗？再不抓紧就要被淘汰了！", 
            "content": "<p>很多人已经模糊地感知到人工智能即将给我们带来一些新的变化，既然是趋势，多知道一些总没错。</p><p>但事实是，虽然人工智能这个词近年来被捧得热火朝天，却极少人真正知道它到底是怎么一回事。</p><p>不信？那么不妨先来问一问自己：人工智能究竟是什么？</p><p>机器人？机器人充其量只能算是人工智能的外在形态。</p><p>人工智能并不等同于这些“外在形态”，它是在背后负责操控一切的“大脑”，比我们想象的还要强大得多。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-720febe342b10a34729ece7acbb39e40_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"874\" data-rawheight=\"528\" class=\"origin_image zh-lightbox-thumb\" width=\"874\" data-original=\"https://pic1.zhimg.com/v2-720febe342b10a34729ece7acbb39e40_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;874&#39; height=&#39;528&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"874\" data-rawheight=\"528\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"874\" data-original=\"https://pic1.zhimg.com/v2-720febe342b10a34729ece7acbb39e40_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-720febe342b10a34729ece7acbb39e40_b.jpg\"/></figure><p>归根结底，人工智能的本质是什么？它将会如何改变我们的工作和生活？我们又该如何应对技术发展带来的变革呢？</p><p>人工智能有更多可能性，可能为我们带来更多机遇。</p><p>你会发现：原来我们每天都在和人工智能打交道，只是这一切发生于潜移默化之间，我们根本没有留意罢了。</p><p><b>AI：消灭重复性劳动</b></p><p>前不久，吴枫刚参加完中学同学聚会。他发现，无论是来自离技术更近的互联网行业，还是传统行业的人，他们对工作都有共同的吐槽点：我真的烦透了重复性的无意义劳动！</p><p>阿橙大学专业学的是广告设计，毕业后，他去了一家4A广告公司担任设计师。</p><p>对他而言，工作中最痛苦的时候并不是找不到做图的灵感，而是无休止地根据甲方爸爸的要求改图。</p><p>半夜守着电脑等甲方回复，打开电脑看到辛苦做的图又被提了一大堆修改意见，就觉得要精神崩溃。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-24f85a54d60fbd2caeb99520a3276c35_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"252\" class=\"origin_image zh-lightbox-thumb\" width=\"692\" data-original=\"https://pic2.zhimg.com/v2-24f85a54d60fbd2caeb99520a3276c35_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;692&#39; height=&#39;252&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"252\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"692\" data-original=\"https://pic2.zhimg.com/v2-24f85a54d60fbd2caeb99520a3276c35_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-24f85a54d60fbd2caeb99520a3276c35_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-251bbf8b8faac6990a1af9898cfca6be_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"736\" data-rawheight=\"483\" class=\"origin_image zh-lightbox-thumb\" width=\"736\" data-original=\"https://pic3.zhimg.com/v2-251bbf8b8faac6990a1af9898cfca6be_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;736&#39; height=&#39;483&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"736\" data-rawheight=\"483\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"736\" data-original=\"https://pic3.zhimg.com/v2-251bbf8b8faac6990a1af9898cfca6be_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-251bbf8b8faac6990a1af9898cfca6be_b.jpg\"/></figure><p>而另一位在互联网公司做新媒体编辑的小爽，她的苦恼则是：你永远不知道新的热点和明天哪个会先来。</p><p>当新事件发生的时候，就是她在电脑前埋头码字、思考抓眼球的标题的时候。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-b6e27810ae22dab1eb37b56a3a115909_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"686\" data-rawheight=\"240\" class=\"origin_image zh-lightbox-thumb\" width=\"686\" data-original=\"https://pic2.zhimg.com/v2-b6e27810ae22dab1eb37b56a3a115909_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;686&#39; height=&#39;240&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"686\" data-rawheight=\"240\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"686\" data-original=\"https://pic2.zhimg.com/v2-b6e27810ae22dab1eb37b56a3a115909_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-b6e27810ae22dab1eb37b56a3a115909_b.jpg\"/></figure><p>这些烦恼，很快将不复存在了。</p><p>不想重复性地替甲方爸爸改图？没问题啊，这件事，未来将由AI来替你做。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-82660c92bbf57615aba764c7c36a57b5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"605\" data-rawheight=\"407\" class=\"origin_image zh-lightbox-thumb\" width=\"605\" data-original=\"https://pic2.zhimg.com/v2-82660c92bbf57615aba764c7c36a57b5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;605&#39; height=&#39;407&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"605\" data-rawheight=\"407\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"605\" data-original=\"https://pic2.zhimg.com/v2-82660c92bbf57615aba764c7c36a57b5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-82660c92bbf57615aba764c7c36a57b5_b.jpg\"/></figure><p>早在去年，阿里就发布了一款名叫“鲁班”的人工智能设计师。</p><p>鲁班在去年双十一期间上岗，平均每秒做8000张海报，共计在双十一期间完成了四亿张设计图。</p><p>来看看鲁班的工作流程：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b70f30e6678dccc744249683e092cdb0_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"520\" data-rawheight=\"293\" data-thumbnail=\"https://pic1.zhimg.com/v2-b70f30e6678dccc744249683e092cdb0_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"520\" data-original=\"https://pic1.zhimg.com/v2-b70f30e6678dccc744249683e092cdb0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;520&#39; height=&#39;293&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"520\" data-rawheight=\"293\" data-thumbnail=\"https://pic1.zhimg.com/v2-b70f30e6678dccc744249683e092cdb0_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"520\" data-original=\"https://pic1.zhimg.com/v2-b70f30e6678dccc744249683e092cdb0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b70f30e6678dccc744249683e092cdb0_b.gif\"/></figure><p>简单来说，在鲁班的“人工智能小脑袋瓜”里存着海量的广告元素：如文案、产品、背景、点缀元素、LOGO等，他们不同的组合方式形成了一套“设计语言库”。</p><p>设计师在做图的时候需要分析甲方的需求，调用脑子里存储的资源，思考解决方案，有时难免会出现“灵感枯竭”的情况。</p><p>但鲁班的小脑袋瓜里装的东西可太丰富了，只要你一声令下，它就能一秒调出你想要的。</p><p>这意味着，在大批量作业的商业设计领域，AI有着非常明显的优势：既速度，又齐整。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-ff4f7b6744a5080d456e722d75891efc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"885\" data-rawheight=\"499\" class=\"origin_image zh-lightbox-thumb\" width=\"885\" data-original=\"https://pic1.zhimg.com/v2-ff4f7b6744a5080d456e722d75891efc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;885&#39; height=&#39;499&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"885\" data-rawheight=\"499\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"885\" data-original=\"https://pic1.zhimg.com/v2-ff4f7b6744a5080d456e722d75891efc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-ff4f7b6744a5080d456e722d75891efc_b.jpg\"/></figure><p>从此再也不需要设计辛辛苦苦地做完一大批“每一个都不一样，但整体又要一样”的图后，感觉自己是个瞎子。</p><p>你也许会说：那有些需要用手绘的图片呢？人工智能总不能连创作型的画画都能整吧？</p><p>没错，人工智能确实无法凭空创造，但你只需要给它一点点线索，它就能从强大的小脑袋瓜里给你输出想要的东西。</p><p>比如谷歌家出的一个会画画的黑科技AutoDraw。</p><p>大概就是，你随便鬼画个什么，谷歌都能把它变成一副正儿八经的画。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-0d15e6290f0d070e6829e4013f46997c_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"552\" data-rawheight=\"344\" data-thumbnail=\"https://pic1.zhimg.com/v2-0d15e6290f0d070e6829e4013f46997c_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"552\" data-original=\"https://pic1.zhimg.com/v2-0d15e6290f0d070e6829e4013f46997c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;552&#39; height=&#39;344&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"552\" data-rawheight=\"344\" data-thumbnail=\"https://pic1.zhimg.com/v2-0d15e6290f0d070e6829e4013f46997c_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"552\" data-original=\"https://pic1.zhimg.com/v2-0d15e6290f0d070e6829e4013f46997c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-0d15e6290f0d070e6829e4013f46997c_b.gif\"/></figure><p>或者说，你给人工智能一张随便拍的照片，它就能帮你升级成梵高风格的绘画作品。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-35a2867c5ddba903ea08c14a2f28c6fb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"739\" data-rawheight=\"484\" class=\"origin_image zh-lightbox-thumb\" width=\"739\" data-original=\"https://pic4.zhimg.com/v2-35a2867c5ddba903ea08c14a2f28c6fb_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;739&#39; height=&#39;484&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"739\" data-rawheight=\"484\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"739\" data-original=\"https://pic4.zhimg.com/v2-35a2867c5ddba903ea08c14a2f28c6fb_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-35a2867c5ddba903ea08c14a2f28c6fb_b.jpg\"/></figure><p>好，接下来，我们再看看新媒体运营们头疼的：追赶热点、组织文案、写稿。</p><p>不想大晚上被主编的电话叫醒，没问题啊，这份工作AI一样可以帮你完成得好好的。</p><p>早从去年开始，公众号“中国地震台网”就已经在用AI新媒体编辑写即时新闻了。</p><p>比如说，前不久日本北海道地区发生5.5级地震的新闻就是由AI写的，排版和文字长这样：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-bf52bada66be1cf5b0b1ff6153473e4a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"329\" data-rawheight=\"608\" class=\"content_image\" width=\"329\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;329&#39; height=&#39;608&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"329\" data-rawheight=\"608\" class=\"content_image lazy\" width=\"329\" data-actualsrc=\"https://pic3.zhimg.com/v2-bf52bada66be1cf5b0b1ff6153473e4a_b.jpg\"/></figure><p>虽然文字和排版都很简单，但猜猜写这篇推送AI用了多久？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-473249a852d35c36baaf8eed88aba9ce_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"616\" data-rawheight=\"275\" class=\"origin_image zh-lightbox-thumb\" width=\"616\" data-original=\"https://pic3.zhimg.com/v2-473249a852d35c36baaf8eed88aba9ce_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;616&#39; height=&#39;275&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"616\" data-rawheight=\"275\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"616\" data-original=\"https://pic3.zhimg.com/v2-473249a852d35c36baaf8eed88aba9ce_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-473249a852d35c36baaf8eed88aba9ce_b.jpg\"/></figure><p>只用十秒，就完成一篇推送。24小时超长在线，一有突发事件就能马上开始工作。</p><p>换成是人来写作的话，十秒钟大概只够时间写完一个标题吧。</p><p>请问，这样让老板喜笑颜开的劳模员工，还有哪里能找到呢？</p><p>如果说，上班一族最讨厌的是无意义的重复性劳动，那么，对于学生党而言，最烦恼的应该就是考试了吧。</p><p>考试不仅考的是学习能力，还有应试技巧（没错，就是套路）。那么，在考试之中，人工智能的表现又如何呢？</p><p>先看看千军万马过独木桥的高考。2017年，成都的AI-MATHS高考机器人参加了高考数学，在掐断题库、断网、无人干涉的情况下进行解题。</p><p>结果是，它分别用了22分钟和10分钟完成了高考北京文科数学卷和数学全国卷二，最终分别获得了105分和100分，平均分102.5。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-6062a9f56228f2ea411df35808e132e9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"439\" data-rawheight=\"597\" class=\"origin_image zh-lightbox-thumb\" width=\"439\" data-original=\"https://pic2.zhimg.com/v2-6062a9f56228f2ea411df35808e132e9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;439&#39; height=&#39;597&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"439\" data-rawheight=\"597\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"439\" data-original=\"https://pic2.zhimg.com/v2-6062a9f56228f2ea411df35808e132e9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-6062a9f56228f2ea411df35808e132e9_b.jpg\"/></figure><p>虽然人家考得一般，但人家题目做得快啊，给你十分钟写一张卷子，你能考这个成绩吗？</p><p>可见，在学习方面，人工智能做的也并不比你差。不好好学习的话，可能连考试都考不过AI。</p><p>而且，AI在“考试”领域可不仅仅能成为参与者，它还能成为老师一样的批改者。</p><p>在浙江外国语学院国际学院，来自阿里巴巴的人工智能已经为11位留学生批改了作文，平均每篇作文批改时间为40秒。</p><p>说不定在不远的将来，决定你考试过不过，能不能拿到毕业证的，不再是人类批改员，而是更准确、更高效的人工智能批改员。</p><p>这些需要用脑的工作都能交给人工智能完成，还做得不比人类差。那么，那些重复性劳动程度高的体力活就更不用说了。</p><p>京东早就用上了物流机器人。在东莞麻涌的一个京东分拣中心，原来的300位分拣员工，被裁到了仅剩20人，而这个裁员还将继续。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-17059511a293a58450aeca6e4148ed38_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"330\" data-rawheight=\"201\" data-thumbnail=\"https://pic1.zhimg.com/v2-17059511a293a58450aeca6e4148ed38_b.jpg\" class=\"content_image\" width=\"330\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;330&#39; height=&#39;201&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"330\" data-rawheight=\"201\" data-thumbnail=\"https://pic1.zhimg.com/v2-17059511a293a58450aeca6e4148ed38_b.jpg\" class=\"content_image lazy\" width=\"330\" data-actualsrc=\"https://pic1.zhimg.com/v2-17059511a293a58450aeca6e4148ed38_b.gif\"/></figure><p>去年开始，京东的无人车就在北京的6所大学完成了第一次的派送任务。原本由快递小哥负责的派送工作，现在也换成了人工智能。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-53b92337bd51fa639c3bfda349804867_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"199\" data-thumbnail=\"https://pic4.zhimg.com/v2-53b92337bd51fa639c3bfda349804867_b.jpg\" class=\"content_image\" width=\"400\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;400&#39; height=&#39;199&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"199\" data-thumbnail=\"https://pic4.zhimg.com/v2-53b92337bd51fa639c3bfda349804867_b.jpg\" class=\"content_image lazy\" width=\"400\" data-actualsrc=\"https://pic4.zhimg.com/v2-53b92337bd51fa639c3bfda349804867_b.gif\"/></figure><p>不需要担心无人车会送错、延误等等，这辆无人车一路上能360度感知路况，比人类派送员还要靠谱。</p><p>感慨这世界变化太快？其实，在你的视线范围之外，还有更多行业正在受到人工智能的冲击。</p><p>例如说：让狗狗代替司机“开车”。这看上去是段子的事儿，在两年前就已经发生了。</p><p>两年前，百度研发的无人车参加了一次驾照考试，坐在驾驶座上的是两只汪星人。结果是：无人车轻松通过了考试。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-fbd5686b55b5eed0d69bfd5d42a06e7d_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"431\" data-rawheight=\"405\" data-thumbnail=\"https://pic2.zhimg.com/v2-fbd5686b55b5eed0d69bfd5d42a06e7d_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"431\" data-original=\"https://pic2.zhimg.com/v2-fbd5686b55b5eed0d69bfd5d42a06e7d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;431&#39; height=&#39;405&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"431\" data-rawheight=\"405\" data-thumbnail=\"https://pic2.zhimg.com/v2-fbd5686b55b5eed0d69bfd5d42a06e7d_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"431\" data-original=\"https://pic2.zhimg.com/v2-fbd5686b55b5eed0d69bfd5d42a06e7d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-fbd5686b55b5eed0d69bfd5d42a06e7d_b.gif\"/></figure><p>而今年，百度宣布：全球首款L4级量产自动驾驶巴士“阿波龙”量产下线，将会发往北京、武汉、深圳、雄安、东京等地开展商业运营。</p><p>这下，除了设计、编辑、作业批改员、快递小哥之外，司机这个职业离“被替代”危机又靠近了一步。</p><p>发现了吗？我们身边其实已经充满了人工智能的身影，只是我们不知道，或者没有留意罢了。</p><p>甚至，你看到的热门餐厅很有可能也是人工智能刷出来的评价！而且你压根分辨不出来TA是真人还是机器人。</p><p>想想看，用AI既节省成本，又提高效率，有哪个聪明的企业家不会选择使用人工智能替代人力的重复性劳动呢？</p><p>当发现人工智能开始和你“抢饭碗”的时候，你会觉得：真怀念过去还能吐槽工作的时候啊。</p><p>全球最权威的咨询公司麦肯锡的研究报告称：预计到2030年，人工智能的发展，将有7500万至3.75亿人需要重新找工作。</p><p>这意味着全球每100人中，就有3~14个人需要另谋出路。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-a792b691e1aa18521181c461d97f316c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"887\" data-rawheight=\"448\" class=\"origin_image zh-lightbox-thumb\" width=\"887\" data-original=\"https://pic1.zhimg.com/v2-a792b691e1aa18521181c461d97f316c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;887&#39; height=&#39;448&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"887\" data-rawheight=\"448\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"887\" data-original=\"https://pic1.zhimg.com/v2-a792b691e1aa18521181c461d97f316c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-a792b691e1aa18521181c461d97f316c_b.jpg\"/></figure><p>其实，上述描述的这些人工智能的应用场景，仅仅是属于“弱人工智能”的范围。</p><p>弱人工智能只会按照人类输入的指令执行动作，我们现在能看到的大部分应用都是弱人工智能。</p><p>强人工智能，则像我们在科幻片里面看到的那样，能与人类比肩，具备独立思考能力。当强人工智能普及时，我们的生活将发生革命性的变化。</p><p>此时此刻，我们已身处弱人工智能时代之中。而强人工智能的列车，在你无意识之中正在高速驶进站台。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-5cc156d5ec6ac6c5a75157f8b38c0c25_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"514\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-5cc156d5ec6ac6c5a75157f8b38c0c25_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;883&#39; height=&#39;514&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"514\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic2.zhimg.com/v2-5cc156d5ec6ac6c5a75157f8b38c0c25_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-5cc156d5ec6ac6c5a75157f8b38c0c25_b.jpg\"/></figure><p>在这样的背景下，比起焦虑自己将会因为人工智能而丢掉工作。我更希望大家能主动去抓住让自己变得更好的机会——人机合作。</p><p>社会的进步必然会让一些工作被削减，但也一定会有全新的工作产生。</p><p>在这个过程中，你更应该关心的问题是：如何适应全新的环境，避免自己成为被淘汰的一员？</p><p>其实，重复性劳动被替代对于你而言其实是一种解放：让人类真正地将精力集中在富有创造性的工作上。</p><p>既然“人工智能的未来已来”的事实已摆在眼前，我们不得不正视一个问题：如何与计算机“沟通”，让它为我们提高效率呢？</p><p>实现人机合作的前提，就是——<b>我们必须要懂得一门能帮我们和计算机沟通的编程语言。</b></p><p>在此，我们选择了Python作为初学者们学习编程的入口，扫一扫下面二维码赶紧体验下吧～</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-761910e891f25ef52498ea2866f2f4f7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"335\" data-rawheight=\"599\" class=\"content_image\" width=\"335\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;335&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"335\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"335\" data-actualsrc=\"https://pic4.zhimg.com/v2-761910e891f25ef52498ea2866f2f4f7_b.jpg\"/></figure><p>在电脑端课程里，你无需费力地安装任何软件，就可以直接在Python小课的在线编译器上敲出自己人生中的第一行代码哦！</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b00b493e06e780cd9fbf6fa15af9addc_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"607\" data-rawheight=\"324\" data-thumbnail=\"https://pic1.zhimg.com/v2-b00b493e06e780cd9fbf6fa15af9addc_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"607\" data-original=\"https://pic1.zhimg.com/v2-b00b493e06e780cd9fbf6fa15af9addc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;607&#39; height=&#39;324&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"607\" data-rawheight=\"324\" data-thumbnail=\"https://pic1.zhimg.com/v2-b00b493e06e780cd9fbf6fa15af9addc_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"607\" data-original=\"https://pic1.zhimg.com/v2-b00b493e06e780cd9fbf6fa15af9addc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b00b493e06e780cd9fbf6fa15af9addc_b.gif\"/></figure><p>在Python课程中，你将逐步把过去关于人工智能和Python的谜团解开，真正搞懂这么几件事：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-a6b4893714128d2999490cf20cb84ab0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"817\" data-rawheight=\"508\" class=\"origin_image zh-lightbox-thumb\" width=\"817\" data-original=\"https://pic1.zhimg.com/v2-a6b4893714128d2999490cf20cb84ab0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;817&#39; height=&#39;508&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"817\" data-rawheight=\"508\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"817\" data-original=\"https://pic1.zhimg.com/v2-a6b4893714128d2999490cf20cb84ab0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-a6b4893714128d2999490cf20cb84ab0_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-7f3ab3e99e80911104ce4a3a4f04a005_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"337\" data-rawheight=\"142\" class=\"content_image\" width=\"337\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;337&#39; height=&#39;142&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"337\" data-rawheight=\"142\" class=\"content_image lazy\" width=\"337\" data-actualsrc=\"https://pic2.zhimg.com/v2-7f3ab3e99e80911104ce4a3a4f04a005_b.jpg\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }, 
                {
                    "tag": "人工智能", 
                    "tagLink": "https://api.zhihu.com/topics/19551275"
                }, 
                {
                    "tag": "兼职", 
                    "tagLink": "https://api.zhihu.com/topics/19572310"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/68187817", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 6, 
            "title": "Python语言难学吗？第15讲实操小游戏项目", 
            "content": "<p>想谈谈一个项目一般是怎么完成的。更具体的说，程序员是如何思考和解决问题的呢？</p><p>我认为其中一个很重要的能力是【问题拆解】。问题拆解，指的是在做一件事或面对一个问题的时候，将其拆解成多个步骤或多个层次，逐步执行和解决问题，直至达到最终效果。</p><p>举个例子，在上一关的末尾，我们就将一个猜数字游戏拆解成四个目标：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b58184c61fba833f9c4e1babd1ecfa80_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"945\" data-rawheight=\"496\" class=\"origin_image zh-lightbox-thumb\" width=\"945\" data-original=\"https://pic1.zhimg.com/v2-b58184c61fba833f9c4e1babd1ecfa80_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;945&#39; height=&#39;496&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"945\" data-rawheight=\"496\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"945\" data-original=\"https://pic1.zhimg.com/v2-b58184c61fba833f9c4e1babd1ecfa80_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b58184c61fba833f9c4e1babd1ecfa80_b.jpg\"/></figure><p>当然这种拆解问题的思维并不少见。不过可能是出于长期编写代码的习惯，程序员会将问题拆得更细致一些，即拆到无法再拆为止。</p><p>像这样，我会将完成一个项目的流程总结为以下三步：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-b4ab40fa5193a7f570c202ce755ebe9e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"731\" data-rawheight=\"330\" class=\"origin_image zh-lightbox-thumb\" width=\"731\" data-original=\"https://pic3.zhimg.com/v2-b4ab40fa5193a7f570c202ce755ebe9e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;731&#39; height=&#39;330&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"731\" data-rawheight=\"330\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"731\" data-original=\"https://pic3.zhimg.com/v2-b4ab40fa5193a7f570c202ce755ebe9e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-b4ab40fa5193a7f570c202ce755ebe9e_b.jpg\"/></figure><p>明确项目目标，是指我们希望程序达成什么目的，实现什么功能，从而帮我们将项目拆解成不同的单元；而一个妥当的拆解方案，难度适度递增，能帮我们逐步顺利执行，最终完成项目。这三个步骤可以说是环环相扣的。</p><h2><b>明确项目目标</b></h2><p>在互联网公司，一般情况下是由产品经理提出明确的项目需求，由程序员来实现，他们之间是“相爱相杀”的关系。：）</p><p>今天且让我扮演一下产品经理的角色。我们此次要实现的需求是：人机PK小游戏。具体效果请参照下面的示意动图。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-efc8a7f14a04987cdd41001838481a43_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"709\" data-rawheight=\"759\" class=\"origin_image zh-lightbox-thumb\" width=\"709\" data-original=\"https://pic4.zhimg.com/v2-efc8a7f14a04987cdd41001838481a43_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;709&#39; height=&#39;759&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"709\" data-rawheight=\"759\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"709\" data-original=\"https://pic4.zhimg.com/v2-efc8a7f14a04987cdd41001838481a43_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-efc8a7f14a04987cdd41001838481a43_b.jpg\"/></figure><p>简单来说，这个游戏中，会随机生成玩家和敌人的属性，同时互相攻击，直至一方血量小于零。</p><p>另外，这样的战斗会持续三局，采取三局两胜制，最后输出战斗结果，公布获胜方。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-a548a8d3cf01b38968c2b599ef6c65f4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"431\" data-rawheight=\"428\" class=\"origin_image zh-lightbox-thumb\" width=\"431\" data-original=\"https://pic1.zhimg.com/v2-a548a8d3cf01b38968c2b599ef6c65f4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;431&#39; height=&#39;428&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"431\" data-rawheight=\"428\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"431\" data-original=\"https://pic1.zhimg.com/v2-a548a8d3cf01b38968c2b599ef6c65f4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-a548a8d3cf01b38968c2b599ef6c65f4_b.jpg\"/></figure><p>确了项目要实现什么效果后，就可以对项目进行拆解了。</p><h2><b>分析过程，拆解项目</b></h2><p>编写代码，我们无须苛求一步到位。尤其对于刚接触编程的学习者来说，层层递进、逐渐提升难度才能达到更好的练习效果。</p><p>了让你暖暖身，同时照顾大部分同学的学习节奏，我从“功能叠加、难度递增”这个角度考虑，将我们要实现的小游戏拆分成了三个版本。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-12fc70c3a62f543e1c983087ebed6d6d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"976\" data-rawheight=\"334\" class=\"origin_image zh-lightbox-thumb\" width=\"976\" data-original=\"https://pic2.zhimg.com/v2-12fc70c3a62f543e1c983087ebed6d6d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;976&#39; height=&#39;334&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"976\" data-rawheight=\"334\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"976\" data-original=\"https://pic2.zhimg.com/v2-12fc70c3a62f543e1c983087ebed6d6d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-12fc70c3a62f543e1c983087ebed6d6d_b.jpg\"/></figure><p>版本1.0，主要是帮我们理清战斗逻辑。而版本2.0和3.0，会涉及到一些新的知识点，到时遇到了再和大家介绍。</p><p>当项目被清晰地拆解后，剩下的就是去逐步执行，也就是重复“执行→遇到问题→解决问题→继续执行”这个循环的过程。</p><p>下面，开始正式写代码咯</p><h2><b>逐步执行，代码实现</b></h2><p><b>版本1.0：自定属性，人工PK</b></p><p>第一阶段的代码，主要任务是理清战斗的逻辑，再用print()函数将战斗过程打印在终端。</p><p>先来思考一下，一个人机PK游戏最基础的元素是什么，可以拿最经典的拳皇游戏来脑补一下。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-4326e83c8bfb0a91d4c32d0965620307_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"358\" data-rawheight=\"420\" class=\"content_image\" width=\"358\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;358&#39; height=&#39;420&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"358\" data-rawheight=\"420\" class=\"content_image lazy\" width=\"358\" data-actualsrc=\"https://pic4.zhimg.com/v2-4326e83c8bfb0a91d4c32d0965620307_b.jpg\"/></figure><p><br/> 根据这一版本的设定，我们要做的主要有三步：1.规定并显示出玩家和敌人的属性 2.双方同时互相攻击，血量根据对方的攻击力扣除 3.若有一方血量小于等于0，游戏结束。</p><p>为了让我们的思路保持清晰，画成流程图就是这样子的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-2372601a4e1c096649f7c9ebe770da63_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"308\" data-rawheight=\"464\" class=\"content_image\" width=\"308\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;308&#39; height=&#39;464&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"308\" data-rawheight=\"464\" class=\"content_image lazy\" width=\"308\" data-actualsrc=\"https://pic4.zhimg.com/v2-2372601a4e1c096649f7c9ebe770da63_b.jpg\"/></figure><p>这个版本的所有步骤，都还很不“智能”，只用到了唯一一个函数Print()。也就是说，我们只要把步骤一个一个打印上去，就算成功啦。</p><p>好，我们从第1步开始：设定【玩家】和【敌人】的属性，即【血量】和【攻击】。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-4266304e1bdd0bda1b9657e62b6a0dbc_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"635\" data-rawheight=\"88\" class=\"origin_image zh-lightbox-thumb\" width=\"635\" data-original=\"https://pic1.zhimg.com/v2-4266304e1bdd0bda1b9657e62b6a0dbc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;635&#39; height=&#39;88&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"635\" data-rawheight=\"88\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"635\" data-original=\"https://pic1.zhimg.com/v2-4266304e1bdd0bda1b9657e62b6a0dbc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-4266304e1bdd0bda1b9657e62b6a0dbc_b.png\"/></figure><p>第2步：手动计算攻击一次，双方各自所剩的血量。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-45a2eecd88731e16c4b7c374c9b22c0a_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"743\" data-rawheight=\"80\" class=\"origin_image zh-lightbox-thumb\" width=\"743\" data-original=\"https://pic3.zhimg.com/v2-45a2eecd88731e16c4b7c374c9b22c0a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;743&#39; height=&#39;80&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"743\" data-rawheight=\"80\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"743\" data-original=\"https://pic3.zhimg.com/v2-45a2eecd88731e16c4b7c374c9b22c0a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-45a2eecd88731e16c4b7c374c9b22c0a_b.png\"/></figure><p>第3步：继续做人工计算：算一算，玩家攻击2次敌人，敌人的血量就等于0了，这时候可以结束战斗，打印游戏结果。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-8e89636664d388ea8574187df019ecce_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"786\" data-rawheight=\"154\" class=\"origin_image zh-lightbox-thumb\" width=\"786\" data-original=\"https://pic3.zhimg.com/v2-8e89636664d388ea8574187df019ecce_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;786&#39; height=&#39;154&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"786\" data-rawheight=\"154\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"786\" data-original=\"https://pic3.zhimg.com/v2-8e89636664d388ea8574187df019ecce_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-8e89636664d388ea8574187df019ecce_b.jpg\"/></figure><p>很简单吧！现在我们要做的，就是把这三段代码拼起来，然后我会加一些修饰视觉的换行符和分割线，让运行结果看得更清楚一点。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-b40102675334194477ea442315f14ee7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"851\" data-rawheight=\"495\" class=\"origin_image zh-lightbox-thumb\" width=\"851\" data-original=\"https://pic4.zhimg.com/v2-b40102675334194477ea442315f14ee7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;851&#39; height=&#39;495&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"851\" data-rawheight=\"495\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"851\" data-original=\"https://pic4.zhimg.com/v2-b40102675334194477ea442315f14ee7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-b40102675334194477ea442315f14ee7_b.jpg\"/></figure><p>现在，请你直接运行一下代码，看看结果是不是如我们所愿。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-018ea60b462f7b536489abf2c0992a39_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1333\" data-rawheight=\"425\" class=\"origin_image zh-lightbox-thumb\" width=\"1333\" data-original=\"https://pic2.zhimg.com/v2-018ea60b462f7b536489abf2c0992a39_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1333&#39; height=&#39;425&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1333\" data-rawheight=\"425\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1333\" data-original=\"https://pic2.zhimg.com/v2-018ea60b462f7b536489abf2c0992a39_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-018ea60b462f7b536489abf2c0992a39_b.jpg\"/></figure><p>唔...虽然看起来还有点儿意思，但所有信息一下子都蹦跶出来，一点都没有体现游戏的进程感。</p><p>所以，为了让打印出的东西能有时间间隔地依次出现，我们需要设置一个类似“<b>计时器</b>”的东西。在Python里，我们需要用到两行代码来实现：（敲黑板，很简单的新知识）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-36792ee75986f89184ab87b4a1e0a86c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"699\" data-rawheight=\"148\" class=\"origin_image zh-lightbox-thumb\" width=\"699\" data-original=\"https://pic1.zhimg.com/v2-36792ee75986f89184ab87b4a1e0a86c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;699&#39; height=&#39;148&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"699\" data-rawheight=\"148\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"699\" data-original=\"https://pic1.zhimg.com/v2-36792ee75986f89184ab87b4a1e0a86c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-36792ee75986f89184ab87b4a1e0a86c_b.jpg\"/></figure><p>这里有个新名词——模块，它是Python里一个重要的概念，会在之后的课程详细介绍。</p><p>你可以把模块想象成是一个装着许多神奇函数的百宝箱，不过想要使用这个百宝箱里的函数，得先用<code>import 模块名</code>这样一句代码来打开它。</p><p>然后这里我们想使用time模块里的<code>sleep()</code>函数，也就是让代码运行结果不要一次性全部出现，而是分批分批的出现。就要写成<code>time.sleep(secs)</code>的形式。</p><p>如果我想设置成打印的信息间隔1.5秒出现，代码就可以这么写：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b8ac5a150ff3aa84d1fbb9a457b01950_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"475\" data-rawheight=\"642\" class=\"origin_image zh-lightbox-thumb\" width=\"475\" data-original=\"https://pic1.zhimg.com/v2-b8ac5a150ff3aa84d1fbb9a457b01950_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;475&#39; height=&#39;642&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"475\" data-rawheight=\"642\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"475\" data-original=\"https://pic1.zhimg.com/v2-b8ac5a150ff3aa84d1fbb9a457b01950_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b8ac5a150ff3aa84d1fbb9a457b01950_b.jpg\"/></figure><p>呼～总算完成了版本1.0，不过我想你一定在心里默默吐槽，一句句用print()写也太蠢太弱鸡了吧。</p><p>没错，不过代码嘛，总得一步步实现。就先当作是小小的热身。</p><p>而且，这个版本的代码还有两个明显的缺陷：一是玩家和敌人的属性（血量&amp;攻击）是我自己说了算，那胜负早已没有悬念；二是战斗过程中血量的变化要自己手动算，那要计算机有何用？</p><p>放心，这些都是我们会在版本2.0解决的问题。</p><p><b>版本2.0：随机属性，自动PK</b></p><p>如前所述，这个阶段，我们主要新增【随机属性】和【自动战斗】两个功能，画成流程图是这样子的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-a12f39aec628a83253a217037c89b451_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"282\" data-rawheight=\"463\" class=\"content_image\" width=\"282\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;282&#39; height=&#39;463&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"282\" data-rawheight=\"463\" class=\"content_image lazy\" width=\"282\" data-actualsrc=\"https://pic2.zhimg.com/v2-a12f39aec628a83253a217037c89b451_b.jpg\"/></figure><p>想一想：自己来定义双方角色的属性，那简直是黑箱操作，胜负早已注定。所以，为了游戏公平，我们要让属性由自己说了算变成随机生成。</p><p>现在问题来了，要随机生成属性（数字），这课堂里又没教。怎么办？</p><p>百度一下你就知道～</p><p>遇到卡点后上网搜索，其实就能解决目前你绝大多数的问题。“不懂就查”也是程序员的工作习惯之一。</p><p>要随机生成整数，就要用到<code>random模块</code>里的<code>randint()</code>函数，括号里放的是两个整数，划定随机生成整数的范围。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-1412fc0c81eb1376c9123ba39e2ed46d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1352\" data-rawheight=\"239\" class=\"origin_image zh-lightbox-thumb\" width=\"1352\" data-original=\"https://pic2.zhimg.com/v2-1412fc0c81eb1376c9123ba39e2ed46d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1352&#39; height=&#39;239&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1352\" data-rawheight=\"239\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1352\" data-original=\"https://pic2.zhimg.com/v2-1412fc0c81eb1376c9123ba39e2ed46d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-1412fc0c81eb1376c9123ba39e2ed46d_b.jpg\"/></figure><p>好，可以动手敲代码了！</p><p>请听题：1.定义两个变量，来存储玩家血量和玩家攻击力的数值 2.血量是<code>100-150</code>的随机数，攻击力是<code>30-50</code>的随机数 3.将两个变量打印出来</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-5ce8c3b5240e0f1dbce3276e01dcc8bd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"438\" data-rawheight=\"241\" class=\"origin_image zh-lightbox-thumb\" width=\"438\" data-original=\"https://pic2.zhimg.com/v2-5ce8c3b5240e0f1dbce3276e01dcc8bd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;438&#39; height=&#39;241&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"438\" data-rawheight=\"241\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"438\" data-original=\"https://pic2.zhimg.com/v2-5ce8c3b5240e0f1dbce3276e01dcc8bd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-5ce8c3b5240e0f1dbce3276e01dcc8bd_b.jpg\"/></figure><p>标准的变量名最好是用英文来表达含义，如果是多个单词组成，需要用英文下划线<code>_</code>来隔开。</p><p>对于取英文变量名，很多英语水平在高考即巅峰的同学会感到头疼，这里我推荐大家一个网站:<a href=\"https://link.zhihu.com/?target=https%3A//unbug.github.io/codelf\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CODELF</a>，输入中文就可以看到别人是怎么命名的。</p><p>好，我们已经知道如何生成随机属性，下面我们就要将属性展示打印出来，请阅读下列代码，弄懂每一行的含义：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-42f1fc90c5f8cd7a242fdd8bb121ddbb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"742\" data-rawheight=\"324\" class=\"origin_image zh-lightbox-thumb\" width=\"742\" data-original=\"https://pic4.zhimg.com/v2-42f1fc90c5f8cd7a242fdd8bb121ddbb_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;742&#39; height=&#39;324&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"742\" data-rawheight=\"324\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"742\" data-original=\"https://pic4.zhimg.com/v2-42f1fc90c5f8cd7a242fdd8bb121ddbb_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-42f1fc90c5f8cd7a242fdd8bb121ddbb_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-42b632c3a5d40b29fde5ff17d066c1ff_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"766\" data-rawheight=\"296\" class=\"origin_image zh-lightbox-thumb\" width=\"766\" data-original=\"https://pic4.zhimg.com/v2-42b632c3a5d40b29fde5ff17d066c1ff_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;766&#39; height=&#39;296&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"766\" data-rawheight=\"296\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"766\" data-original=\"https://pic4.zhimg.com/v2-42b632c3a5d40b29fde5ff17d066c1ff_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-42b632c3a5d40b29fde5ff17d066c1ff_b.jpg\"/></figure><p>那截至目前，我们已经完成了随机生成属性和展示属性，接下来我们就来实现&#34;自动战斗&#34;。</p><p>要怎么实现自动战斗呢？如果一头雾水的话，可以先尝试从版本1.0的人为战斗来寻找规律：</p><p>我们可以发现，4-6行这3行是重复出现的结构，除了数字是灵活变动之外，其余是一毛一样的。</p><p><b>根据我们已学知识，用循环来解决重复劳动！</b></p><p>说到循环，我们就要思考是要使用for循环还是while循环了。</p><p>因为现在双方的血量和攻击是随机生成，不是固定的。所以我们不知道具体要战斗多少回合才能分出胜负，也就是循环次数不明确，那自然要用while循环。</p><p>所以我们现在确定了让循环执行需要满足的条件就是——双方血量均大于零，也就是不死不休。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-108da3183ccf912e30862d267128be0c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"350\" data-rawheight=\"331\" class=\"content_image\" width=\"350\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;350&#39; height=&#39;331&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"350\" data-rawheight=\"331\" class=\"content_image lazy\" width=\"350\" data-actualsrc=\"https://pic1.zhimg.com/v2-108da3183ccf912e30862d267128be0c_b.jpg\"/></figure><p>可见while后面要同时满足两个条件，即这两个条件要同时为真，所以我们要用<code>and</code>来连接，用代码来表示就是：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-c40f16e12aeff6d0f604abd8cd368a89_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"534\" data-rawheight=\"80\" class=\"origin_image zh-lightbox-thumb\" width=\"534\" data-original=\"https://pic2.zhimg.com/v2-c40f16e12aeff6d0f604abd8cd368a89_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;534&#39; height=&#39;80&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"534\" data-rawheight=\"80\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"534\" data-original=\"https://pic2.zhimg.com/v2-c40f16e12aeff6d0f604abd8cd368a89_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-c40f16e12aeff6d0f604abd8cd368a89_b.png\"/></figure><p>现在我们确定了执行while循环的条件，接下来就是要填充循环内部的内容。</p><p>根据刚才的分析，我们希望循环的内容是双方互相攻击，掉血的过程。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-d321f92697fbb51c3da1a6c1e8d4a864_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"486\" data-rawheight=\"119\" class=\"origin_image zh-lightbox-thumb\" width=\"486\" data-original=\"https://pic1.zhimg.com/v2-d321f92697fbb51c3da1a6c1e8d4a864_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;486&#39; height=&#39;119&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"486\" data-rawheight=\"119\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"486\" data-original=\"https://pic1.zhimg.com/v2-d321f92697fbb51c3da1a6c1e8d4a864_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-d321f92697fbb51c3da1a6c1e8d4a864_b.jpg\"/></figure><p>其中【敌人】剩余血量=敌人当前血量-玩家攻击，【玩家】剩余血量=玩家当前血量-敌人攻击。</p><p>事实上我们之前已经定义好了这四个变量，每一次互相伤害后，<code>player_life</code>（玩家血量）和<code>enemy_life</code>（敌人血量）都会被重新赋值，所以转换为代码逻辑就是：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-15abc7c371f28dfafed7915f4a8aacf4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"523\" data-rawheight=\"121\" class=\"origin_image zh-lightbox-thumb\" width=\"523\" data-original=\"https://pic1.zhimg.com/v2-15abc7c371f28dfafed7915f4a8aacf4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;523&#39; height=&#39;121&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"523\" data-rawheight=\"121\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"523\" data-original=\"https://pic1.zhimg.com/v2-15abc7c371f28dfafed7915f4a8aacf4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-15abc7c371f28dfafed7915f4a8aacf4_b.jpg\"/></figure><p>好，自动攻击的基础逻辑也已经理清楚了。我们先合并一下这之前写过的代码。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-43c92124fb0b242201922207979b69e0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"778\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"778\" data-original=\"https://pic1.zhimg.com/v2-43c92124fb0b242201922207979b69e0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;778&#39; height=&#39;552&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"778\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"778\" data-original=\"https://pic1.zhimg.com/v2-43c92124fb0b242201922207979b69e0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-43c92124fb0b242201922207979b69e0_b.jpg\"/></figure><p>接下来，只需要补充完成while循环语句，让双方自动战斗、扣血的过程循环起来</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-70af6b08474bafc3df3fdb122877b6b9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"715\" data-rawheight=\"297\" class=\"origin_image zh-lightbox-thumb\" width=\"715\" data-original=\"https://pic2.zhimg.com/v2-70af6b08474bafc3df3fdb122877b6b9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;715&#39; height=&#39;297&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"715\" data-rawheight=\"297\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"715\" data-original=\"https://pic2.zhimg.com/v2-70af6b08474bafc3df3fdb122877b6b9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-70af6b08474bafc3df3fdb122877b6b9_b.jpg\"/></figure><p>应该能感受到，版本2.0总算像模像样了，慢慢逼近我们的项目目标。</p><p>不过它还没有实现：打印出每局结果，三局两胜，并打印最终战果的功能。这就是我们在版本3.0要增加的功能。</p><p><b>版本3.0：打印战果，三局两胜</b></p><p>对比版本2.0，在版本3.0中，我们想要增加的功能是：1.打印战果：每局战斗后，根据胜负平的结果打印出不同的提示；2.三局两胜：双方战斗三局，胜率高的为最终赢家。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-8a2e6dc583745278bf46cd14c49c09b8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"382\" data-rawheight=\"484\" class=\"content_image\" width=\"382\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;382&#39; height=&#39;484&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"382\" data-rawheight=\"484\" class=\"content_image lazy\" width=\"382\" data-actualsrc=\"https://pic1.zhimg.com/v2-8a2e6dc583745278bf46cd14c49c09b8_b.jpg\"/></figure><p>反复解释新增功能，是因为这样不断地明确项目的阶段性目标，可以让自己持续专注地推进项目。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-c836a00d545fe3939130c1a5690d6b30_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"619\" data-rawheight=\"229\" class=\"origin_image zh-lightbox-thumb\" width=\"619\" data-original=\"https://pic1.zhimg.com/v2-c836a00d545fe3939130c1a5690d6b30_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;619&#39; height=&#39;229&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"619\" data-rawheight=\"229\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"619\" data-original=\"https://pic1.zhimg.com/v2-c836a00d545fe3939130c1a5690d6b30_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-c836a00d545fe3939130c1a5690d6b30_b.jpg\"/></figure><p>好啦，我们继续前进。版本3.0也只剩最后的“三局两胜”了！</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-c8d42e314293c0b78b977b5cdd1ab4a5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"387\" data-rawheight=\"535\" class=\"content_image\" width=\"387\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;387&#39; height=&#39;535&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"387\" data-rawheight=\"535\" class=\"content_image lazy\" width=\"387\" data-actualsrc=\"https://pic2.zhimg.com/v2-c8d42e314293c0b78b977b5cdd1ab4a5_b.jpg\"/></figure><p>同样的，我们可以将其拆分成两个部分：先来个三局，再判断最终胜负。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b59a23b1f5f2f746f66b44e066cd58d8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"785\" data-rawheight=\"303\" class=\"origin_image zh-lightbox-thumb\" width=\"785\" data-original=\"https://pic1.zhimg.com/v2-b59a23b1f5f2f746f66b44e066cd58d8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;785&#39; height=&#39;303&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"785\" data-rawheight=\"303\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"785\" data-original=\"https://pic1.zhimg.com/v2-b59a23b1f5f2f746f66b44e066cd58d8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b59a23b1f5f2f746f66b44e066cd58d8_b.jpg\"/></figure><p>首先我们来看，三局战斗也是一个可以循环的结构，且循环次数是固定的，所以要用到for循环。</p><p>在这里我们可以使用<code>for i in range( )</code>的结构，我们先来回顾一下之前学过的range()函数：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-1b53454178c9dba6a678feec34d545b8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"604\" data-rawheight=\"487\" class=\"origin_image zh-lightbox-thumb\" width=\"604\" data-original=\"https://pic1.zhimg.com/v2-1b53454178c9dba6a678feec34d545b8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;604&#39; height=&#39;487&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"604\" data-rawheight=\"487\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"604\" data-original=\"https://pic1.zhimg.com/v2-1b53454178c9dba6a678feec34d545b8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-1b53454178c9dba6a678feec34d545b8_b.jpg\"/></figure><p>现在，你有思路了吗？尝试把代码打出来吧，让战斗循环三局。</p><p>给两个提示：1.想清楚哪些代码要嵌套到for循环里，即一局战斗里包括什么信息。确定了for写在哪里之后，一局战斗包含的所有信息都要缩进；2.细节也需要留意，如局与局之间要怎么区分开来（时间间隔&amp;打印局数信息）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-af6368cb01b1d5314894e3c50e208527_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"603\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic4.zhimg.com/v2-af6368cb01b1d5314894e3c50e208527_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;832&#39; height=&#39;603&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"603\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"832\" data-original=\"https://pic4.zhimg.com/v2-af6368cb01b1d5314894e3c50e208527_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-af6368cb01b1d5314894e3c50e208527_b.jpg\"/></figure><p>如果做起来有些障碍，检查一下是否存在上面提示的这几个问题：</p><p>1. for循环语句的位置放的对不对？这个关键在于，你想让哪些信息被循环展示。例如：如果你错将for循环语句放在了【随机属性】 和【自动战斗】之间，那每一局的战斗信息会是一样的，也就不存在什么三局两胜了。</p><p>2.你写完for循环语句后，需要缩进的信息【整体】缩进了吗？如果没有缩进，可能存在报错，或者只有部分战斗信息循环的情况。</p><p>3.细节注意到了吗？局与局之间要有明显间隔，那我们可以同时使用<code>time.sleep()</code>和<code>print(&#39;现在是第x局&#39;)</code>来完美解决这个问题。此外，遇到各种报错的话，记得去搜索一下，看看报的是什么错，先自己尝试解决看看。</p><p>OK，打三局这个需求也成功了。现在我们距离最后的终点只剩一步之遥，只有“统计三局两胜的结果”这个功能还没实现了。</p><p>我们可以想一想，平常我们是怎么统计比赛结果呢？</p><p>好比乒乓球比赛，有一方赢了一局就翻一下计分牌，让数字+1，最后看哪边的数字大就是哪边获胜。</p><p>对于计算机也是如此：它靠数据思考，比如拿数据做计算、做条件判断、做循环等。所以这里的关键就在于，要给计算机数据。</p><p>那么仿照计分牌的做法，我们的解决方法也就出来了：采取计分的方式，赢一局记一分，平局不计分。</p><p>所以，我们要给计算机一个空白的“计分板”，用于存放【玩家】和【敌人】每一局的得分。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-918ba3356fabc7e710ab14ac696fa7b6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"259\" data-rawheight=\"146\" class=\"content_image\" width=\"259\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;259&#39; height=&#39;146&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"259\" data-rawheight=\"146\" class=\"content_image lazy\" width=\"259\" data-actualsrc=\"https://pic3.zhimg.com/v2-918ba3356fabc7e710ab14ac696fa7b6_b.jpg\"/></figure><p>那什么情况下，这两个变量会变动（+1）呢？自然是要与具体每一局的结果挂钩，这时候可以回看我们计算输赢的条件判断语句。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-e0a6d633332fe51db78ed2ec477d18bd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"551\" data-rawheight=\"202\" class=\"origin_image zh-lightbox-thumb\" width=\"551\" data-original=\"https://pic2.zhimg.com/v2-e0a6d633332fe51db78ed2ec477d18bd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;551&#39; height=&#39;202&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"551\" data-rawheight=\"202\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"551\" data-original=\"https://pic2.zhimg.com/v2-e0a6d633332fe51db78ed2ec477d18bd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-e0a6d633332fe51db78ed2ec477d18bd_b.jpg\"/></figure><p>然后，我们将敌人和玩家各自赢的局数给算出来：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-1346c53b419501f10017c44023854f10_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"488\" data-rawheight=\"372\" class=\"origin_image zh-lightbox-thumb\" width=\"488\" data-original=\"https://pic1.zhimg.com/v2-1346c53b419501f10017c44023854f10_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;488&#39; height=&#39;372&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"488\" data-rawheight=\"372\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"488\" data-original=\"https://pic1.zhimg.com/v2-1346c53b419501f10017c44023854f10_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-1346c53b419501f10017c44023854f10_b.jpg\"/></figure><p>这样三局过后，player_victory和enemy_victory会被赋上新的值。给你一个小技巧：<code>player_victory = player_victory + 1</code>，总是这样写有点烦人，我们可以写作<code>player_victory += 1</code>，这两个代码是等价的，都代表&#34;如果if后的条件满足，变量就+1&#34;。</p><p>这也是程序员是追求“极简”的体现。好，我们把这段代码替换一下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-3d6f604f4266b94c91948cf16031e19b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"470\" data-rawheight=\"365\" class=\"origin_image zh-lightbox-thumb\" width=\"470\" data-original=\"https://pic4.zhimg.com/v2-3d6f604f4266b94c91948cf16031e19b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;470&#39; height=&#39;365&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"470\" data-rawheight=\"365\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"470\" data-original=\"https://pic4.zhimg.com/v2-3d6f604f4266b94c91948cf16031e19b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-3d6f604f4266b94c91948cf16031e19b_b.jpg\"/></figure><p>现在，我们只需要再用一次条件判断，比较两个变量的大小就能知道谁输谁赢了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-ff10135828c52eaba2bf68e19491390e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"758\" data-rawheight=\"445\" class=\"origin_image zh-lightbox-thumb\" width=\"758\" data-original=\"https://pic3.zhimg.com/v2-ff10135828c52eaba2bf68e19491390e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;758&#39; height=&#39;445&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"758\" data-rawheight=\"445\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"758\" data-original=\"https://pic3.zhimg.com/v2-ff10135828c52eaba2bf68e19491390e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-ff10135828c52eaba2bf68e19491390e_b.jpg\"/></figure><p>将条件判断的思维逻辑转换成代码逻辑的话是这样子的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-a95b5b220bc1201d399717e5ddb95a17_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"955\" data-rawheight=\"529\" class=\"origin_image zh-lightbox-thumb\" width=\"955\" data-original=\"https://pic4.zhimg.com/v2-a95b5b220bc1201d399717e5ddb95a17_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;955&#39; height=&#39;529&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"955\" data-rawheight=\"529\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"955\" data-original=\"https://pic4.zhimg.com/v2-a95b5b220bc1201d399717e5ddb95a17_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-a95b5b220bc1201d399717e5ddb95a17_b.jpg\"/></figure><p>需要注意的是最终判断结果要放在for循环外面，也就是不用缩进。</p><p>完整代码：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-a2837e01c2776b874c16587cf5f00628_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"809\" data-rawheight=\"451\" class=\"origin_image zh-lightbox-thumb\" width=\"809\" data-original=\"https://pic1.zhimg.com/v2-a2837e01c2776b874c16587cf5f00628_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;809&#39; height=&#39;451&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"809\" data-rawheight=\"451\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"809\" data-original=\"https://pic1.zhimg.com/v2-a2837e01c2776b874c16587cf5f00628_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-a2837e01c2776b874c16587cf5f00628_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-a1e8034f7d1bbcc5fc46b01d7d37458f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"810\" data-rawheight=\"540\" class=\"origin_image zh-lightbox-thumb\" width=\"810\" data-original=\"https://pic4.zhimg.com/v2-a1e8034f7d1bbcc5fc46b01d7d37458f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;810&#39; height=&#39;540&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"810\" data-rawheight=\"540\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"810\" data-original=\"https://pic4.zhimg.com/v2-a1e8034f7d1bbcc5fc46b01d7d37458f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-a1e8034f7d1bbcc5fc46b01d7d37458f_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-9252dc5da3b6585a80b1f6c705955c22_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"802\" data-rawheight=\"560\" class=\"origin_image zh-lightbox-thumb\" width=\"802\" data-original=\"https://pic3.zhimg.com/v2-9252dc5da3b6585a80b1f6c705955c22_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;802&#39; height=&#39;560&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"802\" data-rawheight=\"560\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"802\" data-original=\"https://pic3.zhimg.com/v2-9252dc5da3b6585a80b1f6c705955c22_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-9252dc5da3b6585a80b1f6c705955c22_b.jpg\"/></figure><p>不过，这还没完呢。作为一个程序员，代码是我们的名片，我们会追求更加优雅的，方便他人阅读的代码，所以上述代码还有一些优化空间。</p><p>所以，以下是彩蛋时间，我会教大家一个新的知识点——【格式化字符串】，作为这一关的收尾。</p><p>什么意思呢，上面有这么两行代码，是用来展示双方角色的属性的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-d0b6378f08464655c7f30e772f9a380c_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"790\" data-rawheight=\"83\" class=\"origin_image zh-lightbox-thumb\" width=\"790\" data-original=\"https://pic1.zhimg.com/v2-d0b6378f08464655c7f30e772f9a380c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;790&#39; height=&#39;83&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"790\" data-rawheight=\"83\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"790\" data-original=\"https://pic1.zhimg.com/v2-d0b6378f08464655c7f30e772f9a380c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-d0b6378f08464655c7f30e772f9a380c_b.png\"/></figure><p>我们在用<code>+</code>拼接字符串和变量的时候，常常需要考虑变量是什么类型的数据，如果不是字符串类型，还先需要str()函数转换。</p><p>并且一句话常常要拼接成好几个部分，然后我们要考虑每一对引号<code>&#39; &#39;</code>的起始位置，好麻烦，相信你多少会有点体会。</p><p>所以，为了更方便地实现不同数据类型的拼接，用【格式符<code>%</code>】是更常用更便利的一种方式。</p><p>我们可以把<code>%</code>想象成：图书馆里用来占位的一本书。先占一个位置，之后再填上实际的变量。举个例子：下面这两种写法是相同的，请你着重研究下第二行的语法。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-2b687226c4ed49947b40c40501c8d168_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"661\" data-rawheight=\"87\" class=\"origin_image zh-lightbox-thumb\" width=\"661\" data-original=\"https://pic1.zhimg.com/v2-2b687226c4ed49947b40c40501c8d168_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;661&#39; height=&#39;87&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"661\" data-rawheight=\"87\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"661\" data-original=\"https://pic1.zhimg.com/v2-2b687226c4ed49947b40c40501c8d168_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-2b687226c4ed49947b40c40501c8d168_b.png\"/></figure><p>我们看到格式符<code>%</code>后面有一个字母s，这是一个类型码，用来控制数据显示的类型。<code>%s</code>就表示先占一个字符串类型的位置。</p><p>还有其他常见的类型码如下图所示：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-4ce4bae4c89f3a8cd8a3187e33119e25_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"771\" data-rawheight=\"299\" class=\"origin_image zh-lightbox-thumb\" width=\"771\" data-original=\"https://pic2.zhimg.com/v2-4ce4bae4c89f3a8cd8a3187e33119e25_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;771&#39; height=&#39;299&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"771\" data-rawheight=\"299\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"771\" data-original=\"https://pic2.zhimg.com/v2-4ce4bae4c89f3a8cd8a3187e33119e25_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-4ce4bae4c89f3a8cd8a3187e33119e25_b.jpg\"/></figure><p>占完位置之后，我们要以<code>%</code>的形式在后面补上要填充的内容，如此一来我们就免去了转换类型的烦恼。如果是多个数据，就要把它们放进括号，按顺序填充，用逗号隔开。</p><p>举个例子，你可以运行一下，对比下列输出的结果：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-e396b89fb399a4f11a5a7ee9f58b52dc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"975\" data-rawheight=\"215\" class=\"origin_image zh-lightbox-thumb\" width=\"975\" data-original=\"https://pic1.zhimg.com/v2-e396b89fb399a4f11a5a7ee9f58b52dc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;975&#39; height=&#39;215&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"975\" data-rawheight=\"215\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"975\" data-original=\"https://pic1.zhimg.com/v2-e396b89fb399a4f11a5a7ee9f58b52dc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e396b89fb399a4f11a5a7ee9f58b52dc_b.jpg\"/></figure><p>一个小小的提示：<code>%</code>后面的类型码用什么，取决于你希望这个<code>%</code>占住的这个位置的数据以什么类型展示出来，如果你希望它以字符串形式展示，那就写<code>%s</code>，如果你希望它以整数形式展示，那就写<code>%d</code>。</p><p>这就出现了一些容易混淆的地方，比如，请运行以下的代码：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-a03e085b6fd5068341390cf32b063137_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"966\" data-rawheight=\"201\" class=\"origin_image zh-lightbox-thumb\" width=\"966\" data-original=\"https://pic4.zhimg.com/v2-a03e085b6fd5068341390cf32b063137_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;966&#39; height=&#39;201&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"966\" data-rawheight=\"201\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"966\" data-original=\"https://pic4.zhimg.com/v2-a03e085b6fd5068341390cf32b063137_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-a03e085b6fd5068341390cf32b063137_b.jpg\"/></figure><p>选用了不同的类型码，打印出的结果却是一样，原因也已经在代码注释中写清楚了：因为整数8与字符串&#39;8&#39;的打印结果是一样的，所以选两种类型码都OK。但这种“都OK”的情况仅限于整数，对文字是行不通的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-9b5cc8c08a2a17548564ad2d6c20b0f3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1337\" data-rawheight=\"291\" class=\"origin_image zh-lightbox-thumb\" width=\"1337\" data-original=\"https://pic4.zhimg.com/v2-9b5cc8c08a2a17548564ad2d6c20b0f3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1337&#39; height=&#39;291&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1337\" data-rawheight=\"291\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1337\" data-original=\"https://pic4.zhimg.com/v2-9b5cc8c08a2a17548564ad2d6c20b0f3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-9b5cc8c08a2a17548564ad2d6c20b0f3_b.jpg\"/></figure><p>会报错，对吧？好啦，现在你应该更懂这个格式化字符串该怎么用了。</p><p>那就看回我们之前的代码，如果把一开始用<code>+</code>拼接的字符串都替换成<code>%</code>格式符表示，我们先替换一部分试试</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-df15b3b6969b74f4508d4e7fb73eb712_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"839\" data-rawheight=\"270\" class=\"origin_image zh-lightbox-thumb\" width=\"839\" data-original=\"https://pic3.zhimg.com/v2-df15b3b6969b74f4508d4e7fb73eb712_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;839&#39; height=&#39;270&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"839\" data-rawheight=\"270\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"839\" data-original=\"https://pic3.zhimg.com/v2-df15b3b6969b74f4508d4e7fb73eb712_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-df15b3b6969b74f4508d4e7fb73eb712_b.jpg\"/></figure><p>你也许想问我，这里的<code>%s</code>是不是都能换成<code>%d</code>，答案是“YES!”，因为这里的变量<code>i</code>,<code>player_life</code>,<code>player_attack</code>统统都是整数。</p><p>是不是看起来清爽了些？如果还不习惯这种表示方法没有关系，多写几次就习惯啦。</p><p>以上就是第一节项目实操课的全部内容了！</p><p class=\"ztext-empty-paragraph\"><br/></p><p>----------------------------------------------------------------------------------------------</p><p><b>更多课程请关注：</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-761910e891f25ef52498ea2866f2f4f7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"335\" data-rawheight=\"599\" class=\"content_image\" width=\"335\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;335&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"335\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"335\" data-actualsrc=\"https://pic4.zhimg.com/v2-761910e891f25ef52498ea2866f2f4f7_b.jpg\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }, 
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/67740263", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 3, 
            "title": "Python语言难学吗？第14讲——循环里的四种新语句", 
            "content": "<p>上节课我们说了布尔运算和布尔值在代码中的运用，今天我们来说说循环里的四种新语句。</p><p>这4种新语句配合for循环和while循环，可以让循环发挥更多的功能。我们逐个来看。</p><h2><b>break语句</b></h2><p>我们先来看看break语句。break的意思是“打破”，是用来结束循环的，一般写作<code>if...break</code>。它的写法长这样：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-b0f2150fdf11f9762f2452f103f8c36d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"287\" data-rawheight=\"361\" class=\"content_image\" width=\"287\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;287&#39; height=&#39;361&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"287\" data-rawheight=\"361\" class=\"content_image lazy\" width=\"287\" data-actualsrc=\"https://pic2.zhimg.com/v2-b0f2150fdf11f9762f2452f103f8c36d_b.jpg\"/></figure><p>在这里，<code>if...break</code>的意思是如果满足了某一个条件，就提前结束循环。记住，这个只能在循环内部使用。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-049c4b4e797f79818810a43168b9ac04_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"724\" data-rawheight=\"437\" class=\"origin_image zh-lightbox-thumb\" width=\"724\" data-original=\"https://pic1.zhimg.com/v2-049c4b4e797f79818810a43168b9ac04_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;724&#39; height=&#39;437&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"724\" data-rawheight=\"437\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"724\" data-original=\"https://pic1.zhimg.com/v2-049c4b4e797f79818810a43168b9ac04_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-049c4b4e797f79818810a43168b9ac04_b.jpg\"/></figure><p>我们运行一下代码来理解这一点。下面是一个for循环代码，本来会循环5次，但循环到第4次的时候就被break语句打断，然后结束循环了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-3d79de548dd44f54d085a89f99a8524d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"982\" data-rawheight=\"224\" class=\"origin_image zh-lightbox-thumb\" width=\"982\" data-original=\"https://pic2.zhimg.com/v2-3d79de548dd44f54d085a89f99a8524d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;982&#39; height=&#39;224&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"982\" data-rawheight=\"224\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"982\" data-original=\"https://pic2.zhimg.com/v2-3d79de548dd44f54d085a89f99a8524d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-3d79de548dd44f54d085a89f99a8524d_b.jpg\"/></figure><p>下面是一个while循环代码，本来会循环5次，但循环到第3次的时候就被break语句打断，然后结束循环了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-1e4663a55262f276263c45ddeaec3536_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1338\" data-rawheight=\"250\" class=\"origin_image zh-lightbox-thumb\" width=\"1338\" data-original=\"https://pic3.zhimg.com/v2-1e4663a55262f276263c45ddeaec3536_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1338&#39; height=&#39;250&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1338\" data-rawheight=\"250\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1338\" data-original=\"https://pic3.zhimg.com/v2-1e4663a55262f276263c45ddeaec3536_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-1e4663a55262f276263c45ddeaec3536_b.jpg\"/></figure><p>小小地提醒你，break前面一共缩进了【8个空格】。</p><p>这是因为if之下的语句要缩进4个空格（按一次Tab键），这里的<code>if...break</code>又嵌套在while或for循环中，而循环语句本身又要缩进4个空格。这样一来，break就缩进了【4+4=8】个空格（按两次Tab键）。【注】：Tab键和空格键不能同时混用。</p><p>接下来，看个轻松点的小说案例，巩固一下知识。</p><p>《西游记》里面有一个车迟国，车迟国里面有个陈家庄，陈家庄的河里有一个鲤鱼精，每一年都要陈家庄上供一对童男童女给自己吃，庄里的人家真是苦不堪言。</p><p>这种年复一年的循环状态，在唐僧师徒来到这里后，结束了。因为孙悟空制服了这个鲤鱼精，百姓再也不用受苦了！真好。</p><p>如果用Python来展示这个故事：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-dfed85ec1cd32dd87756e83edc43d98a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"551\" data-rawheight=\"213\" class=\"origin_image zh-lightbox-thumb\" width=\"551\" data-original=\"https://pic3.zhimg.com/v2-dfed85ec1cd32dd87756e83edc43d98a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;551&#39; height=&#39;213&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"551\" data-rawheight=\"213\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"551\" data-original=\"https://pic3.zhimg.com/v2-dfed85ec1cd32dd87756e83edc43d98a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-dfed85ec1cd32dd87756e83edc43d98a_b.jpg\"/></figure><p>运行看看这段代码：你随便输入几个数据，点击enter，围观程序循环；然后再输入“来了”，点击enter，结束循环。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-051c05908d3bc1126b6139090e2bf6e5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1341\" data-rawheight=\"283\" class=\"origin_image zh-lightbox-thumb\" width=\"1341\" data-original=\"https://pic2.zhimg.com/v2-051c05908d3bc1126b6139090e2bf6e5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1341&#39; height=&#39;283&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1341\" data-rawheight=\"283\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1341\" data-original=\"https://pic2.zhimg.com/v2-051c05908d3bc1126b6139090e2bf6e5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-051c05908d3bc1126b6139090e2bf6e5_b.jpg\"/></figure><p>第1行代码：<code>while True</code>我们在上面见过了，这个条件恒为真，就会开启无限循环。而<code>while True</code>常和break语句搭配使用，你也可以学着使用这种写法。</p><p>第2行代码：打印<code>上供一对童男童女</code>的字符串。第3行代码：请用户输入一个信息。</p><p>第4行代码：如果用户输入的信息是 “来了”，那么if后面的条件被满足，执行下面的代码break；如果没有，回到while True 继续循环。</p><p>第5行代码：break表示结束循环，然后去执行循环外部的代码，即第6行代码，打印<code>孙悟空制服了鲤鱼精</code>的字符串。</p><p>接下来我们来练习一下break语句的编程。</p><p>我想请你写下这样一个程序，功能是请用户输入密码，如果输入了错误的密码，就一直循环请用户继续输入；如果输入了正确的密码，就结束循环。设定这个密码为&#39;小龙女&#39;。（其实之前做过这题，有印象吗？）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-730dd467a4f5b6c7f92f244526637d03_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1341\" data-rawheight=\"203\" class=\"origin_image zh-lightbox-thumb\" width=\"1341\" data-original=\"https://pic4.zhimg.com/v2-730dd467a4f5b6c7f92f244526637d03_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1341&#39; height=&#39;203&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1341\" data-rawheight=\"203\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1341\" data-original=\"https://pic4.zhimg.com/v2-730dd467a4f5b6c7f92f244526637d03_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-730dd467a4f5b6c7f92f244526637d03_b.png\"/></figure><p>第1行：用while True 开启了一个无限循环。你也可以用<b>while 1</b> 或其他形式开启一个无限循环。</p><p>第2行：用input() 函数获取到了一个数据。第3行：如果这个数据等于之前设定的密码，那么就第4行：结束循环。如果这个数据不等于之前设定的密码，那就回到第1行while True继续循环。</p><p>第5行：结束循环后，就打印--登入成功。这已经是循环外部的代码了，所以没有缩进噢。</p><p>break子句，咱们就讲到这里。接下来“继续”，continue语句。</p><h2><b>continue语句</b></h2><p>continue的意思是“继续”。这个子句也是在循环内部使用的。当某个条件被满足的时候，触发continue语句，将跳过之后的代码，直接回到循环的开始。</p><p>它的写法是这样的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-43cc667f1a9244bd18c436f09bbceccf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"431\" class=\"content_image\" width=\"300\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;300&#39; height=&#39;431&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"431\" class=\"content_image lazy\" width=\"300\" data-actualsrc=\"https://pic4.zhimg.com/v2-43cc667f1a9244bd18c436f09bbceccf_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-fdcb7075125465b048d86854d570f867_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"702\" data-rawheight=\"432\" class=\"origin_image zh-lightbox-thumb\" width=\"702\" data-original=\"https://pic4.zhimg.com/v2-fdcb7075125465b048d86854d570f867_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;702&#39; height=&#39;432&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"702\" data-rawheight=\"432\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"702\" data-original=\"https://pic4.zhimg.com/v2-fdcb7075125465b048d86854d570f867_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-fdcb7075125465b048d86854d570f867_b.jpg\"/></figure><p>请观察代码，然后运行代码看看是什么结果：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-0efee158f9c2fe410cbfe01c7d348b5d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1332\" data-rawheight=\"474\" class=\"origin_image zh-lightbox-thumb\" width=\"1332\" data-original=\"https://pic2.zhimg.com/v2-0efee158f9c2fe410cbfe01c7d348b5d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1332&#39; height=&#39;474&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1332\" data-rawheight=\"474\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1332\" data-original=\"https://pic2.zhimg.com/v2-0efee158f9c2fe410cbfe01c7d348b5d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-0efee158f9c2fe410cbfe01c7d348b5d_b.jpg\"/></figure><p>上面的代码，当<code>i==3</code>的时候会触发continue语句，于是回到了循环开头，跳过了一句print语句。</p><p>这样的数字游戏是不是有点无聊？不如再用一个小说例子来解解闷吧。《天龙八部》里面有这样一个情节：西夏公主招亲选婿，吸引了许许多多的青年才俊。</p><p>西夏公主挑驸马的方式是，是问这些青年3个问题。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-d3b652b83f1f993a57524f12b31b2512_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"676\" data-rawheight=\"269\" class=\"origin_image zh-lightbox-thumb\" width=\"676\" data-original=\"https://pic3.zhimg.com/v2-d3b652b83f1f993a57524f12b31b2512_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;676&#39; height=&#39;269&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"676\" data-rawheight=\"269\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"676\" data-original=\"https://pic3.zhimg.com/v2-d3b652b83f1f993a57524f12b31b2512_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-d3b652b83f1f993a57524f12b31b2512_b.jpg\"/></figure><p>这三个问题，只有连续答对，才能判定他就是西夏公主的意中人；否则，只要有任何一题错，都要换人从头开始回答问题。</p><p>事实上，西夏公主曾和她的意中人虚竹邂逅于一个黑暗的冰窖之中，但两人不知对方姓名，只互称呼“梦姑”和“梦郎”，两人也看不清彼此的脸。因此，西夏公主为了找到虚竹，才进行招亲，并对候选者问出这三个问题。</p><p>如果用Python来描述这个故事，我想应该是这样的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-3cb11f71c8faa0a3278b0e5371678491_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"614\" data-rawheight=\"434\" class=\"origin_image zh-lightbox-thumb\" width=\"614\" data-original=\"https://pic2.zhimg.com/v2-3cb11f71c8faa0a3278b0e5371678491_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;614&#39; height=&#39;434&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"614\" data-rawheight=\"434\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"614\" data-original=\"https://pic2.zhimg.com/v2-3cb11f71c8faa0a3278b0e5371678491_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-3cb11f71c8faa0a3278b0e5371678491_b.jpg\"/></figure><p>别怕哈，表面上看这个代码老长老长，其实不难，我们先看1-5行代码。</p><p>第1、2行我就不说了，从第3行开始，当第一问的答案不是“黑暗的冰窖”时，就说明答错了，必须从头开始，所以使用continue提前开始循环，回到第1行代码。</p><p>如果在第3行，有人回答对了，那么<code>if q1</code>的条件为假，就会继续执行第5行的代码。之后的代码都是同样的道理。</p><p>再看10-13行代码，到了最后一行，如果答对，就可以用break结束循环。答错的话，重新开始，这里就不需要continue了。</p><p>为了让你更好地理解，请你运行下面的代码：①你可以随便输入，感受一下循环的逻辑，比如第一个答案对，第二个答案错；或者第一、二个答案对，第三个答案错。②当你玩得差不多了，请依次输入‘黑暗的冰窖’，点击enter，再输入‘梦姑’，点击enter，再输入‘不知道’，点击enter，就能结束循环。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-9777d82f0a221017b22c59f6a23a83e7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1352\" data-rawheight=\"488\" class=\"origin_image zh-lightbox-thumb\" width=\"1352\" data-original=\"https://pic4.zhimg.com/v2-9777d82f0a221017b22c59f6a23a83e7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1352&#39; height=&#39;488&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1352\" data-rawheight=\"488\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1352\" data-original=\"https://pic4.zhimg.com/v2-9777d82f0a221017b22c59f6a23a83e7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-9777d82f0a221017b22c59f6a23a83e7_b.jpg\"/></figure><p>好，你可以看到continue的作用就是就是当某个条件为真时，又提前回到循环，而不会执行下面的代码。</p><p>关于continue语句，我就讲到这里。接下来是pass语句。</p><h2><b>pass语句</b></h2><p>pass语句就非常简单了，它的英文意思是“跳过”。</p><p>我们举个例子，请你运行代码体验一下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-045004bf7ec7ecc2900288af3e6012b8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"978\" data-rawheight=\"242\" class=\"origin_image zh-lightbox-thumb\" width=\"978\" data-original=\"https://pic1.zhimg.com/v2-045004bf7ec7ecc2900288af3e6012b8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;978&#39; height=&#39;242&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"978\" data-rawheight=\"242\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"978\" data-original=\"https://pic1.zhimg.com/v2-045004bf7ec7ecc2900288af3e6012b8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-045004bf7ec7ecc2900288af3e6012b8_b.jpg\"/></figure><p>这个代码的意思是：当<code>a&gt;=100</code>的时候，跳过，什么都不做。其他情况，也就是<code>a&lt;100</code>的时候，执行一个print语句。</p><p>如果没有pass来占据一个位置表示“什么都不做”，以上的代码执行起来会报错：（请你先体验一下报错，然后把pass语句加上。)</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-5384b13239dd88ed2f858ec9d4fdf8f9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1355\" data-rawheight=\"257\" class=\"origin_image zh-lightbox-thumb\" width=\"1355\" data-original=\"https://pic2.zhimg.com/v2-5384b13239dd88ed2f858ec9d4fdf8f9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1355&#39; height=&#39;257&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1355\" data-rawheight=\"257\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1355\" data-original=\"https://pic2.zhimg.com/v2-5384b13239dd88ed2f858ec9d4fdf8f9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-5384b13239dd88ed2f858ec9d4fdf8f9_b.jpg\"/></figure><p>好，pass语句就是这么简单，pass!</p><h2><b>else语句</b></h2><p>最后一种else语句，我们在条件判断语句见过【else】，其实，else不但可以和if配合使用，它还能跟for循环和while循环配合使用。</p><p>举一个例子；</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-3472231350d1cf8728bdf4204201b575_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"705\" data-rawheight=\"237\" class=\"origin_image zh-lightbox-thumb\" width=\"705\" data-original=\"https://pic2.zhimg.com/v2-3472231350d1cf8728bdf4204201b575_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;705&#39; height=&#39;237&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"705\" data-rawheight=\"237\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"705\" data-original=\"https://pic2.zhimg.com/v2-3472231350d1cf8728bdf4204201b575_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-3472231350d1cf8728bdf4204201b575_b.jpg\"/></figure><p>以上这段代码，请你做两种尝试：1.连续五次不输入零；2.输入一次0跳出循环。完成一种尝试后，你可以点击【重做】按钮，再来一次尝试。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b54a1e04b4cb62a11b47a26c447ce320_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1296\" data-rawheight=\"232\" class=\"origin_image zh-lightbox-thumb\" width=\"1296\" data-original=\"https://pic1.zhimg.com/v2-b54a1e04b4cb62a11b47a26c447ce320_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1296&#39; height=&#39;232&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1296\" data-rawheight=\"232\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1296\" data-original=\"https://pic1.zhimg.com/v2-b54a1e04b4cb62a11b47a26c447ce320_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b54a1e04b4cb62a11b47a26c447ce320_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-6d5ea0cf5e48405bf6e39eea9ee8cfef_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1338\" data-rawheight=\"239\" class=\"origin_image zh-lightbox-thumb\" width=\"1338\" data-original=\"https://pic4.zhimg.com/v2-6d5ea0cf5e48405bf6e39eea9ee8cfef_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1338&#39; height=&#39;239&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1338\" data-rawheight=\"239\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1338\" data-original=\"https://pic4.zhimg.com/v2-6d5ea0cf5e48405bf6e39eea9ee8cfef_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-6d5ea0cf5e48405bf6e39eea9ee8cfef_b.jpg\"/></figure><p>所以，用一句话总结，当循环中没有碰到break语句，就会执行循环后面的else语句，否则就不会执行。</p><p>在while循环中，else的用法也是如此，格式一模一样：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-9da0d808b46b05cc01a763957a845ea5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"215\" data-rawheight=\"152\" class=\"content_image\" width=\"215\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;215&#39; height=&#39;152&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"215\" data-rawheight=\"152\" class=\"content_image lazy\" width=\"215\" data-actualsrc=\"https://pic2.zhimg.com/v2-9da0d808b46b05cc01a763957a845ea5_b.jpg\"/></figure><p>我们来做一个练习：把之前那段for循环的代码改成while循环，要求运行起来效果一模一样。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-29fa91455e22375d63345a3ba9053704_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1325\" data-rawheight=\"297\" class=\"origin_image zh-lightbox-thumb\" width=\"1325\" data-original=\"https://pic1.zhimg.com/v2-29fa91455e22375d63345a3ba9053704_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1325&#39; height=&#39;297&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1325\" data-rawheight=\"297\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1325\" data-original=\"https://pic1.zhimg.com/v2-29fa91455e22375d63345a3ba9053704_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-29fa91455e22375d63345a3ba9053704_b.jpg\"/></figure><p>到这里我们4种语句都学完了，我们做个总结：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-0cc3cd5c5a6177f04af4a0e40fa189a5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1015\" data-rawheight=\"441\" class=\"origin_image zh-lightbox-thumb\" width=\"1015\" data-original=\"https://pic2.zhimg.com/v2-0cc3cd5c5a6177f04af4a0e40fa189a5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1015&#39; height=&#39;441&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1015\" data-rawheight=\"441\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1015\" data-original=\"https://pic2.zhimg.com/v2-0cc3cd5c5a6177f04af4a0e40fa189a5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-0cc3cd5c5a6177f04af4a0e40fa189a5_b.jpg\"/></figure><p>由于循环的知识很重要，所以最后和大家再共同完成一个例题。</p><p>大家应该玩过一个小游戏，就是一个人在心里想好一个数，比如24，然后让另一个人猜。如果他猜的数比24小，告诉他“太小了”，如果他猜的数比24大，告诉他“太大了”。</p><p>我们一起来完成这个“猜大小游戏”的编程，我的思路大概是这样的：</p><p>1.一个人在心里想好一个数————这个数字是提前准备好的，可以设置一个变量来保存这个数字。我就设置我的数字为24。</p><p>2.然后让另一个人猜————所以可以使用input()函数来接收另一个人输入的数字，并用int()转化为整数。</p><p>3.直到猜对为止————天知道几次才能猜对，所以肯定需要用到循环，并且由于不知道要循环几次，所以适合while循环。</p><p>4.如果他猜的数比24小就告诉他“太小了”，如果他猜的数比24大就告诉他“太大了”——这里一看“如果……就……”的描述，就知道应该用<code>if...else...</code>写一个条件判断。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-668ddd3d2e6ce7996cb742281a04511d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1244\" data-rawheight=\"318\" class=\"origin_image zh-lightbox-thumb\" width=\"1244\" data-original=\"https://pic2.zhimg.com/v2-668ddd3d2e6ce7996cb742281a04511d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1244&#39; height=&#39;318&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1244\" data-rawheight=\"318\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1244\" data-original=\"https://pic2.zhimg.com/v2-668ddd3d2e6ce7996cb742281a04511d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-668ddd3d2e6ce7996cb742281a04511d_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-1ed10ad93d9ff505f4728f00b6c44467_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"884\" data-rawheight=\"481\" class=\"origin_image zh-lightbox-thumb\" width=\"884\" data-original=\"https://pic4.zhimg.com/v2-1ed10ad93d9ff505f4728f00b6c44467_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;884&#39; height=&#39;481&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"884\" data-rawheight=\"481\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"884\" data-original=\"https://pic4.zhimg.com/v2-1ed10ad93d9ff505f4728f00b6c44467_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-1ed10ad93d9ff505f4728f00b6c44467_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a96c4c30e23e62645c1ca00345d54d0e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1240\" data-rawheight=\"316\" class=\"origin_image zh-lightbox-thumb\" width=\"1240\" data-original=\"https://pic3.zhimg.com/v2-a96c4c30e23e62645c1ca00345d54d0e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1240&#39; height=&#39;316&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1240\" data-rawheight=\"316\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1240\" data-original=\"https://pic3.zhimg.com/v2-a96c4c30e23e62645c1ca00345d54d0e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-a96c4c30e23e62645c1ca00345d54d0e_b.jpg\"/></figure><p>假如我们改变一下题目：一个人在心里想好一个数，比如24，然后让另一个人猜。如果他猜的数比24小，告诉他“太小了”，如果他猜的数比24大，告诉他“太大了”，这个游戏只能猜3次，3次都猜不中，就告诉他“失败了”。</p><p>请你再思考一下，这时候的解决方法应该是什么？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f691f51d1bae50130fa2bddf85588bdd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1366\" data-rawheight=\"371\" class=\"origin_image zh-lightbox-thumb\" width=\"1366\" data-original=\"https://pic2.zhimg.com/v2-f691f51d1bae50130fa2bddf85588bdd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1366&#39; height=&#39;371&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1366\" data-rawheight=\"371\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1366\" data-original=\"https://pic2.zhimg.com/v2-f691f51d1bae50130fa2bddf85588bdd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f691f51d1bae50130fa2bddf85588bdd_b.jpg\"/></figure><p>既然是三次机会，那么我们就利用range(3)生成0,1,2的序列，三次循环之后即会结束。</p><p>这里我们重点看两个地方：一是break，二是倒数第二句的else。</p><p>在for...in...循环中也可以使用break，正常情况下，三次机会用完之后就结束循环，但如果第一次就猜对了，也需要结束循环。前者我们能用range(3)解决，后者则依靠break语句。</p><p>for...in...可以和else语句搭配使用。意思是在for...in...循环结束之后，执行else语句里的命令。<b>不过如果for...in...是因为break结束的就不会执行else语句里的命令。</b></p><p>其实编程就是这样，不断拆解，不断动手，不断接受失败，于是不断成长。</p><p>好啦，关于“循环”的学习就告一段落了，最后送给同学们一句话：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-814bd3f0acd682ef0bf1d6d1e6123a8a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"517\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic3.zhimg.com/v2-814bd3f0acd682ef0bf1d6d1e6123a8a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;800&#39; height=&#39;517&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"517\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"800\" data-original=\"https://pic3.zhimg.com/v2-814bd3f0acd682ef0bf1d6d1e6123a8a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-814bd3f0acd682ef0bf1d6d1e6123a8a_b.jpg\"/></figure><p>哈哈，get到了吗？这是终生学习的意思，while True 开启了一个死循环，一直执行learn() 这个学习的函数，所以代表着终生学习。</p><p>当然真实的Python中没有<code>learn()</code>这个函数，但是我们的学习却永远不会止步。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>----------------------------------------------------------------------------------------------</p><p><b>更多课程请关注：</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a7ff0c20e45d20810af94c7bb5976dba_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"335\" data-rawheight=\"599\" class=\"content_image\" width=\"335\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;335&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"335\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"335\" data-actualsrc=\"https://pic3.zhimg.com/v2-a7ff0c20e45d20810af94c7bb5976dba_b.jpg\"/></figure>", 
            "topic": [
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }, 
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/67446644", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 4, 
            "title": "Python语言难学吗？第13讲——用数据做判断：布尔值", 
            "content": "<p>我们还是接着上一关的while循环讲起，还记得while循环怎么写吧？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-0821e321843e097a21251b47284678b6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"209\" data-rawheight=\"151\" class=\"content_image\" width=\"209\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;209&#39; height=&#39;151&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"209\" data-rawheight=\"151\" class=\"content_image lazy\" width=\"209\" data-actualsrc=\"https://pic3.zhimg.com/v2-0821e321843e097a21251b47284678b6_b.jpg\"/></figure><p>之前说到，while循环是需要有一个“条件”的，当条件被满足，才能开启循环。</p><p>在上面这个小例题中，这一点不难理解：我先定义了变量a，然后将0赋值给a；接下来，面对<code>a&lt;5</code>这个条件，计算机就会判断条件满足，用术语来说就是条件为【真】（True），然后开启循环。</p><p>直到<code>a+1</code>不断执行，到了<code>a=5</code>时，条件<code>a&lt;5</code>不再满足，即条件为【假】（False），这段循环就结束了。</p><p>真真假假，计算机是怎么做出这样的判断的呢？简单的数学题倒是一看便知，但当逻辑更复杂的时候，计算机怎么决定自己要不要进行下一步行动呢？比如下面这道小题：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-040cabe1bdeef2fb6f9437fb8febfa1f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"313\" data-rawheight=\"82\" class=\"content_image\" width=\"313\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;313&#39; height=&#39;82&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"313\" data-rawheight=\"82\" class=\"content_image lazy\" width=\"313\" data-actualsrc=\"https://pic4.zhimg.com/v2-040cabe1bdeef2fb6f9437fb8febfa1f_b.jpg\"/></figure><p>我猜你的表情大概是ヾ(｡ꏿ﹏ꏿ)ﾉﾞ这样的。没事，很快你就能秒懂了，先不理它。</p><p>要看懂这种奇怪的条件判断，就要熟悉一个编程基础知识：布尔值。</p><h2><b>用数据做判断：布尔值</b></h2><p>之前我们提到，计算机利用数据有三种方式：1.直接使用数据，2.计算和加工数据，3.用数据做判断。</p><p>除了while循环，我之前学过的<code>if...elif...else</code>语句，也涉及到【利用数据用做逻辑判断】。当逻辑判断通过才会继续执行：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-f8cde3240f9c93529a2a5f8bd5a27e7a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"551\" data-rawheight=\"268\" class=\"origin_image zh-lightbox-thumb\" width=\"551\" data-original=\"https://pic3.zhimg.com/v2-f8cde3240f9c93529a2a5f8bd5a27e7a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;551&#39; height=&#39;268&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"551\" data-rawheight=\"268\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"551\" data-original=\"https://pic3.zhimg.com/v2-f8cde3240f9c93529a2a5f8bd5a27e7a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-f8cde3240f9c93529a2a5f8bd5a27e7a_b.jpg\"/></figure><p>当然，if和while有个显著的区别。那就是if语句只会执行一次，而while是循环语句，只要条件判断为真，就一直循环执行。</p><p>这个“判断”的过程，在计算机的世界里是如何发生的呢？</p><p>计算机的逻辑判断，只有两种结果，就是<code>True</code>（英文意思是“真”）和<code>False</code>（英文意思是“假”），没有灰色地带。这个计算真假的过程，叫做【布尔运算】。</p><p>而<code>True</code>和<code>False</code>，也就叫做【布尔值】。</p><p>举个例子，请你运行以下代码，看看结果是True还是False：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-cc2e7233b0aa31a114bafae2c3d81236_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"999\" data-rawheight=\"168\" class=\"origin_image zh-lightbox-thumb\" width=\"999\" data-original=\"https://pic3.zhimg.com/v2-cc2e7233b0aa31a114bafae2c3d81236_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;999&#39; height=&#39;168&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"999\" data-rawheight=\"168\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"999\" data-original=\"https://pic3.zhimg.com/v2-cc2e7233b0aa31a114bafae2c3d81236_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-cc2e7233b0aa31a114bafae2c3d81236_b.jpg\"/></figure><p><code>print()</code>括号内的计算其实就是【布尔运算】。终端上出现的True和False我们称为【布尔值】。</p><p>第1行和第2行代码很简单啦。我们看后面两行：两个字符串&#39;长安&#39;相等，结果正确，所以打印为True。而字符串&#39;长安&#39;和字符串&#39;金陵&#39;做比较，结果不相等，<code>!=</code>代表不等号，结果正确，打印为True。</p><p>只有当条件判断为True时，if和while后面的子句才会执行下去。</p><p>好，现在我们来体验一下上面出现过的这段奇怪的代码，你会发现它执行后，终端上不显示任何结果：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-6fa0ace9e0fe82d69af007f48920f797_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"990\" data-rawheight=\"163\" class=\"origin_image zh-lightbox-thumb\" width=\"990\" data-original=\"https://pic4.zhimg.com/v2-6fa0ace9e0fe82d69af007f48920f797_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;990&#39; height=&#39;163&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"990\" data-rawheight=\"163\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"990\" data-original=\"https://pic4.zhimg.com/v2-6fa0ace9e0fe82d69af007f48920f797_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-6fa0ace9e0fe82d69af007f48920f797_b.png\"/></figure><p>这是因为while循环执行，必须要while后的条件为“真”，而【布尔值】False本身就是“假”，所以这个循环一次都没运行就结束了。</p><p>同理，<code>3&gt;5</code>这个条件恒为“假”，如果把<code>while False</code>换成<code>while 3&gt;5</code>，效果会是一样的——什么都不会出现。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-5da7e5500b92ffd029cd5598ec73cba1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"991\" data-rawheight=\"172\" class=\"origin_image zh-lightbox-thumb\" width=\"991\" data-original=\"https://pic2.zhimg.com/v2-5da7e5500b92ffd029cd5598ec73cba1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;991&#39; height=&#39;172&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"991\" data-rawheight=\"172\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"991\" data-original=\"https://pic2.zhimg.com/v2-5da7e5500b92ffd029cd5598ec73cba1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-5da7e5500b92ffd029cd5598ec73cba1_b.jpg\"/></figure><p>时候可能就有人会问了：“那如果我用<code>while True</code>或者<code>while 3&lt;5</code>来做条件，会怎么样？”</p><p>我们就来体验一下。先剧透：请注意，这段代码将会无限运行，陷入【死循环】，你需要在键盘上按几次【ctrl+c】来强制结束运行。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f6cf23443e3e1c3f0bcae49b5701e721_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"974\" data-rawheight=\"233\" class=\"origin_image zh-lightbox-thumb\" width=\"974\" data-original=\"https://pic2.zhimg.com/v2-f6cf23443e3e1c3f0bcae49b5701e721_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;974&#39; height=&#39;233&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"974\" data-rawheight=\"233\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"974\" data-original=\"https://pic2.zhimg.com/v2-f6cf23443e3e1c3f0bcae49b5701e721_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f6cf23443e3e1c3f0bcae49b5701e721_b.jpg\"/></figure><p>这是因为【布尔值】True直接把条件判断的结果设置为真，也就是条件永远正确。所以代码会无限循环，必须手动强制退出。</p><p>【布尔值】对条件判断语句有一样的效果：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-d8e8cfc6d84d754e8b72da2fdb516eb1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"979\" data-rawheight=\"197\" class=\"origin_image zh-lightbox-thumb\" width=\"979\" data-original=\"https://pic2.zhimg.com/v2-d8e8cfc6d84d754e8b72da2fdb516eb1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;979&#39; height=&#39;197&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"979\" data-rawheight=\"197\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"979\" data-original=\"https://pic2.zhimg.com/v2-d8e8cfc6d84d754e8b72da2fdb516eb1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-d8e8cfc6d84d754e8b72da2fdb516eb1_b.jpg\"/></figure><p>我们会发现，只有<code>if True</code>成功运行，将结果显示在了屏幕上。当然，if语句不会陷入死循环。</p><p>做一个总结：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-66d956cba183bffda29335de7ce605cd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"822\" data-rawheight=\"346\" class=\"origin_image zh-lightbox-thumb\" width=\"822\" data-original=\"https://pic2.zhimg.com/v2-66d956cba183bffda29335de7ce605cd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;822&#39; height=&#39;346&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"822\" data-rawheight=\"346\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"822\" data-original=\"https://pic2.zhimg.com/v2-66d956cba183bffda29335de7ce605cd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-66d956cba183bffda29335de7ce605cd_b.jpg\"/></figure><p>现在我们知道了什么是布尔运算以及布尔值的作用，我们接着学习【布尔运算】的三种方式。其中的第一种，就是作比较。</p><h2><b>1.两个数值做比较</b></h2><p>其实刚才我们<code>print(3&gt;5)</code>，计算机会先做一次布尔运算，判断3是否大于5，然后再把判断的结果以【布尔值】的方式打印出来。</p><p>用两个数值做比较的【布尔运算】，主要包含以下情况：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-c7e212b8386dc21c9d4b6a3469c44612_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"848\" data-rawheight=\"429\" class=\"origin_image zh-lightbox-thumb\" width=\"848\" data-original=\"https://pic3.zhimg.com/v2-c7e212b8386dc21c9d4b6a3469c44612_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;848&#39; height=&#39;429&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"848\" data-rawheight=\"429\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"848\" data-original=\"https://pic3.zhimg.com/v2-c7e212b8386dc21c9d4b6a3469c44612_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-c7e212b8386dc21c9d4b6a3469c44612_b.jpg\"/></figure><p>主要记住前两种<code>==</code>和<code>!=</code>，这两种在条件判断中用得非常多。还有大于<code>&gt;</code>和小于<code>&lt;</code>了，这都属于数学常识了。</p><p>另外，特别提醒大家一点：在代码中，<code>A == B</code>表示A和B相等，<code>==</code>表示相等关系；而<code>=</code>表示给变量赋值。<code>=</code>和<code>==</code>虽然长得相似，但没有任何关系。</p><p>对于<code>=</code>和<code>==</code>，初学者很容易混淆写错，导致报错。请你来修改一下下面的代码，让它能正确运行：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-fdb7f978993e1988021c66fbdfb84e2b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"975\" data-rawheight=\"234\" class=\"origin_image zh-lightbox-thumb\" width=\"975\" data-original=\"https://pic4.zhimg.com/v2-fdb7f978993e1988021c66fbdfb84e2b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;975&#39; height=&#39;234&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"975\" data-rawheight=\"234\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"975\" data-original=\"https://pic4.zhimg.com/v2-fdb7f978993e1988021c66fbdfb84e2b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-fdb7f978993e1988021c66fbdfb84e2b_b.jpg\"/></figure><p>我们接着看布尔运算的第二种方式：直接用数值做运算。</p><h2><b>2.直接用数值做运算</b></h2><p>请看这段代码：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-4fa7a017e2fcea42b013b15d452c4638_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"238\" data-rawheight=\"85\" class=\"content_image\" width=\"238\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;238&#39; height=&#39;85&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"238\" data-rawheight=\"85\" class=\"content_image lazy\" width=\"238\" data-actualsrc=\"https://pic1.zhimg.com/v2-4fa7a017e2fcea42b013b15d452c4638_b.jpg\"/></figure><p>是不是觉得怪怪的，没关系，我们来运行一下，看终端会给我们一个啥样的结果。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-214195f33adec49c432f4725aac4aa07_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"979\" data-rawheight=\"183\" class=\"origin_image zh-lightbox-thumb\" width=\"979\" data-original=\"https://pic4.zhimg.com/v2-214195f33adec49c432f4725aac4aa07_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;979&#39; height=&#39;183&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"979\" data-rawheight=\"183\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"979\" data-original=\"https://pic4.zhimg.com/v2-214195f33adec49c432f4725aac4aa07_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-214195f33adec49c432f4725aac4aa07_b.jpg\"/></figure><p>终端打印出了一个字符串<code>熊猫</code>。我们看看这两行代码，这是一段使用了条件判断的代码。因为终端打印出了&#39;熊猫&#39;，说明 if 后面的条件为真。</p><p>可是怪就怪在，if后面接的不像是一个“条件”，而是一个数字。</p><p>其实，<code>整数1</code>在这里就是作为一个条件，被判断为真（True）。这就是数值本身作为一个条件，被判断真假的情况。</p><p>那为什么可以这样操作呢？</p><p>因为在Python中已经设定好什么数据为真，什么为假。假的是有限的，那么除了假的，就都是真的。请看下图：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-e97e9708bc589bfb010a7f316c9e501b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"722\" data-rawheight=\"440\" class=\"origin_image zh-lightbox-thumb\" width=\"722\" data-original=\"https://pic4.zhimg.com/v2-e97e9708bc589bfb010a7f316c9e501b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;722&#39; height=&#39;440&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"722\" data-rawheight=\"440\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"722\" data-original=\"https://pic4.zhimg.com/v2-e97e9708bc589bfb010a7f316c9e501b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-e97e9708bc589bfb010a7f316c9e501b_b.jpg\"/></figure><p>这个表的左侧一列，它们在Python中被判定为假，比如<code>False</code>、<code>0</code>、<code>&#39;&#39;</code>(空字符串)等等。假的东西是有限的，那么除了假的，其他就都是真的。比如上一个例子中出现的<code>整数1</code>，就是真的。</p><p>至于None，它代表的是【空值】，自成一派，数据类型是NoneType。要注意它和<code>0</code>的区别，<code>0</code>是<code>整数0</code>，可并非什么都没有。</p><p>好，现在请看这段代码，然后回答问题：请问执行这段程序时，终端会显示什么？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a624acd5506ffb4f8b1ae4b8311627c2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"234\" data-rawheight=\"149\" class=\"content_image\" width=\"234\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;234&#39; height=&#39;149&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"234\" data-rawheight=\"149\" class=\"content_image lazy\" width=\"234\" data-actualsrc=\"https://pic3.zhimg.com/v2-a624acd5506ffb4f8b1ae4b8311627c2_b.jpg\"/></figure><p>&#39;开心&#39;这个字符串作为一个条件时，被判定为真，所以if后面的条件满足，计算机会执行if的下一行代码；而 &#39;&#39;（空字符串）本身作为一个条件时，被判定为假，if后面的条件为假，计算机不会执行if的下一行代码。</p><p>我们可以使用<code>bool()</code>函数来查看一个数据会被判断为真还是假。这个函数的用法与<code>type()</code>函数相似（还有印象吧~），在<code>bool()</code>函数括号中放入我们想要判断真假的数据，然后print出来即可。</p><p>我们来做个试验,用<code>bool()</code>函数把前面我们提到的各种数据都放进去判断一下，打印出来看看。请阅读代码后再直接运行：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-c460adee1fc1b22df3ba5d58422c5a41_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1329\" data-rawheight=\"341\" class=\"origin_image zh-lightbox-thumb\" width=\"1329\" data-original=\"https://pic2.zhimg.com/v2-c460adee1fc1b22df3ba5d58422c5a41_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1329&#39; height=&#39;341&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1329\" data-rawheight=\"341\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1329\" data-original=\"https://pic2.zhimg.com/v2-c460adee1fc1b22df3ba5d58422c5a41_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-c460adee1fc1b22df3ba5d58422c5a41_b.jpg\"/></figure><p>好啦，现在你明白了“直接用数值做布尔运算”是怎么一回事，再来看看第三种情况。</p><h2><b>3.布尔值之间的运算</b></h2><p>会接触到<code>and</code>、<code>or</code>、<code>not</code>、<code>in</code>、<code>not in</code>五种运算。</p><p>还是用例子来说明吧。我们先看看【and】和【or】。请先阅读代码，然后直接运行：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-73ab582ff89ed9100084b8f673750cab_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1329\" data-rawheight=\"389\" class=\"origin_image zh-lightbox-thumb\" width=\"1329\" data-original=\"https://pic4.zhimg.com/v2-73ab582ff89ed9100084b8f673750cab_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1329&#39; height=&#39;389&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1329\" data-rawheight=\"389\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1329\" data-original=\"https://pic4.zhimg.com/v2-73ab582ff89ed9100084b8f673750cab_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-73ab582ff89ed9100084b8f673750cab_b.jpg\"/></figure><p><code>a==1 and b==1</code>的意思是【a=1并且b=1】，要两个条件都满足，才能判断为True，而<code>a==1 or b==1</code>的意思是【a=1或者b=1】，只要两个条件满足一个，就能判断为True。</p><p>这里把and和or的计算逻辑和大家做一个总结：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-bc08ea5d1afcc64df565d840ecc13849_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"562\" data-rawheight=\"413\" class=\"origin_image zh-lightbox-thumb\" width=\"562\" data-original=\"https://pic2.zhimg.com/v2-bc08ea5d1afcc64df565d840ecc13849_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;562&#39; height=&#39;413&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"562\" data-rawheight=\"413\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"562\" data-original=\"https://pic2.zhimg.com/v2-bc08ea5d1afcc64df565d840ecc13849_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-bc08ea5d1afcc64df565d840ecc13849_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-ff9b20d7207d36f3eb7ec0e2fcb4c913_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"528\" data-rawheight=\"409\" class=\"origin_image zh-lightbox-thumb\" width=\"528\" data-original=\"https://pic4.zhimg.com/v2-ff9b20d7207d36f3eb7ec0e2fcb4c913_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;528&#39; height=&#39;409&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"528\" data-rawheight=\"409\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"528\" data-original=\"https://pic4.zhimg.com/v2-ff9b20d7207d36f3eb7ec0e2fcb4c913_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-ff9b20d7207d36f3eb7ec0e2fcb4c913_b.jpg\"/></figure><p>接下来我们看看【not】运算。这个运算很简单，表示翻转的意思。<code>not True</code>就等于<code>False</code>，<code>not False</code>就等于<code>True</code>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-c02dd0772fd7899952d51ce7fc520634_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"526\" data-rawheight=\"304\" class=\"origin_image zh-lightbox-thumb\" width=\"526\" data-original=\"https://pic1.zhimg.com/v2-c02dd0772fd7899952d51ce7fc520634_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;526&#39; height=&#39;304&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"526\" data-rawheight=\"304\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"526\" data-original=\"https://pic1.zhimg.com/v2-c02dd0772fd7899952d51ce7fc520634_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-c02dd0772fd7899952d51ce7fc520634_b.jpg\"/></figure><p>最后，我们讲一下【in】和【not in】两种运算。</p><p>【in】的意思是“判断一个元素是否在一堆数据之中”，【not in】反之。这个超简单的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-0f0677fdb69c39439980b23966804565_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"253\" data-rawheight=\"176\" class=\"content_image\" width=\"253\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;253&#39; height=&#39;176&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"253\" data-rawheight=\"176\" class=\"content_image lazy\" width=\"253\" data-actualsrc=\"https://pic2.zhimg.com/v2-0f0677fdb69c39439980b23966804565_b.jpg\"/></figure><p>你用肉眼就能判断a,b,c三个变量在不在（in或是not in）列表list里面了对吧？来简单运行一个试试呗。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-fe534756af248bacf1dca17106ce7a14_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"971\" data-rawheight=\"234\" class=\"origin_image zh-lightbox-thumb\" width=\"971\" data-original=\"https://pic1.zhimg.com/v2-fe534756af248bacf1dca17106ce7a14_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;971&#39; height=&#39;234&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"971\" data-rawheight=\"234\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"971\" data-original=\"https://pic1.zhimg.com/v2-fe534756af248bacf1dca17106ce7a14_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-fe534756af248bacf1dca17106ce7a14_b.jpg\"/></figure><p>如果涉及到的数据集合是字典的话，【in】和【not in】就可以用来判断字典中是否存在某个【键】：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-3ee6ddf20f5e366a266fb4338a70e9f4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"515\" data-rawheight=\"182\" class=\"origin_image zh-lightbox-thumb\" width=\"515\" data-original=\"https://pic1.zhimg.com/v2-3ee6ddf20f5e366a266fb4338a70e9f4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;515&#39; height=&#39;182&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"515\" data-rawheight=\"182\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"515\" data-original=\"https://pic1.zhimg.com/v2-3ee6ddf20f5e366a266fb4338a70e9f4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-3ee6ddf20f5e366a266fb4338a70e9f4_b.jpg\"/></figure><p>到这里，我们学完了5种布尔值的运算方式，不难，就是有点多~</p><p>老样子，做个总结吧～</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-c96cab7279ff75f3c528e00962609401_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"593\" data-rawheight=\"439\" class=\"origin_image zh-lightbox-thumb\" width=\"593\" data-original=\"https://pic2.zhimg.com/v2-c96cab7279ff75f3c528e00962609401_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;593&#39; height=&#39;439&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"593\" data-rawheight=\"439\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"593\" data-original=\"https://pic2.zhimg.com/v2-c96cab7279ff75f3c528e00962609401_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-c96cab7279ff75f3c528e00962609401_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-78d3ac358fbd7d6dc614cba24fd139e2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"751\" data-rawheight=\"450\" class=\"origin_image zh-lightbox-thumb\" width=\"751\" data-original=\"https://pic3.zhimg.com/v2-78d3ac358fbd7d6dc614cba24fd139e2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;751&#39; height=&#39;450&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"751\" data-rawheight=\"450\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"751\" data-original=\"https://pic3.zhimg.com/v2-78d3ac358fbd7d6dc614cba24fd139e2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-78d3ac358fbd7d6dc614cba24fd139e2_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-74378b95dedc3466e0ca37726e986e10_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"489\" data-rawheight=\"671\" class=\"origin_image zh-lightbox-thumb\" width=\"489\" data-original=\"https://pic1.zhimg.com/v2-74378b95dedc3466e0ca37726e986e10_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;489&#39; height=&#39;671&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"489\" data-rawheight=\"671\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"489\" data-original=\"https://pic1.zhimg.com/v2-74378b95dedc3466e0ca37726e986e10_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-74378b95dedc3466e0ca37726e986e10_b.jpg\"/></figure><p>掌握了布尔值，以后我们可以写出更加简洁的while循环。</p><p>比如说，上节课用while循环重复执行100遍任务，代码会这样写：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-9d150f09d6a003865ba4ac5203f53230_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"343\" data-rawheight=\"144\" class=\"content_image\" width=\"343\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;343&#39; height=&#39;144&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"343\" data-rawheight=\"144\" class=\"content_image lazy\" width=\"343\" data-actualsrc=\"https://pic1.zhimg.com/v2-9d150f09d6a003865ba4ac5203f53230_b.jpg\"/></figure><p>今天理解布尔运算原理后，可以把这段代码改造成更“程序员”的方式：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-4fb5960154dc4889b18296e0f745e5ac_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"150\" class=\"content_image\" width=\"336\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;336&#39; height=&#39;150&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"150\" class=\"content_image lazy\" width=\"336\" data-actualsrc=\"https://pic1.zhimg.com/v2-4fb5960154dc4889b18296e0f745e5ac_b.jpg\"/></figure><p>第二种方式对计算机来说是更简单的，因为计算次数减少了（减少了计算i&lt;100,i&lt;99……这个过程），这也是程序员在写代码时的思考方式。</p><p>我们以后还会经常看到布尔运算和布尔值在代码中的运用，今天对布尔值的讲解就到这里。</p><p>----------------------------------------------------------------------------------------------</p><p>更多Pthon课程请扫码关注</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-fc6247ba295362ccaf05b53d6d8be1e0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image\" width=\"336\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;336&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"336\" data-actualsrc=\"https://pic1.zhimg.com/v2-fc6247ba295362ccaf05b53d6d8be1e0_b.jpg\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }, 
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/66299172", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 3, 
            "title": "Python语言难学吗？第12讲——while循环", 
            "content": "<p>上节课学完了for循环，我们来看看另一种循环方式。</p><h2><b>while循环</b></h2><p>先来看看while循环长啥样：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-8d53dc945d2e5434709c69717f848557_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"705\" data-rawheight=\"359\" class=\"origin_image zh-lightbox-thumb\" width=\"705\" data-original=\"https://pic4.zhimg.com/v2-8d53dc945d2e5434709c69717f848557_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;705&#39; height=&#39;359&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"705\" data-rawheight=\"359\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"705\" data-original=\"https://pic4.zhimg.com/v2-8d53dc945d2e5434709c69717f848557_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-8d53dc945d2e5434709c69717f848557_b.jpg\"/></figure><p>你猜一猜，图中代码的运行结果会是怎么样的呢？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-f9d7e04ac2a513bc8839e85bffc2c08b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1012\" data-rawheight=\"200\" class=\"origin_image zh-lightbox-thumb\" width=\"1012\" data-original=\"https://pic4.zhimg.com/v2-f9d7e04ac2a513bc8839e85bffc2c08b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1012&#39; height=&#39;200&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1012\" data-rawheight=\"200\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1012\" data-original=\"https://pic4.zhimg.com/v2-f9d7e04ac2a513bc8839e85bffc2c08b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-f9d7e04ac2a513bc8839e85bffc2c08b_b.jpg\"/></figure><p>还是1,2,3,4,5依次出现，对吧？我们也用大白话去解释一下这段代码。</p><p>和for循环语句不同，while语句没有“空房间”，也不是“把一群排队办业务的人做完”。它是“在一定的条件下”，“按照流程办事”。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-4346179b724871a06c9fccaa29124ac8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"697\" data-rawheight=\"328\" class=\"origin_image zh-lightbox-thumb\" width=\"697\" data-original=\"https://pic1.zhimg.com/v2-4346179b724871a06c9fccaa29124ac8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;697&#39; height=&#39;328&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"697\" data-rawheight=\"328\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"697\" data-original=\"https://pic1.zhimg.com/v2-4346179b724871a06c9fccaa29124ac8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-4346179b724871a06c9fccaa29124ac8_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-0f9075e545b330c46c9dec33608fdadf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"581\" data-rawheight=\"142\" class=\"origin_image zh-lightbox-thumb\" width=\"581\" data-original=\"https://pic4.zhimg.com/v2-0f9075e545b330c46c9dec33608fdadf_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;581&#39; height=&#39;142&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"581\" data-rawheight=\"142\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"581\" data-original=\"https://pic4.zhimg.com/v2-0f9075e545b330c46c9dec33608fdadf_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-0f9075e545b330c46c9dec33608fdadf_b.jpg\"/></figure><p>很明显，while循环有2个要点：1.放行条件；2.办事流程。咱们先看第一个。</p><h2><b>while循环：放行条件</b></h2><p>while在英文中表示“当”，while后面跟的是一个条件。当条件被满足时，就会循环执行while内部的代码（while子句）。</p><p>所以while循环本质上像是一个哨卡：只要事情符合条件，那就一遍又一遍的“按流程办事”。</p><p>就像在上面的例题中，只要<code>a&lt;5</code>这个条件成立，就不停地办事（把<code>a+1</code>的结果打印出来），直到条件不成立，办事流程就停止。</p><p>同样，while语句也要注意代码规范：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-355c5faca96feedf027c40eed11e2397_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"418\" class=\"origin_image zh-lightbox-thumb\" width=\"692\" data-original=\"https://pic4.zhimg.com/v2-355c5faca96feedf027c40eed11e2397_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;692&#39; height=&#39;418&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"418\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"692\" data-original=\"https://pic4.zhimg.com/v2-355c5faca96feedf027c40eed11e2397_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-355c5faca96feedf027c40eed11e2397_b.jpg\"/></figure><p><br/> 和for循环一样，冒号和内部代码的缩进都是必不可少的。╭(╯^╰)╮写不规范的话计算机又给你报错，然后你又卡在莫名其妙的地方很久噢.....</p><p>下面，我们用一个好玩儿的案例来说明while的具体用法，不晓得同学们有没有看过金庸的武侠小说《神雕侠侣》？</p><p>小说里的主角小龙女（古墓派掌门人）自小在终南山上的古墓里生活。这个门派有个规定，除非有男人愿意为掌门人死，否则掌门人永远不能出墓门半步。</p><p>在Python中，这个故事的逻辑就被翻译成：当（while）没有男人愿意为小龙女去死的时候，小龙女要一直一直一直生活在古墓里，这就是一种循环。只有当条件（没有男人愿意为小龙女去死）为假的时候，就可以打破循环，小龙女就能出古墓下山了。</p><p>这段代码我先写出来，你看看~</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-4dad4325990c69c4b11d88d449b45e7a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"657\" data-rawheight=\"143\" class=\"origin_image zh-lightbox-thumb\" width=\"657\" data-original=\"https://pic3.zhimg.com/v2-4dad4325990c69c4b11d88d449b45e7a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;657&#39; height=&#39;143&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"657\" data-rawheight=\"143\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"657\" data-original=\"https://pic3.zhimg.com/v2-4dad4325990c69c4b11d88d449b45e7a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-4dad4325990c69c4b11d88d449b45e7a_b.jpg\"/></figure><p>第1行代码：定义了变量man为空的字符串。使用变量前要先定义变量并为变量赋值，下面我们还会继续用到变量man。</p><p>第2行代码：while后面有一个条件，当这个条件被满足时，即<code>man != &#39;有&#39;</code>时，放行、办事。开始执行循环内部代码，即第3行的代码，开始询问。</p><p>第3行代码：询问现在有男人愿意为小龙女死吗？输入完信息后，回到第2行代码，重新判断条件真假。直到条件被判断为假，即<code>man == &#39;有&#39;</code>，while循环才结束。</p><p>第4行代码：while 循环结束后的代码，也是循环外部的代码。因为当有男人愿意为小龙女死的时候，while 后面的条件就为假，此时，程序会结束循环，去运行第五行代码。</p><p>我们来运行一下好了，同样需要你输入内容。你可以先随便输入几个数据，只要你输入的不是<code>有</code>，代码就会一直循环；直到你输入<code>有</code>，循环会结束。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-aed4ebc08341760df95b38e7fe7a0a91_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"959\" data-rawheight=\"245\" class=\"origin_image zh-lightbox-thumb\" width=\"959\" data-original=\"https://pic2.zhimg.com/v2-aed4ebc08341760df95b38e7fe7a0a91_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;959&#39; height=&#39;245&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"959\" data-rawheight=\"245\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"959\" data-original=\"https://pic2.zhimg.com/v2-aed4ebc08341760df95b38e7fe7a0a91_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-aed4ebc08341760df95b38e7fe7a0a91_b.jpg\"/></figure><p>幸运的是，小说的男主角杨过在因缘际会下，来到了活死人墓，和小龙女互生情愫。杨过对小龙女用情很深，愿意为她而死，所以满足了师门的规定，小龙女就可以出古墓下山了。</p><p>好了，你感受过了while循环的逻辑之后，现在我想请你自己动手练一练。放心，没那么难，有疑问的话看看小龙女的例题。</p><p>这个画风突变的故事是这样的：你家的大门是密码门，密码是你的生日816。当输错密码错误的时候，会提示“请尝试输入密码：”。直到密码输入正确，就会提示“欢迎回家！”。</p><p>终端的运行效果应该差不多长这样：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-b86530a70752dd46b6e1c85ec3e54059_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"205\" data-rawheight=\"339\" class=\"content_image\" width=\"205\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;205&#39; height=&#39;339&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"205\" data-rawheight=\"339\" class=\"content_image lazy\" width=\"205\" data-actualsrc=\"https://pic2.zhimg.com/v2-b86530a70752dd46b6e1c85ec3e54059_b.jpg\"/></figure><p><br/> 请你补全这段代码吧：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f743e3bf2d887df9e9b38282beb3b13d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"987\" data-rawheight=\"178\" class=\"origin_image zh-lightbox-thumb\" width=\"987\" data-original=\"https://pic2.zhimg.com/v2-f743e3bf2d887df9e9b38282beb3b13d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;987&#39; height=&#39;178&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"987\" data-rawheight=\"178\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"987\" data-original=\"https://pic2.zhimg.com/v2-f743e3bf2d887df9e9b38282beb3b13d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f743e3bf2d887df9e9b38282beb3b13d_b.jpg\"/></figure><p>我们再看看while循环的第二个要点：办事流程。</p><h2><b>while循环：办事流程</b></h2><p>while循环，在满足条件的时候，会一轮又一轮地循环执行代码。</p><p>我们来做道选择题，请看代码回答问题：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-2eb1ab51c8b692eb38b0e80365c90db9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"206\" data-rawheight=\"173\" class=\"content_image\" width=\"206\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;206&#39; height=&#39;173&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"206\" data-rawheight=\"173\" class=\"content_image lazy\" width=\"206\" data-actualsrc=\"https://pic2.zhimg.com/v2-2eb1ab51c8b692eb38b0e80365c90db9_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-d4072c829e9df33abb1dab345c03b204_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"683\" data-rawheight=\"310\" class=\"origin_image zh-lightbox-thumb\" width=\"683\" data-original=\"https://pic1.zhimg.com/v2-d4072c829e9df33abb1dab345c03b204_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;683&#39; height=&#39;310&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"683\" data-rawheight=\"310\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"683\" data-original=\"https://pic1.zhimg.com/v2-d4072c829e9df33abb1dab345c03b204_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-d4072c829e9df33abb1dab345c03b204_b.jpg\"/></figure><p>不是噢。这次print(a)不是子句，没有缩进，而是在外面哦。</p><p>这道题跟一开始的例题非常相似，唯一的区别在于<code>print(a)</code>有没有缩进。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-141e3ad2c1302ef8dac1cdb711b56dc6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"210\" data-rawheight=\"436\" class=\"content_image\" width=\"210\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;210&#39; height=&#39;436&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"210\" data-rawheight=\"436\" class=\"content_image lazy\" width=\"210\" data-actualsrc=\"https://pic3.zhimg.com/v2-141e3ad2c1302ef8dac1cdb711b56dc6_b.jpg\"/></figure><p>有缩进的时候，<code>print(a)</code>也是循环中的“办事流程”，会将数字逐一打印。没有缩进的时候，循环中的“办事流程”就只有做加法，<code>print(a)</code>也就只会打印循环结束时的最后一个数字。</p><p>稍微有点费事是不？我们来做一下分解，看看每一行代码的含义：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-66f4981e29b4e2cac26ab7609781fbe8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"924\" data-rawheight=\"256\" class=\"origin_image zh-lightbox-thumb\" width=\"924\" data-original=\"https://pic1.zhimg.com/v2-66f4981e29b4e2cac26ab7609781fbe8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;924&#39; height=&#39;256&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"924\" data-rawheight=\"256\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"924\" data-original=\"https://pic1.zhimg.com/v2-66f4981e29b4e2cac26ab7609781fbe8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-66f4981e29b4e2cac26ab7609781fbe8_b.jpg\"/></figure><p>可以看到，最后一轮循环的时候a=4，然后最后a的值被加1后等于5：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-ec61c84c70bae9f74584f07ab04154ca_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"645\" data-rawheight=\"588\" class=\"origin_image zh-lightbox-thumb\" width=\"645\" data-original=\"https://pic3.zhimg.com/v2-ec61c84c70bae9f74584f07ab04154ca_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;645&#39; height=&#39;588&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"645\" data-rawheight=\"588\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"645\" data-original=\"https://pic3.zhimg.com/v2-ec61c84c70bae9f74584f07ab04154ca_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-ec61c84c70bae9f74584f07ab04154ca_b.jpg\"/></figure><p>所以，缩进后的【while子句】才是会被循环执行的“办事流程”，这一点，你应该差不多明白了吧~</p><p>那，我们再来做一个小练习。</p><p>之前，我们用for循环解过“1到100分别乘以5”的题目：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-adda4bb3f98a089c901efe793e7a297c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"303\" data-rawheight=\"85\" class=\"content_image\" width=\"303\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;303&#39; height=&#39;85&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"303\" data-rawheight=\"85\" class=\"content_image lazy\" width=\"303\" data-actualsrc=\"https://pic1.zhimg.com/v2-adda4bb3f98a089c901efe793e7a297c_b.jpg\"/></figure><p>如果现在用while循环，应该怎么写呢？你来试试看。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-e380e46d715b47ae1ee454c93c1c28a6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"985\" data-rawheight=\"229\" class=\"origin_image zh-lightbox-thumb\" width=\"985\" data-original=\"https://pic3.zhimg.com/v2-e380e46d715b47ae1ee454c93c1c28a6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;985&#39; height=&#39;229&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"985\" data-rawheight=\"229\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"985\" data-original=\"https://pic3.zhimg.com/v2-e380e46d715b47ae1ee454c93c1c28a6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-e380e46d715b47ae1ee454c93c1c28a6_b.jpg\"/></figure><p>到这里，for循环和whlie循环的知识就都学完了~</p><p>for循环和while循环都可以帮我们完成重复性的劳动，那到底两个循环有什么区别，什么时候用for什么时候用while呢？让我们来对比一下。</p><h2><b>两种循环对比</b></h2><p>for循环和whlie循环最大的区别在于【循环的工作量是否确定】，for循环就像空房间依次办理业务，直到把【所有工作做完】才下班。但while循环就像哨卡放行，【满足条件就一直工作】，直到不满足条件就关闭哨卡。</p><p>所以说，当我们【工作量确定】的时候，我们就可以让for循环来完成重复性工作。反之，要【工作量不确定时】可以让while循环来工作：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-e49c5eeb512ab3caf151c52601b49e5e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"452\" data-rawheight=\"268\" class=\"origin_image zh-lightbox-thumb\" width=\"452\" data-original=\"https://pic3.zhimg.com/v2-e49c5eeb512ab3caf151c52601b49e5e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;452&#39; height=&#39;268&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"452\" data-rawheight=\"268\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"452\" data-original=\"https://pic3.zhimg.com/v2-e49c5eeb512ab3caf151c52601b49e5e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-e49c5eeb512ab3caf151c52601b49e5e_b.jpg\"/></figure><p>要把字符串<code>&#39;神雕侠侣&#39;</code>拆成一个个字符打印出来，这件事【工作量确定】，适合用for循环。</p><p>而对于“输入密码，判断输入的密码是否正确”这件事，我们并不知道要判断几遍才能得到正确密码，所以【工作量不确定】，适合用while循环。</p><p>不过有一种情况for循环和while循环都可以解决问题，那就是【把一件事情做N遍】：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b9a98206a404b154a25617847b612348_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1338\" data-rawheight=\"338\" class=\"origin_image zh-lightbox-thumb\" width=\"1338\" data-original=\"https://pic1.zhimg.com/v2-b9a98206a404b154a25617847b612348_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1338&#39; height=&#39;338&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1338\" data-rawheight=\"338\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1338\" data-original=\"https://pic1.zhimg.com/v2-b9a98206a404b154a25617847b612348_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b9a98206a404b154a25617847b612348_b.jpg\"/></figure><p>你会看到，两者都能做。不过for循环的代码相对更简洁一些。</p><p>让我们总结一下什么时候用<code>for</code>什么时候用<code>while</code>：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-0b21b358007ff5cc61f5f29a13ba8e9d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"732\" data-rawheight=\"382\" class=\"origin_image zh-lightbox-thumb\" width=\"732\" data-original=\"https://pic2.zhimg.com/v2-0b21b358007ff5cc61f5f29a13ba8e9d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;732&#39; height=&#39;382&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"732\" data-rawheight=\"382\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"732\" data-original=\"https://pic2.zhimg.com/v2-0b21b358007ff5cc61f5f29a13ba8e9d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-0b21b358007ff5cc61f5f29a13ba8e9d_b.jpg\"/></figure><p>正如开头所说，计算机能帮我们做的，是许许多多繁杂重复的工作。当计算机为我们解放双手，这平凡的日子就空出了一些时间。</p><p>这些时间，你会用来做什么呢？</p><p>曾有一段日子，我选择让自己的思想任意驰骋，想看看哪里是我的边缘。</p><p>后来，我用那些多出来的时间回归生活，学习陪伴家人，学习表达我的珍惜。</p><p>而此时，此地，此刻的每一个你，就是现在的我，为这些时间所做出的选择。</p><p>路还长着呢，我们下一关再会。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><br/>----------------------------------------------------------------------------------------------</p><p>更多Pthon课程请扫码关注</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image\" width=\"336\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;336&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"336\" data-actualsrc=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\"/></figure><p></p><p></p><p></p>", 
            "topic": [
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }, 
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/66295826", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 10, 
            "title": "Python语言难学吗？第11讲——for循环", 
            "content": "<p>上节课，我们学习了两种新的数据类型：列表和字典。</p><p>这节课，我们要学习的主题是【循环】。循环的意思是：把一件事重复执行很多遍。</p><p>每个人的生活和工作都充满了循环，很多时候，循环意味着重复和枯燥。比如你要手动输入200个员工的个人信息，比如她要一遍一遍地给不认真的人费劲口舌解释同样的事情，又比如他一成不变、如同一潭死水般的生活。</p><p>一成不变的生活终归需要你自己去打破循环，但工作的事，就大可让计算机帮一帮我们了。与人类不同，计算机不怕苦也不怕累，无聊的事情可以重复上千遍，只要能追寻到你想要的答案。</p><p>这恰恰就是编程解放人类的地方。比如你需要下载很多很多张图片，本来你是要手动操作的，而计算机通过【循环】，就可以依照某些规则，帮你一张一张地下载图片，你在一旁歇着就好。计算机干重复性的工作比你拿手。</p><p>再比如作为运营，可能需要去解散很多的用户群，本来要一个一个手动点击，而计算机通过【循环】，就可以依照某些规则，帮人一个一个解散。计算机干重复性的工作比你省力。</p><p>现在你再看“循环”这两个字，是不是跟开始不太一样了？</p><p>为什么计算机就特别擅长做重复性工作呢？注意，是“超擅长、速度超快”，而不只是“能干活、不抱怨”。</p><p>究其原理，其实是因为代码中的【循环语句】，让计算机能够重复性地、自动地执行指令。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-8a3116ee79353cf1f9f684ecde66e50a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"596\" data-rawheight=\"288\" class=\"origin_image zh-lightbox-thumb\" width=\"596\" data-original=\"https://pic3.zhimg.com/v2-8a3116ee79353cf1f9f684ecde66e50a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;596&#39; height=&#39;288&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"596\" data-rawheight=\"288\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"596\" data-original=\"https://pic3.zhimg.com/v2-8a3116ee79353cf1f9f684ecde66e50a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-8a3116ee79353cf1f9f684ecde66e50a_b.jpg\"/></figure><p>要实现“重复、自动地执行代码”，有两种循环语句可供我们选择使用：一种是<code>for...in...</code>循环语句，另一种是<code>while</code>循环语句。</p><p>“循环”在计算机中是非常重要，是最基础的编程知识，为了讲解得更加清楚，我们将循环这一章节分成了上下两关。这一关，我们将对两种循环语句形成初步的了解，并学会简单的应用。</p><p>话不多说，我们先一起来看看第一种循环的方式：<code>for...in...</code>循环，它也被简称为for循环。</p><h2><b>for...in...循环语句</b></h2><p>还记得前一关里，班主任点名的例子吗？本来要重复50次才能完成的任务，最后变成了3行代码。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-1821122f5b8cc3327039bc72248b07e1_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"981\" data-rawheight=\"112\" class=\"origin_image zh-lightbox-thumb\" width=\"981\" data-original=\"https://pic2.zhimg.com/v2-1821122f5b8cc3327039bc72248b07e1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;981&#39; height=&#39;112&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"981\" data-rawheight=\"112\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"981\" data-original=\"https://pic2.zhimg.com/v2-1821122f5b8cc3327039bc72248b07e1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-1821122f5b8cc3327039bc72248b07e1_b.png\"/></figure><p>这里的第2-3行就是<code>for</code>循环。</p><p>先看一段最简单的for循环代码，了解它的格式：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-6f3ea38d2a46ca109a6f6ffd0651e825_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"824\" data-rawheight=\"395\" class=\"origin_image zh-lightbox-thumb\" width=\"824\" data-original=\"https://pic2.zhimg.com/v2-6f3ea38d2a46ca109a6f6ffd0651e825_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;824&#39; height=&#39;395&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"824\" data-rawheight=\"395\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"824\" data-original=\"https://pic2.zhimg.com/v2-6f3ea38d2a46ca109a6f6ffd0651e825_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-6f3ea38d2a46ca109a6f6ffd0651e825_b.jpg\"/></figure><p>来，先运行一下图中的示例代码。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-9a9973d48d80e301884f472436938a9e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1020\" data-rawheight=\"189\" class=\"origin_image zh-lightbox-thumb\" width=\"1020\" data-original=\"https://pic3.zhimg.com/v2-9a9973d48d80e301884f472436938a9e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1020&#39; height=&#39;189&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1020\" data-rawheight=\"189\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1020\" data-original=\"https://pic3.zhimg.com/v2-9a9973d48d80e301884f472436938a9e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-9a9973d48d80e301884f472436938a9e_b.jpg\"/></figure><p>终端上依次出现了列表里的所有数字，对吧？我们用大白话来打个比方，以便更好地理解这段代码的意义：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-c4f6f93a50e5a0be005091f5b72774f2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"802\" data-rawheight=\"448\" class=\"origin_image zh-lightbox-thumb\" width=\"802\" data-original=\"https://pic3.zhimg.com/v2-c4f6f93a50e5a0be005091f5b72774f2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;802&#39; height=&#39;448&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"802\" data-rawheight=\"448\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"802\" data-original=\"https://pic3.zhimg.com/v2-c4f6f93a50e5a0be005091f5b72774f2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-c4f6f93a50e5a0be005091f5b72774f2_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-19ae113ca2d2a5b3db7d94069521e85b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"860\" data-rawheight=\"232\" class=\"origin_image zh-lightbox-thumb\" width=\"860\" data-original=\"https://pic4.zhimg.com/v2-19ae113ca2d2a5b3db7d94069521e85b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;860&#39; height=&#39;232&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"860\" data-rawheight=\"232\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"860\" data-original=\"https://pic4.zhimg.com/v2-19ae113ca2d2a5b3db7d94069521e85b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-19ae113ca2d2a5b3db7d94069521e85b_b.jpg\"/></figure><p>for循环的3个要点即是:1.空房间；2.一群等着办业务的人；3.业务流程</p><p>我们一个一个来看：</p><p><b>for循环：空房间</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a1380a2ccc6baef1ecb35f070e6d0e9a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"410\" data-rawheight=\"84\" class=\"content_image\" width=\"410\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;410&#39; height=&#39;84&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"410\" data-rawheight=\"84\" class=\"content_image lazy\" width=\"410\" data-actualsrc=\"https://pic3.zhimg.com/v2-a1380a2ccc6baef1ecb35f070e6d0e9a_b.jpg\"/></figure><p>空房间的学名叫【元素】（item），你可以把它当成是一个变量。那么首先，我们需要给房间取一个名字，也就是“变量名”。</p><p>为什么我总是用<code>i</code>？因为英文是item，所以<code>i</code>是常用名嘛。但其实你给这个房间取什么名字都行。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-e72e2569184bf98849e6da50d15950ab_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1344\" data-rawheight=\"259\" class=\"origin_image zh-lightbox-thumb\" width=\"1344\" data-original=\"https://pic4.zhimg.com/v2-e72e2569184bf98849e6da50d15950ab_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1344&#39; height=&#39;259&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1344\" data-rawheight=\"259\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1344\" data-original=\"https://pic4.zhimg.com/v2-e72e2569184bf98849e6da50d15950ab_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-e72e2569184bf98849e6da50d15950ab_b.jpg\"/></figure><p>是不是三种结果都一样？这就对啦，不必拘束姓名。</p><p>在for循环结束之后，我们还能使用这个房间，不过这时候房间里的人是谁呢？请运行代码体验一下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-14f184e53b07de183e77f8421a75ddd8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1350\" data-rawheight=\"244\" class=\"origin_image zh-lightbox-thumb\" width=\"1350\" data-original=\"https://pic1.zhimg.com/v2-14f184e53b07de183e77f8421a75ddd8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1350&#39; height=&#39;244&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1350\" data-rawheight=\"244\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1350\" data-original=\"https://pic1.zhimg.com/v2-14f184e53b07de183e77f8421a75ddd8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-14f184e53b07de183e77f8421a75ddd8_b.jpg\"/></figure><p>原来，业务结束之后，最后一个走进去的5留在了房间里，被打印了出来。</p><p>搞清楚了什么是“空房间”，我们再看看下一个要点：</p><p><b>for循环：一群排队办业务的人</b></p><p>们刚刚看到的“一群排队办业务的人”，都是以列表的形式出现：<code>[1,2,3,4,5]</code>。还有哪些数据类型也属于“一群排队办业务的人”呢？</p><p>我觉得你已经猜到了，就是字典。来直接体验一下代码运行效果：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-29742f372f95a890a5200cb0f2610d70_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"988\" data-rawheight=\"201\" class=\"origin_image zh-lightbox-thumb\" width=\"988\" data-original=\"https://pic1.zhimg.com/v2-29742f372f95a890a5200cb0f2610d70_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;988&#39; height=&#39;201&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"988\" data-rawheight=\"201\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"988\" data-original=\"https://pic1.zhimg.com/v2-29742f372f95a890a5200cb0f2610d70_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-29742f372f95a890a5200cb0f2610d70_b.jpg\"/></figure><p>我们用<code>print(i)</code>把“空房间”<code>i</code>打印了出来，发现i会逐个接待字典中的每一个【键】。</p><p>那什么不属于“一群排队办业务的人”呢？</p><p>字典、列表和字符串&#39;吴承恩&#39;都是一群排队办业务的人，但<code>a = 5</code>并不是。</p><p>不要怀疑，字符串也属于“一群排队办业务的人”。打个比方，<code>&#39;吴承恩&#39;</code>三个字就像一家三口，但走进空房间办业务时，这家人是可以一个一个进去的。来试试吧。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-7b1574f1ad7d768cf8e8010ca66b0806_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1009\" data-rawheight=\"172\" class=\"origin_image zh-lightbox-thumb\" width=\"1009\" data-original=\"https://pic3.zhimg.com/v2-7b1574f1ad7d768cf8e8010ca66b0806_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1009&#39; height=&#39;172&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1009\" data-rawheight=\"172\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1009\" data-original=\"https://pic3.zhimg.com/v2-7b1574f1ad7d768cf8e8010ca66b0806_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-7b1574f1ad7d768cf8e8010ca66b0806_b.jpg\"/></figure><p>而整数、浮点数是不属于“一群排队办业务的人”的，如果把它们放在for循环里，代码会报错。</p><p>请你体验一下报错的代码，遇到报错后，可以把代码修改成正确的，或者点击【跳过】按钮。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-a793af9a58d3c053174c7795974bae85_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1352\" data-rawheight=\"268\" class=\"origin_image zh-lightbox-thumb\" width=\"1352\" data-original=\"https://pic2.zhimg.com/v2-a793af9a58d3c053174c7795974bae85_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1352&#39; height=&#39;268&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1352\" data-rawheight=\"268\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1352\" data-original=\"https://pic2.zhimg.com/v2-a793af9a58d3c053174c7795974bae85_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-a793af9a58d3c053174c7795974bae85_b.jpg\"/></figure><p>现在我们理解了：<b>列表，字典，字符串</b>都可以是“一群排队办业务的人”。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-7486e79356b6e84afbe1d1349a768c22_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"307\" data-rawheight=\"77\" class=\"content_image\" width=\"307\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;307&#39; height=&#39;77&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"307\" data-rawheight=\"77\" class=\"content_image lazy\" width=\"307\" data-actualsrc=\"https://pic3.zhimg.com/v2-7486e79356b6e84afbe1d1349a768c22_b.jpg\"/></figure><p>还是这段代码，代码的运行结果你应该已经了然于心，是1,2,3,4,5依次出现。也就是说，当这一群排队的人依次序走进空房间，每个人都会把业务办完。</p><p>这个过程，在Python中的学名就叫做【遍历】。</p><p>其实，遍历这个词在古代汉语中就已经出现过了：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-3ea9f1a0a82f4073870ed4bc446c305c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"751\" data-rawheight=\"290\" class=\"origin_image zh-lightbox-thumb\" width=\"751\" data-original=\"https://pic1.zhimg.com/v2-3ea9f1a0a82f4073870ed4bc446c305c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;751&#39; height=&#39;290&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"751\" data-rawheight=\"290\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"751\" data-original=\"https://pic1.zhimg.com/v2-3ea9f1a0a82f4073870ed4bc446c305c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-3ea9f1a0a82f4073870ed4bc446c305c_b.jpg\"/></figure><p>只不过古人是遍历名山大川，一一寻访学问；而Python是遍历数据结构（列表、字典等），一一访问其中的数据。</p><p>除了列表，字典，字符串三种数据类型，我们还可以遍历其他的数据集合。比如和for循环常常一起搭配使用的：range() 函数。</p><h2><b>range()函数</b></h2><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-bf3ec9865a553ccc2e8141e523e25111_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1012\" data-rawheight=\"155\" class=\"origin_image zh-lightbox-thumb\" width=\"1012\" data-original=\"https://pic2.zhimg.com/v2-bf3ec9865a553ccc2e8141e523e25111_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1012&#39; height=&#39;155&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1012\" data-rawheight=\"155\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1012\" data-original=\"https://pic2.zhimg.com/v2-bf3ec9865a553ccc2e8141e523e25111_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-bf3ec9865a553ccc2e8141e523e25111_b.png\"/></figure><p>运行后，你看到了整数0，1，2，是不是？使用<code>range(x)</code>函数，就可以生成一个从<code>0</code>到<code>x-1</code>的整数序列。</p><p>它还有更多用法，再来看这段代码，并运行：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-dc30052ae848320b2aa4486ebfae1e9e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"984\" data-rawheight=\"194\" class=\"origin_image zh-lightbox-thumb\" width=\"984\" data-original=\"https://pic3.zhimg.com/v2-dc30052ae848320b2aa4486ebfae1e9e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;984&#39; height=&#39;194&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"984\" data-rawheight=\"194\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"984\" data-original=\"https://pic3.zhimg.com/v2-dc30052ae848320b2aa4486ebfae1e9e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-dc30052ae848320b2aa4486ebfae1e9e_b.jpg\"/></figure><p>使用<code>range(a,b)</code>函数，你可以生成了一个【<b>取头不取尾</b>】的整数序列。</p><p>你可能会想问，我没事儿取这些整数出来干嘛？嗯，这是个好问题。再来看一段代码，并运行：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-a82d273a6f7da6176aa444737741c5cd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"990\" data-rawheight=\"238\" class=\"origin_image zh-lightbox-thumb\" width=\"990\" data-original=\"https://pic2.zhimg.com/v2-a82d273a6f7da6176aa444737741c5cd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;990&#39; height=&#39;238&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"990\" data-rawheight=\"238\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"990\" data-original=\"https://pic2.zhimg.com/v2-a82d273a6f7da6176aa444737741c5cd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-a82d273a6f7da6176aa444737741c5cd_b.jpg\"/></figure><p>重要的事情说三遍，哈哈。像这样，有了<code>range()</code>函数之后，当你想把一段代码固定重复n次时，就可以直接使用<code>for i in range(n)</code>解决问题。</p><p>来练习一下：如果你要重复打印“书桓走的第n天，想他”，n为0到10，你会怎么写？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-bbd58fce534f707a918e5c60c0638426_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"973\" data-rawheight=\"292\" class=\"origin_image zh-lightbox-thumb\" width=\"973\" data-original=\"https://pic3.zhimg.com/v2-bbd58fce534f707a918e5c60c0638426_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;973&#39; height=&#39;292&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"973\" data-rawheight=\"292\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"973\" data-original=\"https://pic3.zhimg.com/v2-bbd58fce534f707a918e5c60c0638426_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-bbd58fce534f707a918e5c60c0638426_b.jpg\"/></figure><p><code>range()</code>函数还有一种用法，我们来直接运行体验一下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-ddf2a60ebbe6caf142bc58ed7cadb98f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"986\" data-rawheight=\"222\" class=\"origin_image zh-lightbox-thumb\" width=\"986\" data-original=\"https://pic4.zhimg.com/v2-ddf2a60ebbe6caf142bc58ed7cadb98f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;986&#39; height=&#39;222&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"986\" data-rawheight=\"222\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"986\" data-original=\"https://pic4.zhimg.com/v2-ddf2a60ebbe6caf142bc58ed7cadb98f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-ddf2a60ebbe6caf142bc58ed7cadb98f_b.jpg\"/></figure><p>你观察出规律了么？这里<code>range(0,10,3)</code>的意思是：从0数到9（取头不取尾），数数的间隔为3。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-c5b3112bb8d601efeff0cb5b71ea7319_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"658\" data-rawheight=\"459\" class=\"origin_image zh-lightbox-thumb\" width=\"658\" data-original=\"https://pic2.zhimg.com/v2-c5b3112bb8d601efeff0cb5b71ea7319_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;658&#39; height=&#39;459&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"658\" data-rawheight=\"459\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"658\" data-original=\"https://pic2.zhimg.com/v2-c5b3112bb8d601efeff0cb5b71ea7319_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-c5b3112bb8d601efeff0cb5b71ea7319_b.jpg\"/></figure><p>好啦，我们来实战一下：请你用for循环完成1到100的整数分别乘以5的计算，并打印出来，效果就像这样：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-30936f28bbe95520199ab43393e18f0d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"222\" data-rawheight=\"264\" class=\"content_image\" width=\"222\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;222&#39; height=&#39;264&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"222\" data-rawheight=\"264\" class=\"content_image lazy\" width=\"222\" data-actualsrc=\"https://pic2.zhimg.com/v2-30936f28bbe95520199ab43393e18f0d_b.jpg\"/></figure><p>你会怎么写出for循环代码呢？</p><p><b>开始写代码前，我们要先创建一个从1到100的整数列表，</b><code>range(1,101 )</code>表示从1-100的整数列表，不包括101。</p><p>请开始写代码吧：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-30f3b3471e33aab829eae8d9688d5f5d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"982\" data-rawheight=\"285\" class=\"origin_image zh-lightbox-thumb\" width=\"982\" data-original=\"https://pic2.zhimg.com/v2-30f3b3471e33aab829eae8d9688d5f5d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;982&#39; height=&#39;285&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"982\" data-rawheight=\"285\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"982\" data-original=\"https://pic2.zhimg.com/v2-30f3b3471e33aab829eae8d9688d5f5d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-30f3b3471e33aab829eae8d9688d5f5d_b.jpg\"/></figure><p>我们最后来理解一下for循环的第三个要点：</p><p><b>for循环：办事流程</b></p><p>我们以下面的代码为例：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-bfa70b6c716f7b465b0777c72c5abbd1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"283\" data-rawheight=\"85\" class=\"content_image\" width=\"283\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;283&#39; height=&#39;85&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"283\" data-rawheight=\"85\" class=\"content_image lazy\" width=\"283\" data-actualsrc=\"https://pic2.zhimg.com/v2-bfa70b6c716f7b465b0777c72c5abbd1_b.jpg\"/></figure><p>这两行代码中，in表示从“一群排队办业务的人”（字符串、列表、字典等）中依次取值，这个刚才我们已经学过了。</p><p>在循环的过程中，“一群排队办业务的人”会被依次取出，然后走进房间i去办理业务。</p><p>但办事流程呢？在这里流程很简单，都是<code>print(i*5)</code>。然后在i=1的情况下，执行一遍流程；在i=2的情况下，再执行一遍流程……一直执行到i=5，也就把这群人的事情全部办完了：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-9fa77b7ad4a9118a0d8b2fca35bc8834_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"621\" data-rawheight=\"464\" class=\"origin_image zh-lightbox-thumb\" width=\"621\" data-original=\"https://pic1.zhimg.com/v2-9fa77b7ad4a9118a0d8b2fca35bc8834_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;621&#39; height=&#39;464&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"621\" data-rawheight=\"464\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"621\" data-original=\"https://pic1.zhimg.com/v2-9fa77b7ad4a9118a0d8b2fca35bc8834_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-9fa77b7ad4a9118a0d8b2fca35bc8834_b.jpg\"/></figure><p>“办事流程”的学名是【for子句】。格式是【冒号】后另起一行，【缩进】写命令。</p><p>格式对于编程来说是一件再怎么强调也不为过的“小事”，所以在这里我们再强调一下for循环的格式：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-57a1851f910607b8c6559edf2e4d2b5f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"803\" data-rawheight=\"326\" class=\"origin_image zh-lightbox-thumb\" width=\"803\" data-original=\"https://pic4.zhimg.com/v2-57a1851f910607b8c6559edf2e4d2b5f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;803&#39; height=&#39;326&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"803\" data-rawheight=\"326\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"803\" data-original=\"https://pic4.zhimg.com/v2-57a1851f910607b8c6559edf2e4d2b5f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-57a1851f910607b8c6559edf2e4d2b5f_b.jpg\"/></figure><p>到这里，你已经掌握for循环的基本语法了，我们再做一些练习。</p><p>假设你要做大采购，让小明买醋，小红买油，小白买盐，小张买米；我们先把这堆事情写成一个字典：<code>d = {&#39;小明&#39;:&#39;醋&#39;,&#39;小红&#39;:&#39;油&#39;,&#39;小白&#39;:&#39;盐&#39;}</code></p><p> 如果我们把这四个人要买的东西依次print出来，要写4句print语句：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-534951dd93b82a138a904f48830baf0e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"538\" data-rawheight=\"182\" class=\"origin_image zh-lightbox-thumb\" width=\"538\" data-original=\"https://pic3.zhimg.com/v2-534951dd93b82a138a904f48830baf0e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;538&#39; height=&#39;182&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"538\" data-rawheight=\"182\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"538\" data-original=\"https://pic3.zhimg.com/v2-534951dd93b82a138a904f48830baf0e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-534951dd93b82a138a904f48830baf0e_b.jpg\"/></figure><p>请你来动手用for循环代替以上重复性代码，并起到同样的效果。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-f6e21609421c152e30b3214b43efa8e8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"974\" data-rawheight=\"187\" class=\"origin_image zh-lightbox-thumb\" width=\"974\" data-original=\"https://pic1.zhimg.com/v2-f6e21609421c152e30b3214b43efa8e8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;974&#39; height=&#39;187&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"974\" data-rawheight=\"187\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"974\" data-original=\"https://pic1.zhimg.com/v2-f6e21609421c152e30b3214b43efa8e8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-f6e21609421c152e30b3214b43efa8e8_b.jpg\"/></figure><p>你做对了吗？如果有点不确定，可以回头补一补上一关“字典”的相关知识。</p><p>到这里，for循环的3个要点都讲解完毕。</p><p><br/>----------------------------------------------------------------------------------------------</p><p>更多Pthon课程请扫码关注</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image\" width=\"336\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;336&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"336\" data-actualsrc=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\"/></figure><p></p><p></p>", 
            "topic": [
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }, 
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/66242660", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 3, 
            "title": "Python语言难学吗？第10讲——字典", 
            "content": "<p></p><h2><b>数据类型：字典</b></h2><p>众所周知，一个老师的日常就是出卷、改卷。这次期中考呢，小明、小红、小刚分别考了95、90和90分。</p><p>假如我们还用列表来装数据的话，我们需要新创建一个列表来专门放分数，而且要保证和姓名的顺序是一致的，很麻烦。</p><p>所以类似这种名字和数值（如分数、身高、体重等）两种数据存在一一对应的情况，用第二种数据类型——“字典”（dictionary）来存储会更方便。</p><h2><b>什么是字典</b></h2><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-da32703af4695c8cb114f0b99b6280a7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"804\" data-rawheight=\"392\" class=\"origin_image zh-lightbox-thumb\" width=\"804\" data-original=\"https://pic4.zhimg.com/v2-da32703af4695c8cb114f0b99b6280a7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;804&#39; height=&#39;392&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"804\" data-rawheight=\"392\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"804\" data-original=\"https://pic4.zhimg.com/v2-da32703af4695c8cb114f0b99b6280a7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-da32703af4695c8cb114f0b99b6280a7_b.jpg\"/></figure><p>仔细看下，字典和列表有3个地方是一样的：1.有名称；2.要用<code>=</code>赋值；3.用逗号作为元素间的分隔符。</p><p>而不一样的有两处：1.列表外层用的是中括号<code>[ ]</code>，字典的外层是大括号<code>{ }</code>；</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-65e34b78c0cd2f9bba9a2e6f08061f42_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"448\" data-rawheight=\"86\" class=\"origin_image zh-lightbox-thumb\" width=\"448\" data-original=\"https://pic3.zhimg.com/v2-65e34b78c0cd2f9bba9a2e6f08061f42_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;448&#39; height=&#39;86&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"448\" data-rawheight=\"86\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"448\" data-original=\"https://pic3.zhimg.com/v2-65e34b78c0cd2f9bba9a2e6f08061f42_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-65e34b78c0cd2f9bba9a2e6f08061f42_b.jpg\"/></figure><p>2.列表中的元素是自成一体的，而字典的元素是由一个个键值对构成的，用英文冒号连接。如<code>&#39;小明&#39;:95</code>，其中我们把<code>&#39;小明&#39;</code>叫键（key），<code>95</code>叫值(value)。</p><p>这样唯一的键和对应的值形成的组合，我们就叫做【键值对】，上述字典就有3个【键值对】：<code>&#39;小明&#39;:95</code>、<code>&#39;小红&#39;:90</code>、<code>&#39;小刚&#39;:90</code></p><p>如果不想口算，我们可以用len()函数来得出一个列表或者字典的长度（元素个数），括号里放列表或字典名称。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-81e35c0ae15473bde5eb352270c15eae_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1013\" data-rawheight=\"205\" class=\"origin_image zh-lightbox-thumb\" width=\"1013\" data-original=\"https://pic3.zhimg.com/v2-81e35c0ae15473bde5eb352270c15eae_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1013&#39; height=&#39;205&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1013\" data-rawheight=\"205\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1013\" data-original=\"https://pic3.zhimg.com/v2-81e35c0ae15473bde5eb352270c15eae_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-81e35c0ae15473bde5eb352270c15eae_b.jpg\"/></figure><p>这里需要强调的是，字典中的键具备唯一性，而值可重复。也就是说字典里不能同时包含两个<code>&#39;小明&#39;</code>的键，但却可以有两个同为<code>90</code>的值。</p><p>现在，我们尝试将小明的成绩从字典里打印出来。这就涉及到字典的索引，和列表通过偏移量来索引不同，字典靠的是键。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-39662ef485eaae6c2c53f9c31d8cf2ed_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1012\" data-rawheight=\"164\" class=\"origin_image zh-lightbox-thumb\" width=\"1012\" data-original=\"https://pic2.zhimg.com/v2-39662ef485eaae6c2c53f9c31d8cf2ed_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1012&#39; height=&#39;164&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1012\" data-rawheight=\"164\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1012\" data-original=\"https://pic2.zhimg.com/v2-39662ef485eaae6c2c53f9c31d8cf2ed_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-39662ef485eaae6c2c53f9c31d8cf2ed_b.png\"/></figure><p>这便是从字典中提取对应的值的用法。和列表相似的是要用<code>[ ]</code>，不过因为字典没有偏移量，所以在中括号中应该写键的名称，即字典名[字典的键]。</p><p>现在请你将小红的成绩也打印出来吧，亲手打打代码，才能快速掌握。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-3a0cc1a8957286663fb169c205230a68_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"967\" data-rawheight=\"172\" class=\"origin_image zh-lightbox-thumb\" width=\"967\" data-original=\"https://pic1.zhimg.com/v2-3a0cc1a8957286663fb169c205230a68_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;967&#39; height=&#39;172&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"967\" data-rawheight=\"172\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"967\" data-original=\"https://pic1.zhimg.com/v2-3a0cc1a8957286663fb169c205230a68_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-3a0cc1a8957286663fb169c205230a68_b.jpg\"/></figure><p>现在你也知道如何取出字典里的值了。</p><p>小刚拿到试卷后，下课后来找你，说把他总分算错了，应该是92分。你看了一下，发现还真的是。于是，你在成绩册上将90划掉，改成了92。</p><p>这个操作在代码里对应的是字典的删除和增加。</p><h2><b>给字典增加/删除元素</b></h2><p>我们还是先来看一个例子，运行下面的代码，留意字典怎么删除以及新增键值对：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-8cd68aa32c22876e23dc1eba6570fff5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1355\" data-rawheight=\"291\" class=\"origin_image zh-lightbox-thumb\" width=\"1355\" data-original=\"https://pic2.zhimg.com/v2-8cd68aa32c22876e23dc1eba6570fff5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1355&#39; height=&#39;291&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1355\" data-rawheight=\"291\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1355\" data-original=\"https://pic2.zhimg.com/v2-8cd68aa32c22876e23dc1eba6570fff5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-8cd68aa32c22876e23dc1eba6570fff5_b.jpg\"/></figure><p>我们可以发现：删除字典里键值对的代码是del语句<code>del 字典名[键]</code>，而新增键值对要用到赋值语句<code>字典名[键] = 值</code>。</p><p>那么，请你把小刚的成绩改成92分吧。对了，新来的小美也考了，得了85。请你对字典里进行修改和新增，然后将整个字典都打印出来。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-905d38de038465cd134ea5e8ce084b6d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"983\" data-rawheight=\"247\" class=\"origin_image zh-lightbox-thumb\" width=\"983\" data-original=\"https://pic2.zhimg.com/v2-905d38de038465cd134ea5e8ce084b6d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;983&#39; height=&#39;247&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"983\" data-rawheight=\"247\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"983\" data-original=\"https://pic2.zhimg.com/v2-905d38de038465cd134ea5e8ce084b6d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-905d38de038465cd134ea5e8ce084b6d_b.jpg\"/></figure><p>好了。至此，我们可以总结一下字典的基础知识：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-1b067a5110e9ffeda0862758805913e7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"474\" class=\"origin_image zh-lightbox-thumb\" width=\"692\" data-original=\"https://pic4.zhimg.com/v2-1b067a5110e9ffeda0862758805913e7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;692&#39; height=&#39;474&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"474\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"692\" data-original=\"https://pic4.zhimg.com/v2-1b067a5110e9ffeda0862758805913e7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-1b067a5110e9ffeda0862758805913e7_b.jpg\"/></figure><h2><b>列表和字典的异同</b></h2><p>列表和字典同作为Python里能存储多条数据的数据类型，有许多共同点，也有值得我们注意的不同点，那么接下来我们先来看看不同点。</p><p><b>列表和字典的不同点</b></p><p>一个很重要的不同点是列表中的元素是有自己明确的“位置”的，所以即使看似相同的元素，只要在列表所处的位置不同，它们就是两个不同的列表。我们来看看代码：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-a77f33e2db4a82454e205887f69e4d9d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1346\" data-rawheight=\"412\" class=\"origin_image zh-lightbox-thumb\" width=\"1346\" data-original=\"https://pic2.zhimg.com/v2-a77f33e2db4a82454e205887f69e4d9d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1346&#39; height=&#39;412&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1346\" data-rawheight=\"412\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1346\" data-original=\"https://pic2.zhimg.com/v2-a77f33e2db4a82454e205887f69e4d9d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-a77f33e2db4a82454e205887f69e4d9d_b.jpg\"/></figure><p>而字典相比起来就显得随和很多，调动顺序也不影响。因为列表中的数据是有序排列的，而字典中的数据是随机排列的。</p><p>这也是为什么两者数据读取方法会不同的原因：列表有序，要用偏移量定位；字典无序，便通过唯一的键来取值。</p><p><b>列表和字典的共同点</b></p><p>我们先来看第一个共同点：在列表和字典中，如果要修改元素，都可用赋值语句来完成。看一下代码：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-275747dac34b0403004472adec022592_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"967\" data-rawheight=\"294\" class=\"origin_image zh-lightbox-thumb\" width=\"967\" data-original=\"https://pic3.zhimg.com/v2-275747dac34b0403004472adec022592_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;967&#39; height=&#39;294&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"967\" data-rawheight=\"294\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"967\" data-original=\"https://pic3.zhimg.com/v2-275747dac34b0403004472adec022592_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-275747dac34b0403004472adec022592_b.jpg\"/></figure><p>所以，上面修改小刚成绩的时候，其实直接用赋值语句即可，del语句通常是用来删除确定不需要的键值对。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-7f9f474bac336aa3db8d49f0eafbab3a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"445\" data-rawheight=\"145\" class=\"origin_image zh-lightbox-thumb\" width=\"445\" data-original=\"https://pic3.zhimg.com/v2-7f9f474bac336aa3db8d49f0eafbab3a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;445&#39; height=&#39;145&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"445\" data-rawheight=\"145\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"445\" data-original=\"https://pic3.zhimg.com/v2-7f9f474bac336aa3db8d49f0eafbab3a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-7f9f474bac336aa3db8d49f0eafbab3a_b.jpg\"/></figure><p>第二个共同点其实之前已经略有提及，即支持任意嵌套。除之前学过的数据类型外，列表可嵌套其他列表和字典，字典也可嵌套其他字典和列表。</p><p>先来看看第一种情况：列表嵌套列表。你在班级里成立了以四人为单位的学习小组。这时，列表的形式可以写成：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-44c3c881d95620e9bf896a88c63c274b_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"732\" data-rawheight=\"50\" class=\"origin_image zh-lightbox-thumb\" width=\"732\" data-original=\"https://pic4.zhimg.com/v2-44c3c881d95620e9bf896a88c63c274b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;732&#39; height=&#39;50&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"732\" data-rawheight=\"50\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"732\" data-original=\"https://pic4.zhimg.com/v2-44c3c881d95620e9bf896a88c63c274b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-44c3c881d95620e9bf896a88c63c274b_b.png\"/></figure><p>students这个列表是由两个子列表组成的，现在有个问题是：我们要怎么把小芳取出来呢？</p><p>能你数着小芳是列表的第7个元素(从0开始)，所以想<code>students[7]</code>不就能取到小芳吗？</p><p>事情当然没有那么简单，当我们在提取这种多级嵌套的列表/字典时，要一层一层地取出来，就像剥洋葱一样：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-be672143c9c972b9d3e4d8ea2e9de585_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1008\" data-rawheight=\"254\" class=\"origin_image zh-lightbox-thumb\" width=\"1008\" data-original=\"https://pic2.zhimg.com/v2-be672143c9c972b9d3e4d8ea2e9de585_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1008&#39; height=&#39;254&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1008\" data-rawheight=\"254\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1008\" data-original=\"https://pic2.zhimg.com/v2-be672143c9c972b9d3e4d8ea2e9de585_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-be672143c9c972b9d3e4d8ea2e9de585_b.jpg\"/></figure><p>现在，我们确定了小芳是在<code>students[1]</code>的列表里，继续往下看。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-bc6e0a8eda74d34d1073f2598614dd0e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1018\" data-rawheight=\"463\" class=\"origin_image zh-lightbox-thumb\" width=\"1018\" data-original=\"https://pic3.zhimg.com/v2-bc6e0a8eda74d34d1073f2598614dd0e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1018&#39; height=&#39;463&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1018\" data-rawheight=\"463\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1018\" data-original=\"https://pic3.zhimg.com/v2-bc6e0a8eda74d34d1073f2598614dd0e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-bc6e0a8eda74d34d1073f2598614dd0e_b.jpg\"/></figure><p>小芳是<code>students[1]</code>列表里的第三个元素，所以要取出小芳，代码可以这么写：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-e6d784e78a1d39f72fea63598d04e371_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"722\" data-rawheight=\"95\" class=\"origin_image zh-lightbox-thumb\" width=\"722\" data-original=\"https://pic2.zhimg.com/v2-e6d784e78a1d39f72fea63598d04e371_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;722&#39; height=&#39;95&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"722\" data-rawheight=\"95\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"722\" data-original=\"https://pic2.zhimg.com/v2-e6d784e78a1d39f72fea63598d04e371_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-e6d784e78a1d39f72fea63598d04e371_b.png\"/></figure><p>现在，发挥你的聪明才智，从列表中取出小兰，并打印出来吧。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-d4468bb9a6dcb91bdb955090dfd9e53f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"990\" data-rawheight=\"183\" class=\"origin_image zh-lightbox-thumb\" width=\"990\" data-original=\"https://pic4.zhimg.com/v2-d4468bb9a6dcb91bdb955090dfd9e53f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;990&#39; height=&#39;183&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"990\" data-rawheight=\"183\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"990\" data-original=\"https://pic4.zhimg.com/v2-d4468bb9a6dcb91bdb955090dfd9e53f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-d4468bb9a6dcb91bdb955090dfd9e53f_b.jpg\"/></figure><p>接下来，我们再来看看第二种情况：字典嵌套字典。</p><p>和列表嵌套列表也是类似的，需要一层一层取出来，比如说要取出小芳的成绩，代码是这样写：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-a7e4028232ab459890431d202ed83b71_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"584\" data-rawheight=\"175\" class=\"origin_image zh-lightbox-thumb\" width=\"584\" data-original=\"https://pic2.zhimg.com/v2-a7e4028232ab459890431d202ed83b71_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;584&#39; height=&#39;175&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"584\" data-rawheight=\"175\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"584\" data-original=\"https://pic2.zhimg.com/v2-a7e4028232ab459890431d202ed83b71_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-a7e4028232ab459890431d202ed83b71_b.jpg\"/></figure><p>请你仔细观察上面的代码，然后尝试取出小刚的成绩。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-4d0f480535467db9aaba0f35666fa468_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"972\" data-rawheight=\"208\" class=\"origin_image zh-lightbox-thumb\" width=\"972\" data-original=\"https://pic1.zhimg.com/v2-4d0f480535467db9aaba0f35666fa468_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;972&#39; height=&#39;208&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"972\" data-rawheight=\"208\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"972\" data-original=\"https://pic1.zhimg.com/v2-4d0f480535467db9aaba0f35666fa468_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-4d0f480535467db9aaba0f35666fa468_b.jpg\"/></figure><p>我们再来提高下难度，看看列表和字典相互嵌套的情况，可以将代码和注释结合起来看。<br/> </p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-8bc283f3226b34f70e877cb7e8ea0542_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"829\" data-rawheight=\"493\" class=\"origin_image zh-lightbox-thumb\" width=\"829\" data-original=\"https://pic3.zhimg.com/v2-8bc283f3226b34f70e877cb7e8ea0542_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;829&#39; height=&#39;493&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"829\" data-rawheight=\"493\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"829\" data-original=\"https://pic3.zhimg.com/v2-8bc283f3226b34f70e877cb7e8ea0542_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-8bc283f3226b34f70e877cb7e8ea0542_b.jpg\"/></figure><p>同样，现在请你自己试验一下吧，请在下列代码基础上 1.打印出字典<code>students</code>里的小刚 2.打印出列表<code>scores</code>里小刚的分数100。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-a2af1a6aaeef1beeb8b741a0392fa661_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1324\" data-rawheight=\"315\" class=\"origin_image zh-lightbox-thumb\" width=\"1324\" data-original=\"https://pic2.zhimg.com/v2-a2af1a6aaeef1beeb8b741a0392fa661_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1324&#39; height=&#39;315&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1324\" data-rawheight=\"315\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1324\" data-original=\"https://pic2.zhimg.com/v2-a2af1a6aaeef1beeb8b741a0392fa661_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-a2af1a6aaeef1beeb8b741a0392fa661_b.jpg\"/></figure><p>那么，这一节课就讲到这里啦。记得多复习，课后练习也要去做，能帮助你更好更快地巩固所学知识。</p><p>下节课，我们会开始接触Python里非常重要的工具——循环，有了它，许多重复性工作就可以让计算机帮我们完成。下节课见！</p><p class=\"ztext-empty-paragraph\"><br/></p><p>----------------------------------------------------------------------------------------------</p><p>更多Pthon课程请扫码关注</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image\" width=\"336\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;336&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"336\" data-actualsrc=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }, 
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/65898938", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 5, 
            "title": "Python语言难学吗？第9讲——列表", 
            "content": "<p>之前，我们已经掌握了3种数据类型：整数、浮点数、字符串。这一课我们要学习两种新的数据类型：列表、字典。</p><p>不过在这之前，我想先和你聊一聊“计算机”与“数据”之间水乳交融的关系。</p><p>计算机名字里就有【计算】两字，如果计算机离开了数据，就如巧妇难为无米之炊。所以说，数据对于计算机很重要。</p><p>总的来说，计算机有3种方式利用数据：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-24bbe188c85b52eb2bf5f36785ea28ed_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"740\" data-rawheight=\"335\" class=\"origin_image zh-lightbox-thumb\" width=\"740\" data-original=\"https://pic2.zhimg.com/v2-24bbe188c85b52eb2bf5f36785ea28ed_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;740&#39; height=&#39;335&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"740\" data-rawheight=\"335\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"740\" data-original=\"https://pic2.zhimg.com/v2-24bbe188c85b52eb2bf5f36785ea28ed_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-24bbe188c85b52eb2bf5f36785ea28ed_b.jpg\"/></figure><p>第一种：直接使用数据，比如<code>print()</code>语句，可以直接把我们提供的数据打印出来，通常所见即所得。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-4c94c08f6f921389c2a19e6059d26d90_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"989\" data-rawheight=\"210\" class=\"origin_image zh-lightbox-thumb\" width=\"989\" data-original=\"https://pic1.zhimg.com/v2-4c94c08f6f921389c2a19e6059d26d90_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;989&#39; height=&#39;210&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"989\" data-rawheight=\"210\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"989\" data-original=\"https://pic1.zhimg.com/v2-4c94c08f6f921389c2a19e6059d26d90_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-4c94c08f6f921389c2a19e6059d26d90_b.jpg\"/></figure><p>第二种：计算和加工数据，让我们看个例子：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-edcec3c49a07c58fc43b6c3b0b986e8b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"993\" data-rawheight=\"214\" class=\"origin_image zh-lightbox-thumb\" width=\"993\" data-original=\"https://pic4.zhimg.com/v2-edcec3c49a07c58fc43b6c3b0b986e8b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;993&#39; height=&#39;214&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"993\" data-rawheight=\"214\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"993\" data-original=\"https://pic4.zhimg.com/v2-edcec3c49a07c58fc43b6c3b0b986e8b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-edcec3c49a07c58fc43b6c3b0b986e8b_b.jpg\"/></figure><p>这两个print语句，计算机都是先【计算和加工数据】，再把<code>print()</code>括号里的数据打印到屏幕里。</p><p>我们再看看第三种：用数据做判断是怎么一回事。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-855f50b68418d7cc9cf528bc234c3afc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1340\" data-rawheight=\"417\" class=\"origin_image zh-lightbox-thumb\" width=\"1340\" data-original=\"https://pic1.zhimg.com/v2-855f50b68418d7cc9cf528bc234c3afc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1340&#39; height=&#39;417&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1340\" data-rawheight=\"417\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1340\" data-original=\"https://pic1.zhimg.com/v2-855f50b68418d7cc9cf528bc234c3afc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-855f50b68418d7cc9cf528bc234c3afc_b.jpg\"/></figure><p>可以看出，计算机在这里是【利用数据用做逻辑判断】：</p><p>那现在我们对【计算机】和【数据】的关系有了一定的了解吧，也正因为数据的重要性，所以对于编程新手来说，掌握主要的数据类型是重中之重。</p><p>这一关，我们就会接触两种新的数据类型——列表和字典，你会发现，它们比我们学过的“整数、浮点数、字符串”更加高级，更有“包容性”。</p><p>为什么这么说呢？前面学的几种类型，每次赋值只能保存一条数据。如果我们需要使用很多数据的时候，就会很不方便。</p><p>而列表和字典的作用，就是可以帮我们存储大量数据，让计算机去读取和操作。</p><h2><b>列表</b></h2><p>首先我们来看看列表。为了感受列表的作用，我们来玩玩角色扮演的游戏：从现在起，你就是一个新班级的班主任了！</p><p>第一天，班上来了50个新鲜的面孔。你让学生把名字写在花名册上，方便上课时一个个点名。</p><p>如果只能用已学的知识来解决这个问题，我们需要将每个学生的名字都赋值到一个变量名，然后再分别打印。代码是这样的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-4c175f98bbd995b1de01cb0cf4838b71_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1325\" data-rawheight=\"546\" class=\"origin_image zh-lightbox-thumb\" width=\"1325\" data-original=\"https://pic2.zhimg.com/v2-4c175f98bbd995b1de01cb0cf4838b71_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1325&#39; height=&#39;546&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1325\" data-rawheight=\"546\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1325\" data-original=\"https://pic2.zhimg.com/v2-4c175f98bbd995b1de01cb0cf4838b71_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-4c175f98bbd995b1de01cb0cf4838b71_b.jpg\"/></figure><p>但我们知道，在编程世界里，最忌讳的就是“重复性劳动”。这一百行代码打下来，即使是复制黏贴修改的，分分钟也要抓狂。</p><p>实际上呢，只要学会了列表和循环（剧透：循环下一关会讲，可先忽略），3行代码就能搞定。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-de8021f6e00f4aa645583e4790c7a290_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1308\" data-rawheight=\"492\" class=\"origin_image zh-lightbox-thumb\" width=\"1308\" data-original=\"https://pic1.zhimg.com/v2-de8021f6e00f4aa645583e4790c7a290_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1308&#39; height=&#39;492&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1308\" data-rawheight=\"492\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1308\" data-original=\"https://pic1.zhimg.com/v2-de8021f6e00f4aa645583e4790c7a290_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-de8021f6e00f4aa645583e4790c7a290_b.jpg\"/></figure><p>发现了吗？在第一行代码里，赋值号右边不再像字符串那样只能放一个名字，而是放了50个。</p><p>这就是我们要新认识的第一个数据类型——列表，下面我会从4个方面来介绍列表的用法。</p><h2><b>什么是列表</b></h2><p>首先，我们来看看列表（list）的代码格式：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-220b9c56c47bf36fe3d911d9bbbc6ffc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"830\" data-rawheight=\"393\" class=\"origin_image zh-lightbox-thumb\" width=\"830\" data-original=\"https://pic1.zhimg.com/v2-220b9c56c47bf36fe3d911d9bbbc6ffc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;830&#39; height=&#39;393&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"830\" data-rawheight=\"393\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"830\" data-original=\"https://pic1.zhimg.com/v2-220b9c56c47bf36fe3d911d9bbbc6ffc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-220b9c56c47bf36fe3d911d9bbbc6ffc_b.jpg\"/></figure><p>图中的<code>[&#39;小明&#39;,&#39;小红&#39;,&#39;小刚&#39;]</code>就是一个列表。</p><p>一个列表需要用中括号<code>[ ]</code>把里面的各种数据框起来，里面的每一个数据叫作“元素”。每个元素之间都要用英文逗号隔开。</p><p>这就是列表的标准格式，现在请你创建一个列表名为list1的列表，列表里有三个元素：<code>&#39;小明&#39;、18、1.70</code>，并将其打印出来：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-30e139e5ab2eb441dda75d4616d4dbfd_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"999\" data-rawheight=\"148\" class=\"origin_image zh-lightbox-thumb\" width=\"999\" data-original=\"https://pic2.zhimg.com/v2-30e139e5ab2eb441dda75d4616d4dbfd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;999&#39; height=&#39;148&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"999\" data-rawheight=\"148\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"999\" data-original=\"https://pic2.zhimg.com/v2-30e139e5ab2eb441dda75d4616d4dbfd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-30e139e5ab2eb441dda75d4616d4dbfd_b.png\"/></figure><p>恭喜你，成功掌握了列表的规范写法以及打印列表的方法。而且，你也用代码验证了一个知识点：列表很包容，各种类型的数据（整数/浮点数/字符串）无所不能包。</p><p>不过，很多时候，我们只需要用到列表中的某一个元素，好比老师上课点名时，不会说“所有的同学都站起来回答一下这个问题”。</p><p>所以，问题来了：列表中具体的某个元素，要如何取出来？</p><h2><b>从列表提取单个元素</b></h2><p>这就涉及到一个新的知识点：偏移量。列表中的各个元素，好比教室里的某排学生那样，是有序地排列的，也就是说，每个元素都有自己的位置编号（即偏移量）。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-a4ec081560c6e9a4b0a878919a84024c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"797\" data-rawheight=\"354\" class=\"origin_image zh-lightbox-thumb\" width=\"797\" data-original=\"https://pic1.zhimg.com/v2-a4ec081560c6e9a4b0a878919a84024c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;797&#39; height=&#39;354&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"797\" data-rawheight=\"354\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"797\" data-original=\"https://pic1.zhimg.com/v2-a4ec081560c6e9a4b0a878919a84024c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-a4ec081560c6e9a4b0a878919a84024c_b.jpg\"/></figure><p>从上图可得：1.偏移量是从0开始的，而非我们习惯的从1开始；2.列表名后加带偏移量的中括号，就能取到相应位置的元素。</p><p>所以，我们可以通过偏移量来对列表进行索引（可理解为搜索定位），读取我们所需的元素。</p><p>假如你现在要喊小明来回答问题，用代码怎么写呢？请补充下列代码，利用列表的偏移量来打印出&#39;小明&#39;这个元素。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-81148151120339f40e0c128dc7ba4ff5_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"988\" data-rawheight=\"135\" class=\"origin_image zh-lightbox-thumb\" width=\"988\" data-original=\"https://pic2.zhimg.com/v2-81148151120339f40e0c128dc7ba4ff5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;988&#39; height=&#39;135&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"988\" data-rawheight=\"135\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"988\" data-original=\"https://pic2.zhimg.com/v2-81148151120339f40e0c128dc7ba4ff5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-81148151120339f40e0c128dc7ba4ff5_b.png\"/></figure><p>现在我们已经知道了如何从列表中取出一个元素，那如果要同时取好几个呢？所以我们接着学习如何从列表中取出多个元素。</p><h2><b>从列表提取多个元素</b></h2><p>请运行以下代码，对比代码和终端最后的结果，尝试发现当中的规律。</p><p>提醒：下列<code>:</code>左右两边的数字指的是列表中元素的偏移量，记住偏移量（索引）始终是从0开始的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-61ef45c750bd975682d593c8e1d76ade_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"989\" data-rawheight=\"247\" class=\"origin_image zh-lightbox-thumb\" width=\"989\" data-original=\"https://pic3.zhimg.com/v2-61ef45c750bd975682d593c8e1d76ade_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;989&#39; height=&#39;247&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"989\" data-rawheight=\"247\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"989\" data-original=\"https://pic3.zhimg.com/v2-61ef45c750bd975682d593c8e1d76ade_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-61ef45c750bd975682d593c8e1d76ade_b.jpg\"/></figure><p>上面这种用冒号来截取列表元素的操作叫作切片，顾名思义，就是将列表的某个片段拿出来处理。这种切片的方式可以让我们从列表中取出多个元素。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-7c14933bca910e38c50fac049ce3f616_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"285\" data-rawheight=\"398\" class=\"content_image\" width=\"285\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;285&#39; height=&#39;398&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"285\" data-rawheight=\"398\" class=\"content_image lazy\" width=\"285\" data-actualsrc=\"https://pic3.zhimg.com/v2-7c14933bca910e38c50fac049ce3f616_b.jpg\"/></figure><p><b>列表切片口诀：左右空，取到头。左要取，右不取。</b></p><p>前半句：冒号左边空，就要从偏移量为0的元素开始取；右边空，就要取到列表的最后一个元素。后半句：冒号左边数字对应的元素要拿，右边的不动（可再回顾下代码）。</p><p>现在就请你来试验一下吧，请修改代码，用切片将列表中小明和小红两个元素一起取出来。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-792b8ccb73731677314373354656660e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"979\" data-rawheight=\"206\" class=\"origin_image zh-lightbox-thumb\" width=\"979\" data-original=\"https://pic3.zhimg.com/v2-792b8ccb73731677314373354656660e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;979&#39; height=&#39;206&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"979\" data-rawheight=\"206\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"979\" data-original=\"https://pic3.zhimg.com/v2-792b8ccb73731677314373354656660e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-792b8ccb73731677314373354656660e_b.jpg\"/></figure><p>另外，我们要注意一个细节：偏移量取到的是列表中的元素，而切片则是截取了列表的某部分，所以还是列表，请你运行下列代码看一看。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-500762dc99e2f8550051b537c5dfd83c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"955\" data-rawheight=\"227\" class=\"origin_image zh-lightbox-thumb\" width=\"955\" data-original=\"https://pic1.zhimg.com/v2-500762dc99e2f8550051b537c5dfd83c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;955&#39; height=&#39;227&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"955\" data-rawheight=\"227\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"955\" data-original=\"https://pic1.zhimg.com/v2-500762dc99e2f8550051b537c5dfd83c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-500762dc99e2f8550051b537c5dfd83c_b.jpg\"/></figure><p>学完了如何取出列表中的元素，我们接着往下看。</p><h2><b>给列表增加/删除元素</b></h2><p>过了一周，你正上着课呢，教导主任突然领了一个新学生“小美”，说是转校生，要插到你们班。这时，我们就需要用到append()函数给列表增加元素，append的意思是附加，增补。</p><p>我们还是通过代码来试验一番，请你运行代码，并思考规律：（注：报错后，可读一下报错信息，然后在第6行开头加个#号，将其注释掉再运行）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-3a96eddfa5b7815d197ae7365d977efa_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1357\" data-rawheight=\"254\" class=\"origin_image zh-lightbox-thumb\" width=\"1357\" data-original=\"https://pic3.zhimg.com/v2-3a96eddfa5b7815d197ae7365d977efa_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1357&#39; height=&#39;254&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1357\" data-rawheight=\"254\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1357\" data-original=\"https://pic3.zhimg.com/v2-3a96eddfa5b7815d197ae7365d977efa_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-3a96eddfa5b7815d197ae7365d977efa_b.jpg\"/></figure><p>你发现规律了吗？我们来解读一下报错信息和代码的结果：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-183852a2889bd1ecc6ce815ea274ca28_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"776\" data-rawheight=\"174\" class=\"origin_image zh-lightbox-thumb\" width=\"776\" data-original=\"https://pic1.zhimg.com/v2-183852a2889bd1ecc6ce815ea274ca28_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;776&#39; height=&#39;174&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"776\" data-rawheight=\"174\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"776\" data-original=\"https://pic1.zhimg.com/v2-183852a2889bd1ecc6ce815ea274ca28_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-183852a2889bd1ecc6ce815ea274ca28_b.jpg\"/></figure><p>这句话的意思是：append后的括号里只能接受一个参数，但却给了两个，也就是4和5。所以，用append()给列表增加元素，每次只能增加一个元素。</p><p>append函数并不生成一个新列表，而是让列表末尾新增一个元素。而且，列表长度可变，理论容量无限，所以支持任意的嵌套。</p><p>现在，请你把小美加入students列表中，并打印出列表，注意格式是<b><code>列表名.append( )</code>:</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-57dd7fdbe64a78232cc05a0543e09309_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"982\" data-rawheight=\"166\" class=\"origin_image zh-lightbox-thumb\" width=\"982\" data-original=\"https://pic2.zhimg.com/v2-57dd7fdbe64a78232cc05a0543e09309_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;982&#39; height=&#39;166&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"982\" data-rawheight=\"166\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"982\" data-original=\"https://pic2.zhimg.com/v2-57dd7fdbe64a78232cc05a0543e09309_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-57dd7fdbe64a78232cc05a0543e09309_b.jpg\"/></figure><p>又是新的一天，你接到一个电话，小红生病请假了，今天不来上课。所以，你要将小红从列表中删除。</p><p>提示：需要用到del语句。请你先读一下Python官方文档对“del语句”的解释：（懂得阅读官方文档也是编程学习中一个重要能力）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-a399c8327110e647b333fa131ed779bd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"795\" data-rawheight=\"571\" class=\"origin_image zh-lightbox-thumb\" width=\"795\" data-original=\"https://pic2.zhimg.com/v2-a399c8327110e647b333fa131ed779bd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;795&#39; height=&#39;571&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"795\" data-rawheight=\"571\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"795\" data-original=\"https://pic2.zhimg.com/v2-a399c8327110e647b333fa131ed779bd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-a399c8327110e647b333fa131ed779bd_b.jpg\"/></figure><p>请你根据上图中的知识，补全下面的代码，将&#39;小红&#39;从列表中删除，并打印出来：（语法是：<code>del 列表名[元素的索引]</code>）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-7317224943d21c292616025235ee14d3_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"154\" class=\"origin_image zh-lightbox-thumb\" width=\"960\" data-original=\"https://pic4.zhimg.com/v2-7317224943d21c292616025235ee14d3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;960&#39; height=&#39;154&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"154\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"960\" data-original=\"https://pic4.zhimg.com/v2-7317224943d21c292616025235ee14d3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-7317224943d21c292616025235ee14d3_b.png\"/></figure><p>事实上del语句非常方便，既能删除一个元素，也能一次删除多个元素（原理和切片类似，左取右不取）。</p><p>至此，我们对列表的基本概况已经摸了个遍，是时候总结一下了：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-b8c9e69be5713221ed7f0760ddb4e8c2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"582\" data-rawheight=\"581\" class=\"origin_image zh-lightbox-thumb\" width=\"582\" data-original=\"https://pic3.zhimg.com/v2-b8c9e69be5713221ed7f0760ddb4e8c2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;582&#39; height=&#39;581&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"582\" data-rawheight=\"581\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"582\" data-original=\"https://pic3.zhimg.com/v2-b8c9e69be5713221ed7f0760ddb4e8c2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-b8c9e69be5713221ed7f0760ddb4e8c2_b.jpg\"/></figure><p>掌握了这些，列表这种数据类型，你就算入门了。后续就是在练习和项目中不断积累经验，活用列表。下节课我们就来学习另外一种数据类型。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><br/>----------------------------------------------------------------------------------------------</p><p>更多Pthon课程请扫码关注</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image\" width=\"336\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;336&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"336\" data-actualsrc=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/64732233", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 0, 
            "title": "Pyhon的人工赋能", 
            "content": "<p>在编程界，有一句话非常出名，叫“Talk is cheap, show me the code.”——空谈无益，秀代码。</p><p>咱们现在就来体验一下Python如何施展人工智能的魔法：试着自己运行几段代码吧！</p><p>首先，来到你面前的是一个图像识别的小程序。它能做的是将写在纸上的文字，精准地识别出来。如下图：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-c51daa626c5603be0fcd71322be36ac6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"821\" data-rawheight=\"391\" class=\"origin_image zh-lightbox-thumb\" width=\"821\" data-original=\"https://pic3.zhimg.com/v2-c51daa626c5603be0fcd71322be36ac6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;821&#39; height=&#39;391&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"821\" data-rawheight=\"391\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"821\" data-original=\"https://pic3.zhimg.com/v2-c51daa626c5603be0fcd71322be36ac6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-c51daa626c5603be0fcd71322be36ac6_b.jpg\"/></figure><p>来，下面是一段已经写好的代码，请直接点击【运行】。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-38db528425c8511fe807fb0bf40afb19_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1340\" data-rawheight=\"457\" class=\"origin_image zh-lightbox-thumb\" width=\"1340\" data-original=\"https://pic2.zhimg.com/v2-38db528425c8511fe807fb0bf40afb19_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1340&#39; height=&#39;457&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1340\" data-rawheight=\"457\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1340\" data-original=\"https://pic2.zhimg.com/v2-38db528425c8511fe807fb0bf40afb19_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-38db528425c8511fe807fb0bf40afb19_b.jpg\"/></figure><p>你已经看到了，机器能精准地识别图片中的文字，这就是我们能通过Python帮计算机做到的：图像识别，让计算机拥有“眼睛”，看懂图片。</p><p>你知道，图像识别是人工智能领域的一个应用。下面，我们再来一个更厉害的：真正地运行一个人工智能小程序，和计算机进行“对话”。</p><p>请直接在左边的代码区点击<b>运行</b>，然后根据提示操作：第1步：在右边的<b>终端</b>区域（注意不是左边）任意写一个中文名词。第2步：敲击键盘的回车键执行。第3步：根据提示和计算机随便聊两句。</p><p>请直接在左边的代码区点击<b>运行</b>，然后根据提示操作：第1步：在右边的<b>终端</b>区域（注意不是左边）任意写一个中文名词。第2步：敲击键盘的回车键执行。第3步：根据提示和计算机随便聊两句。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-7dda7d48fc000dd50402803c4ed296b1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1345\" data-rawheight=\"578\" class=\"origin_image zh-lightbox-thumb\" width=\"1345\" data-original=\"https://pic2.zhimg.com/v2-7dda7d48fc000dd50402803c4ed296b1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1345&#39; height=&#39;578&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1345\" data-rawheight=\"578\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1345\" data-original=\"https://pic2.zhimg.com/v2-7dda7d48fc000dd50402803c4ed296b1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-7dda7d48fc000dd50402803c4ed296b1_b.jpg\"/></figure><p>你是不是看到在黑色的终端里，冒出了一个能够联想相关词汇的小机器人，正在试探着和你对话？</p><p>那么，恭喜你！你已经亲手运行了自己的人工智能小程序！</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>----------------------------------------------------------------------------------------------</p><p>更多Pthon课程请扫码关注</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image\" width=\"336\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;336&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"336\" data-actualsrc=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\"/></figure>", 
            "topic": [
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/65234331", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 7, 
            "title": "Python语言难学吗？第8讲——input()函数", 
            "content": "<p>在今天的课程里，你收到一封来自霍格沃兹魔法学院的入学信，这封入学信，将带你运用input()函数，开启与计算机实现“双向沟通”的新篇章。</p><p>下面，就到了你选择的时候了。请点击下方代码块左方的【运行】按钮，在右方【终端】区域，先【输入】你的所选的数字，再按回车键。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-4e23e7607cf79b2712a0456c746d1fd1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1349\" data-rawheight=\"596\" class=\"origin_image zh-lightbox-thumb\" width=\"1349\" data-original=\"https://pic2.zhimg.com/v2-4e23e7607cf79b2712a0456c746d1fd1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1349&#39; height=&#39;596&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1349\" data-rawheight=\"596\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1349\" data-original=\"https://pic2.zhimg.com/v2-4e23e7607cf79b2712a0456c746d1fd1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-4e23e7607cf79b2712a0456c746d1fd1_b.jpg\"/></figure><p>看到没，这就是你利用input()函数，与计算机进行的第一次互动式沟通。</p><p>想实现真正的人机<b>互动沟通</b>的关键，就是：有来有往。比如，校长问你要不要来霍格沃茨学魔法，需要给程序<b>输入</b>一个提问命令：你要来霍格沃茨吗？</p><p>程序得令后，立马把校长的提问一字不改地显示在你的计算机屏幕上，问：你要来霍格沃茨吗？</p><p>那么，这个人类用键盘向电脑提供指令，再通过电脑把问题显示在显示器上，等人回答的过程，就是通过input()函数实现的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-e2cf2f0e6469a1c9996cb86990b4696e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"775\" data-rawheight=\"485\" class=\"origin_image zh-lightbox-thumb\" width=\"775\" data-original=\"https://pic3.zhimg.com/v2-e2cf2f0e6469a1c9996cb86990b4696e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;775&#39; height=&#39;485&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"775\" data-rawheight=\"485\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"775\" data-original=\"https://pic3.zhimg.com/v2-e2cf2f0e6469a1c9996cb86990b4696e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-e2cf2f0e6469a1c9996cb86990b4696e_b.jpg\"/></figure><p>那么，input()函数的具体用法、背后的逻辑究竟是什么呢？这节课，老师会从四个角度逐个击破input()函数。</p><h2><b>input()函数的使用</b></h2><p>首先，让我们通过一段代码，来看一看input()函数是如何使用的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-0ee97ce7860475309620e07d0771b7d5_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"772\" data-rawheight=\"48\" class=\"origin_image zh-lightbox-thumb\" width=\"772\" data-original=\"https://pic2.zhimg.com/v2-0ee97ce7860475309620e07d0771b7d5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;772&#39; height=&#39;48&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"772\" data-rawheight=\"48\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"772\" data-original=\"https://pic2.zhimg.com/v2-0ee97ce7860475309620e07d0771b7d5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-0ee97ce7860475309620e07d0771b7d5_b.png\"/></figure><p>input()函数是输入函数。就上面例子来讲，它需要你<b>输入</b>针对括号内<b>&#39;请在以下四个选项【格兰芬多；斯莱特林；拉文克劳；赫奇帕奇】中，输入你想去的学院名字:&#39;</b>的答案。</p><p>所以，当你在函数的括号内写出问题时，input()函数会将此问题原样显示在屏幕上，并在终端区域等待你针对此问题的回答。</p><p>可是，我们为什么要在<b>终端</b>处输入回答呢？不输入行不行？</p><p>事实上，我们可以把input()函数当作一扇链接现实世界与代码世界的门。</p><p>当问题从代码世界传递给我们，可我们却没有回答时，这扇等待<b>输入</b>的input()大门，就会一直处于敞开状态，一直等着你往里送回答。</p><p>而当我们输入信息后，这扇input()大门便会关上，继续执行下面的命令。</p><p>input()函数是输入函数，当你在函数的括号内写出问题时，input()函数会将此问题原样显示在屏幕上，并在终端区域等待你针对此问题的回答。</p><p>下面，我们来总结一下input()函数的使用方法：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-e8fd0b7a6ba0288434224662b2291bda_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"329\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-e8fd0b7a6ba0288434224662b2291bda_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;329&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"329\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-e8fd0b7a6ba0288434224662b2291bda_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-e8fd0b7a6ba0288434224662b2291bda_b.jpg\"/></figure><p>下面，我们来亲自感受一下input()函数的魔法：1.请将代码串<b>input(&#39;请在以下四个选项【格兰芬多；斯莱特林；拉文克劳；赫奇帕奇】中，输入你想去的学院名字:&#39;)</b>写在下面代码框中；2.点击运行后，在右侧终端处输入自己的选择；3.输入答案后要按回车键（如显示运行通过，就请继续课程）。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-4daaa84029b89d7830473af78615a7e8_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1352\" data-rawheight=\"164\" class=\"origin_image zh-lightbox-thumb\" width=\"1352\" data-original=\"https://pic1.zhimg.com/v2-4daaa84029b89d7830473af78615a7e8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1352&#39; height=&#39;164&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1352\" data-rawheight=\"164\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1352\" data-original=\"https://pic1.zhimg.com/v2-4daaa84029b89d7830473af78615a7e8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-4daaa84029b89d7830473af78615a7e8_b.png\"/></figure><p>怎么样？输入答案按回车键后，是不是除了自己输入的信息，其他什么都没有？但是程序又没有报错，这是为什么呢？</p><p>我们反复强调代码是一行行往下执行命令的，所以即使input()函数通过了，门关上了，由于input()函数下没有其他命令，自然就不会有结果产生。</p><p>但是，我们输入的回答并没有丢失，它被计算机储存在了程序中。</p><p>那么，如果我想要从程序海洋中找到刚刚输入的回答，利用它产生一个结果，比如表达学院对我的欢迎要怎么办？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-ffc5681f633a2150149a8a18756f3558_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"778\" data-rawheight=\"168\" class=\"origin_image zh-lightbox-thumb\" width=\"778\" data-original=\"https://pic1.zhimg.com/v2-ffc5681f633a2150149a8a18756f3558_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;778&#39; height=&#39;168&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"778\" data-rawheight=\"168\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"778\" data-original=\"https://pic1.zhimg.com/v2-ffc5681f633a2150149a8a18756f3558_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-ffc5681f633a2150149a8a18756f3558_b.jpg\"/></figure><p>咱先别急着码代码，按老规矩我们先梳理一下思维逻辑。首先，学院为了做好准备欢迎你，它们得知道你选择得学院，所以首先得搜集你心仪学院的信息。</p><p>那么，我们思维的第一步，就是使用input()函数搜集信息：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-55688db814c2bc53e25cede58482d8aa_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"772\" data-rawheight=\"80\" class=\"origin_image zh-lightbox-thumb\" width=\"772\" data-original=\"https://pic3.zhimg.com/v2-55688db814c2bc53e25cede58482d8aa_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;772&#39; height=&#39;80&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"772\" data-rawheight=\"80\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"772\" data-original=\"https://pic3.zhimg.com/v2-55688db814c2bc53e25cede58482d8aa_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-55688db814c2bc53e25cede58482d8aa_b.png\"/></figure><p>然而，当我想将搜集到的数据和【&#39;学院欢迎你，小萌新!&#39;】拼接起来，并打印出结果时，问题来了。虽然我用input()函数搜集到了一个信息，可我如何从程序海洋中调出这个信息，进行数据拼接呢？</p><p>这就涉及到了input()函数的第二个知识点——函数结果的赋值。</p><h2><b>input()函数结果的赋值</b></h2><p>首先，我们可以对变量进行赋值，这样当我们想提取数据时，只要直接打印变量名，就能唤醒程序对数据的记忆。</p><p>这个赋值逻辑，在input()函数中也是行得通的。我们也可以通过赋值，达到随时提取<b>输入</b>结果的目的。但是在逻辑层面，我们需要拐一个弯。</p><p>比如，以我们下面这串代码为例：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-de82957a689627b70ec4d90300c7d4f0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"331\" data-rawheight=\"72\" class=\"content_image\" width=\"331\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;331&#39; height=&#39;72&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"331\" data-rawheight=\"72\" class=\"content_image lazy\" width=\"331\" data-actualsrc=\"https://pic1.zhimg.com/v2-de82957a689627b70ec4d90300c7d4f0_b.jpg\"/></figure><p>虽然看上去像是给input()函数赋值，但实际上，我们是将input()函数的执行结果（收集的信息）赋值给变量<b>name</b>。</p><p>通俗来讲，我们放进<b>name</b>这个盒子里的东西，不是input()函数中提的问题，而是我们通过input()函数收集到的<b>别人的答案</b>。</p><p>这样，不管你在<b>终端</b>输入的内容是什么，不管你的回答改变多少次。只要是对input()函数所提问题的回答，都会被存储在变量中。等待你打印变量时，将回答提取出来，展示在显示屏上。</p><p>而这些展示在<b>终端</b>的信息/回答/数据，在代码世界，我们可以称其为<b>输入值</b>——我们输入给函数的内容。</p><p>下面，我们来自己试一下：</p><p>请你将<b>input（&#39;请在以下四个选项【格兰芬多；斯莱特林；拉文克劳；赫奇帕奇】中，输入你想去的学院名字: &#39;）</b>的结果赋值给<b>name</b>，然后打印出变量<b>name</b>，看是否能出现你输入的回答。【要点提示：赋值，input()函数，print()函数】</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-9161b74d87a905c1553f7ec2201fb402_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"856\" data-rawheight=\"74\" class=\"origin_image zh-lightbox-thumb\" width=\"856\" data-original=\"https://pic3.zhimg.com/v2-9161b74d87a905c1553f7ec2201fb402_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;856&#39; height=&#39;74&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"856\" data-rawheight=\"74\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"856\" data-original=\"https://pic3.zhimg.com/v2-9161b74d87a905c1553f7ec2201fb402_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-9161b74d87a905c1553f7ec2201fb402_b.png\"/></figure><p>下面，请你再来秀一波操作：1.请求输入<b>请在以下选项【厄里斯魔镜；时间转换器；飞天扫帚；隐形斗篷】中，选择出你最想拥有的魔法物品：</b>；2. 将结果赋值给变量magic；3. 打印结果<b>magic+&#39;是我最想拥有的魔法！&#39;</b>【要点提示：赋值，input()函数，变量拼接，print()函数】</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-3977264c0e9f4373ec42475a64e292bf_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1350\" data-rawheight=\"167\" class=\"origin_image zh-lightbox-thumb\" width=\"1350\" data-original=\"https://pic4.zhimg.com/v2-3977264c0e9f4373ec42475a64e292bf_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1350&#39; height=&#39;167&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1350\" data-rawheight=\"167\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1350\" data-original=\"https://pic4.zhimg.com/v2-3977264c0e9f4373ec42475a64e292bf_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-3977264c0e9f4373ec42475a64e292bf_b.png\"/></figure><p>这里有一个重点，在我们理解代码时，脑中的思维顺序是先搜集信息，再把input()函数的结果赋给变量。</p><p>但是为了书写规范及防止漏掉信息，我们需要按照代码书写格式，优先对input()函数的结果进行赋值。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-7daeab624a8ccd76aef25633b84e2d32_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"552\" data-rawheight=\"258\" class=\"origin_image zh-lightbox-thumb\" width=\"552\" data-original=\"https://pic3.zhimg.com/v2-7daeab624a8ccd76aef25633b84e2d32_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;552&#39; height=&#39;258&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"552\" data-rawheight=\"258\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"552\" data-original=\"https://pic3.zhimg.com/v2-7daeab624a8ccd76aef25633b84e2d32_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-7daeab624a8ccd76aef25633b84e2d32_b.jpg\"/></figure><p>我们再用一张图，来直观地总结一下。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-3f7b7c10d611040d304946b09fd01c11_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"616\" data-rawheight=\"362\" class=\"origin_image zh-lightbox-thumb\" width=\"616\" data-original=\"https://pic2.zhimg.com/v2-3f7b7c10d611040d304946b09fd01c11_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;616&#39; height=&#39;362&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"616\" data-rawheight=\"362\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"616\" data-original=\"https://pic2.zhimg.com/v2-3f7b7c10d611040d304946b09fd01c11_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-3f7b7c10d611040d304946b09fd01c11_b.jpg\"/></figure><h2><b>input()函数的数据类型</b></h2><p>现在，让我们先从计算机语言的逻辑，按行拆解一下这段代码组：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-a14d22fa51f75d60a1b2a435f032d238_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"508\" data-rawheight=\"381\" class=\"origin_image zh-lightbox-thumb\" width=\"508\" data-original=\"https://pic1.zhimg.com/v2-a14d22fa51f75d60a1b2a435f032d238_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;508&#39; height=&#39;381&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"508\" data-rawheight=\"381\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"508\" data-original=\"https://pic1.zhimg.com/v2-a14d22fa51f75d60a1b2a435f032d238_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-a14d22fa51f75d60a1b2a435f032d238_b.jpg\"/></figure><p>那么，我们先来看看第一行代码中的赋值语句。</p><p>首先，我们从整体来看，这段代码表示的是——利用input()函数接收数据，并将数据赋值给变量<b>choice</b>。</p><p>其次，我们再细分着看，这行代码的每个部分代表着什么：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-19ad319f73c4545c40f9e6d4fbae586d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"752\" data-rawheight=\"303\" class=\"origin_image zh-lightbox-thumb\" width=\"752\" data-original=\"https://pic2.zhimg.com/v2-19ad319f73c4545c40f9e6d4fbae586d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;752&#39; height=&#39;303&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"752\" data-rawheight=\"303\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"752\" data-original=\"https://pic2.zhimg.com/v2-19ad319f73c4545c40f9e6d4fbae586d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-19ad319f73c4545c40f9e6d4fbae586d_b.jpg\"/></figure><p>对于input()函数来说，不管我们输入的回答是什么，不管你输入的是整数1234，还是字符串『隐形斗篷是我最想拥有的魔法』，input()函数的输入值（搜集到的回答），永远会被【强制性】地转换为【字符串】类型。（Python3固定规则）</p><p>不信？用我们用之前学过的type()函数检验一下？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-b1cd69dc55d08bd1831ff36f23304eab_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"939\" data-rawheight=\"156\" class=\"origin_image zh-lightbox-thumb\" width=\"939\" data-original=\"https://pic4.zhimg.com/v2-b1cd69dc55d08bd1831ff36f23304eab_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;939&#39; height=&#39;156&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"939\" data-rawheight=\"156\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"939\" data-original=\"https://pic4.zhimg.com/v2-b1cd69dc55d08bd1831ff36f23304eab_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-b1cd69dc55d08bd1831ff36f23304eab_b.png\"/></figure><p>是不是呀，我们输入的整数【1】或【2】就会被强制地转换为字符串的【&#39;1&#39;】或【&#39;2&#39;】。</p><p>所以，不管我们在<b>终端</b>区域输入什么，input()函数的输入值一定是【字符串】。</p><p>就这样，由于我们用赋值运算符【＝】把input()函数的字符串结果，赋给了变量<b>choice</b>，所以这个变量也一定是字符串类型。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-cbe7b14ae5d10b03703386f9eb4d4cd6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"592\" data-rawheight=\"263\" class=\"origin_image zh-lightbox-thumb\" width=\"592\" data-original=\"https://pic3.zhimg.com/v2-cbe7b14ae5d10b03703386f9eb4d4cd6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;592&#39; height=&#39;263&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"592\" data-rawheight=\"263\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"592\" data-original=\"https://pic3.zhimg.com/v2-cbe7b14ae5d10b03703386f9eb4d4cd6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-cbe7b14ae5d10b03703386f9eb4d4cd6_b.jpg\"/></figure><p>现在，我们确定了变量<b>choice</b>的数据类型是字符串。下面，我们再来看后面的代码。</p><p>我们先来看第一块代码组的if条件语句【if choice==1】并进行拆解：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-cc7c81327326506cf1dad2700a49c540_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"715\" data-rawheight=\"317\" class=\"origin_image zh-lightbox-thumb\" width=\"715\" data-original=\"https://pic1.zhimg.com/v2-cc7c81327326506cf1dad2700a49c540_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;715&#39; height=&#39;317&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"715\" data-rawheight=\"317\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"715\" data-original=\"https://pic1.zhimg.com/v2-cc7c81327326506cf1dad2700a49c540_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-cc7c81327326506cf1dad2700a49c540_b.jpg\"/></figure><p>根据之前所学的条件判断知识，我们可以将第一行的if条件解释为：如果变量<b>choice</b>等于整数<b>1</b>时，则执行此if条件下的结果。</p><p>这回你是不是发现了什么问题？还记得我们在拆解input()函数时，提到的变量<b>choice</b>的数据类型吗？</p><p>在第一次变量赋值时，input()函数的输入值是字符串，<b>&#39;1&#39;</b>也是字符串；但是到了if条件判断时，if的条件变成了【choice == 1】—— 1没有了引号是个整数类型。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c73e5f1b66da42837859c83d9813ff87_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"882\" data-rawheight=\"367\" class=\"origin_image zh-lightbox-thumb\" width=\"882\" data-original=\"https://pic4.zhimg.com/v2-c73e5f1b66da42837859c83d9813ff87_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;882&#39; height=&#39;367&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"882\" data-rawheight=\"367\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"882\" data-original=\"https://pic4.zhimg.com/v2-c73e5f1b66da42837859c83d9813ff87_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-c73e5f1b66da42837859c83d9813ff87_b.jpg\"/></figure><p>就这样，因为我们输入的信息永远是<b>字符串</b>，choice是一个字符串类型，而1是一个整数类型，它们当然无法相等，条件【choice == 1】无法成立，只能执行else下面的操作——打印『您可是被梅林选中的孩子，我们不接受这个选项。』</p><p>下面，请你展示自己的魔法。请把下段代码中<b>if条件</b>的错误语句，改为正确的等于<b>字符串</b>类型，写在下方代码框中，并点击运行。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-35ae6ba7208f3c47214049879ed0e851_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1363\" data-rawheight=\"300\" class=\"origin_image zh-lightbox-thumb\" width=\"1363\" data-original=\"https://pic2.zhimg.com/v2-35ae6ba7208f3c47214049879ed0e851_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1363&#39; height=&#39;300&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1363\" data-rawheight=\"300\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1363\" data-original=\"https://pic2.zhimg.com/v2-35ae6ba7208f3c47214049879ed0e851_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-35ae6ba7208f3c47214049879ed0e851_b.jpg\"/></figure><p>我们来通过一张图再来加深一下，这个在未来非常有用，也非常重要的知识点：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-491623a0de3dccfdd96c2c1cc4a612bc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"693\" data-rawheight=\"310\" class=\"origin_image zh-lightbox-thumb\" width=\"693\" data-original=\"https://pic1.zhimg.com/v2-491623a0de3dccfdd96c2c1cc4a612bc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;693&#39; height=&#39;310&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"693\" data-rawheight=\"310\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"693\" data-original=\"https://pic1.zhimg.com/v2-491623a0de3dccfdd96c2c1cc4a612bc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-491623a0de3dccfdd96c2c1cc4a612bc_b.jpg\"/></figure><h2><b>input()函数结果的强制转换</b></h2><p>input()函数搜集到的信息固定是字符串嘛？还能变整数呢？</p><p>没错，input()函数的输入值在某些情况下，是可以变为<b>整数</b>的。那么，你还记得<b>字符串</b>转变为<b>整数</b>要怎么做吗？</p><p>int()可以将<b>字符串</b>强制性地转换为<b>整数</b>。</p><p>有了int()函数，我们就可以从input()函数的源头，将输入的内容转换为<b>整数</b>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-ad749ebc48114f1bf7b6b42145ad58c4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"392\" data-rawheight=\"69\" class=\"content_image\" width=\"392\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;392&#39; height=&#39;69&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"392\" data-rawheight=\"69\" class=\"content_image lazy\" width=\"392\" data-actualsrc=\"https://pic1.zhimg.com/v2-ad749ebc48114f1bf7b6b42145ad58c4_b.jpg\"/></figure><p>但是，这串代码看起来像是把input()函数整个强制转换了。</p><p>可实际上，我们是将input()函数取得的结果，进行强制转换，并将强制转换的结果赋值存在名为<b>choice</b>的变量盒里。</p><p>这样，就算if条件是<b>整数</b>，程序也可以准确运行。</p><p>下面，请你接下我的接力棒。补齐下面的条件判断代码：如果选择1 ，打印“霍格沃茨欢迎您的到来”；其他时，打印“您可是被梅林选中的孩子，我们不接受这个选项”。【要点提示：if……else条件判断，变量赋值，等于整数】</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-e4527fb4b96723f15a0425f81ebddc1c_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1352\" data-rawheight=\"199\" class=\"origin_image zh-lightbox-thumb\" width=\"1352\" data-original=\"https://pic1.zhimg.com/v2-e4527fb4b96723f15a0425f81ebddc1c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1352&#39; height=&#39;199&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1352\" data-rawheight=\"199\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1352\" data-original=\"https://pic1.zhimg.com/v2-e4527fb4b96723f15a0425f81ebddc1c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e4527fb4b96723f15a0425f81ebddc1c_b.png\"/></figure><p>那么，我们什么时候会用到，input()函数结果的强制转换呢？</p><p>思路很简单，当你想要的答案是数字时，比如年龄：<br/> </p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-29dd7a23dc09c8f0c8195c61213470d2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"525\" class=\"origin_image zh-lightbox-thumb\" width=\"570\" data-original=\"https://pic3.zhimg.com/v2-29dd7a23dc09c8f0c8195c61213470d2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;570&#39; height=&#39;525&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"525\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"570\" data-original=\"https://pic3.zhimg.com/v2-29dd7a23dc09c8f0c8195c61213470d2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-29dd7a23dc09c8f0c8195c61213470d2_b.jpg\"/></figure><p>再比如需要输入的信息是时间，或者工资等数字时：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-142ec66e5d1bc0ea3ef783fca94560cf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"414\" data-rawheight=\"371\" class=\"content_image\" width=\"414\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;414&#39; height=&#39;371&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"414\" data-rawheight=\"371\" class=\"content_image lazy\" width=\"414\" data-actualsrc=\"https://pic4.zhimg.com/v2-142ec66e5d1bc0ea3ef783fca94560cf_b.jpg\"/></figure><p>最后，我们再来归纳一下<b>input()函数数据类型强制转换</b>的知识点：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-d7ec4b2114c68625977bc9fea5c76add_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"732\" data-rawheight=\"252\" class=\"origin_image zh-lightbox-thumb\" width=\"732\" data-original=\"https://pic2.zhimg.com/v2-d7ec4b2114c68625977bc9fea5c76add_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;732&#39; height=&#39;252&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"732\" data-rawheight=\"252\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"732\" data-original=\"https://pic2.zhimg.com/v2-d7ec4b2114c68625977bc9fea5c76add_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-d7ec4b2114c68625977bc9fea5c76add_b.jpg\"/></figure><p>input()函数的所有知识点我们就介绍完了。最后，我们再来整理一下input()函数的重点内容。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-47de901a522b43c3a512af30c836ad97_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"914\" data-rawheight=\"434\" class=\"origin_image zh-lightbox-thumb\" width=\"914\" data-original=\"https://pic4.zhimg.com/v2-47de901a522b43c3a512af30c836ad97_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;914&#39; height=&#39;434&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"914\" data-rawheight=\"434\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"914\" data-original=\"https://pic4.zhimg.com/v2-47de901a522b43c3a512af30c836ad97_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-47de901a522b43c3a512af30c836ad97_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>----------------------------------------------------------------------------------------------</p><p>更多Pthon课程请扫码关注</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image\" width=\"336\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;336&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"336\" data-actualsrc=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/64986311", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 3, 
            "title": "Python语言难学吗？第7讲——如何写嵌套代码？", 
            "content": "<p>if嵌套由于涉及多个条件判断，并且是条件套条件的判断，所以为了理清逻辑，我们可采用<b>扒洋葱</b>大法写<b>if嵌套</b>。</p><p>用“彼得·帕克的历史成绩”举例，第一步就要搞定最外层那张皮，将最基础的命令和条件写出来。</p><p>那么，我们的思考逻辑应该是这样（1）把彼得·帕克<b>26</b>分的历史成绩赋给变量<b>historyscore</b>；（2）用<b>if…else</b>写最基础判断条件<b>如果historyscore&gt;=60</b>时，打印<b>你已经及格</b>，否则，打印<b>不及格</b>；（3）用<b>print()</b>输出<b>程序结束</b>。</p><p>来来来，动起来，请根据上面提示写一遍代码，并点击运行。看在成绩为26分的赋值情况下，只套了一层“条件判断”皮的代码，会出现怎样的结果：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-e3dd6dfa246ea851d99fc2e9469c3e24_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"924\" data-rawheight=\"221\" class=\"origin_image zh-lightbox-thumb\" width=\"924\" data-original=\"https://pic1.zhimg.com/v2-e3dd6dfa246ea851d99fc2e9469c3e24_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;924&#39; height=&#39;221&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"924\" data-rawheight=\"221\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"924\" data-original=\"https://pic1.zhimg.com/v2-e3dd6dfa246ea851d99fc2e9469c3e24_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e3dd6dfa246ea851d99fc2e9469c3e24_b.jpg\"/></figure><p>第二步，在“第一层皮”里装东西。也就是在条件【historyscore&gt;=60】下，增加额外条件。</p><p>其中，额外条件1：当历史成绩<b>大于80分</b>，显示结果<b>你很优秀</b>；额外条件2：当历史成绩<b>在60到80分之间</b>，显示结果：<b>你只是一般般</b>。</p><p>下面，请你先瞄一眼正确的代码，并注意我是怎样安排额外条件的代码的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-633d3f3a4af86569c3680be07a85463c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"514\" data-rawheight=\"599\" class=\"origin_image zh-lightbox-thumb\" width=\"514\" data-original=\"https://pic1.zhimg.com/v2-633d3f3a4af86569c3680be07a85463c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;514&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"514\" data-rawheight=\"599\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"514\" data-original=\"https://pic1.zhimg.com/v2-633d3f3a4af86569c3680be07a85463c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-633d3f3a4af86569c3680be07a85463c_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-5cb39d1ad6f6174642fbed30c3335768_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"513\" data-rawheight=\"282\" class=\"origin_image zh-lightbox-thumb\" width=\"513\" data-original=\"https://pic1.zhimg.com/v2-5cb39d1ad6f6174642fbed30c3335768_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;513&#39; height=&#39;282&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"513\" data-rawheight=\"282\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"513\" data-original=\"https://pic1.zhimg.com/v2-5cb39d1ad6f6174642fbed30c3335768_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-5cb39d1ad6f6174642fbed30c3335768_b.jpg\"/></figure><p>最后一步，你要为另一个大条件<b>else</b>增加额外条件了！</p><p>请你以下方代码框中的代码为基础，在<b>else</b>底下增加两个额外条件。</p><p>其中，额外条件1：当历史成绩小于60，同时还小于30时，输出结果<b>学渣</b>；额外条件2：当历史成绩小于60，但大于等于30时，输出结果<b>还能抢救一下</b>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-a9facccf26558257c54adb74180d3b81_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1343\" data-rawheight=\"353\" class=\"origin_image zh-lightbox-thumb\" width=\"1343\" data-original=\"https://pic2.zhimg.com/v2-a9facccf26558257c54adb74180d3b81_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1343&#39; height=&#39;353&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1343\" data-rawheight=\"353\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1343\" data-original=\"https://pic2.zhimg.com/v2-a9facccf26558257c54adb74180d3b81_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-a9facccf26558257c54adb74180d3b81_b.jpg\"/></figure><p>最后的最后，我们来总结一下这几节课的知识点：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-1ed2b90e3d844939734a4e5bcd665bcb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"888\" data-rawheight=\"547\" class=\"origin_image zh-lightbox-thumb\" width=\"888\" data-original=\"https://pic4.zhimg.com/v2-1ed2b90e3d844939734a4e5bcd665bcb_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;888&#39; height=&#39;547&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"888\" data-rawheight=\"547\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"888\" data-original=\"https://pic4.zhimg.com/v2-1ed2b90e3d844939734a4e5bcd665bcb_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-1ed2b90e3d844939734a4e5bcd665bcb_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>----------------------------------------------------------------------------------------------</p><p>更多Pthon课程请扫码关注</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image\" width=\"336\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;336&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"336\" data-actualsrc=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/64985009", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 3, 
            "title": "Python语言难学吗？第6讲——if嵌套", 
            "content": "<p>接上节课的故事，我们继续～</p><p>不管复仇者联盟怎么竭尽全力，最终，灭霸还是打出了响指。所有人在一瞬间面临着分离与死亡。</p><p>即使套着超级英雄的外衣，蜘蛛侠彼得·帕克也仅仅是个18岁的高中生。他曾只顾忙着在街头巷尾当平民英雄，结果在期末历史考试里只考了26分，荣获“学渣”提名。</p><p>但这个“学渣”评价并不是随便来的，而是通过规则一步步过滤出来的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-76db01b4ae66a0d42f0e12777b4a55e2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"475\" data-rawheight=\"302\" class=\"origin_image zh-lightbox-thumb\" width=\"475\" data-original=\"https://pic3.zhimg.com/v2-76db01b4ae66a0d42f0e12777b4a55e2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;475&#39; height=&#39;302&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"475\" data-rawheight=\"302\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"475\" data-original=\"https://pic3.zhimg.com/v2-76db01b4ae66a0d42f0e12777b4a55e2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-76db01b4ae66a0d42f0e12777b4a55e2_b.jpg\"/></figure><p>像这种<b>如果</b>底下还有<b>如果</b>、<b>条件</b>里还套<b>条件</b>的情况，我们如何用Python把上面的规则写出来，并得出评价呢？</p><p>答案就是——<b>嵌套条件</b>。</p><p><b>if嵌套</b>的应用场景，简单来讲就是：在基础条件满足的情况下，再在基础条件底下增加额外的条件判断。</p><p>就像上面的基础条件是<b>60分及格</b>，想要判断<b>优秀</b>和<b>一般</b>还要增加额外条件——是否大于等于80。</p><p>因此，彼得·帕克的成绩评价规则，用<b>if嵌套</b>可以像下方代码这样：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-d6a23877cadccdc61c9379bd94734d76_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"464\" class=\"origin_image zh-lightbox-thumb\" width=\"1336\" data-original=\"https://pic3.zhimg.com/v2-d6a23877cadccdc61c9379bd94734d76_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1336&#39; height=&#39;464&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"464\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1336\" data-original=\"https://pic3.zhimg.com/v2-d6a23877cadccdc61c9379bd94734d76_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-d6a23877cadccdc61c9379bd94734d76_b.jpg\"/></figure><p>居然出现了三个扎心的结果……那么，在Python中，我们如何同时得出<b>不及格</b>、<b>学渣</b>、<b>程序结束</b>这三个结果的呢？</p><p>首先，我们先从整体总览一下，这段彼得·帕克成绩评价规则的代码，总共分为四部分【<b>赋值</b>、<b>if</b>、<b>else</b>、<b>print()</b>】，两个大代码组。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-de752311400123331a7d126f1918c8ef_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"595\" data-rawheight=\"469\" class=\"origin_image zh-lightbox-thumb\" width=\"595\" data-original=\"https://pic4.zhimg.com/v2-de752311400123331a7d126f1918c8ef_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;595&#39; height=&#39;469&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"595\" data-rawheight=\"469\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"595\" data-original=\"https://pic4.zhimg.com/v2-de752311400123331a7d126f1918c8ef_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-de752311400123331a7d126f1918c8ef_b.jpg\"/></figure><p>并且，在代码组1的<b>if</b>条件和代码组2的<b>else</b>的条件下，又包含了<b>条件判断命令if...else...</b>。</p><p>那么，这种嵌套命令我们要如何理解呢？</p><p>首先，我们知道，缩进相同的命令处于同一个等级，第一步，计算机就要按顺序一条一条地执行命令。</p><p>那么，计算机执行的顺序就是：</p><p>（1）先给historyscore赋值；</p><p>（2）因为if和else是只能留一个的互斥关系，if和else下的代码块只会执行一个，所以计算机要判断赋值的内容满足【historyscore&gt;=60】还是【historyscore&lt;60】的条件——如果满足if的条件，就执行if缩进下的内容，如果不满足就执行else缩进下的内容；</p><p>（3）执行print(&#39;程序结束&#39;)。</p><p>蜘蛛侠26分的历史成绩要找else代码块：<b>else：</b>。然而，问题又来了，else代码块后面不仅跟着三个<b>print()</b>，还有<b>if</b>，所以我到底要输出哪个？</p><p>所以，计算机语法的执行逻辑永远都不会变，else下的代码也要一行一行往下执行，并根据条件判断运行对应层级，输出对应结果。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-e5a6657dd4f7170bd320af031cd85a76_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"705\" data-rawheight=\"414\" class=\"origin_image zh-lightbox-thumb\" width=\"705\" data-original=\"https://pic3.zhimg.com/v2-e5a6657dd4f7170bd320af031cd85a76_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;705&#39; height=&#39;414&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"705\" data-rawheight=\"414\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"705\" data-original=\"https://pic3.zhimg.com/v2-e5a6657dd4f7170bd320af031cd85a76_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-e5a6657dd4f7170bd320af031cd85a76_b.jpg\"/></figure><p>所以，我们的运行顺序是，先输出的结果<b>不及格</b>，然后再判断历史成绩26分的赋值符合<b>历史成绩&lt;60分且&lt;30分</b>还是<b>历史成绩&lt;60分且&gt;=30分</b>的条件。</p><p>下面，我们再通过一张导图理一下<b>if嵌套</b>的逻辑，老师建议你把这张图收藏起来，接下来写嵌套代码的时候可以翻看：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-8a223919923f35bdb233c1176b27f775_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"683\" data-rawheight=\"556\" class=\"origin_image zh-lightbox-thumb\" width=\"683\" data-original=\"https://pic2.zhimg.com/v2-8a223919923f35bdb233c1176b27f775_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;683&#39; height=&#39;556&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"683\" data-rawheight=\"556\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"683\" data-original=\"https://pic2.zhimg.com/v2-8a223919923f35bdb233c1176b27f775_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-8a223919923f35bdb233c1176b27f775_b.jpg\"/></figure><p>要注意的是，<b>elif</b>也是可以放进嵌套里的。</p><p>是不是很有趣？那么<b>如何写嵌套代码？</b></p><p>下节课教你个小技巧～</p><p class=\"ztext-empty-paragraph\"><br/></p><p>----------------------------------------------------------------------------------------------</p><p>更多Pthon课程请扫码关注</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image\" width=\"336\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;336&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"336\" data-actualsrc=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }
            ], 
            "comments": [
                {
                    "userName": "啦啦啦", 
                    "userLink": "https://www.zhihu.com/people/33521ccbf96f4f9addb8cd2dd04252ed", 
                    "content": "elif, if和else不是互斥的吗？怎么还能往if里嵌套呢？", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/64980947", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 7, 
            "title": "Python语言难学吗？第5讲——条件判断", 
            "content": "<p></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-bf2e8a96d8ae78b8c1a5cf6b8365f180_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"613\" data-rawheight=\"294\" class=\"origin_image zh-lightbox-thumb\" width=\"613\" data-original=\"https://pic1.zhimg.com/v2-bf2e8a96d8ae78b8c1a5cf6b8365f180_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;613&#39; height=&#39;294&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"613\" data-rawheight=\"294\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"613\" data-original=\"https://pic1.zhimg.com/v2-bf2e8a96d8ae78b8c1a5cf6b8365f180_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-bf2e8a96d8ae78b8c1a5cf6b8365f180_b.jpg\"/></figure><p>Python之所以能完成自动化任务，比如自动抓取网页关键词，自动下载小电影等，就是因为它可以执行<b>条件判断</b>。</p><p>给大家讲一个《复仇者联盟3:无限宝石》的故事，来get一下逻辑判断的趣味性。（友情提示：即使小同学没看过电影也不会影响你理解代码的。）</p><p>请同学们先点击下面代码框左侧的<b>运行</b>选项，然后在右侧的<b>终端</b>处按照提示语，填写你选择的数字。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-42798fc0c34e332c0fbc115a1919f556_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1347\" data-rawheight=\"591\" class=\"origin_image zh-lightbox-thumb\" width=\"1347\" data-original=\"https://pic3.zhimg.com/v2-42798fc0c34e332c0fbc115a1919f556_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1347&#39; height=&#39;591&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1347\" data-rawheight=\"591\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1347\" data-original=\"https://pic3.zhimg.com/v2-42798fc0c34e332c0fbc115a1919f556_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-42798fc0c34e332c0fbc115a1919f556_b.jpg\"/></figure><p>看到没？这就是条件判断<b>如果…就…</b>逻辑产生的魔法。</p><h2><b>条件判断</b></h2><p>在Python宇宙，<b>条件判断语句</b>总共有三种表现形式，我们先从最简单的<b>单向判断：if</b>开始说起：</p><h2><b>1.单向判断：if</b></h2><p><b>单向判断：if</b>代表什么呢？相传上面的六颗宝石是宇宙中最强大的东西。<b>如果</b>一个人同时拥有六颗宝石，ta<b>就</b>可以实现包括毁灭宇宙在内的所有事情。</p><p>你发现，上面的故事中，有一个<b>如果……就</b>。那么，如果我们要用代码来“翻译”这段话，就可以用<b>条件判断语句</b>中的<b>单项判断：if</b>来表述。下面，请你来运行一下下方代码。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-4fbaf570f84a4ea3fe845766848db5d8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"973\" data-rawheight=\"258\" class=\"origin_image zh-lightbox-thumb\" width=\"973\" data-original=\"https://pic1.zhimg.com/v2-4fbaf570f84a4ea3fe845766848db5d8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;973&#39; height=&#39;258&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"973\" data-rawheight=\"258\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"973\" data-original=\"https://pic1.zhimg.com/v2-4fbaf570f84a4ea3fe845766848db5d8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-4fbaf570f84a4ea3fe845766848db5d8_b.jpg\"/></figure><p>那么，这段代码是如何实现的呢？</p><p>首先，第一行代码，用赋值运算符<b>=</b>对当前情况进行赋值：将你拥有的宝石个数<b>6</b>赋值给变量——宝石数<b>stonenumber</b>。</p><p>第二步，确定<b>if</b>条件：如果变量<b>stonenumber</b>的值<b>&gt;=</b>个数<b>6</b>时，就执行冒号后，下一行的命令。</p><p>第三步，用<b>print()</b>命令打印出结果：你拥有了毁灭宇宙的力量。</p><p>所以，if语句的单向判断逻辑，我们可以这样归纳：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-68ffcc5f27b53be8e49943435ca242d8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"929\" data-rawheight=\"383\" class=\"origin_image zh-lightbox-thumb\" width=\"929\" data-original=\"https://pic1.zhimg.com/v2-68ffcc5f27b53be8e49943435ca242d8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;929&#39; height=&#39;383&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"929\" data-rawheight=\"383\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"929\" data-original=\"https://pic1.zhimg.com/v2-68ffcc5f27b53be8e49943435ca242d8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-68ffcc5f27b53be8e49943435ca242d8_b.jpg\"/></figure><p>在这里，你可能注意到了一个细节：在条件判断代码中的冒号<b>:</b>后、下一行内容的前面，会空几个格，但这是为什么呢？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-ef8081e458353f48c0ec828660ac5198_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"887\" data-rawheight=\"430\" class=\"origin_image zh-lightbox-thumb\" width=\"887\" data-original=\"https://pic1.zhimg.com/v2-ef8081e458353f48c0ec828660ac5198_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;887&#39; height=&#39;430&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"887\" data-rawheight=\"430\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"887\" data-original=\"https://pic1.zhimg.com/v2-ef8081e458353f48c0ec828660ac5198_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-ef8081e458353f48c0ec828660ac5198_b.jpg\"/></figure><p>首先，在计算机的沟通语言中，空格的学名叫<b>缩进</b>，比如我们写文章都要空两个格，这就叫<b>首行缩进</b>。</p><p>对于Python而言，冒号和缩进是一种语法。它会帮助Python区分代码之间的层次，理解条件执行的逻辑及先后顺序。【注：<b>缩进</b>是四个空格或一个Tab键】。</p><p>并且，在if条件语言中，<b>缩进</b>不需要我们手动按空格键。当你用英文输入法打<b>:</b>后按回车，我们的开发工具（用来编写Python代码的程序）为了方便大家编程，会自动实现下一行代码，向右缩进的功能。</p><p>此时，被缩进的内容（print()函数）和if条件语句组成了一个代码块（一个整体），成为了if条件下的<b>内部命令</b>。</p><p>这意味着：如果赋值满足if条件，计算机就会准确执行if条件内部的命令（即缩进的代码块）。</p><p>那么下面，请你运行下面这个代码，看看运行结果是什么。（请不要更改代码，直接点击<b>运行</b>键，当终端出现红色报错提醒后，点击<b>跳过本题</b>）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-9adf45b952bd7c66924ecc16f5ed2e4e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"987\" data-rawheight=\"265\" class=\"origin_image zh-lightbox-thumb\" width=\"987\" data-original=\"https://pic3.zhimg.com/v2-9adf45b952bd7c66924ecc16f5ed2e4e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;987&#39; height=&#39;265&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"987\" data-rawheight=\"265\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"987\" data-original=\"https://pic3.zhimg.com/v2-9adf45b952bd7c66924ecc16f5ed2e4e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-9adf45b952bd7c66924ecc16f5ed2e4e_b.jpg\"/></figure><p>是不是会出现<b>IndentationError: expected an indented block</b>（缩进错误：期望一个缩进块）的报错？</p><p>这是因为，当我们去掉缩进时，if条件和print命令成为了两个不同的代码组，属于平行关系。你看：if条件下面，缺少了可以执行的动作。我们想一下：无论条件成不成立，都不会执行什么操作，这个条件的存在没有任何意义。</p><p>下面，我们来小结一下<b>单向判断：if</b>的代码逻辑及语法格式：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-7118f9e3db60cd09651cfc1a5ac5c46d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"804\" data-rawheight=\"454\" class=\"origin_image zh-lightbox-thumb\" width=\"804\" data-original=\"https://pic2.zhimg.com/v2-7118f9e3db60cd09651cfc1a5ac5c46d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;804&#39; height=&#39;454&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"804\" data-rawheight=\"454\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"804\" data-original=\"https://pic2.zhimg.com/v2-7118f9e3db60cd09651cfc1a5ac5c46d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-7118f9e3db60cd09651cfc1a5ac5c46d_b.jpg\"/></figure><p>在电影里，当灭霸得知宝石的能力后，他决定集齐六颗宝石，灭掉一半宇宙生灵。很快，他就从其他人手中抢到了两颗宝石。</p><p>虽然还没完成收集6颗宝石的目标，但现在拥有了2颗宝石的灭霸，会拥有怎样的能力呢？</p><p>请修改下方代码框中无限宝石的代码：在if条件不变的情况下，修改第一行的赋值语句，把【stonenumber=6】改为【stonenumber=2】，并点击运行，看看会出现什么结果。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-fe930e2d9a10d429c08c211589a3bc02_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"983\" data-rawheight=\"216\" class=\"origin_image zh-lightbox-thumb\" width=\"983\" data-original=\"https://pic3.zhimg.com/v2-fe930e2d9a10d429c08c211589a3bc02_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;983&#39; height=&#39;216&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"983\" data-rawheight=\"216\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"983\" data-original=\"https://pic3.zhimg.com/v2-fe930e2d9a10d429c08c211589a3bc02_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-fe930e2d9a10d429c08c211589a3bc02_b.jpg\"/></figure><p>这时，你可能会在心里犯嘀咕：为什么连个报错都没有呢？那么，我来解释一下这是怎么回事。</p><p>首先，第一行的赋值语句【stonenumber=2】是后面if条件判断语句的<b>前提情况</b>，然而并不满足『stonenumber&gt;=6』这个条件，所以不会执行条件下的『print』操作。</p><p>计算机是一行行往下执行代码的。所以，当第一行赋值情况的前提<b>不满足</b>if的条件时，Python的逻辑就会判断：条件不满足，无法执行if条件下的命令，从而自动跳过，执行下一行命令。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-ef3ca219abadb18a7cd706183550683b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"879\" data-rawheight=\"470\" class=\"origin_image zh-lightbox-thumb\" width=\"879\" data-original=\"https://pic4.zhimg.com/v2-ef3ca219abadb18a7cd706183550683b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;879&#39; height=&#39;470&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"879\" data-rawheight=\"470\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"879\" data-original=\"https://pic4.zhimg.com/v2-ef3ca219abadb18a7cd706183550683b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-ef3ca219abadb18a7cd706183550683b_b.jpg\"/></figure><p>但是，在上方代码中，除了if之外，我们并没有设置其他的命令去让Python执行。因此，Python自然就无法输出结果。</p><p>也就是说，由于宝石数量只有2，没有满足6颗宝石的if条件，if条件下的打印命令就无法生效，自然没办法获得摧毁宇宙的力量。</p><p>而作为最强反派，灭霸当然不会就此善罢甘休。他要继续寻找宝石，直到集齐6颗，达到他的目的。</p><p>那么，这个<b>如果</b>6颗宝石的条件<b>没满足</b>，<b>就做</b>其他事情——寻找宝石的判断，在Python中要如何实现呢？</p><h2><b>2.双向判断：if…else…</b></h2><p>在抢夺了收藏家手里的宝石后，拥有三颗宝石的灭霸逼迫自己的养女卡魔拉，说出了第四颗灵魂宝石的下落——沃弥尔星。</p><p>在Python宇宙，我们可以利用if的双向判断形式：<b>if…else…</b>去实现这个行动：当宝石数量还没达到6颗的时候，需要带着卡魔拉去沃弥尔星寻找灵魂宝石。</p><p>下面，请你直接运行下面的代码，看程序是如何识别的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-ed5358f630a236b09a944006ae2adf2a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1348\" data-rawheight=\"414\" class=\"origin_image zh-lightbox-thumb\" width=\"1348\" data-original=\"https://pic3.zhimg.com/v2-ed5358f630a236b09a944006ae2adf2a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1348&#39; height=&#39;414&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1348\" data-rawheight=\"414\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1348\" data-original=\"https://pic3.zhimg.com/v2-ed5358f630a236b09a944006ae2adf2a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-ed5358f630a236b09a944006ae2adf2a_b.jpg\"/></figure><p>很多时候，我们不能把鸡蛋放在一个篮子里，要做好两手准备：如果不满足条件时，我们要怎么办。</p><p>Python则很贴心地，让我们借用<b>if…else…</b>语句，让码农们有了另一种选择——【如果…不满足，就…】</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-9681d92b8fd4a50459498cfa9f8dcabd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"957\" data-rawheight=\"438\" class=\"origin_image zh-lightbox-thumb\" width=\"957\" data-original=\"https://pic2.zhimg.com/v2-9681d92b8fd4a50459498cfa9f8dcabd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;957&#39; height=&#39;438&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"957\" data-rawheight=\"438\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"957\" data-original=\"https://pic2.zhimg.com/v2-9681d92b8fd4a50459498cfa9f8dcabd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-9681d92b8fd4a50459498cfa9f8dcabd_b.jpg\"/></figure><p>在<b>if...else</b>条件语句中，<b>if</b>和<b>else</b>各自抱团，形成两个不同的代码块。表示的是<b>条件</b>和<b>其他条件</b>的互斥关系——如果不满足<b>if条件</b>，就执行<b>else其他条件</b>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-013b7930273f31c677eeb581af04c4e1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"661\" data-rawheight=\"359\" class=\"origin_image zh-lightbox-thumb\" width=\"661\" data-original=\"https://pic2.zhimg.com/v2-013b7930273f31c677eeb581af04c4e1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;661&#39; height=&#39;359&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"661\" data-rawheight=\"359\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"661\" data-original=\"https://pic2.zhimg.com/v2-013b7930273f31c677eeb581af04c4e1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-013b7930273f31c677eeb581af04c4e1_b.jpg\"/></figure><p>如果用我们上面宝石的例子讲解的话，if定义的就是<b>宝石数&gt;=6</b>，而else定义的则是<b>宝石数&lt;6</b>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-9ff8ba3b2d9616b0781b914070e7cf1f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"561\" data-rawheight=\"289\" class=\"origin_image zh-lightbox-thumb\" width=\"561\" data-original=\"https://pic4.zhimg.com/v2-9ff8ba3b2d9616b0781b914070e7cf1f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;561&#39; height=&#39;289&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"561\" data-rawheight=\"289\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"561\" data-original=\"https://pic4.zhimg.com/v2-9ff8ba3b2d9616b0781b914070e7cf1f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-9ff8ba3b2d9616b0781b914070e7cf1f_b.jpg\"/></figure><p>而由于赋值【stonenumber=3】，并不满足【if stonenumber&gt;=6:】这个条件，所以不能执行【print(&#39;你拥有了毁灭宇宙的力量&#39;)】的命令。</p><p>只能走第二条<b>else:</b>的路——执行<b>print(&#39;带着卡魔拉去沃弥尔星寻找宝石&#39;)</b>的结果。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-f4edc4668e5ca0aeac952c491e6836ea_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"687\" data-rawheight=\"474\" class=\"origin_image zh-lightbox-thumb\" width=\"687\" data-original=\"https://pic3.zhimg.com/v2-f4edc4668e5ca0aeac952c491e6836ea_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;687&#39; height=&#39;474&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"687\" data-rawheight=\"474\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"687\" data-original=\"https://pic3.zhimg.com/v2-f4edc4668e5ca0aeac952c491e6836ea_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-f4edc4668e5ca0aeac952c491e6836ea_b.jpg\"/></figure><p>关于<b>if...else...</b>的相关知识点到这里就讲完了，我们来总结一下<b>if…else…</b>语句的知识点。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-117e79d52d6b7758a70ab93c50acca16_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"664\" data-rawheight=\"333\" class=\"origin_image zh-lightbox-thumb\" width=\"664\" data-original=\"https://pic3.zhimg.com/v2-117e79d52d6b7758a70ab93c50acca16_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;664&#39; height=&#39;333&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"664\" data-rawheight=\"333\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"664\" data-original=\"https://pic3.zhimg.com/v2-117e79d52d6b7758a70ab93c50acca16_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-117e79d52d6b7758a70ab93c50acca16_b.jpg\"/></figure><p>代码讲解告一段落，我们再回到灭霸的故事中，在连续的战斗之后，灭霸无限宝石的收集之旅，只差最后一颗——心灵宝石。</p><p>不巧的是，这颗宝石镶在了超级英雄幻视的头上。幻视深知想要阻止灭霸，只能请求红女巫，毁掉自己头上的宝石。</p><p>所以，摆在红女巫面前的问题条件是：灭霸已经拥有5颗宝石，<b>如果</b>宝石数大于等于<b>6</b>，世界会被灭霸毁灭。</p><p>但是，<b>如果</b>想让宝石数停留在<b>5</b>个及以下，她必须要亲手毁掉幻视头上的宝石，同时，还要从灭霸手中至少夺回一颗宝石，才会有胜利的希望。</p><p>或者，还有第三种胜利的可能——<b>如果</b>想让灭霸手中一个宝石都没有，让一切都未曾发生，那么我们需要穿越时空，回到过去。</p><p>那么，这三个<b>如果</b>在Python中要如何实现呢？</p><h2><b>3.多向判断：if…elif…else…</b></h2><p>国际惯例，在思考如何用代码实现某个目标时，首先，我们需要先来梳理一下逻辑。</p><p>通过上面的故事情节我们知道，在代码中，我们需要添加三个<b>如果</b>：如果<b>宝石数&gt;=6</b>，如果<b>0&lt;宝石数&lt;=5</b>，如果<b>宝石数=0</b>。并产生3个对应的执行结果。</p><p>那么，在判断3个或3个以上的条件时，我们就需要借助Python中的多向判断命令：<b>if…elif…else…</b>。</p><p>这三者共同构成了<b>多向判断</b>的命令逻辑关系：如果<b>if</b>的条件不满足，就按顺序看是否满足<b>elif</b>的条件，如果不满足elif的条件，就执行<b>else</b>的命令。</p><p>并且，当判断的条件<b>超过3个</b>时，中间的多个条件都可以使用<b>elif</b>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-19b5bedeea6ae23e3c71c21f264b435d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"783\" data-rawheight=\"490\" class=\"origin_image zh-lightbox-thumb\" width=\"783\" data-original=\"https://pic2.zhimg.com/v2-19b5bedeea6ae23e3c71c21f264b435d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;783&#39; height=&#39;490&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"783\" data-rawheight=\"490\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"783\" data-original=\"https://pic2.zhimg.com/v2-19b5bedeea6ae23e3c71c21f264b435d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-19b5bedeea6ae23e3c71c21f264b435d_b.jpg\"/></figure><p>那么，这个代码要怎么写呢？我们还是在代码中来感受一下<b>elif</b>的逻辑，直接点击运行就好：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-d86c58c64e8c988c0f1b97f2cd0b0284_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1359\" data-rawheight=\"531\" class=\"origin_image zh-lightbox-thumb\" width=\"1359\" data-original=\"https://pic1.zhimg.com/v2-d86c58c64e8c988c0f1b97f2cd0b0284_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1359&#39; height=&#39;531&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1359\" data-rawheight=\"531\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1359\" data-original=\"https://pic1.zhimg.com/v2-d86c58c64e8c988c0f1b97f2cd0b0284_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-d86c58c64e8c988c0f1b97f2cd0b0284_b.jpg\"/></figure><p>通过上面<b>if</b>和<b>else</b>的积累，多向判断<b>elif</b>的逻辑是不是很好理解？</p><p>首先，第一行的赋值，会按照<b>从上到下</b>的顺序挨个试一遍，看自己满足哪个条件，满足了就不往下走，不满足就继续试，试到出结果为止。</p><p>其次，elif的运行本质上和else一样，已经带有其他条件的意思，所以elif后可以<b>不接else</b>。</p><p>比如上面的代码，<b>stonenumber=5</b>会对下面的<b>ifelifelse</b>条件逐个扫描，看看自己满足哪一个，就执行哪个条件底下的命令。</p><p>很显然，第二个条件<b>elif 0&lt;stonenumber&lt;=5</b>刚好能与<b>stonenumber=5</b>的前提相匹配，于是，执行<b>elif</b>底下的命令：print(&#39;红女巫需要亲手毁掉幻视额头上的心灵宝石&#39;)**。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-95bf32420782a8249ab1aa49f5a5b8d6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"505\" data-rawheight=\"537\" class=\"origin_image zh-lightbox-thumb\" width=\"505\" data-original=\"https://pic3.zhimg.com/v2-95bf32420782a8249ab1aa49f5a5b8d6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;505&#39; height=&#39;537&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"505\" data-rawheight=\"537\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"505\" data-original=\"https://pic3.zhimg.com/v2-95bf32420782a8249ab1aa49f5a5b8d6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-95bf32420782a8249ab1aa49f5a5b8d6_b.jpg\"/></figure><p>下面，我们来总结一下elif的知识点：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-0ad829b8bb2525e735917819fb384143_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"858\" data-rawheight=\"379\" class=\"origin_image zh-lightbox-thumb\" width=\"858\" data-original=\"https://pic4.zhimg.com/v2-0ad829b8bb2525e735917819fb384143_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;858&#39; height=&#39;379&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"858\" data-rawheight=\"379\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"858\" data-original=\"https://pic4.zhimg.com/v2-0ad829b8bb2525e735917819fb384143_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-0ad829b8bb2525e735917819fb384143_b.jpg\"/></figure><p>这节课就到这里啦～</p><p><b>更多课程请关注：</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a7ff0c20e45d20810af94c7bb5976dba_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"335\" data-rawheight=\"599\" class=\"content_image\" width=\"335\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;335&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"335\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"335\" data-actualsrc=\"https://pic3.zhimg.com/v2-a7ff0c20e45d20810af94c7bb5976dba_b.jpg\"/></figure><p><br/> </p>", 
            "topic": [
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/64861655", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 4, 
            "title": "Python语言难学吗？第4讲——数据转换", 
            "content": "<p>负责转换数据类型的函数一共有3种：<b>str()</b>、<b>int()</b>和<b>float()</b>。</p><h2><b>str()函数</b></h2><p><b>str()</b>函数能将数据转换成其字符串类型，不管这个数据是中文、数字、标点还是火星文，只要放到括号里。这个数据就能摇身一变，成为字符串类型。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-3493df18f1a77acbe5eb0477883580fc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1353\" data-rawheight=\"240\" class=\"origin_image zh-lightbox-thumb\" width=\"1353\" data-original=\"https://pic1.zhimg.com/v2-3493df18f1a77acbe5eb0477883580fc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1353&#39; height=&#39;240&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1353\" data-rawheight=\"240\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1353\" data-original=\"https://pic1.zhimg.com/v2-3493df18f1a77acbe5eb0477883580fc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-3493df18f1a77acbe5eb0477883580fc_b.jpg\"/></figure><p>是不是挺简单的？我们只需通过<b>str(number)</b>一个步骤，便可以将<b>整数类型</b>的【153】转化为<b>字符串类型</b>的【153】，成功完成数据拼接。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-4c42e7a5070187c764bc17d104764a31_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1338\" data-rawheight=\"229\" class=\"origin_image zh-lightbox-thumb\" width=\"1338\" data-original=\"https://pic2.zhimg.com/v2-4c42e7a5070187c764bc17d104764a31_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1338&#39; height=&#39;229&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1338\" data-rawheight=\"229\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1338\" data-original=\"https://pic2.zhimg.com/v2-4c42e7a5070187c764bc17d104764a31_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-4c42e7a5070187c764bc17d104764a31_b.jpg\"/></figure><p><b>整数</b>转换<b>字符串类型</b>的方法是不是很方便？那如果我告诉你，还有一种转换成字符串的方法，而且这种方法你已经学会了呢？</p><p>那就是借用【引号】的帮助，比方说<b>153＝1x1x1+5x5x5+3x3x3是个水仙花数</b>这个结果，我也可以写成下面这样：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-c28987d172c97c7329fd4ec3c0b52122_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"501\" data-rawheight=\"67\" class=\"origin_image zh-lightbox-thumb\" width=\"501\" data-original=\"https://pic3.zhimg.com/v2-c28987d172c97c7329fd4ec3c0b52122_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;501&#39; height=&#39;67&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"501\" data-rawheight=\"67\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"501\" data-original=\"https://pic3.zhimg.com/v2-c28987d172c97c7329fd4ec3c0b52122_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-c28987d172c97c7329fd4ec3c0b52122_b.png\"/></figure><p>你看，我们是不是用两种不同的写法：<b>str()</b>函数和<b>引号</b>，输出了同一种结果？</p><p>可是，为什么<b>引号</b>内我们使用的是数字，而不是变量名<b>number</b>呢？这是因为，当我们使用<b>引号</b>时，引号里的东西，都会被强制转换为<b>字符串</b>格式。</p><p>所以，如果我们把变量名<b>number</b>放进<b>引号</b>里后，被强制转换为字符串的，将是变量名<b>number</b>，而不是变量名代表的数字<b>10000</b>。</p><p>可能有人会在心里吐槽：既然<b>引号</b>用着这么麻烦，那我直接用<b>str()</b>呗～你看这多省事。</p><p>其实，我并不是单单地在教你编程方法，而是想传达给你一种编程思维——条条大路通罗马。</p><p>代码的世界千变万化，同一个结果可能有千百万种答案，如果我们只心安理得地，局限在一种思维模式下。那这个思维定势一定会阻挡你的进步，阻止你成为真·大佬。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-9595135294b34b7198e44b581b223ea3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1348\" data-rawheight=\"287\" class=\"origin_image zh-lightbox-thumb\" width=\"1348\" data-original=\"https://pic4.zhimg.com/v2-9595135294b34b7198e44b581b223ea3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1348&#39; height=&#39;287&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1348\" data-rawheight=\"287\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1348\" data-original=\"https://pic4.zhimg.com/v2-9595135294b34b7198e44b581b223ea3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-9595135294b34b7198e44b581b223ea3_b.jpg\"/></figure><p>下面，我们来小结一下str()函数部分的知识点。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-05a1e0223f451a4330613a70cb3e0bab_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"579\" data-rawheight=\"392\" class=\"origin_image zh-lightbox-thumb\" width=\"579\" data-original=\"https://pic4.zhimg.com/v2-05a1e0223f451a4330613a70cb3e0bab_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;579&#39; height=&#39;392&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"579\" data-rawheight=\"392\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"579\" data-original=\"https://pic4.zhimg.com/v2-05a1e0223f451a4330613a70cb3e0bab_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-05a1e0223f451a4330613a70cb3e0bab_b.jpg\"/></figure><p>既然整数类型能转换为字符串，那字符串类型能转换为整数吗？</p><p>那必须的。</p><h2><b>int()函数</b></h2><p>将数据转换为整数类型的方法也很简单，就是<b>int()</b>函数。其使用方法同<b>str()</b>一样，将你需要转换的内容放在括号里就行，像这样：int(转换的内容)。</p><p>下面我们来试验一下，请补全代码，计算出<b>number1</b>和<b>number2</b>这两个变量的和。【要点提示：1. int()函数转换数据类型；2. 运算符<b>+</b>计算；3. print()函数】</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-54b878aba0c1103a0915e33a163fc18e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"973\" data-rawheight=\"190\" class=\"origin_image zh-lightbox-thumb\" width=\"973\" data-original=\"https://pic3.zhimg.com/v2-54b878aba0c1103a0915e33a163fc18e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;973&#39; height=&#39;190&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"973\" data-rawheight=\"190\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"973\" data-original=\"https://pic3.zhimg.com/v2-54b878aba0c1103a0915e33a163fc18e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-54b878aba0c1103a0915e33a163fc18e_b.jpg\"/></figure><p>不过对于<b>int()</b>函数的使用，大家要注意一点：只有符合整数规范的<b>字符串类</b>数据，才能被int()强制转换。</p><p>别看它虽然只有一句话，但它其实带有三层含义：首先，整数形式的字符串比如&#39;6&#39;和&#39;1&#39;，可以被<b>int()</b>函数强制转换。</p><p>其次，文字形式，比如中文、火星文或者标点符号，不可以被<b>int()</b>函数强制转换。</p><p>最后，小数形式的字符串，由于Python的语法规则，也不能使用<b>int()</b>函数强制转换。</p><p>比方说下列代码，如果点击运行，程序会报错【ValueError：invalid literal for int() with base 10: &#39;3.8&#39;】（值异常：浮点类型字符串无法使用int()强制转换）。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b995382b11ca047a350ce30cb40e26fc_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"782\" data-rawheight=\"108\" class=\"origin_image zh-lightbox-thumb\" width=\"782\" data-original=\"https://pic1.zhimg.com/v2-b995382b11ca047a350ce30cb40e26fc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;782&#39; height=&#39;108&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"782\" data-rawheight=\"108\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"782\" data-original=\"https://pic1.zhimg.com/v2-b995382b11ca047a350ce30cb40e26fc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b995382b11ca047a350ce30cb40e26fc_b.png\"/></figure><p>这是不是意味着，浮点数不能转换成整数类型了？</p><p>不，虽然浮点形式的<b>字符串</b>，不能使用<b>int()</b>函数。但<b>浮点数</b>是可以被<b>int()</b>函数强制转换的。</p><p>下面，请你先观察下方代码框中的代码，然后点击运行按钮。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-1b885a56b546eff1947174269d954472_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"979\" data-rawheight=\"126\" class=\"origin_image zh-lightbox-thumb\" width=\"979\" data-original=\"https://pic3.zhimg.com/v2-1b885a56b546eff1947174269d954472_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;979&#39; height=&#39;126&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"979\" data-rawheight=\"126\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"979\" data-original=\"https://pic3.zhimg.com/v2-1b885a56b546eff1947174269d954472_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-1b885a56b546eff1947174269d954472_b.png\"/></figure><p>上方的代码串，就是一条将浮点数<b>3.8</b>强制转换的语句。但是，为什么输出的结果是<b>3</b>呢？</p><p>你看，<b>int()</b>函数的本质是将数据转换为整数。所以对于浮点数，<b>int()</b>函数会做取整处理。但是，同我们平时对小数四舍五入的处理方法不同，<b>int()函数</b>会直接抹零，直接输出整数部分。</p><p>最后，我们来小结一下int()函数的知识点。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-542f094db33ff2ea136699f10112eb4b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"771\" data-rawheight=\"449\" class=\"origin_image zh-lightbox-thumb\" width=\"771\" data-original=\"https://pic4.zhimg.com/v2-542f094db33ff2ea136699f10112eb4b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;771&#39; height=&#39;449&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"771\" data-rawheight=\"449\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"771\" data-original=\"https://pic4.zhimg.com/v2-542f094db33ff2ea136699f10112eb4b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-542f094db33ff2ea136699f10112eb4b_b.jpg\"/></figure><p>可是，如果遇到这种情况：字符串就是小数形式，比如<b>&#39;3.8&#39;</b>这种。我不想让它变为整数<b>3</b>，想让它保持小数形式的<b>3.8</b>，那我要怎么做呢？</p><p>这就涉及到了我们这关最后一个知识点——float()函数。</p><h2><b>float()函数</b></h2><p>首先<b>float()</b>函数的使用，也是将需要转换的数据放在括号里，像这样：float(数据)。</p><p>其次，<b>float()</b>函数也可以将<b>整数</b>和<b>字符串</b>转换为浮点类型。但同时，如果括号里面的数据是<b>字符串</b>类型，那这个数据一定得是数字形式。</p><p>那么，经过之前<b>str()</b>和<b>int()</b>操练，<b>float()</b>函数是不是好懂了一些？</p><p>下面，我们来打段代码练练手。请补齐代码，将下列所有变量，转换为浮点类型，并打印出结果。【要点提示：print(float(数据))】</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-209dc88b9939133bb0c6f91e1e460b3f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"275\" data-rawheight=\"242\" class=\"content_image\" width=\"275\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;275&#39; height=&#39;242&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"275\" data-rawheight=\"242\" class=\"content_image lazy\" width=\"275\" data-actualsrc=\"https://pic4.zhimg.com/v2-209dc88b9939133bb0c6f91e1e460b3f_b.jpg\"/></figure><p>到现在为止，你已经知道了转换数据类型的方法了。下面，我们通过一张图小结一下这三个函数。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-0fce7ba08f256dd2744de048f931ac93_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"469\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic4.zhimg.com/v2-0fce7ba08f256dd2744de048f931ac93_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;832&#39; height=&#39;469&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"469\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"832\" data-original=\"https://pic4.zhimg.com/v2-0fce7ba08f256dd2744de048f931ac93_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-0fce7ba08f256dd2744de048f931ac93_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-c870342be5da933a50d32b82301da9c6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"876\" data-rawheight=\"482\" class=\"origin_image zh-lightbox-thumb\" width=\"876\" data-original=\"https://pic3.zhimg.com/v2-c870342be5da933a50d32b82301da9c6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;876&#39; height=&#39;482&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"876\" data-rawheight=\"482\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"876\" data-original=\"https://pic3.zhimg.com/v2-c870342be5da933a50d32b82301da9c6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-c870342be5da933a50d32b82301da9c6_b.jpg\"/></figure><p>以上这些，也仅仅是开始，以后你将学习更为复杂的代码及命令，掌握更多的与计算机沟通的技巧。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>----------------------------------------------------------------------------------------------</p><p>更多Pthon课程请扫码关注</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image\" width=\"336\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;336&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"336\" data-actualsrc=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\"/></figure>", 
            "topic": [
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }, 
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/64858911", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 6, 
            "title": "Python语言难学吗？第3讲——数据的应用", 
            "content": "<p>下面，就请你来点击运行按钮，跑一下这些代码。在上节课，已经认识了<b>字符串</b>、<b>整数</b>、<b>浮点数</b>，掌握了它们的初级使用，下面我们来学以致用一下。</p><h2><b>四则运算</b></h2><p>Python里的整数、浮点数和数学意义的整数、小数是一样的，它最重要的作用是与运算符号结合，进行<b>数学计算</b>。接下来我们看一下Python如何利用整数，浮点数进行四则运算。</p><p>但是Python世界的算数运算符，和我们平时在纸上写的运算符号有相同点，也有不同点。</p><p>首先，我们来看看Python世界的运算符。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-10ef239ef960f4a0107f9ebdb1494923_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"794\" data-rawheight=\"470\" class=\"origin_image zh-lightbox-thumb\" width=\"794\" data-original=\"https://pic4.zhimg.com/v2-10ef239ef960f4a0107f9ebdb1494923_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;794&#39; height=&#39;470&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"794\" data-rawheight=\"470\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"794\" data-original=\"https://pic4.zhimg.com/v2-10ef239ef960f4a0107f9ebdb1494923_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-10ef239ef960f4a0107f9ebdb1494923_b.jpg\"/></figure><p>咱们再说说一样的——运算优先级：Python世界的运算优先级，和我们平时的计算优先级是一样的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-81ea61571b19c2b464c9b68de98df8bd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"754\" data-rawheight=\"400\" class=\"origin_image zh-lightbox-thumb\" width=\"754\" data-original=\"https://pic2.zhimg.com/v2-81ea61571b19c2b464c9b68de98df8bd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;754&#39; height=&#39;400&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"754\" data-rawheight=\"400\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"754\" data-original=\"https://pic2.zhimg.com/v2-81ea61571b19c2b464c9b68de98df8bd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-81ea61571b19c2b464c9b68de98df8bd_b.jpg\"/></figure><p>下面，点击运行按钮，跑一下这些代码。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-54d342af88e96b763fb9c1c87541e9a7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"982\" data-rawheight=\"168\" class=\"origin_image zh-lightbox-thumb\" width=\"982\" data-original=\"https://pic4.zhimg.com/v2-54d342af88e96b763fb9c1c87541e9a7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;982&#39; height=&#39;168&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"982\" data-rawheight=\"168\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"982\" data-original=\"https://pic4.zhimg.com/v2-54d342af88e96b763fb9c1c87541e9a7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-54d342af88e96b763fb9c1c87541e9a7_b.jpg\"/></figure><p>我们来看看【print((5025-525)/100+18*17)】的运算顺序：最先计算括号里的【5025-525】。然后将【5025-525】的结果除以100，第三步则计算【18*17】，最后将除法和乘法的结果相加。</p><p>除此之外，在现实世界里，我们可以将不同的词组合成一句话，那在镜像世界——Python里是怎样的一个操作？</p><h2><b>字符串的拼接</b></h2><p>比方说，我有以下几个零碎的『词语』——变量，然后想合成这样一句话：<b>我是风变编程学员007</b>，在镜像世界里进行身份验证，你要怎么做呢？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-a7428a077d3235a05a47a96fae7d3289_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"301\" data-rawheight=\"276\" class=\"content_image\" width=\"301\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;301&#39; height=&#39;276&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"301\" data-rawheight=\"276\" class=\"content_image lazy\" width=\"301\" data-actualsrc=\"https://pic2.zhimg.com/v2-a7428a077d3235a05a47a96fae7d3289_b.jpg\"/></figure><p>这就涉及到了我们下一个知识点——字符串拼接。就是利用字符串拼接符号【+】，将需要拼接的变量连在一起就行了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-cbeb5d18bbe1edd7213d1638d3a66fdd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"509\" data-rawheight=\"239\" class=\"origin_image zh-lightbox-thumb\" width=\"509\" data-original=\"https://pic2.zhimg.com/v2-cbeb5d18bbe1edd7213d1638d3a66fdd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;509&#39; height=&#39;239&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"509\" data-rawheight=\"239\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"509\" data-original=\"https://pic2.zhimg.com/v2-cbeb5d18bbe1edd7213d1638d3a66fdd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-cbeb5d18bbe1edd7213d1638d3a66fdd_b.jpg\"/></figure><p>有了拼接符号，我不仅可以输出【我是风变编程学员007】，还可以调整变量的拼接顺序，输出不同的内容。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-34a31bd3622a64250feb4fa1810f744c_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1350\" data-rawheight=\"184\" class=\"origin_image zh-lightbox-thumb\" width=\"1350\" data-original=\"https://pic1.zhimg.com/v2-34a31bd3622a64250feb4fa1810f744c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1350&#39; height=&#39;184&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1350\" data-rawheight=\"184\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1350\" data-original=\"https://pic1.zhimg.com/v2-34a31bd3622a64250feb4fa1810f744c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-34a31bd3622a64250feb4fa1810f744c_b.png\"/></figure><p>学会了字符串拼接，就能让我们的数据整合更为灵活，组合出任意我们想要的内容。</p><p>这就是我们<b>字符串拼接</b>部分的要点：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-d74db799b42242ba44a8ac4d636954cd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"723\" data-rawheight=\"358\" class=\"origin_image zh-lightbox-thumb\" width=\"723\" data-original=\"https://pic2.zhimg.com/v2-d74db799b42242ba44a8ac4d636954cd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;723&#39; height=&#39;358&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"723\" data-rawheight=\"358\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"723\" data-original=\"https://pic2.zhimg.com/v2-d74db799b42242ba44a8ac4d636954cd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-d74db799b42242ba44a8ac4d636954cd_b.jpg\"/></figure><h2><b>数据类型的查询——type()函数</b></h2><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-e2dfac967fa09a81e9806d533002c7ec_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"716\" data-rawheight=\"320\" class=\"origin_image zh-lightbox-thumb\" width=\"716\" data-original=\"https://pic1.zhimg.com/v2-e2dfac967fa09a81e9806d533002c7ec_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;716&#39; height=&#39;320&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"716\" data-rawheight=\"320\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"716\" data-original=\"https://pic1.zhimg.com/v2-e2dfac967fa09a81e9806d533002c7ec_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e2dfac967fa09a81e9806d533002c7ec_b.jpg\"/></figure><p>下面，请你用刚才的代码来试一下。请直接点击运行按钮，只要运行通过就请继续课程。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-e837870a9b4c064f000aed9f57ef2914_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1334\" data-rawheight=\"331\" class=\"origin_image zh-lightbox-thumb\" width=\"1334\" data-original=\"https://pic1.zhimg.com/v2-e837870a9b4c064f000aed9f57ef2914_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1334&#39; height=&#39;331&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1334\" data-rawheight=\"331\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1334\" data-original=\"https://pic1.zhimg.com/v2-e837870a9b4c064f000aed9f57ef2914_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e837870a9b4c064f000aed9f57ef2914_b.jpg\"/></figure><p>哎？怎么什么都没出现呢？刚刚不是说过，只要按照<b>type(需要查询的数据)</b>这个格式写对了，就能出现数据的类型吗？</p><p>其实，什么都没有就对了。对于Python来说，你只是下了一个命令——给我查询类型哟～然后Python就老老实实地查询了类型，再然后……就没有了。</p><p>在你的命令里，并没有告诉Python：“你查到以后，记得告诉我这个类型的结果啊～”所以，异常老实的Python就把查询到的数据类型……存起来了，没告诉你。</p><p>所以，我们要结合print()函数打印出结果。下面，请你再实操一下，补全代码，运用print()函数，将查询函数的结果打印出来。例如：<b>print(type(hero))</b>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-0bb3cc630d7d65aec744ac1b0ea83046_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1364\" data-rawheight=\"327\" class=\"origin_image zh-lightbox-thumb\" width=\"1364\" data-original=\"https://pic3.zhimg.com/v2-0bb3cc630d7d65aec744ac1b0ea83046_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1364&#39; height=&#39;327&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1364\" data-rawheight=\"327\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1364\" data-original=\"https://pic3.zhimg.com/v2-0bb3cc630d7d65aec744ac1b0ea83046_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-0bb3cc630d7d65aec744ac1b0ea83046_b.jpg\"/></figure><p>终端里出现的结果，是不是除了4个<code>&lt;class &#39;str&#39;&gt;</code>，还有1个<code>&lt;class &#39;int&#39;&gt;</code>？</p><p>可是为什么不同类型的数据不能拼接在一起呢？一句话：圈子不同不相融。</p><p>我打个比方，这就类似我饭阿森纳，你饭热刺。虽说咱俩都是足球粉丝，但喜欢的球队却是死对头，所以根本没办法交朋友，没法把咱俩放在一起。</p><p>但是，在某些时候，咱俩总得有低头不见抬头见，在一个球场看球的时候。那么这时候要怎么办呢？要如何把两个不同类型的数据拼在一起呢？</p><p>这就涉及到了我们下节课的知识点：数据转换。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>----------------------------------------------------------------------------------------------</p><p>更多Pthon课程请扫码关注</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image\" width=\"336\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;336&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"336\" data-actualsrc=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\"/></figure>", 
            "topic": [
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }, 
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }
            ], 
            "comments": [
                {
                    "userName": "天字第一号段天涯", 
                    "userLink": "https://www.zhihu.com/people/1cac7f8d06bc7f392ed96ea77cd3b84e", 
                    "content": "感觉学文科的女生应该也能看懂，很友好", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/64856338", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 5, 
            "title": "Python语言难学吗？第2讲——数据类型", 
            "content": "<p>凯文.凯利以预测科技发展趋势而出名，在90年代里，他曾在他的著作《失控》中提及了云计不同类型的数据呀，『长相』不一样，各司其职。只有认清各类型数据的『长相』，了解它们的功能，才能在镜像世界里完成现实世界的任务。算、物联网、虚拟现实等概念。他预言人类的未来是镜像世界。</p><p>奇异博士利用魔法制造了镜像世界进行战斗，减少对现实世界的破坏；我们人类用代码程序也创造了一个镜像世界，在镜像世界里面高效地解决现实世界里的繁琐任务。</p><p>其实，python世界可以看作部分现实世界的【镜像】，部分现实世界的东西、概念都可在python世界里找到对应，比如：现实世界中最常见的数字，文字，符号在Python世界就是：【数据】。</p><p>不同类型的数据呀，『长相』不一样，各司其职。只有认清各类型数据的『长相』，了解它们的功能，才能在镜像世界里完成现实世界的任务。</p><p>字符串今天要讲的主要内容就是【镜像世界的数据】，完成萌新的进化。</p><h2><b>数据</b></h2><p>在现实世界的镜像——Python里，最常用的数据类型有三种——字符串(str)、整数(int)和浮点数(float)。</p><p><b>1.字符串</b></p><p>首先，我们来认识一下字符串，字符串英文<b>string</b>，简写<b>str</b>。其实我们在上一课就见过它：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-3073e3f56d338539dfc5aa5872364bca_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"265\" data-rawheight=\"179\" class=\"content_image\" width=\"265\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;265&#39; height=&#39;179&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"265\" data-rawheight=\"179\" class=\"content_image lazy\" width=\"265\" data-actualsrc=\"https://pic3.zhimg.com/v2-3073e3f56d338539dfc5aa5872364bca_b.jpg\"/></figure><p>字符串的识别方式非常简单——有层名为【引号】的皮，只要是被【单/双/三引号】这层皮括起来的内容，不论那个内容是中文、英文、数字甚至火星文。只要是被括起来的，就表示是字符串类型。</p><p>在这组代码里，【&#39;千寻&#39;】、【&#34;Let&#39;s play&#34;】都属于<b>字符串</b>类型。</p><p>下面，请你先观察代码，然后点击运行按钮，体验一下<b>字符串</b>的应用：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-85c8eefd70fce269370d0c245e9235ea_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1357\" data-rawheight=\"332\" class=\"origin_image zh-lightbox-thumb\" width=\"1357\" data-original=\"https://pic3.zhimg.com/v2-85c8eefd70fce269370d0c245e9235ea_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1357&#39; height=&#39;332&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1357\" data-rawheight=\"332\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1357\" data-original=\"https://pic3.zhimg.com/v2-85c8eefd70fce269370d0c245e9235ea_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-85c8eefd70fce269370d0c245e9235ea_b.jpg\"/></figure><p>字符串，顾名思义，就是由一个个字符串起来的组合，字符可以是一个数字、一个字母、一个文字，甚至是一个符号。字符串可以表达现实世界里的词、语句、表达式等。</p><p>下面，进入镜像世界体验一下字符串的用法～试一试，输出下面代码框中的内容，具体文本可直接复制粘贴。【要点提示：1.文本用『英文引号』括住，创建字符串；2.将字符串赋值给变量；3.使用4个print()函数，分别打印4个变量】。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-fd2735097d522418dee7fc70c5279455_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1333\" data-rawheight=\"286\" class=\"origin_image zh-lightbox-thumb\" width=\"1333\" data-original=\"https://pic2.zhimg.com/v2-fd2735097d522418dee7fc70c5279455_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1333&#39; height=&#39;286&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1333\" data-rawheight=\"286\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1333\" data-original=\"https://pic2.zhimg.com/v2-fd2735097d522418dee7fc70c5279455_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-fd2735097d522418dee7fc70c5279455_b.jpg\"/></figure><p>关于字符串，大家一定要记得：<b>字符串</b>类型必须有【引号】的辅助。不然字符串就只能被报错，无尽地呻吟～</p><p>下面，我们来小结一下<b>字符串</b>的知识点。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-b89c6cf65c8130e7b408cd77a0c27ad6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"603\" data-rawheight=\"262\" class=\"origin_image zh-lightbox-thumb\" width=\"603\" data-original=\"https://pic3.zhimg.com/v2-b89c6cf65c8130e7b408cd77a0c27ad6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;603&#39; height=&#39;262&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"603\" data-rawheight=\"262\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"603\" data-original=\"https://pic3.zhimg.com/v2-b89c6cf65c8130e7b408cd77a0c27ad6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-b89c6cf65c8130e7b408cd77a0c27ad6_b.jpg\"/></figure><p><b>2.整数</b></p><p>可是有的时候，某些数据它脱了【引号】的马甲，也照样能打印出来。例如在上一课我们见过的【print(520)】。</p><p>这就是我们要介绍的，常见数据类型中的第二种：<b>整数</b>，<b>整数</b>英文为<b>integer</b>，简写做<b>int</b>。Python世界的<b>整数</b>其实和现实世界数学中定义的一样：是正整数、负整数和零的统称，是没有小数点的数字。</p><p>比如在下面的代码框中，赋值语句中的数字都是<b>整数</b>：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-05960915051e7afb142f58c954a37dfc_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"153\" data-rawheight=\"149\" class=\"content_image\" width=\"153\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;153&#39; height=&#39;149&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"153\" data-rawheight=\"149\" class=\"content_image lazy\" width=\"153\" data-actualsrc=\"https://pic1.zhimg.com/v2-05960915051e7afb142f58c954a37dfc_b.png\"/></figure><p><b>整数</b>其实是一个不带小数点的数字，可以不穿名为<b>引号</b>的马甲，直接跟print()函数组团搞输出，比如下列代码：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-8b25cd394469c6f82c4e8bea373c9f0f_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"171\" data-rawheight=\"175\" class=\"content_image\" width=\"171\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;171&#39; height=&#39;175&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"171\" data-rawheight=\"175\" class=\"content_image lazy\" width=\"171\" data-actualsrc=\"https://pic4.zhimg.com/v2-8b25cd394469c6f82c4e8bea373c9f0f_b.png\"/></figure><p>我们已经知道了字符串有【引号】的保护，可以和符号及其他文字类数据，譬如中文、英文随意组合。</p><p>而<b>整数</b>脱掉了【引号】马甲，只能『单独行动』。一旦碰上符号及其他文字类数据，譬如中文、英文，立马被报错秒杀。</p><p>比如像这样：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-777e516d082974ba08f4d526a1068ee9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"340\" data-rawheight=\"205\" class=\"content_image\" width=\"340\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;340&#39; height=&#39;205&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"340\" data-rawheight=\"205\" class=\"content_image lazy\" width=\"340\" data-actualsrc=\"https://pic2.zhimg.com/v2-777e516d082974ba08f4d526a1068ee9_b.jpg\"/></figure><p>整数是不是很简单，它其实就是数学意义的整数。下面，我们来总结一下<b>整数</b>这部分的知识点：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-49b9e9fd06bd27c454ed6ebe21241c77_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"605\" data-rawheight=\"253\" class=\"origin_image zh-lightbox-thumb\" width=\"605\" data-original=\"https://pic4.zhimg.com/v2-49b9e9fd06bd27c454ed6ebe21241c77_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;605&#39; height=&#39;253&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"605\" data-rawheight=\"253\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"605\" data-original=\"https://pic4.zhimg.com/v2-49b9e9fd06bd27c454ed6ebe21241c77_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-49b9e9fd06bd27c454ed6ebe21241c77_b.jpg\"/></figure><p><b>3.浮点数</b></p><p>那数学意义上的小数在python中怎么表示呢？它就是我们常见<b>三种数据类型</b>中的最后一种：【浮点数】。</p><p>浮点数非常好识别，它比整数多了一个小数点『.』，比如下列代码中的数字都是<b>浮点数</b>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-5e40d39bd53f05e70bbe1a6396b20745_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"140\" data-rawheight=\"111\" class=\"content_image\" width=\"140\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;140&#39; height=&#39;111&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"140\" data-rawheight=\"111\" class=\"content_image lazy\" width=\"140\" data-actualsrc=\"https://pic2.zhimg.com/v2-5e40d39bd53f05e70bbe1a6396b20745_b.png\"/></figure><p>浮点数的英文名是<b>float</b>，与<b>整数(int)</b>和<b>字符串(str)</b>不同，<b>浮点数</b>没有简写。</p><p><b>浮点数</b>可能让你有点眩晕，这是因为，与【整数运算结果永远精确】的特点不同，计算机里浮点数的运算是不精确的，会有四舍五入的误差。这什么意思呢？</p><p>下面，请你先心算一道题【0.55+0.3】,然后我们再让Python算一下，请直接点击运行按钮，并阅读答案：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-cb052bc14463313d8f7384fc140353db_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"976\" data-rawheight=\"160\" class=\"origin_image zh-lightbox-thumb\" width=\"976\" data-original=\"https://pic4.zhimg.com/v2-cb052bc14463313d8f7384fc140353db_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;976&#39; height=&#39;160&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"976\" data-rawheight=\"160\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"976\" data-original=\"https://pic4.zhimg.com/v2-cb052bc14463313d8f7384fc140353db_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-cb052bc14463313d8f7384fc140353db_b.png\"/></figure><p>哎？为什么不是【0.85】，而尾巴多了一个【1】呢？这是因为，Python计算浮点数时，会先把<b>0.55</b>和<b>0.3</b>转化成二进制数【注：二进制数由0和1表示，逢二进一】，如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-15c2014f980260dfcfe9ad5e7e0a3bd7_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"813\" data-rawheight=\"114\" class=\"origin_image zh-lightbox-thumb\" width=\"813\" data-original=\"https://pic4.zhimg.com/v2-15c2014f980260dfcfe9ad5e7e0a3bd7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;813&#39; height=&#39;114&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"813\" data-rawheight=\"114\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"813\" data-original=\"https://pic4.zhimg.com/v2-15c2014f980260dfcfe9ad5e7e0a3bd7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-15c2014f980260dfcfe9ad5e7e0a3bd7_b.png\"/></figure><p>而在这个转化过程中存在误差，这样，就造成了我们与程序计算结果的差异。</p><p>然后，这俩二进制数通过二进制法则运算后，再通过复杂的计算公式，将二进制结果转成十进制小数。</p><p>不过对于浮点数，你也不用太担心，因为在前期我们很少会涉及浮点数运算。在后期的基础课，你会接触到更多的相关知识，辅助你对<b>浮点数</b>的进一步理解。</p><p>我们来看一下<b>浮点数</b>这部分的主要知识：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-4dca2880b9ccbe61cffa2f093e4c81a2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"561\" data-rawheight=\"238\" class=\"origin_image zh-lightbox-thumb\" width=\"561\" data-original=\"https://pic3.zhimg.com/v2-4dca2880b9ccbe61cffa2f093e4c81a2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;561&#39; height=&#39;238&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"561\" data-rawheight=\"238\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"561\" data-original=\"https://pic3.zhimg.com/v2-4dca2880b9ccbe61cffa2f093e4c81a2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-4dca2880b9ccbe61cffa2f093e4c81a2_b.jpg\"/></figure><p>以上，就是我们最常接触的三种数据类型：<b>字符串</b>、<b>整数</b>、<b>浮点数</b>的全部内容了。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>----------------------------------------------------------------------------------------------</p><p>更多Pthon课程请扫码关注</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image\" width=\"336\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;336&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"336\" data-actualsrc=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\"/></figure>", 
            "topic": [
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }, 
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/64733290", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 15, 
            "title": "Python语言难学吗？第1讲——Print()函数", 
            "content": "<p>Print()函数的用法有以下几种：单枪匹马——不带引号、搭配单引号、搭配双引号、搭配三引号，我们逐个见识下吧！</p><h2><b>无引号</b></h2><p>你会看到下面左侧代码框内，已经有一些代码。那是我为你准备的彩蛋，不要把他们删掉了哦。请在第3行抄写，然后一字不差地抄代码<b>print(520)</b>，抄写完后，点击【运行】按钮。</p><p>注意，这里的括号一定要用【英文括号】，不然会报错😢。【Tips：Mac系统请按command+空格键切换中英文输入，Windows系统请按ctrl＋shift键切换中英文输入】</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-21cce507e2d96292ca7cd2c7961ffbb8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1343\" data-rawheight=\"428\" class=\"origin_image zh-lightbox-thumb\" width=\"1343\" data-original=\"https://pic1.zhimg.com/v2-21cce507e2d96292ca7cd2c7961ffbb8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1343&#39; height=&#39;428&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1343\" data-rawheight=\"428\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1343\" data-original=\"https://pic1.zhimg.com/v2-21cce507e2d96292ca7cd2c7961ffbb8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-21cce507e2d96292ca7cd2c7961ffbb8_b.jpg\"/></figure><p>一切在这一刻开始变得不同，因为，你已经成功写出了人生中的第一行Python代码！</p><p>你能够实现与计算机交互的“初体验”，离不开<b>print()函数</b>的帮忙。这也是我们即将解锁的第一个Python语法知识点。</p><p>刚才，虽然你只是输入了一个简单的print，但在背后，这段Python代码却帮你做了这样的一些事情：</p><p>（0）我们向计算机发出指令：“打印‘520’”；（1）Python把这行代码编译成计算机能听懂的机器语言；（2）计算机做出相应的执行；（3）最后把打印结果呈现在我们面前。</p><p>这，就是我们通过Python这个工具，成功与计算机实现沟通的方式。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f85c890956457536147c1e5df1c740fd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1013\" data-rawheight=\"488\" class=\"origin_image zh-lightbox-thumb\" width=\"1013\" data-original=\"https://pic2.zhimg.com/v2-f85c890956457536147c1e5df1c740fd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1013&#39; height=&#39;488&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1013\" data-rawheight=\"488\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1013\" data-original=\"https://pic2.zhimg.com/v2-f85c890956457536147c1e5df1c740fd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f85c890956457536147c1e5df1c740fd_b.jpg\"/></figure><p>接下来，你即将进入到《千与千寻》的世界，在故事里进一步地学习print()函数的用法。（提示：即便没看过《千与千寻》也不影响你理解后面的代码知识。）</p><p>千寻与爸爸妈妈误入了鬼怪神灵休息的世界，为了拯救因为贪食而被变成猪的父母，千寻需要在这个世界里为汤婆婆打工，在卖身契上签下自己的名字。</p><p>在Python的魔法世界，我们如果想让计算机帮忙写出千寻的名字，该怎么运用print()函数对计算机发出指令呢？</p><p>观察一下上面这行代码的结构，再敲一下回车键，把上面这行代码原样复制到代码框中，点击运行，看看会出现什么结果。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-738e1bf605ff68464718eda647253d76_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"156\" class=\"origin_image zh-lightbox-thumb\" width=\"1336\" data-original=\"https://pic3.zhimg.com/v2-738e1bf605ff68464718eda647253d76_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1336&#39; height=&#39;156&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"156\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1336\" data-original=\"https://pic3.zhimg.com/v2-738e1bf605ff68464718eda647253d76_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-738e1bf605ff68464718eda647253d76_b.png\"/></figure><p>看，屏幕上是不是出现了千寻的名字？这就是print()函数的主要功能：打印内容。</p><p>在这里，打印的意思是：让计算机把你给它的指令结果，显示在屏幕的终端上。</p><h2><b>单引号的用法</b></h2><p>到这里，你已经亲自使用过两次print()函数了。我们来观察一下，你两次写下的print()函数语句有什么不一样的地方呢？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-aac0494a81e5c4fbd9b0b38755c04249_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"239\" data-rawheight=\"134\" class=\"content_image\" width=\"239\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;239&#39; height=&#39;134&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"239\" data-rawheight=\"134\" class=\"content_image lazy\" width=\"239\" data-actualsrc=\"https://pic2.zhimg.com/v2-aac0494a81e5c4fbd9b0b38755c04249_b.jpg\"/></figure><p>很明显，你会发现，在print(&#39;千寻&#39;)里，多了一对单引号。</p><p>那么问题又来了：这个单引号是干啥用的？为什么打印文字的时候需要加上引号呢？</p><p>这是因为，计算机的脑回路比较特别：只能理解数字，却读不懂文字。因为数字和数学运算是标准化、有固定格式的，而文字却能够千变万化。</p><p>如果你直接让计算机print(千寻)，它会一脸懵并大声报错：“这两个字啥意思，你没有定义清楚，不懂诶……”</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-d8a048877fcbf26896adbc96fb2aecc1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1007\" data-rawheight=\"279\" class=\"origin_image zh-lightbox-thumb\" width=\"1007\" data-original=\"https://pic2.zhimg.com/v2-d8a048877fcbf26896adbc96fb2aecc1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1007&#39; height=&#39;279&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1007\" data-rawheight=\"279\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1007\" data-original=\"https://pic2.zhimg.com/v2-d8a048877fcbf26896adbc96fb2aecc1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-d8a048877fcbf26896adbc96fb2aecc1_b.jpg\"/></figure><p>这，便是print()函数中引号的用法：当括号内有引号的时候，就相当于告诉计算机——你不需要执行多余的操作，我输入什么，你就打印什么。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-75231beb40cc0227ee2e14a5d9b40f1b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"925\" data-rawheight=\"340\" class=\"origin_image zh-lightbox-thumb\" width=\"925\" data-original=\"https://pic4.zhimg.com/v2-75231beb40cc0227ee2e14a5d9b40f1b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;925&#39; height=&#39;340&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"925\" data-rawheight=\"340\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"925\" data-original=\"https://pic4.zhimg.com/v2-75231beb40cc0227ee2e14a5d9b40f1b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-75231beb40cc0227ee2e14a5d9b40f1b_b.jpg\"/></figure><h2><b>双引号的用法</b></h2><p>在print()函数内不仅能使用单引号，还能使用双引号，两者的效果没什么区别，都能让你打印出一行文本。</p><p>有些时候，单引号和双引号可能会在括号内同时出现，比如<b>print(&#34;Let&#39;s play&#34;)</b>。</p><p>这种情况下，需要注意区分清楚哪个引号是属于print()函数结构，哪个引号是属于你要让计算机打印的内容，可别“混搭”了。</p><p>说这么多，运行一下代码就懂了。直接在下面代码框中点击运行，观察运行结果。（点击运行前先思考一下，在第三个print()函数中，哪个引号才属于print()函数结构）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-8921b81f558e6c42a52c8a2b9101d97d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1341\" data-rawheight=\"298\" class=\"origin_image zh-lightbox-thumb\" width=\"1341\" data-original=\"https://pic2.zhimg.com/v2-8921b81f558e6c42a52c8a2b9101d97d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1341&#39; height=&#39;298&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1341\" data-rawheight=\"298\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1341\" data-original=\"https://pic2.zhimg.com/v2-8921b81f558e6c42a52c8a2b9101d97d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-8921b81f558e6c42a52c8a2b9101d97d_b.jpg\"/></figure><p>我们观察上面的代码，发现多了一些带有『#』的语句，它是怎么一回事呢？</p><p>其实呀在python里，『#』常用作单行注释符号，用于解释单行代码，比如 『# 括号内是单引号的情况』用于解释说明代码『print(&#39;一起玩吧&#39;)』。＃号后边的任何数据在代码运行的阶段不会被输出。</p><p>回到print()函数，在<code>print(&#34;Let&#39;s play&#34;)</code>中，没有被打印出来的引号就属于print()函数结构啦。</p><p>不过，在print()函数中，引里的内容其实也不一定非得是文字，还可以是英文和数字。</p><p>相应地，在括号内没有引号的情况下，我们应该往括号内放入计算机能够“理解”的内容，如：数字或数学运算。</p><p>此时，print函数会让计算机尝试去“读懂”括号里的内容，并打印最终的结果。</p><p>怎么样才叫读懂呢？难道计算机还能给你做个阅读理解题不成？</p><p><b>要不然，我们来猜猜看，在代码框输入下列代码的话，计算机会在终端输出什么结果？print(1+1)</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-edaf26f51b7a2dd3c6c8d758737f8603_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"740\" data-rawheight=\"182\" class=\"origin_image zh-lightbox-thumb\" width=\"740\" data-original=\"https://pic4.zhimg.com/v2-edaf26f51b7a2dd3c6c8d758737f8603_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;740&#39; height=&#39;182&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"740\" data-rawheight=\"182\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"740\" data-original=\"https://pic4.zhimg.com/v2-edaf26f51b7a2dd3c6c8d758737f8603_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-edaf26f51b7a2dd3c6c8d758737f8603_b.jpg\"/></figure><p>猜对啦！但是为什么打印的结果是2，而不是1+1呢？</p><p>在这里，计算机并没有再原样打印“1+1”，因为<code>print(1+1)</code>是计算机能直接读懂的数学运算，所以，它会直接打印出最终的运算结果：“2”。这就是计算机“读懂内容”的表现。</p><p>关于“运算”相关的知识，之后在讲解数据类型的时候将会进一步讲解。现在，你只需要了解print()函数，以及其带引号和不带引号的用法区别就好。</p><p>到这里，print()函数相关的知识就讲完啦。下面，是时候来做一道课堂练习，检验一下自己的学习成果了。</p><p>我们来试试自己用print()函数打印出“千寻的卖身契”。</p><p>为了让千寻替自己工作，汤婆婆拟了一份反人类的“血汗条款”：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-93e16c0d44d58407450525a6468962c3_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"764\" data-rawheight=\"90\" class=\"origin_image zh-lightbox-thumb\" width=\"764\" data-original=\"https://pic4.zhimg.com/v2-93e16c0d44d58407450525a6468962c3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;764&#39; height=&#39;90&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"764\" data-rawheight=\"90\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"764\" data-original=\"https://pic4.zhimg.com/v2-93e16c0d44d58407450525a6468962c3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-93e16c0d44d58407450525a6468962c3_b.png\"/></figure><p>那么，这份合约在Python中要如何显示呢？请你在下面的代码框中将这份合约打印出来（注意：使用print()函数，文字部分可直接复制上面的内容）。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-41d01a0f87ea311e0e086cd80e2160ee_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1332\" data-rawheight=\"144\" class=\"origin_image zh-lightbox-thumb\" width=\"1332\" data-original=\"https://pic3.zhimg.com/v2-41d01a0f87ea311e0e086cd80e2160ee_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1332&#39; height=&#39;144&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1332\" data-rawheight=\"144\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1332\" data-original=\"https://pic3.zhimg.com/v2-41d01a0f87ea311e0e086cd80e2160ee_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-41d01a0f87ea311e0e086cd80e2160ee_b.png\"/></figure><h2><b>三引号的用法</b></h2><p>But，苛刻的汤婆婆觉得卖身契的排版还不够好看，希望你能让卖身契文字的每一个逗号后面都换行显示，打印出“自动换行”的效果。</p><p>答案是：在print内部使用三引号<b>&#39;&#39;&#39;</b>（连续输入三个单引号）来实现自动换行。</p><p>嘿嘿，没想到吧，除了单引号和双引号之外，print()里面居然还能放三引号。直接运行下面这段代码，看这次能不能实现汤婆婆想要的效果。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-75394aac23e72a14ddf95657067a2776_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1349\" data-rawheight=\"189\" class=\"origin_image zh-lightbox-thumb\" width=\"1349\" data-original=\"https://pic3.zhimg.com/v2-75394aac23e72a14ddf95657067a2776_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1349&#39; height=&#39;189&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1349\" data-rawheight=\"189\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1349\" data-original=\"https://pic3.zhimg.com/v2-75394aac23e72a14ddf95657067a2776_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-75394aac23e72a14ddf95657067a2776_b.png\"/></figure><p>成功了！你已经掌握了用三引号换行的办法。</p><p>现在我们已经学习了print()函数的四种情况－－无引号，单引号，双引号，三引号。再跟着老师一起回顾一下它们之间的差别，巩固一下。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-5a65f61f39db1300ca4ac87a88ea499e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1015\" data-rawheight=\"481\" class=\"origin_image zh-lightbox-thumb\" width=\"1015\" data-original=\"https://pic3.zhimg.com/v2-5a65f61f39db1300ca4ac87a88ea499e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1015&#39; height=&#39;481&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1015\" data-rawheight=\"481\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1015\" data-original=\"https://pic3.zhimg.com/v2-5a65f61f39db1300ca4ac87a88ea499e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-5a65f61f39db1300ca4ac87a88ea499e_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a4c2a20df3b006e8c01c4110fddd6002_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"850\" data-rawheight=\"466\" class=\"origin_image zh-lightbox-thumb\" width=\"850\" data-original=\"https://pic3.zhimg.com/v2-a4c2a20df3b006e8c01c4110fddd6002_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;850&#39; height=&#39;466&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"850\" data-rawheight=\"466\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"850\" data-original=\"https://pic3.zhimg.com/v2-a4c2a20df3b006e8c01c4110fddd6002_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-a4c2a20df3b006e8c01c4110fddd6002_b.jpg\"/></figure><p>注意，【前方高能预警】，接下来，我要告诉你一个99%的初学者都踩过的代码bug。</p><p>在Python中，默认所有正确的语法，包括标点符号都是【英文】。不小心用了中文标点的话，计算机会无法识别，然后报错。</p><p>在终端里，你能看到的最常见的符号报错提示就是【syntaxError:invalid syntax】（语法错误：无效语法）。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-ae772c1199d9f5999008599556adfb5b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"981\" data-rawheight=\"449\" class=\"origin_image zh-lightbox-thumb\" width=\"981\" data-original=\"https://pic4.zhimg.com/v2-ae772c1199d9f5999008599556adfb5b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;981&#39; height=&#39;449&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"981\" data-rawheight=\"449\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"981\" data-original=\"https://pic4.zhimg.com/v2-ae772c1199d9f5999008599556adfb5b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-ae772c1199d9f5999008599556adfb5b_b.jpg\"/></figure><p>我们在debug（解决程序报错）的时候，需要下意识地找找自己是否犯了这样细小却致命的错误。</p><p>重要提示说完。此时此刻，你已经完成了这一关60%的进度条，通关成就达成近在眼前！</p><h2><b>转义字符</b></h2><p>你已经用print()函数成功打印出了千寻的卖身契。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-eb05fd8d01db7a5bede399ea84270570_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"469\" data-rawheight=\"167\" class=\"origin_image zh-lightbox-thumb\" width=\"469\" data-original=\"https://pic1.zhimg.com/v2-eb05fd8d01db7a5bede399ea84270570_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;469&#39; height=&#39;167&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"469\" data-rawheight=\"167\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"469\" data-original=\"https://pic1.zhimg.com/v2-eb05fd8d01db7a5bede399ea84270570_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-eb05fd8d01db7a5bede399ea84270570_b.jpg\"/></figure><p>其实，还有第二种实现换行的办法：使用转义字符<b>\\n</b>，像这样：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-127abd158ecfd8b1385850c8b39fa477_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"884\" data-rawheight=\"83\" class=\"origin_image zh-lightbox-thumb\" width=\"884\" data-original=\"https://pic4.zhimg.com/v2-127abd158ecfd8b1385850c8b39fa477_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;884&#39; height=&#39;83&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"884\" data-rawheight=\"83\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"884\" data-original=\"https://pic4.zhimg.com/v2-127abd158ecfd8b1385850c8b39fa477_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-127abd158ecfd8b1385850c8b39fa477_b.png\"/></figure><p>除了<b>\\n</b>之外，转义字符还有很多，它们的特征就是：反斜杠+想要实现的转义功能首字母。</p><p>比如换行<b>\\n</b>代表【+newline】；退格<b>\\b</b>代表【+backspace】；回车\\r代表【+return】。大家可以按照这种方法记住转义字符的含义。</p><p>我把常用的一些转义字符做了个总结：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-aa76de96a6b88b3d43305df00454132c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"724\" data-rawheight=\"600\" class=\"origin_image zh-lightbox-thumb\" width=\"724\" data-original=\"https://pic1.zhimg.com/v2-aa76de96a6b88b3d43305df00454132c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;724&#39; height=&#39;600&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"724\" data-rawheight=\"600\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"724\" data-original=\"https://pic1.zhimg.com/v2-aa76de96a6b88b3d43305df00454132c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-aa76de96a6b88b3d43305df00454132c_b.jpg\"/></figure><p>别担心，这张图上的内容你不需要背下来，先通过截屏或拍照方式把图片保存下来，以后要使用转义字符时再看图查找就好。</p><h2><b>变量和赋值</b></h2><p>到这里，你已经成功地打印出了千寻的名字和卖身契。与此同时，千寻也成为了汤婆婆的工人，渐渐地，她忘记了自己是谁，遗失了自己“姓名”的信息。</p><p>那么，在信息纷繁的代码世界里，我们应该如何更好地储存信息，让计算机能够在你需要的时候帮你调用出你想要的信息呢？</p><p>你需要借助【变量和赋值】的力量，将繁杂的信息给一一“收纳”好。</p><p>我们先来看看下面这行代码：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-a7630de731a93f623d28ccb8127c699b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"228\" data-rawheight=\"86\" class=\"content_image\" width=\"228\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;228&#39; height=&#39;86&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"228\" data-rawheight=\"86\" class=\"content_image lazy\" width=\"228\" data-actualsrc=\"https://pic4.zhimg.com/v2-a7630de731a93f623d28ccb8127c699b_b.jpg\"/></figure><p>这就是一个常见的“给变量赋值”的动作。在这里，<b>name</b>就是一个变量，这行代码的意思，就是把“千寻”这两个字【赋值】给了“name”这个【变量】。</p><p>这就好比，为了让千寻在日后能在计算机中更方便地找到她的名字，我们帮她把名字收纳进了一个小盒子里，并在这个盒子上贴了个叫“name”的标签。</p><p>回想一下，我们平时在收拾东西的时候，是不是会把散落各处东西放进不同的盒子里，并且做好标记？这样的“收纳”动作，能够让空间变得整齐，也更方便我们自己取用东西。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-28a4e7eec92d08a58ba8b3104a1974fa_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1018\" data-rawheight=\"426\" class=\"origin_image zh-lightbox-thumb\" width=\"1018\" data-original=\"https://pic3.zhimg.com/v2-28a4e7eec92d08a58ba8b3104a1974fa_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1018&#39; height=&#39;426&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1018\" data-rawheight=\"426\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1018\" data-original=\"https://pic3.zhimg.com/v2-28a4e7eec92d08a58ba8b3104a1974fa_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-28a4e7eec92d08a58ba8b3104a1974fa_b.jpg\"/></figure><p>同理，计算机也是这么做的，它会把成千上万的数据放在不同的“盒子”里，这样才方便它存储和操作数据。</p><p>这个“盒子”在Python中被称为变量，你可以在这个“盒子”里放任何你想放的内容。</p><p>而这个往盒子里装东西的过程，在代码的魔法世界被称为【赋值】。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-f5ca30be61f78af396fc6c79cd21aab7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"929\" data-rawheight=\"401\" class=\"origin_image zh-lightbox-thumb\" width=\"929\" data-original=\"https://pic4.zhimg.com/v2-f5ca30be61f78af396fc6c79cd21aab7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;929&#39; height=&#39;401&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"929\" data-rawheight=\"401\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"929\" data-original=\"https://pic4.zhimg.com/v2-f5ca30be61f78af396fc6c79cd21aab7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-f5ca30be61f78af396fc6c79cd21aab7_b.jpg\"/></figure><p>在千寻签完合约后，汤婆婆就把【name】这个『标签』从装有她名字【千寻】的『盒子』撕下来，贴到了装有【小千】这个名字的『盒子』。</p><p>这时，取出贴有【name】这个『标签』的盒子，读出的内容变成了『小千』：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-1bc8eda5981928443bb1303c79c7e6a6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"238\" data-rawheight=\"53\" class=\"content_image\" width=\"238\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;238&#39; height=&#39;53&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"238\" data-rawheight=\"53\" class=\"content_image lazy\" width=\"238\" data-actualsrc=\"https://pic3.zhimg.com/v2-1bc8eda5981928443bb1303c79c7e6a6_b.jpg\"/></figure><p>现在，请你运行下面这段代码，看一下打印函数的最终输出结果是什么。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a26a5f41176e6d68d51aa6f7ed89cfce_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1349\" data-rawheight=\"176\" class=\"origin_image zh-lightbox-thumb\" width=\"1349\" data-original=\"https://pic3.zhimg.com/v2-a26a5f41176e6d68d51aa6f7ed89cfce_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1349&#39; height=&#39;176&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1349\" data-rawheight=\"176\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1349\" data-original=\"https://pic3.zhimg.com/v2-a26a5f41176e6d68d51aa6f7ed89cfce_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-a26a5f41176e6d68d51aa6f7ed89cfce_b.png\"/></figure><p>终端上出现的结果是不是【小千】？可这又是为什么呢？我们对“name”这个变量第一次的赋值不是【&#39;千寻&#39;】吗？为什么打印的结果是第二次的赋值呢？</p><p>这就涉及到了变量的特点：变量之所以称为变量，是因为它保存的数据是可以随意变化的。</p><p>刚才我们讲，我们可以将变量当作一个盒子，你可以在这个盒子里放任何内容，但盒子都有它的最大容量，不能无限制地塞东西。</p><p>偏偏在代码世界里，盒子的容量又特别小，仅为1。所以当你需要放进新的东西时，只能寻找一个新的盒子。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-1b962472dcf8f356f49eb1d59391f809_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1022\" data-rawheight=\"424\" class=\"origin_image zh-lightbox-thumb\" width=\"1022\" data-original=\"https://pic2.zhimg.com/v2-1b962472dcf8f356f49eb1d59391f809_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1022&#39; height=&#39;424&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1022\" data-rawheight=\"424\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1022\" data-original=\"https://pic2.zhimg.com/v2-1b962472dcf8f356f49eb1d59391f809_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-1b962472dcf8f356f49eb1d59391f809_b.jpg\"/></figure><p>在我们上面的案例中，第一行代码：<code>name=&#39;千寻&#39;</code>表达的意思是：把千寻这个名字放到name这个变量“盒子”中。</p><p>由于，计算机是一行行自上而下执行代码的，所以当运行到第二行代码<code>name=&#39;小千&#39;</code>时，变量“name”里存储的【&#39;千寻&#39;】就被替换成了【&#39;小千&#39;】。</p><p>所以，当运行到第三行<code>print(name)</code>时，我们打印出的结果，就自然而然的是小千了。</p><p>其实，不仅是千寻，名字对于我们每个人来讲都是有意义的，它帮助你“定位”自己，让别人能轻松地找到你。所以，人的名字不能乱取，同理，给变量的命名也需要遵循一定的规范。</p><h2><b>变量的命名规范</b></h2><p>对于变量的命名，我们可以遵循以下规范：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-04c7ec166e36c8a0964c04f1c62a48ac_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"855\" data-rawheight=\"385\" class=\"origin_image zh-lightbox-thumb\" width=\"855\" data-original=\"https://pic1.zhimg.com/v2-04c7ec166e36c8a0964c04f1c62a48ac_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;855&#39; height=&#39;385&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"855\" data-rawheight=\"385\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"855\" data-original=\"https://pic1.zhimg.com/v2-04c7ec166e36c8a0964c04f1c62a48ac_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-04c7ec166e36c8a0964c04f1c62a48ac_b.jpg\"/></figure><p>比如说，如果信息是姓名，那么变量可以命名为name；如果信息是数字，那么变量名则应该叫做number。</p><p>很多新手在刚入门的时候会习惯给变量命名为a、b、c等英文字母。这样的变量名会让你无法从诸多信息中分辨出变量里装的东西是什么，这无异于给自己的孩子取名叫做“张小红”、“王小明”，一下就淹没于茫茫人海之中了。</p><p>除了变量命名之外，还要注意的是：在代码世界中，赋值符号<code>=</code>不是左边等于右边的意思。仅仅表示赋值动作：把右边的内容放到了左边的盒子中。</p><p>代表左右两边相等的符号，是比较运算符<code>==</code>，虽然他俩长得像，但代表的却是完全不同的意思，可千万不要搞混了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-80fcd0fdb255336f14f2e0e97fd8bc72_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1012\" data-rawheight=\"426\" class=\"origin_image zh-lightbox-thumb\" width=\"1012\" data-original=\"https://pic3.zhimg.com/v2-80fcd0fdb255336f14f2e0e97fd8bc72_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1012&#39; height=&#39;426&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1012\" data-rawheight=\"426\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1012\" data-original=\"https://pic3.zhimg.com/v2-80fcd0fdb255336f14f2e0e97fd8bc72_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-80fcd0fdb255336f14f2e0e97fd8bc72_b.jpg\"/></figure><p>检验学习成果的时候到了，请你用刚才学过的变量和赋值的知识做一道题：请将上面三个名字用name依次赋值，并保证最终打印出来的是“小千”真正的名字。（提示：使用print()函数，变量的值总是等于最后一次赋给它的内容。）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-7ee6f7bbfaf6bb7270f1f762562880c6_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"193\" class=\"origin_image zh-lightbox-thumb\" width=\"1336\" data-original=\"https://pic3.zhimg.com/v2-7ee6f7bbfaf6bb7270f1f762562880c6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1336&#39; height=&#39;193&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"193\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1336\" data-original=\"https://pic3.zhimg.com/v2-7ee6f7bbfaf6bb7270f1f762562880c6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-7ee6f7bbfaf6bb7270f1f762562880c6_b.png\"/></figure><p><b>最后，我们来总结一下这关的知识点：</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-34c382ae209dec0bc930ab7c9d64217a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1015\" data-rawheight=\"477\" class=\"origin_image zh-lightbox-thumb\" width=\"1015\" data-original=\"https://pic3.zhimg.com/v2-34c382ae209dec0bc930ab7c9d64217a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1015&#39; height=&#39;477&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1015\" data-rawheight=\"477\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1015\" data-original=\"https://pic3.zhimg.com/v2-34c382ae209dec0bc930ab7c9d64217a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-34c382ae209dec0bc930ab7c9d64217a_b.jpg\"/></figure><p>到这里，或许你会问：我这关学的这几个简单的代码有什么用呢？</p><p>虽然print()函数是最简单的语句，但其实，你往后要做的任何一个程序几乎都离不开print()函数的支持。</p><p>例如说，你能用print()函数给自己创造一个可爱的好朋友“人工智障小埋”，她会蹦跶着到你面前，调皮地让你猜她的年龄。</p><p>下面是一段已写好的代码，请直接点击代码区的【运行】，只有点击运行，代码才会跑起来哦。快来和小埋玩一下猜年龄的游戏吧！</p><p>注意：在小埋问你她的年龄时，要记得在【终端】输入你猜的数字哦。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-ff53b330e62be5cbe08ae526bf09d028_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1362\" data-rawheight=\"577\" class=\"origin_image zh-lightbox-thumb\" width=\"1362\" data-original=\"https://pic1.zhimg.com/v2-ff53b330e62be5cbe08ae526bf09d028_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1362&#39; height=&#39;577&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1362\" data-rawheight=\"577\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1362\" data-original=\"https://pic1.zhimg.com/v2-ff53b330e62be5cbe08ae526bf09d028_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-ff53b330e62be5cbe08ae526bf09d028_b.jpg\"/></figure><p>成功猜中小埋的年龄了吗？除了print()函数和变量赋值之外，这段代码里还用到了条件判断if语句、input()函数，这两个知识点我们会在第2个关卡和第3个关卡学习到喔。</p><p>而这一关卡里，我们掌握了<b>命令思维</b>——对计算机下“打印”的指令。但是，在与计算机沟通的道路上，我们的学习才刚刚开始。</p><p>在学完整个Python基础语法课程后，你将会真正迈入Python的大门，掌握利用Python解决问题的方法和思维。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>----------------------------------------------------------------------------------------------</p><p>更多Pthon课程请扫码关注</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image\" width=\"336\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;336&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"336\" data-actualsrc=\"https://pic4.zhimg.com/v2-c03eec5fbe93f96e836cb9d81594fa43_b.jpg\"/></figure><br/>", 
            "topic": [
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }, 
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }
            ], 
            "comments": [
                {
                    "userName": "沉默的勋哥", 
                    "userLink": "https://www.zhihu.com/people/cb2d13c644b7adf7adde2e5662a53804", 
                    "content": "浅显易懂，对初学者很友好[赞]", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "知乎用户", 
                    "userLink": "https://www.zhihu.com/people/0", 
                    "content": "非常棒图文讲解", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "Rou", 
                    "userLink": "https://www.zhihu.com/people/ea12a2ed04a28580075a8b0a1d81adf2", 
                    "content": "很棒哦", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "简蔓", 
                    "userLink": "https://www.zhihu.com/people/9d459df3186ec387f2de2d5b245189dd", 
                    "content": "非常棒，感谢！", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/64729679", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 0, 
            "title": "Python是一门什么语言？编程语言界里的新晋网红！", 
            "content": "<p>    人工智能正在悄然地改变我们的生活方式，传统行业纷纷转型，科幻电影的一幕幕正在变成现实。随着技术的变革，人类简单重复性的劳动或思考活动已经逐步被机器取代。那么，我们该如何改变我们的工作方式和学习思维？如何利用技术加持竞争力？</p><p>    在互联网＋时代，『编程』已不是『程序员』、『工程师』的专属，而是一个通往未来世界的工具，甚至是一个新的机遇。如果你现在想掌握编程技能的话，强烈推荐Python，它无处不在！</p><p>    Python是一门编程语言，能够帮助我们更好地与计算机“沟通”。不仅如此，它还是编程语言界里的新晋网红。</p><p>    或许你会有疑问：Python凭什么从C++、Java等老牌编程语言中脱颖而出，成为一匹黑马呢？打个比方，如果说编程语言是我们在新世界冒险中必备的武器，Python和Java、C、C++比起来，功能大概是这样的……</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-aaa526e46f12cc2499a53b84b3da564b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"631\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb\" width=\"631\" data-original=\"https://pic4.zhimg.com/v2-aaa526e46f12cc2499a53b84b3da564b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;631&#39; height=&#39;408&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"631\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"631\" data-original=\"https://pic4.zhimg.com/v2-aaa526e46f12cc2499a53b84b3da564b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-aaa526e46f12cc2499a53b84b3da564b_b.jpg\"/></figure><p>它的强大之处在于：</p><p>（1）它背后有着最庞大的免费“代码库”，给初学者足够的资源搞实现自己想要的功能。</p><p>（2）它是人工智能、大数据分析的重要支持语言。</p><p>（3）它被称为“胶水语言”，能很好包装和调用其他编程语言写的库。</p><p>（4）它是一个脚本语言，和其它编程语言相比更加简洁、高效。</p><p>最最重要的是，python应用领域广泛，例如：爬虫，数据分析，科学计算，自动化办公，自动化运维，网站开发，多媒体处理，机器学习，深度学习等。下图展示了学习python的知识框架。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b53b4951ff3850df846536cf7a234ea8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1021\" data-rawheight=\"496\" class=\"origin_image zh-lightbox-thumb\" width=\"1021\" data-original=\"https://pic1.zhimg.com/v2-b53b4951ff3850df846536cf7a234ea8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1021&#39; height=&#39;496&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1021\" data-rawheight=\"496\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1021\" data-original=\"https://pic1.zhimg.com/v2-b53b4951ff3850df846536cf7a234ea8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b53b4951ff3850df846536cf7a234ea8_b.jpg\"/></figure><p>说到这，就不得不提到最近在我身边发生的一件事儿：前阵子，公司的行政小姐姐来请教我关于Python学习的问题。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a92d940ed0a00926f225c37a2e556f2a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"485\" data-rawheight=\"330\" class=\"origin_image zh-lightbox-thumb\" width=\"485\" data-original=\"https://pic3.zhimg.com/v2-a92d940ed0a00926f225c37a2e556f2a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;485&#39; height=&#39;330&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"485\" data-rawheight=\"330\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"485\" data-original=\"https://pic3.zhimg.com/v2-a92d940ed0a00926f225c37a2e556f2a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-a92d940ed0a00926f225c37a2e556f2a_b.jpg\"/></figure><p>    我想，不仅是她，你们也一样厌倦了把时间反反复复地花在无价值的劳动上吧。那么，不如勇敢迈出第一步，尝试做点什么，改变现状。</p><p>    现在，那位对Python零基础的小姐姐，在花了一段时间学习之后，已经可以自己琢磨着编出个小程序来，让计算机帮忙批量整理数据。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-0b6565d7c868e134f0737bb0a53fe4e7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"879\" data-rawheight=\"478\" class=\"origin_image zh-lightbox-thumb\" width=\"879\" data-original=\"https://pic4.zhimg.com/v2-0b6565d7c868e134f0737bb0a53fe4e7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;879&#39; height=&#39;478&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"879\" data-rawheight=\"478\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"879\" data-original=\"https://pic4.zhimg.com/v2-0b6565d7c868e134f0737bb0a53fe4e7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-0b6565d7c868e134f0737bb0a53fe4e7_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-806a3e5c1a3061e8f815d22edbba855c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"869\" data-rawheight=\"470\" class=\"origin_image zh-lightbox-thumb\" width=\"869\" data-original=\"https://pic1.zhimg.com/v2-806a3e5c1a3061e8f815d22edbba855c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;869&#39; height=&#39;470&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"869\" data-rawheight=\"470\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"869\" data-original=\"https://pic1.zhimg.com/v2-806a3e5c1a3061e8f815d22edbba855c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-806a3e5c1a3061e8f815d22edbba855c_b.jpg\"/></figure><p>    有时侯你还能做出一些有趣的东西，看，利用Python当一回编程界“社会人”——让计算机给你画个画。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-0e289a96c58aa75d16bbfbf575b74c82_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"831\" data-rawheight=\"470\" class=\"origin_image zh-lightbox-thumb\" width=\"831\" data-original=\"https://pic3.zhimg.com/v2-0e289a96c58aa75d16bbfbf575b74c82_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;831&#39; height=&#39;470&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"831\" data-rawheight=\"470\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"831\" data-original=\"https://pic3.zhimg.com/v2-0e289a96c58aa75d16bbfbf575b74c82_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-0e289a96c58aa75d16bbfbf575b74c82_b.jpg\"/></figure><p>    你是不是对python有了初步的认识了呢，其实呀，这只是冰山一角。答应我，跟着课程的步伐，带你一层层地揭开python神秘地面纱。</p><p>    对于自动化办公，python绝对是一大神器，四大会计事务所会使用python实现审计底稿的批量自动化处理。在这个过程中，除了需要掌握python的基础知识，还要逐步掌握几项『办公室逆袭』的绝招：</p><p>    文档管理：shutil和zipfile，自动完成复制/移动/改名/删除/读取/解压/压缩；</p><p>    数据处理：openpyxl和csv，自动处理excel和csv数据；</p><p>    文字处理：docx和pyPDF2，处理word和pdf文档；</p><p>    信息传输：使用Python发送邮件/微信/短信。</p><p>    Python就是一个能够帮你实现需求的工具，它更像是一把万能钥匙，决定用它来打开哪一扇门的，是你自己。</p><p>    尼采在《查拉图斯特拉如是说》中的一句话“其实人跟树一样的，越是向往高处的阳光，他的根就要越要向下，伸向地底深处...”</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a7ff0c20e45d20810af94c7bb5976dba_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"335\" data-rawheight=\"599\" class=\"content_image\" width=\"335\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;335&#39; height=&#39;599&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"335\" data-rawheight=\"599\" class=\"content_image lazy\" width=\"335\" data-actualsrc=\"https://pic3.zhimg.com/v2-a7ff0c20e45d20810af94c7bb5976dba_b.jpg\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }, 
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }
            ], 
            "comments": [
                {
                    "userName": "那罗延", 
                    "userLink": "https://www.zhihu.com/people/3a6aa31464ce97b21f9b645d39c2b471", 
                    "content": "<p>第二点不对。它不是人工智能、大数据分析的重要支持语言。</p><p><br></p><p>实际上人工智能大数据的所有核心代码都不是用Python写的。恰恰是因为第三点和第四点，给了Python使用者非常大的便利去调用那些不是Python写的核心代码，Python是非常适合写前台或者说前端代码的语言。</p>", 
                    "likes": 1, 
                    "childComments": [
                        {
                            "userName": "空空", 
                            "userLink": "https://www.zhihu.com/people/d6098bd53403aa81fad30928ec510703", 
                            "content": "请教一下，那与Python相配套的语言是什么呢？", 
                            "likes": 0, 
                            "replyToAuthor": "那罗延"
                        }
                    ]
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/52483353", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 0, 
            "title": "百家号十天转正的技巧及注意事项", 
            "content": "<p>百家号十天转正的技巧及注意事项</p><p>大家都知道百家号的转正要求是：注册7天以上，百家号指数≥500，且信用分为100分的新手账号可申请转正。</p><p>那么如何才能快速让自己的指数大于500呢，以下几点是自己的个人经验，供大家参考。</p><p>1、不能停更，只要注册后，开始发文了，就不要停更！</p><p>2、更新时间，固定时间发布，让平台记住你。建议晚上九点，十点。</p><p>3、文字字数，超过2000个字数，最低不要低于1000个字。</p><p>4、段落分明，首行空两个字。穿插图片</p><p>5、图片不能太多，也不能太少。一般200-300百字插入一张图片。2000个字插入6-7张图。</p><p>6、用软件检测原创度，建议超过70%的原创度才可发。低于的千万不要发！平台不会通过的！网络上有很多检测的平台，如果要检测软件的也可以私我拿。</p><p>7、垂直度，领域专注度要高。不能今天写娱乐的，明天又写养生的。</p><p>8、阅读量，不要纠结自己的阅读量，转正和阅读量没太大关系.</p><p>9、转正是后台人工审核，不能被扣分。</p><p>10、认真做好活跃度、原创度和垂直度，再加上坚持十天，必能转正！</p><p></p><p></p>", 
            "topic": [
                {
                    "tag": "百家号", 
                    "tagLink": "https://api.zhihu.com/topics/20084373"
                }, 
                {
                    "tag": "转正", 
                    "tagLink": "https://api.zhihu.com/topics/19648939"
                }, 
                {
                    "tag": "自媒体写作", 
                    "tagLink": "https://api.zhihu.com/topics/20076429"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/51966781", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 1, 
            "title": "如何轻松玩转自媒体短视频？", 
            "content": "<p>    互联网的思维是相通的，唯一不变的是技巧。而技巧是可以通过后天能力的提升来进行弥补。自媒体上很多视频并不都是原创，而是来自其他渠道，比如说B站，外网等等，很多自媒体人通过专业的软件处理这些视频，二次加工，然后在头条上发出来。搬运是一直存在的，只是在一直更新而已。我要学习的就是有这样的思维，而在技术上要不断地去提升。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-26c230d479a46d792ac7eaa485c75d2b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"455\" data-rawheight=\"244\" class=\"origin_image zh-lightbox-thumb\" width=\"455\" data-original=\"https://pic4.zhimg.com/v2-26c230d479a46d792ac7eaa485c75d2b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;455&#39; height=&#39;244&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"455\" data-rawheight=\"244\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"455\" data-original=\"https://pic4.zhimg.com/v2-26c230d479a46d792ac7eaa485c75d2b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-26c230d479a46d792ac7eaa485c75d2b_b.jpg\"/></figure><p>    很多人可能觉得搬运不好，不长久。原创才是最终的出入。这是对的。但是，只要有平台的存在就会有搬运的存在，因为原创作者不可能生产出那么多作品来的。一定要两条腿走路，原创要做，但是废的精力，耗的时间非常大，收益来得比较慢。但搬运的话，见效很快啊。让你做原创，两三个月没有收入，或者收入很低，那你还做吗？而且你搬运的视频好的话，前期给你带来的收入也是非常可观的。</p><p>    每个平台可以搬运的一些领域。同一个视频把它下载下来，然后处理了，要把它同步的所有的平台，的确这个思路是没有错的。但是，事实证明这个玩法是错误的。因为每个平台他喜欢的东西不一样，每个平台所扶持的领域不一样。每个平台他的规则不一样。我总结了下几个平台喜欢的领域，大家可以参考下。</p><p>    百家号——军事、历史、娱乐、影视</p><p>    头条号——宠物、科技、汽车、影视</p><p>    企鹅号——生活、影视</p><p>    秒拍——美女、娱乐、影视、科技</p><p>    每个平台喜欢的不一样，但千万不要所有平台都做，不要贪心。好好的做好一两个平台就够了。</p><p>    原创号养成的过程是很漫长的，但是你做搬运就要做好账号随时可能被扣分、被封号的可能。相对做原创来说，做搬运这个收益是来的最直接、最快的。所以给大家的建议；一是直接买原创账号来做，现在原创账号也不贵，大概两千块左右。二是找有原创号的人来合作。有的人有原创号，但是没时间天天更，这个时候就可以互补了。别人提供原创号，你负责做视频，大家相互合作。当然自己慢慢养成一个原创号也是可以的。但平台的变化是很快的，上个月的时候，我一天发三个视频，发了十天就通过了原创标签。现在，可能就没那么容易了，快速过原创的方法也是要不断地自己去测试。账号方面，不要那么纠结。趁现在还能搬运，就要马上搞原创号开始。</p><p><b>    素材的话</b>，就把其他地方的搬运到头条、秒拍、大鱼、企鹅就可以了。可以从头条、优酷、爱奇艺搬运到其他平台，也可以从其他平台搬运过来。但这里面有几个核心的点，第一视频一定要高清。第二视频要横屏，大小尺寸是1280*720，不要有黑边。第三视频画面不要太复杂，不要有太多的水印。视频的素材可以从外网上来，比如youtube，具体操作流程这边不多说。</p><p><b>    视频处理</b>，视频的剪辑很重要。电脑上常用的软件快剪辑、爱剪辑、威力导演、狸窝、PR、会声会影。手机上的话主要是乐秀、美摄、小柿饼。这些都可以。视频处理的方法，其实每个软件大同小异。剪视频的一些细节。第一是多个视频拼凑成一个视频，做1-2分钟就可以了，不要太长。第二是剪视频时把每个视频的速度调为100。第三是每个视频都可以加上个背景音乐。那这个差不错就算自己原创了。第四个是条件允许的情况下，建议大家把视频加上解说，一定是自己解说，不要用别人的文案。第五个是可以加个片头片尾，还可以在视频上加上你的logo。第六是视频做出来一定要检查。</p><p>    找到一个爆破的点，先测试下，如果具有可操作性，那就不断地放大。这个可以很大程度提高你的收益！</p><p>    这是一个最好的时代，也是一个最差的时代。抓住风口，连猪都会飞，何况是你呢？</p><p></p>", 
            "topic": [
                {
                    "tag": "自媒体", 
                    "tagLink": "https://api.zhihu.com/topics/19648427"
                }, 
                {
                    "tag": "短视频", 
                    "tagLink": "https://api.zhihu.com/topics/19871674"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/30386161", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 0, 
            "title": "一场即将到来的危机", 
            "content": "<p>    今天看到一条微博：前几天，我去医院看病，排在我前面的是一对母女。母亲70多岁的样子，女儿也有40多岁。母亲的心脏不太好，心电图变形得没法看。医生希望她吸半个小时的氧气，然后再做个心电图，如果明确没有大事了再回家。女儿却希望母亲回家吸氧，并且说单位只有她一个人，她必须要及时赶回去。医生用纠结的目光注视了母女半天，最后还是决定留下这对母女。</p><p>    如果是你。你会怎么选择？ </p><p>    其实挺悲哀的。受到八十年计划生育政策影响的这拨人，无论是早死晚死对子女都不利。兄弟姐妹太少，父母去世早的话，就变得几乎无亲无故了，而人是需要亲情滋润关怀或惦念的。父母活得久点的，夫妻俩供奉几位老人，再加上晚婚晚育，可能那时孩子还在念书，生活压力很大。</p><p>    现在二十多岁的年轻人，很多都是独生子女。有想过，如果哪天父母真的倒下了，我们要放下手头上的工作，去照顾他们。生活的节奏完全打乱。生活来源呢？ 小孩呢？怎么办？ 我甚至不敢继续往下想...    </p><p>    我们无法去改变国家层面的政策，而且事到如今已经是这个结果了。那就只能想想，当它真的发生了，该如何去应对它！</p><p>    其实归根结底还是一个财务自由。如果你能自由的生活，不受到公司的束缚，那么就没有那些后顾之忧了！所以，一定要上进上进！抓住任何一次机会！向着自己想要的生活去为之努力奋斗！</p>", 
            "topic": [
                {
                    "tag": "危机", 
                    "tagLink": "https://api.zhihu.com/topics/19575685"
                }, 
                {
                    "tag": "生活", 
                    "tagLink": "https://api.zhihu.com/topics/19551147"
                }, 
                {
                    "tag": "机会", 
                    "tagLink": "https://api.zhihu.com/topics/19571602"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/29972641", 
            "userName": "风口寻猪", 
            "userLink": "https://www.zhihu.com/people/78f57f5386e94647dc82eeae58fffb4e", 
            "upvote": 5, 
            "title": "为什么百度网盘分享不了资源？", 
            "content": "<p>昨天探讨了百度知道的一些常见问题。<br/></p><p>在做电影这个热点项目时，还需要借助百度网盘这个平台。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>但是...还是会遇到各种问题。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>今天我们就来探讨下百度网盘遇到的常见问题。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>Q：为什么我的百度网盘才5G？</b></p><p>A：是的。现在才去申请网盘，都只有5G...上传两部电影就不够用了...早几年前，百度刚刚推出网盘的时候，有做活动，免费送2T容量！所以有些新鲜的的事物，都是一开始的时候优惠最大，在它规则还不完善的时候，可以钻很多空子。如今，你就只能乖乖掏钱开通会员了。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-2cefd6f178799d2f827753e7274b5db6_b.jpg\" data-caption=\"\" data-rawwidth=\"192\" data-rawheight=\"81\" class=\"content_image\" width=\"192\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;192&#39; height=&#39;81&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"192\" data-rawheight=\"81\" class=\"content_image lazy\" width=\"192\" data-actualsrc=\"https://pic3.zhimg.com/v2-2cefd6f178799d2f827753e7274b5db6_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>Q：为什么分享电影会显示分享失败，文件含有敏感信息？</b></p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-9da74feed743c5466ee9ffd4ff60f367_b.jpg\" data-caption=\"\" data-rawwidth=\"619\" data-rawheight=\"310\" class=\"origin_image zh-lightbox-thumb\" width=\"619\" data-original=\"https://pic4.zhimg.com/v2-9da74feed743c5466ee9ffd4ff60f367_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;619&#39; height=&#39;310&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"619\" data-rawheight=\"310\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"619\" data-original=\"https://pic4.zhimg.com/v2-9da74feed743c5466ee9ffd4ff60f367_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-9da74feed743c5466ee9ffd4ff60f367_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>A：色情淫秽的东西就别上传了，这个肯定不行的！惹恼了百度爸爸，网盘是要被封的。至于热门电影，特别是还是上映中的电影，分享一般也会出现这种情况。网上有说几种方法，我都试过...</p><p class=\"ztext-empty-paragraph\"><br/></p><p>1、改文件名字。—— 不行！无论你是改成拼音还是完全换一个名字，都没用。照样分享不了。我这里说的只争对需要上传热映的电影。对于其他正常文件，分享失败，改名字一般还是有效的。</p><p>2、改文件格式。——不行！把.MKV后缀改成.MKV3或其他格式，没用。还是分享不了！</p><p>3、把电影放在文件夹中，分享文件夹。——好了，这样的确是可以产生链接，但是...你会发现审核不通过...少数情况下也是会通过的..</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-744dc2abea9a01b62aea09e37a600071_b.jpg\" data-caption=\"\" data-rawwidth=\"639\" data-rawheight=\"371\" class=\"origin_image zh-lightbox-thumb\" width=\"639\" data-original=\"https://pic2.zhimg.com/v2-744dc2abea9a01b62aea09e37a600071_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;639&#39; height=&#39;371&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"639\" data-rawheight=\"371\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"639\" data-original=\"https://pic2.zhimg.com/v2-744dc2abea9a01b62aea09e37a600071_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-744dc2abea9a01b62aea09e37a600071_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>3、新建一个空白文件夹，先点击分享，成功产生链接后。再把电影移动到该文件夹中。——恭喜你成功的骗过了百度爸爸！好开心！可是...时效性不长，过一会儿你就会发现，你的文件还是审核不通过...</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-36fd55a8888c26aa8b1574ee0cb6dcf8_b.jpg\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"236\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-36fd55a8888c26aa8b1574ee0cb6dcf8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;236&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"236\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-36fd55a8888c26aa8b1574ee0cb6dcf8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-36fd55a8888c26aa8b1574ee0cb6dcf8_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>Q:那怎样才能解决分享敏感信息的文件问题?</b> </p><p>A:目前也没有有效的办法。。。最好的办法就是等上3个月再分享...如果一定要赶热点话题，上面的方法3、4都可以尝试下。有时候今天不行，明天试试也许就可以了...  还有一种情况是，你自己下载的电影资源上传怎么分享都不行，但是别人的确可以，那你就保存别人的网盘资源，再分享链接。</p><p>当然如果你有更好的方法，欢迎探讨！</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>万事开头难...任何事你只要掌握了游戏规则，才能好好玩转它。</b></p><p></p>", 
            "topic": [
                {
                    "tag": "百度网盘", 
                    "tagLink": "https://api.zhihu.com/topics/19684821"
                }, 
                {
                    "tag": "百度网盘（百度云）", 
                    "tagLink": "https://api.zhihu.com/topics/19681836"
                }, 
                {
                    "tag": "引流", 
                    "tagLink": "https://api.zhihu.com/topics/19722877"
                }
            ], 
            "comments": [
                {
                    "userName": "小树", 
                    "userLink": "https://www.zhihu.com/people/7c36a74044f27df0ee9674d6b84c0426", 
                    "content": "说了等于没说", 
                    "likes": 5, 
                    "childComments": []
                }, 
                {
                    "userName": "伪墨", 
                    "userLink": "https://www.zhihu.com/people/933f2869815d885b09426a18095bfb45", 
                    "content": "<p>真的好烦啊。。各种分享不了</p>", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "刘松", 
                    "userLink": "https://www.zhihu.com/people/42c06802a2a2aca7f92cda33e47a63dc", 
                    "content": "<p>请试试用格式工厂转码成其他格式的文件后，同时改名；或者用视频编辑软件剪切掉片头或片尾无关痛痒的部分内容之后改名。这样就可以有效的回避云端的文件名检查和MD5码的比对了。</p>", 
                    "likes": 2, 
                    "childComments": []
                }
            ]
        }
    ], 
    "url": "https://zhuanlan.zhihu.com/c_129650549"
}

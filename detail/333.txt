{
    "title": "数据实践笔记", 
    "description": "", 
    "followers": [
        "https://www.zhihu.com/people/kim-88-53-98", 
        "https://www.zhihu.com/people/venessazheng", 
        "https://www.zhihu.com/people/qi-qi-cheng-yi-bei", 
        "https://www.zhihu.com/people/wu-yi-22-67", 
        "https://www.zhihu.com/people/yang-jin-sui-er-de-xia-tian", 
        "https://www.zhihu.com/people/imxintian", 
        "https://www.zhihu.com/people/juan-xin-da-bai-cai-64", 
        "https://www.zhihu.com/people/stephen-34-51", 
        "https://www.zhihu.com/people/wang-yi-yi-2-57", 
        "https://www.zhihu.com/people/liaozd-52", 
        "https://www.zhihu.com/people/you-you-53-83", 
        "https://www.zhihu.com/people/yun-shui-shan-xin-23-94", 
        "https://www.zhihu.com/people/liu-wen-qiang-50-67", 
        "https://www.zhihu.com/people/li-ze-yang-fan", 
        "https://www.zhihu.com/people/ji-yu-13-15-90", 
        "https://www.zhihu.com/people/wang-zhe-10-45", 
        "https://www.zhihu.com/people/li-si-hao-62-41", 
        "https://www.zhihu.com/people/gao-hua-fei", 
        "https://www.zhihu.com/people/zhang-meng-xia-27", 
        "https://www.zhihu.com/people/yong-hu-6268564086", 
        "https://www.zhihu.com/people/zhuyao-52-83", 
        "https://www.zhihu.com/people/hui-tai-lang-1-64-31", 
        "https://www.zhihu.com/people/arthurkin", 
        "https://www.zhihu.com/people/hellolenovo", 
        "https://www.zhihu.com/people/hou-hui-yao-60", 
        "https://www.zhihu.com/people/mian-tuan-92", 
        "https://www.zhihu.com/people/nicocoo", 
        "https://www.zhihu.com/people/wangsonglei607", 
        "https://www.zhihu.com/people/yu-tian-36-99-45", 
        "https://www.zhihu.com/people/zhu-yu-lin-38-55", 
        "https://www.zhihu.com/people/su-qing-ge-81-96", 
        "https://www.zhihu.com/people/mrtin-86", 
        "https://www.zhihu.com/people/liu-hui-97-28-46", 
        "https://www.zhihu.com/people/ren-ren-50-86", 
        "https://www.zhihu.com/people/wang-peng-82-45", 
        "https://www.zhihu.com/people/sun-xiu-xiu-77-78", 
        "https://www.zhihu.com/people/zhang-xiao-33-76", 
        "https://www.zhihu.com/people/guo-zi", 
        "https://www.zhihu.com/people/liu-sha-sha-51-9", 
        "https://www.zhihu.com/people/wu-ji-15-56", 
        "https://www.zhihu.com/people/cheng-qing-68-69", 
        "https://www.zhihu.com/people/kylehuang", 
        "https://www.zhihu.com/people/liu-fei-94-95", 
        "https://www.zhihu.com/people/ansnn", 
        "https://www.zhihu.com/people/xiao-tai-yang-98-69", 
        "https://www.zhihu.com/people/xie-ben-43", 
        "https://www.zhihu.com/people/xinc_zhihu", 
        "https://www.zhihu.com/people/wu-sui-4", 
        "https://www.zhihu.com/people/li-wjia", 
        "https://www.zhihu.com/people/gao-jia-chuan-ren", 
        "https://www.zhihu.com/people/huang-xiao-xiao-40-72", 
        "https://www.zhihu.com/people/ba-jie-ba-jie-75", 
        "https://www.zhihu.com/people/wo-liao-53", 
        "https://www.zhihu.com/people/gao-na-zi", 
        "https://www.zhihu.com/people/qing-jiao-wo-mai-tian-da-ren", 
        "https://www.zhihu.com/people/koko-zheng", 
        "https://www.zhihu.com/people/wang-liao-52", 
        "https://www.zhihu.com/people/chandra-41-62", 
        "https://www.zhihu.com/people/chen-wei-36-14-97", 
        "https://www.zhihu.com/people/mindseeker", 
        "https://www.zhihu.com/people/liyuexisara", 
        "https://www.zhihu.com/people/huo-you-64-26", 
        "https://www.zhihu.com/people/justintien", 
        "https://www.zhihu.com/people/zai-shui-yi-fang-79-51", 
        "https://www.zhihu.com/people/joseph295", 
        "https://www.zhihu.com/people/ryan-chang-25", 
        "https://www.zhihu.com/people/xiao-wang-86-21", 
        "https://www.zhihu.com/people/zentia-33", 
        "https://www.zhihu.com/people/zhu-hong-yu-4", 
        "https://www.zhihu.com/people/jing-wen-84-18", 
        "https://www.zhihu.com/people/chinaliangjing", 
        "https://www.zhihu.com/people/wo-xiang-chi-shui-guo-70", 
        "https://www.zhihu.com/people/yue-guang-31-34", 
        "https://www.zhihu.com/people/mmz-40-87", 
        "https://www.zhihu.com/people/worldpeaceyun-qi", 
        "https://www.zhihu.com/people/sha-xiao-zi-14", 
        "https://www.zhihu.com/people/wang-gong-cong-zi-5", 
        "https://www.zhihu.com/people/lin-han-43-70", 
        "https://www.zhihu.com/people/lan-xin-mu-55-26", 
        "https://www.zhihu.com/people/hou-lai-24-11", 
        "https://www.zhihu.com/people/dahaibingzi", 
        "https://www.zhihu.com/people/qu-zhi-59-24", 
        "https://www.zhihu.com/people/joooy-51-39", 
        "https://www.zhihu.com/people/li-zong-li-78-14", 
        "https://www.zhihu.com/people/heng-heng-ha-ha-84", 
        "https://www.zhihu.com/people/mao-xian-sheng-85-75", 
        "https://www.zhihu.com/people/a-fei-xi-ya-65", 
        "https://www.zhihu.com/people/zhan-lan-heng-ha-ha", 
        "https://www.zhihu.com/people/xiaolie000", 
        "https://www.zhihu.com/people/wang-chong-43-89", 
        "https://www.zhihu.com/people/li-xian-lai-90", 
        "https://www.zhihu.com/people/ning-shi-ting", 
        "https://www.zhihu.com/people/xu-bo-11-5", 
        "https://www.zhihu.com/people/shirly-3-56", 
        "https://www.zhihu.com/people/book-luve", 
        "https://www.zhihu.com/people/wu-zhi-xiao-sheng-68", 
        "https://www.zhihu.com/people/weng-ding", 
        "https://www.zhihu.com/people/javaite", 
        "https://www.zhihu.com/people/wang-xiao-kui", 
        "https://www.zhihu.com/people/wook9615", 
        "https://www.zhihu.com/people/sandwraith", 
        "https://www.zhihu.com/people/xiao-yu-34-50-67", 
        "https://www.zhihu.com/people/xxt-44", 
        "https://www.zhihu.com/people/sunosy", 
        "https://www.zhihu.com/people/SNight", 
        "https://www.zhihu.com/people/jimmyzou-48", 
        "https://www.zhihu.com/people/wenk-18", 
        "https://www.zhihu.com/people/eric-zheng-6", 
        "https://www.zhihu.com/people/hui-xi-74", 
        "https://www.zhihu.com/people/jiani-22", 
        "https://www.zhihu.com/people/rittle-53", 
        "https://www.zhihu.com/people/gu-wu-peng-61", 
        "https://www.zhihu.com/people/tion-pan", 
        "https://www.zhihu.com/people/qst291", 
        "https://www.zhihu.com/people/ji-duan-yuan-shi-ren", 
        "https://www.zhihu.com/people/mi-tu-de-xiao-nai-lang", 
        "https://www.zhihu.com/people/321222", 
        "https://www.zhihu.com/people/wang-ju-ming-39", 
        "https://www.zhihu.com/people/chunyufeng", 
        "https://www.zhihu.com/people/xiao-ru-fei-fei", 
        "https://www.zhihu.com/people/pan-zheng-xiong-55", 
        "https://www.zhihu.com/people/liu-yan-90-14", 
        "https://www.zhihu.com/people/zhang-qing-dou", 
        "https://www.zhihu.com/people/luo-su-su-36", 
        "https://www.zhihu.com/people/lin-xian-sen-he-gu-du-de-liu-shuang", 
        "https://www.zhihu.com/people/mao-zhu-20-86", 
        "https://www.zhihu.com/people/wilie-34", 
        "https://www.zhihu.com/people/ai-qi-ke-ji", 
        "https://www.zhihu.com/people/wo-de-xiao-yu-67", 
        "https://www.zhihu.com/people/gan-zhe-ku-gua", 
        "https://www.zhihu.com/people/er-qi-63-74", 
        "https://www.zhihu.com/people/liu-yi-shuang", 
        "https://www.zhihu.com/people/jiang-xin-yu-16", 
        "https://www.zhihu.com/people/jiaxiaoqi", 
        "https://www.zhihu.com/people/xwanzi11", 
        "https://www.zhihu.com/people/shaadow", 
        "https://www.zhihu.com/people/xiao-ji-xiang-de-gu-shi", 
        "https://www.zhihu.com/people/jay-39-38", 
        "https://www.zhihu.com/people/a-li-87-82-13", 
        "https://www.zhihu.com/people/chi-cao-de-lang-82", 
        "https://www.zhihu.com/people/hiboo000", 
        "https://www.zhihu.com/people/happy-1-45", 
        "https://www.zhihu.com/people/yi-yong-gen", 
        "https://www.zhihu.com/people/luo-yan-yun-75", 
        "https://www.zhihu.com/people/xue-zhi-jing-ji", 
        "https://www.zhihu.com/people/qiao-er-85-84", 
        "https://www.zhihu.com/people/guai-ha-45", 
        "https://www.zhihu.com/people/BrotherBao", 
        "https://www.zhihu.com/people/kggshuang-yu", 
        "https://www.zhihu.com/people/feng-yu-85-25-29", 
        "https://www.zhihu.com/people/lai-ge-tu-zi", 
        "https://www.zhihu.com/people/huang-chao-25-11", 
        "https://www.zhihu.com/people/zhang-xiao-yu-5-63", 
        "https://www.zhihu.com/people/mrdesign", 
        "https://www.zhihu.com/people/bian-tong-ji", 
        "https://www.zhihu.com/people/qiuqiu2011", 
        "https://www.zhihu.com/people/qi-le-82-47", 
        "https://www.zhihu.com/people/naivezz", 
        "https://www.zhihu.com/people/wolfsmart", 
        "https://www.zhihu.com/people/miaoyuangu", 
        "https://www.zhihu.com/people/dudu-27", 
        "https://www.zhihu.com/people/bu-cheng-49-54"
    ], 
    "article": [
        {
            "url": "https://zhuanlan.zhihu.com/p/46633318", 
            "userName": "张张张", 
            "userLink": "https://www.zhihu.com/people/0915edbcfb81dbf8a566b6cbfb83d064", 
            "upvote": 34, 
            "title": "SQL性能优化", 
            "content": "<p>之前写了一篇关于sql入门和刷题的文章，现在想更深入的了解sql，如何让自己的sql写的更好看，跑起来的效率更高，这就需要了解和学习关于sql性能优化的tips了。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>一、SQL的执行顺序</b></p><p>顺序：FROM——ON——JOIN——WHERE——GROUP BY——SUM、COUNT——HAVING——SELECT——DISTINCT——ORDER BY——LIMIT</p><p class=\"ztext-empty-paragraph\"><br/></p><p>与写SQL的顺序不同，SQL的执行顺序并不是从select开始，而是从from开始</p><p>1、FROM：先去获取from里面的表，拿到对应的数据，生成虚拟表1。</p><p>2、ON：对虚拟表1应用ON筛选，符合条件的数据生成虚拟表2。</p><p>3、JOIN：根据JOIN的类型去执行相对应的操作，获取对应的数据，生成虚拟表3。</p><p>4、WHERE：对虚拟表3的数据进行条件过滤，符合记录的数据生成虚拟表4。</p><p>5、GROUP BY：根据group by中的列，对虚拟表4进行数据分组操作，生成虚拟表5。</p><p>6、CUBE|ROLLUP（聚合函数使用）：主要是使用相关的聚合函数，生成虚拟表6。</p><p>7、HAVING：对虚拟表6的数据过滤，生成虚拟表7，这个过滤是在where中无法完成的，同时count（expr）返回不为NULL的行数，而count（1）和count（*）是会返回包括NULL在内的行数。</p><p>8、SELECT：选择指定的列，生成虚拟表8。</p><p>9、DISTINCT：数据去重，生成虚拟表9。</p><p>10、ORDER BY：对虚拟表9中的数据进行指定列的排序，生成虚拟表10。</p><p>11、LIMIT：取出指定行的记录，生成虚拟表11，返回给查询用户。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>以上是SQL各关键词的执行顺序，如果在一条SQL语句里面你没有用到某个关键词那就不会被执行了。理解SQL的逻辑执行顺序对我们在实际写SQL的过程中也会有帮助的。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>二、执行计划——EXPLAIN</b></p><p>执行计划，是SQL在数据库中执行时的表现情况,通常用于SQL性能分析,优化等场景。在MySQL使用 explain 关键字来查看SQL的执行计划。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>基本的语法：EXPLAIN(select * from table)</p><p>在常规SQL语句前面加上EXPLAIN即可</p><p>运行结果：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-54f201c0bce8c3452d8d36f40eae350c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"80\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-54f201c0bce8c3452d8d36f40eae350c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;80&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"80\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-54f201c0bce8c3452d8d36f40eae350c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-54f201c0bce8c3452d8d36f40eae350c_b.jpg\"/></figure><p>参数解释：</p><p>1、id：数字越大越先执行，一样大则从上往下执行，如果为NULL则表示是结果集，不需要用来查询。</p><p>2、select_type：</p><p>simple：不需要union的操作或者是不包含子查询的简单select语句。</p><p>primary：需要union操作或者含有子查询的select语句。</p><p>union：连接两个select查询，第一个查询是dervied派生表，第二个及后面的表select_type都是union。</p><p>dependent union：与union一样，出现在union 或union all语句中，但是这个查询要受到外部查询的影响。</p><p>union result：包含union的结果集。</p><p>subquery：除了from字句中包含的子查询外，其他地方出现的子查询都可能是subquery。</p><p>dependent subquery：与dependent union类似，表示这个subquery的查询要受到外部表查询的影响。</p><p>derived：from字句中出现的子查询，也叫做派生表，其他数据库中可能叫做内联视图或嵌套select。</p><p>3、table</p><p>表名，如果是用了别名，则显示别名</p><p>4、type</p><p>依次从好到差：system，const，eq_ref，ref，fulltext，ref_or_null，unique_subquery，index_subquery，range，index_merge，index，ALL，除了all之外，其他的type都可以使用到索引，除了index_merge之外，其他的type只可以用到一个索引。</p><p>system：表中只有一行数据或者是空表。</p><p>const：使用唯一索引或者主键，返回记录一定是1行记录的等值where条件时，通常type是const。</p><p>eq_ref：出现在要连接过个表的查询计划中，驱动表只返回一行数据，且这行数据是第二个表的主键或者唯一索引，且必须为not null，唯一索引和主键是多列时，只有所有的列都用作比较时才会出现eq_ref。</p><p>ref：不像eq_ref那样要求连接顺序，也没有主键和唯一索引的要求，只要使用相等条件检索时就可能出现，常见与辅助索引的等值查找。</p><p>fulltext：全文索引检索，要注意，全文索引的优先级很高，若全文索引和普通索引同时存在时，mysql不管代价，优先选择使用全文索引。</p><p>ref_or_null：与ref方法类似，只是增加了null值的比较。实际用的不多。</p><p>unique_subquery：用于where中的in形式子查询，子查询返回不重复值唯一值。</p><p>index_subquery：用于in形式子查询使用到了辅助索引或者in常数列表，子查询可能返回重复值，可以使用索引将子查询去重。</p><p>range：索引范围扫描，常见于使用&gt;,&lt;,is null,between ,in ,like等运算符的查询中。</p><p>index_merge：表示查询使用了两个以上的索引，最后取交集或者并集，常见and ，or的条件使用了不同的索引。</p><p>index：索引全表扫描，把索引从头到尾扫一遍，常见于使用索引列就可以处理不需要读取数据文件的查询、可以使用索引排序或者分组的查询。</p><p>all：这个就是全表扫描数据文件，然后再在server层进行过滤返回符合要求的记录。</p><p>5、possible_keys：查询可能使用到的索引。</p><p>6、key：查询真正使用到的索引。</p><p>7、key_len：用于处理查询的索引长度。</p><p>8、ref：常数等值查询显示const，连接查询则显示表的关联字段。</p><p>9、rows：执行计划中估算的扫描行数，不是精确值。</p><p>10、filtered：表示存储引擎返回的数据在server层过滤后，剩下多少满足查询的记录数量的比例。</p><p>11、extra：该字段信息较多，这里就不一一叙述了。</p><p>在实际的使用过程中我们需要重点去关注type、key、key_len、rows、extra这几个参数，type要努力优化到range级别，all要尽量少的出现，在查询的过程中要尽量使用索引，提高效率，在extra里面出现Using filesort, Using temporary是不太好的，要去优化提高性能。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>三、优化TIPS</b></p><p>1、尽量少用select *</p><p>因为会增加不必要的消耗，select 后面直接加上需要的字段名。</p><p>2、IN 包含的值不应过多</p><p>IN本身这个操作消耗就比较高，如果IN里面是连续的数值，则可以用between代替，IN里面的字段如果是添加了索引，效率还是可以的，目前测试一万以内还是可以，但是超过了结果可能会有点爆炸，不要问我为什么</p><p>3、in和exists、not in 和 not exists</p><p>exists以外层表为驱动表，先被访问，适合于外表小而内表大的情况。</p><p>in则是先执行子查询，适合外表大而内表小的情况，</p><p>一般情况是不推荐使用not in，因为效率非常低，</p><p>eg：</p><p>1)select * from table_a where table_a.id not in (select table_b.id from table_b)</p><p>2)select * from table_a left join table_b on table_a.id = table_b.id where table_b.id is null</p><p>语句2的效率是要高于语句1的，SQL的结果是获取到在table_a中存在但是table_b中不存在的数据，如果直接用not in是不走索引的，而且在table_b比较大的时候效率会非常低，实际工作中我试了一下直接not in，然后数据达到一万条的时候大概需要150S左右才能查出数据（感谢DBA和运维不杀之恩），我采取的方法是，先查出两个表的交集，这样得到的表会小很多，而且是用的in，效率会高很多，然后再用not in，最终的效果也是一样，但是时间只要2.56S，然后采取语句2的关联表来处理，时间缩短到了1.42S，基本上效率是比较高的，当然理想的是在1S内。</p><p>4、尽量少用or，同时尽量用union all 代替union</p><p>or两边的字段如果有不走索引的会导致整个的查询不走索引，从而导致效率低下，这时可以使用union all或者union，而两者的区别是union是将两个结果合并之后再进行唯一性的过滤操作，效率会比union all低很多，但是union all需要两个数据集没有重复的数据。</p><p>5、分段和分页查询</p><p>在扫描行数较多的情况下可以采取分段查询，循环遍历，结果合并处理，</p><p>使用合理的分页方式，在数据表量级逐渐增加的时候，limit分页查询的效率会降低。</p><p>1）select  id,col from table limit 888888,1000</p><p>2）select  id,col from table where id &gt; 888887 limit 1000</p><p>取前一页的最大行数的id，然后根据这个id来限制下一页的起点。</p><p>6、不建议使用%前缀模糊查询</p><p>like &#34;%abc&#34;和like &#34;%abc%&#34;会导致索引失效而进行全文搜索。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>如果你还有什么比较好的优化tips欢迎分享！</p>", 
            "topic": [
                {
                    "tag": "性能优化", 
                    "tagLink": "https://api.zhihu.com/topics/19633850"
                }, 
                {
                    "tag": "SQL", 
                    "tagLink": "https://api.zhihu.com/topics/19553557"
                }, 
                {
                    "tag": "数据库", 
                    "tagLink": "https://api.zhihu.com/topics/19552067"
                }
            ], 
            "comments": [
                {
                    "userName": "达", 
                    "userLink": "https://www.zhihu.com/people/6122f437644534b4321259d35ebd2c7d", 
                    "content": "<p>性能优化可讲的地方太多了，从应用的需求到系统架构设计再到存储层的设计，这些都是需要充分规划的，到了存储层，又要有数据库的选型，之后又是数据库的设计，然后如何规划索引，如何使用查询，哪一个环节出现了纰漏都会导致后续生产中发现重大性能瓶颈，文中所说几乎只是查询部分的使用，而数据库设计是否优雅同样十分重要。</p>", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "知乎用户", 
                            "userLink": "https://www.zhihu.com/people/0", 
                            "content": "<p>您说的对，性能优化确实有很多地方可以讲，有很多地方可以学，但是自己的工作是数据分析，所以更多的是数据查询，至于应用需求、系统架构、存储层就交给我们公司的技术了</p>", 
                            "likes": 0, 
                            "replyToAuthor": "达"
                        }
                    ]
                }, 
                {
                    "userName": "霜雪明", 
                    "userLink": "https://www.zhihu.com/people/57deeee18708b6e56ee84506a3255dba", 
                    "content": "按id分页必须保证业务需要的排序和id的顺序严格对应才行啊。", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "知乎用户", 
                            "userLink": "https://www.zhihu.com/people/0", 
                            "content": "<p>id 一般都是设置为主键，且自增</p>", 
                            "likes": 0, 
                            "replyToAuthor": "霜雪明"
                        }
                    ]
                }, 
                {
                    "userName": "yuncity", 
                    "userLink": "https://www.zhihu.com/people/3810c575301e3e7b106510f54a0342c0", 
                    "content": "这些是针对Oracle的么", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "知乎用户", 
                            "userLink": "https://www.zhihu.com/people/0", 
                            "content": "<p>mysql</p>", 
                            "likes": 0, 
                            "replyToAuthor": "yuncity"
                        }
                    ]
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/36301018", 
            "userName": "张张张", 
            "userLink": "https://www.zhihu.com/people/0915edbcfb81dbf8a566b6cbfb83d064", 
            "upvote": 3, 
            "title": "通过数据分析来租到满意的房子", 
            "content": "<p>之前写的一篇文章初步看了一下杭州市场上的租房情况，小伙伴可以点开链接了解一下——<a href=\"https://zhuanlan.zhihu.com/p/30943348\" class=\"internal\">杭州租房市场初探</a>，现在我们就试着通过数据分析的处理方式来租到自己满意的房子。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>一、房源信息数据爬虫抓取</b></p><p>爬取的网站是嗨住网，这里只爬取了西湖区、余杭区、拱墅区三个区的房源，因为别的行政区太远了，爬下来以后也是无效要去除的，所以提前在爬取的时候就剔除不爬取。同时还对价格做了处理，这里只爬取了价格区间为 900-1800 的房源数据，自己的心理预期价位，可根据每个人实际情况调整。</p><p>说一下爬虫遇到的一个小问题，价格区间 900-1800 每个行政区的房源信息是多于 50 页的，而超过 50 页的这部分房源在网站上面是看不见的，所以就不能爬取到了，这里就需要对价格区间再分一个区间，然后就可以获取到我们需要的房源数据。最终得到 4177 条数据，如下图：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-ab95f089014d0c101985525f916a9aaf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"422\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-ab95f089014d0c101985525f916a9aaf_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;422&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"422\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-ab95f089014d0c101985525f916a9aaf_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-ab95f089014d0c101985525f916a9aaf_b.jpg\"/></figure><p><b>二、数据处理</b></p><p>如上图，数据一共有 9 个特征，分别是小区名称、价格、整租 / 合租、位置、居室数、主次卧、面积、朝向、标签。标签我先做了一步处理，实际标签有精装修、押一付一、水电齐全之类的，但是我只关注是否是爱上租的，所以就把有爱上租的标签给提取出来了。小区名称、整租 / 合租、主次卧对我来说不重要，所以不处理，接下来就处理对我们比较重要的特征。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>1、价格</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-1071a10bec1eb1da8c998a4cc3a3544b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"128\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-1071a10bec1eb1da8c998a4cc3a3544b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;128&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"128\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-1071a10bec1eb1da8c998a4cc3a3544b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-1071a10bec1eb1da8c998a4cc3a3544b_b.jpg\"/></figure><p>本来是考虑做一个二分类，符合什么价格的是自己想要的，就为 1，不符合的就为 0，但是后来考虑到不是完全绝对，比如价格在 900-1300，可能自己的接受程度更高，可能其他的条件不是非常符合自己也可以接受，所以在二分类基础上再做一个打分，代码如上图所示。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>2、居室数</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-5d0f6c563302a3350ffbc897d0e18b0e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"96\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-5d0f6c563302a3350ffbc897d0e18b0e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;96&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"96\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-5d0f6c563302a3350ffbc897d0e18b0e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-5d0f6c563302a3350ffbc897d0e18b0e_b.jpg\"/></figure><p>居室数处理比较简单，大于 4 个的是自己不接受的，所以为 0。居室数为 1 或者 2 实际可能是那种隔断出来的一室一卫的房间，所以不刻意的给居室数为 1 和 2 的打 2 分，都是统一处理为 1 分。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>3、朝向处理</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-56c2a6b72e6cba525bb50d99c5a00eba_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"147\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-56c2a6b72e6cba525bb50d99c5a00eba_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;147&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"147\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-56c2a6b72e6cba525bb50d99c5a00eba_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-56c2a6b72e6cba525bb50d99c5a00eba_b.jpg\"/></figure><p>本来是简单粗暴的朝北的为 0，其余为 1，后来觉得不是很好，同样采取了价格处理方式，在分类的基础上打分。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>4、居室面积处理</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-386f7cc68a39f094456d9897ecc9ed63_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"95\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-386f7cc68a39f094456d9897ecc9ed63_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;95&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"95\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-386f7cc68a39f094456d9897ecc9ed63_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-386f7cc68a39f094456d9897ecc9ed63_b.jpg\"/></figure><p>小于 10 的为 0，大于 10 的为 1。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>5、标签处理</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-7a488066bc05228ce3e2415779f6e966_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"109\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-7a488066bc05228ce3e2415779f6e966_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;109&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"109\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-7a488066bc05228ce3e2415779f6e966_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-7a488066bc05228ce3e2415779f6e966_b.jpg\"/></figure><p>是爱上租的为 0（因为要给中介费或者服务费），不是的为 1。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>6、新建总分</p><p>到此五个需要的特征都处理完毕了，然后我们新建一个特征对这五个特征进行求和，然后选取总分大于 5 分的房源，这样最终得到了 2953 条数据。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-8d857426f857a4f1947526fd76854b82_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"91\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-8d857426f857a4f1947526fd76854b82_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;91&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"91\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-8d857426f857a4f1947526fd76854b82_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-8d857426f857a4f1947526fd76854b82_b.jpg\"/></figure><p>保存到 csv 文件中：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a29ade9446917b3d0f42d8a9ce30cf0a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"170\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-a29ade9446917b3d0f42d8a9ce30cf0a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;170&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"170\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-a29ade9446917b3d0f42d8a9ce30cf0a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-a29ade9446917b3d0f42d8a9ce30cf0a_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-55ef904582563f849c7efb5c456cbfa8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-55ef904582563f849c7efb5c456cbfa8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;500&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-55ef904582563f849c7efb5c456cbfa8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-55ef904582563f849c7efb5c456cbfa8_b.jpg\"/></figure><p>其实这时候的数据还是非常多的，还要一个很重要的特征没有去处理，就是房源的位置。因为大家还是比较关心住的地方到上班地方的通勤时间，这里正常的做法应该是调用高德地图或者百度地图的 api 去返回两个点之间的通勤时间，不知道这在实际操作中是否可以实现，但是我是没找到相关的 api 和教程（如果有哪位大神知道的话，麻烦指点一下，感谢），所以我选择另外一种方式来处理，借用 tableau 来实现。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>7、位置处理</p><p>首先我们在 csv 文件中把位置里面大的范围较远的房源剔除掉，这样还剩下 748 个房源，然后我们把房源数据在 tableau 的地图里面可视化，在可视化的时候我把房间面积小于 10 和标签为爱上租的筛选过滤掉，得到结果如下图：</p><p>ps：你能看出这是在杭州的那块儿区域吗？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-91c4e4350768a57a43e2b9cd74f53475_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"878\" data-rawheight=\"674\" class=\"origin_image zh-lightbox-thumb\" width=\"878\" data-original=\"https://pic2.zhimg.com/v2-91c4e4350768a57a43e2b9cd74f53475_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;878&#39; height=&#39;674&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"878\" data-rawheight=\"674\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"878\" data-original=\"https://pic2.zhimg.com/v2-91c4e4350768a57a43e2b9cd74f53475_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-91c4e4350768a57a43e2b9cd74f53475_b.jpg\"/></figure><p>这里的红黄蓝三条线分别是三条公交线路，长度是距离目标点大概 25 分钟的车程，所以在这个范围内的房源都是可以接受的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-ba462dcbe898b5480af7e3ad13e92216_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"806\" data-rawheight=\"678\" class=\"origin_image zh-lightbox-thumb\" width=\"806\" data-original=\"https://pic3.zhimg.com/v2-ba462dcbe898b5480af7e3ad13e92216_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;806&#39; height=&#39;678&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"806\" data-rawheight=\"678\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"806\" data-original=\"https://pic3.zhimg.com/v2-ba462dcbe898b5480af7e3ad13e92216_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-ba462dcbe898b5480af7e3ad13e92216_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-4123ffe342a1554b83d0bbfbacc8e70f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"589\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-4123ffe342a1554b83d0bbfbacc8e70f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;589&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"589\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-4123ffe342a1554b83d0bbfbacc8e70f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-4123ffe342a1554b83d0bbfbacc8e70f_b.jpg\"/></figure><p>tableau 是可以直接在地图上选中数据导出的，选中符合条件的数据导出，最终得到 32 个小区 135 条数据，数据还是有点多的。可以拿着数据到网站上面按照得分从高到底依次去查询，再结合房源的照片情况，决定是否要联系房东看房了。</p>", 
            "topic": [
                {
                    "tag": "数据分析", 
                    "tagLink": "https://api.zhihu.com/topics/19559424"
                }, 
                {
                    "tag": "数据分析师", 
                    "tagLink": "https://api.zhihu.com/topics/19589774"
                }, 
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }
            ], 
            "comments": [
                {
                    "userName": "后来", 
                    "userLink": "https://www.zhihu.com/people/0b53c85a4892d1076160dc43b3d118e9", 
                    "content": "楼主的大数据我实在不懂", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "咸党", 
                    "userLink": "https://www.zhihu.com/people/c6ed12fd1d242e53aede38be851ee634", 
                    "content": "看不懂＋1", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "知乎用户", 
                            "userLink": "https://www.zhihu.com/people/0", 
                            "content": "😂", 
                            "likes": 0, 
                            "replyToAuthor": "咸党"
                        }
                    ]
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/35932114", 
            "userName": "张张张", 
            "userLink": "https://www.zhihu.com/people/0915edbcfb81dbf8a566b6cbfb83d064", 
            "upvote": 19, 
            "title": "MYSQL——Leetcode 刷题（免费版）", 
            "content": "<p>       在上一篇的文章中我们接触了 SQL 一些常用的技能，包括他的语法、关键词、函数等，没有看的可以点击链接进入——<a href=\"https://zhuanlan.zhihu.com/p/34758349\" class=\"internal\">SQL入个门，修行在个人</a>。学会了技能之后就要去打怪升级，LeetCode 就是一个不错的选择，而且现在有了 LeetCode 中文版 (www.leetcode-cn.com)，入门更简单了。LeetCode 上面的题目分为付费版和免费版，在难度等级上面有简单、中等和困难三种，可以先去刷免费版的简单、中等、困难，如果刷完感觉意犹未尽可以去英文版里面刷付费的（中文版里面暂时还没有付费题目）。今天这篇文章提供免费版简单和中等难度题的答案和思路。</p><p><b>EASY </b></p><p>一、组合两个表</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-4bb1f473c928e5305509b5b3b2e1ad01_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"726\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-4bb1f473c928e5305509b5b3b2e1ad01_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;726&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"726\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-4bb1f473c928e5305509b5b3b2e1ad01_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-4bb1f473c928e5305509b5b3b2e1ad01_b.jpg\"/></figure><p>答案：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-b3b61938338f1dc49c7b51168f3ff7ee_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"128\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-b3b61938338f1dc49c7b51168f3ff7ee_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;128&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"128\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-b3b61938338f1dc49c7b51168f3ff7ee_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-b3b61938338f1dc49c7b51168f3ff7ee_b.jpg\"/></figure><p>关键点：</p><p>PersonId 是 Person 表的主键，但不是 Address 表的主键，同时要满足无论 person 是否有地址信息，都要返回 person 的四个信息，所以这里用 left join 表关联。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>二、第二高薪水</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-77d67c21ac37143b49da20ec6e71e8f8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"463\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-77d67c21ac37143b49da20ec6e71e8f8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;463&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"463\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-77d67c21ac37143b49da20ec6e71e8f8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-77d67c21ac37143b49da20ec6e71e8f8_b.jpg\"/></figure><p>答案：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-ec4dd84cb2cd608333c7250da1d446ca_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"994\" data-rawheight=\"244\" class=\"origin_image zh-lightbox-thumb\" width=\"994\" data-original=\"https://pic3.zhimg.com/v2-ec4dd84cb2cd608333c7250da1d446ca_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;994&#39; height=&#39;244&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"994\" data-rawheight=\"244\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"994\" data-original=\"https://pic3.zhimg.com/v2-ec4dd84cb2cd608333c7250da1d446ca_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-ec4dd84cb2cd608333c7250da1d446ca_b.jpg\"/></figure><p>关键点：</p><p>1、只输出一个数字结果，要用 Distinct 去重。</p><p>2、查询第二高的 Salary，order by 要降序，同时结合 limit 函数就可以获得结果，这里也可以加上 offset 得到结果。</p><p>3、没有结果则返回 FULL，IFNULL 的用法。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>三、超过经理收入的员工</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-dc66bf39ea438195b0836cfe6e87c911_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"519\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-dc66bf39ea438195b0836cfe6e87c911_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;519&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"519\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-dc66bf39ea438195b0836cfe6e87c911_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-dc66bf39ea438195b0836cfe6e87c911_b.jpg\"/></figure><p>答案：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-5811fb1a0117e0d087124c74822b1b30_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"151\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-5811fb1a0117e0d087124c74822b1b30_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;151&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"151\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-5811fb1a0117e0d087124c74822b1b30_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-5811fb1a0117e0d087124c74822b1b30_b.jpg\"/></figure><p>关键点：</p><p>同一张表里的信息做关联，需要把一张表二次使用做关联再比较。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>四、寻找重复的电子邮箱</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-1e1829a86e1d51270dbd446348e9bc3d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"545\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-1e1829a86e1d51270dbd446348e9bc3d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;545&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"545\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-1e1829a86e1d51270dbd446348e9bc3d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-1e1829a86e1d51270dbd446348e9bc3d_b.jpg\"/></figure><p>答案：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c79261c45361eb59d995f08bca07802f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1028\" data-rawheight=\"230\" class=\"origin_image zh-lightbox-thumb\" width=\"1028\" data-original=\"https://pic4.zhimg.com/v2-c79261c45361eb59d995f08bca07802f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1028&#39; height=&#39;230&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1028\" data-rawheight=\"230\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1028\" data-original=\"https://pic4.zhimg.com/v2-c79261c45361eb59d995f08bca07802f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-c79261c45361eb59d995f08bca07802f_b.jpg\"/></figure><p>关键点：</p><p>先对每个邮箱出现的次数计数，然后用 having 函数过滤掉不符合条件的 Email 作为一张新的表，再选取 Email 即可。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>五、从不订购的用户</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-8f4528621965d768eccc51c05abebff7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"756\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-8f4528621965d768eccc51c05abebff7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;756&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"756\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-8f4528621965d768eccc51c05abebff7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-8f4528621965d768eccc51c05abebff7_b.jpg\"/></figure><p>答案：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-22d6eebcaefdf73e800a8f47c9c63f18_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"198\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-22d6eebcaefdf73e800a8f47c9c63f18_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;198&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"198\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-22d6eebcaefdf73e800a8f47c9c63f18_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-22d6eebcaefdf73e800a8f47c9c63f18_b.jpg\"/></figure><p>关键点：</p><p>NOT IN 的用法。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>六、删除重复的邮件</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-488b7847f40df984d81d6d4d58e0203c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"508\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-488b7847f40df984d81d6d4d58e0203c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;508&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"508\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-488b7847f40df984d81d6d4d58e0203c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-488b7847f40df984d81d6d4d58e0203c_b.jpg\"/></figure><p>答案：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-7f92a76a617deddce113b8c596184c12_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"299\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-7f92a76a617deddce113b8c596184c12_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;299&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"299\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-7f92a76a617deddce113b8c596184c12_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-7f92a76a617deddce113b8c596184c12_b.jpg\"/></figure><p>关键点：</p><p>这里提供了两种方法，一种是先筛选出 id 较大的邮箱然后删除，另一种方法是直接选取 id 较小的 Email。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>七、上升的温度</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-8d12c4cdceb2ae6531892cab80c9c76e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"497\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-8d12c4cdceb2ae6531892cab80c9c76e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;497&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"497\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-8d12c4cdceb2ae6531892cab80c9c76e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-8d12c4cdceb2ae6531892cab80c9c76e_b.jpg\"/></figure><p>答案：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-b65c003f044bf570703e3f500074be11_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"869\" data-rawheight=\"131\" class=\"origin_image zh-lightbox-thumb\" width=\"869\" data-original=\"https://pic2.zhimg.com/v2-b65c003f044bf570703e3f500074be11_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;869&#39; height=&#39;131&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"869\" data-rawheight=\"131\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"869\" data-original=\"https://pic2.zhimg.com/v2-b65c003f044bf570703e3f500074be11_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-b65c003f044bf570703e3f500074be11_b.jpg\"/></figure><p>关键点：</p><p>1、同一个表里的数据做对比，需要将一张表关联使用两次。</p><p>2、计算两个时间之间的天数，需要用到函数 Datediff。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>八、大的国家</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-3fc8d5d1f2a532525578d6d463555d71_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"612\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-3fc8d5d1f2a532525578d6d463555d71_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;612&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"612\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-3fc8d5d1f2a532525578d6d463555d71_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-3fc8d5d1f2a532525578d6d463555d71_b.jpg\"/></figure><p>答案：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-18d9ec7222a735931a981b71b112be3d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"715\" data-rawheight=\"91\" class=\"origin_image zh-lightbox-thumb\" width=\"715\" data-original=\"https://pic2.zhimg.com/v2-18d9ec7222a735931a981b71b112be3d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;715&#39; height=&#39;91&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"715\" data-rawheight=\"91\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"715\" data-original=\"https://pic2.zhimg.com/v2-18d9ec7222a735931a981b71b112be3d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-18d9ec7222a735931a981b71b112be3d_b.jpg\"/></figure><p>关键点：</p><p>OR 的运用。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>九、超过 5 名学生的课</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-2fb9bc37d41bb8329fd250e416bf5601_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"737\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-2fb9bc37d41bb8329fd250e416bf5601_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;737&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"737\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-2fb9bc37d41bb8329fd250e416bf5601_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-2fb9bc37d41bb8329fd250e416bf5601_b.jpg\"/></figure><p>答案：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-cd71371a4abc0d192e64007cf2f409d7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"807\" data-rawheight=\"144\" class=\"origin_image zh-lightbox-thumb\" width=\"807\" data-original=\"https://pic4.zhimg.com/v2-cd71371a4abc0d192e64007cf2f409d7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;807&#39; height=&#39;144&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"807\" data-rawheight=\"144\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"807\" data-original=\"https://pic4.zhimg.com/v2-cd71371a4abc0d192e64007cf2f409d7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-cd71371a4abc0d192e64007cf2f409d7_b.jpg\"/></figure><p>关键点：</p><p>分组计数然后过滤筛选。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>十、有趣的电影</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-ff2f8e5a7928cbddc90e094269e06232_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1078\" data-rawheight=\"711\" class=\"origin_image zh-lightbox-thumb\" width=\"1078\" data-original=\"https://pic3.zhimg.com/v2-ff2f8e5a7928cbddc90e094269e06232_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1078&#39; height=&#39;711&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1078\" data-rawheight=\"711\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1078\" data-original=\"https://pic3.zhimg.com/v2-ff2f8e5a7928cbddc90e094269e06232_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-ff2f8e5a7928cbddc90e094269e06232_b.jpg\"/></figure><p>答案：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-1a25ff8df06a9e31af28961e884f8c1b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"730\" data-rawheight=\"109\" class=\"origin_image zh-lightbox-thumb\" width=\"730\" data-original=\"https://pic4.zhimg.com/v2-1a25ff8df06a9e31af28961e884f8c1b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;730&#39; height=&#39;109&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"730\" data-rawheight=\"109\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"730\" data-original=\"https://pic4.zhimg.com/v2-1a25ff8df06a9e31af28961e884f8c1b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-1a25ff8df06a9e31af28961e884f8c1b_b.jpg\"/></figure><p>关键点:</p><p>mod 函数的运用，!= 运算符的使用，排序。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>十一、交换工资</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b8ab054bcf314258ba8bcf1b8d5363d4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1076\" data-rawheight=\"530\" class=\"origin_image zh-lightbox-thumb\" width=\"1076\" data-original=\"https://pic1.zhimg.com/v2-b8ab054bcf314258ba8bcf1b8d5363d4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1076&#39; height=&#39;530&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1076\" data-rawheight=\"530\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1076\" data-original=\"https://pic1.zhimg.com/v2-b8ab054bcf314258ba8bcf1b8d5363d4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b8ab054bcf314258ba8bcf1b8d5363d4_b.jpg\"/></figure><p>答案：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-dad10d7b87c74fffed6ad65009fe5b2d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"701\" data-rawheight=\"128\" class=\"origin_image zh-lightbox-thumb\" width=\"701\" data-original=\"https://pic2.zhimg.com/v2-dad10d7b87c74fffed6ad65009fe5b2d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;701&#39; height=&#39;128&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"701\" data-rawheight=\"128\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"701\" data-original=\"https://pic2.zhimg.com/v2-dad10d7b87c74fffed6ad65009fe5b2d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-dad10d7b87c74fffed6ad65009fe5b2d_b.jpg\"/></figure><p>关键点：</p><p>使用更新查询（update）和 case 语句</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>MEDIUM</b></p><p>一、第 N 高的薪水</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-63e85a2154a17a564648b9b8790cfd0d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"463\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-63e85a2154a17a564648b9b8790cfd0d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;463&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"463\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-63e85a2154a17a564648b9b8790cfd0d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-63e85a2154a17a564648b9b8790cfd0d_b.jpg\"/></figure><p>答案：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-8a041e42a1eac68f30ea90bb2e6766ed_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"279\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-8a041e42a1eac68f30ea90bb2e6766ed_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;279&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"279\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-8a041e42a1eac68f30ea90bb2e6766ed_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-8a041e42a1eac68f30ea90bb2e6766ed_b.jpg\"/></figure><p>关键点：</p><p>这题和之前的第 2 高薪水类似，只需要把 2 变成一个变量即可，创建函数的方式完成。limit 中直接写 N-1 会报错，所以用 SET 对 N 重新定义。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>二、分数排名</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-70734afbb1265cc8d2371d5624eb831e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"675\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-70734afbb1265cc8d2371d5624eb831e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;675&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"675\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-70734afbb1265cc8d2371d5624eb831e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-70734afbb1265cc8d2371d5624eb831e_b.jpg\"/></figure><p>答案：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-d249627b5403a63a088bb36665f72248_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"123\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-d249627b5403a63a088bb36665f72248_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;123&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"123\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-d249627b5403a63a088bb36665f72248_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-d249627b5403a63a088bb36665f72248_b.jpg\"/></figure><p>关键点：</p><p>主要思路是对于每一个分数，找出表中有多少个大于或者等于该分数的不同分数，然后降序排列即可。比如 3.65，表里大于等于 3.65 的数字分别是 4、3.85 和 3.65，所以它的排名是 3。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>三、连续出现的数字</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a9f9ba6c50c896bb9d19f6cb5e9572ae_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"561\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-a9f9ba6c50c896bb9d19f6cb5e9572ae_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;561&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"561\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-a9f9ba6c50c896bb9d19f6cb5e9572ae_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-a9f9ba6c50c896bb9d19f6cb5e9572ae_b.jpg\"/></figure><p>答案：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-4968c8a612efea1b6f0602d5e327b276_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"171\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-4968c8a612efea1b6f0602d5e327b276_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;171&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"171\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-4968c8a612efea1b6f0602d5e327b276_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-4968c8a612efea1b6f0602d5e327b276_b.jpg\"/></figure><p>关键点：</p><p>连续出现至少三次，所以需要比较 Num 的 Id 是三个连续的，然后 Num 相等即可。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>四、部门最高工资</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-3411cd28ece3e161f353bd6cb608ff94_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"726\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-3411cd28ece3e161f353bd6cb608ff94_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;726&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"726\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-3411cd28ece3e161f353bd6cb608ff94_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-3411cd28ece3e161f353bd6cb608ff94_b.jpg\"/></figure><p>答案：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-42ae0c21daae832089d8e1b9cf359904_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"224\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-42ae0c21daae832089d8e1b9cf359904_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;224&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"224\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-42ae0c21daae832089d8e1b9cf359904_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-42ae0c21daae832089d8e1b9cf359904_b.jpg\"/></figure><p>关键点：</p><p>先关联两张表得到部门和该部门的最高工资，然后最为新表去关联 Employee 就可得到数据。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>五、换座位</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-099d2987f39a7bd0491126141d98df71_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"782\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-099d2987f39a7bd0491126141d98df71_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;782&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"782\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-099d2987f39a7bd0491126141d98df71_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-099d2987f39a7bd0491126141d98df71_b.jpg\"/></figure><p>答案：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-93c44d53f89639e85a151ed9eb293896_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"206\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-93c44d53f89639e85a151ed9eb293896_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;206&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"206\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-93c44d53f89639e85a151ed9eb293896_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-93c44d53f89639e85a151ed9eb293896_b.jpg\"/></figure><p>关键点：</p><p>开始的时候我的想法是保持 id 不变，然后把一张表 left join 他本身，一个 id 不变，一个 id-1，但是发现这样操作不是很方便，然后采取 student 保持不变，去改变 id，用 case 语句就可以实现。第一个 when 表示偶数的 id-1，第二个 when 表示最大的数如果是计数则不变，最后的 else 表示 id+1，即非最大奇数的 id+1。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>这里把难度为 EASY 和 MEDIUM 的 16 道免费题全部搞定了，小伙伴要是有更好的解决思路欢迎指导。还有三题难度为 HARD，如果小伙伴有兴趣的话可以自己去试一下。</p>", 
            "topic": [
                {
                    "tag": "MySQL", 
                    "tagLink": "https://api.zhihu.com/topics/19554128"
                }, 
                {
                    "tag": "SQL", 
                    "tagLink": "https://api.zhihu.com/topics/19553557"
                }, 
                {
                    "tag": "力扣（LeetCode）", 
                    "tagLink": "https://api.zhihu.com/topics/19925162"
                }
            ], 
            "comments": [
                {
                    "userName": "杀心莫起", 
                    "userLink": "https://www.zhihu.com/people/9487665ab3dfe819cb1eecd49aa502cb", 
                    "content": "谢谢谢谢谢(*°∀°)=3", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "知乎用户", 
                            "userLink": "https://www.zhihu.com/people/0", 
                            "content": "不客气", 
                            "likes": 0, 
                            "replyToAuthor": "杀心莫起"
                        }
                    ]
                }, 
                {
                    "userName": "McPherson", 
                    "userLink": "https://www.zhihu.com/people/5ad43ccff829960165a9f688de0bb044", 
                    "content": "我上了leetcode网站为啥根本找不到SQL题，还请指点", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "楚楚", 
                            "userLink": "https://www.zhihu.com/people/697ae3574631cf6cddecc72eab1ca480", 
                            "content": "我也是", 
                            "likes": 0, 
                            "replyToAuthor": "McPherson"
                        }, 
                        {
                            "userName": "起名真的很麻烦", 
                            "userLink": "https://www.zhihu.com/people/d9506af247edd99f9b3868b4ba9848cc", 
                            "content": "<p>题目分类里找“数据库”</p>", 
                            "likes": 0, 
                            "replyToAuthor": "楚楚"
                        }
                    ]
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/34758349", 
            "userName": "张张张", 
            "userLink": "https://www.zhihu.com/people/0915edbcfb81dbf8a566b6cbfb83d064", 
            "upvote": 5, 
            "title": "SQL入个门，修行在个人", 
            "content": "<p>SQL是数据库的查询语言，今天我们来学习一下。文章的语句都是在Navicat premium的query界面运行的，使用的数据库是mysql，具体的软件安装使用可自行百度。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>为了有数据演示，我这里创建了一个school的数据库，里面包括四张表，详细内容如下截图，我是先在Excel里面创建了数据，然后导入数据库的，如果想要数据可关注我的公众号（数据实践笔记）在后台回复“SQL”。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-ef24a89e936e4d3d90200f01092c7284_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"878\" data-rawheight=\"962\" class=\"origin_image zh-lightbox-thumb\" width=\"878\" data-original=\"https://pic1.zhimg.com/v2-ef24a89e936e4d3d90200f01092c7284_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;878&#39; height=&#39;962&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"878\" data-rawheight=\"962\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"878\" data-original=\"https://pic1.zhimg.com/v2-ef24a89e936e4d3d90200f01092c7284_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-ef24a89e936e4d3d90200f01092c7284_b.jpg\"/></figure><p><b>一、检索语句</b></p><p>select column from table</p><p>table是表名，上图中的course、sc、student、teacher；column是我们要查询的字段/列，如果用通配符*代替就是获取所有的字段。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-ac0c11283bae4d17a1fc90291769d7cc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"453\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-ac0c11283bae4d17a1fc90291769d7cc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;453&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"453\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-ac0c11283bae4d17a1fc90291769d7cc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-ac0c11283bae4d17a1fc90291769d7cc_b.jpg\"/></figure><p>这里只显示运行了 select * from sc这条语句。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>其实在运行select cid from sc这条语句的时候会发现结果是返回了所有的cid，但这些cid有许多重复的，如果想要获得唯一的cid只需要distinct关键词就可以了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-d598c60ed7e837aa28d137c9f5899013_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"640\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-d598c60ed7e837aa28d137c9f5899013_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;640&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"640\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-d598c60ed7e837aa28d137c9f5899013_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-d598c60ed7e837aa28d137c9f5899013_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-2199370fbadd122e2d350263b0bac2ff_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"641\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-2199370fbadd122e2d350263b0bac2ff_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;641&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"641\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-2199370fbadd122e2d350263b0bac2ff_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-2199370fbadd122e2d350263b0bac2ff_b.jpg\"/></figure><p><b>二、过滤数据</b></p><p>WHERE子句</p><p>1、单条件筛选</p><p>学号为1000的同学的所有成绩</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-60ab8b72da83f19ad77cc4c65e9c54e9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"642\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-60ab8b72da83f19ad77cc4c65e9c54e9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;642&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"642\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-60ab8b72da83f19ad77cc4c65e9c54e9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-60ab8b72da83f19ad77cc4c65e9c54e9_b.jpg\"/></figure><p>2、多条件筛选</p><p>学号1000和课程编号8的课程成绩</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-7d2d866c865e60eeee46c04700c43c19_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"277\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-7d2d866c865e60eeee46c04700c43c19_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;277&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"277\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-7d2d866c865e60eeee46c04700c43c19_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-7d2d866c865e60eeee46c04700c43c19_b.jpg\"/></figure><p>3、AND、OR、（）三者运算级</p><p>学号为1000同学的编号8或者编号31两门课的成绩</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-ee9830ce726b0e031c916d4887b37004_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"319\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-ee9830ce726b0e031c916d4887b37004_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;319&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"319\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-ee9830ce726b0e031c916d4887b37004_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-ee9830ce726b0e031c916d4887b37004_b.jpg\"/></figure><p>因为成绩表里面课程编号最高是到30的，所以学生1000是没有学cid=31的这门课的，只得到一条结果，这里的（）的运算优先级是高于and高于or的，如果没有括号的话，就先执行and，返回结果为空，最终返回cid=8所有学生的成绩了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-48c0a6bd74f6deb62fd11519e77377c4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"717\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-48c0a6bd74f6deb62fd11519e77377c4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;717&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"717\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-48c0a6bd74f6deb62fd11519e77377c4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-48c0a6bd74f6deb62fd11519e77377c4_b.jpg\"/></figure><p>4、IN操作符</p><p>学号为1000同学的课程编号3或6或9或14或31的成绩</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-356929e9564d60347fbe5bfbb834ea1c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"405\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-356929e9564d60347fbe5bfbb834ea1c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;405&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"405\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-356929e9564d60347fbe5bfbb834ea1c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-356929e9564d60347fbe5bfbb834ea1c_b.jpg\"/></figure><p>如果用or语句的话整条查询语句就会非常长，但是用IN就会简洁很多。IN操作符是用来指定条件范围，范围中的每个条件都可以进行匹配，IN的执行要比or更快，而且IN是可以包含select子句的，使得可以动态的建立WHERE子句。</p><p>5、NOT操作符——否定它之后所跟的任何条件</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-c09603d90221217edc1cfa4c12b05040_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"733\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-c09603d90221217edc1cfa4c12b05040_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;733&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"733\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-c09603d90221217edc1cfa4c12b05040_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-c09603d90221217edc1cfa4c12b05040_b.jpg\"/></figure><p>cid一共是30个，排除了括号里面的四个剩下26个。</p><p>6、操作符：=、&lt;&gt;、!=、&lt;、 &lt;= 、&gt; 、&gt;= 、between</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-30c43e0abed40e9cef347e0ce6e1a969_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"538\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-30c43e0abed40e9cef347e0ce6e1a969_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;538&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"538\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-30c43e0abed40e9cef347e0ce6e1a969_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-30c43e0abed40e9cef347e0ce6e1a969_b.jpg\"/></figure><p>7、通配符过滤</p><p>LIKE操作符</p><p>百分号（%）通配符：表示任何字符出现任意次数</p><p>下划线（_）通配符：只匹配单个字符</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-420d3f5a7fb62a6c88e27da48683d856_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"521\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-420d3f5a7fb62a6c88e27da48683d856_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;521&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"521\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-420d3f5a7fb62a6c88e27da48683d856_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-420d3f5a7fb62a6c88e27da48683d856_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-350bc0a96c4220582ba8d5d6e5ba3bdd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"498\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-350bc0a96c4220582ba8d5d6e5ba3bdd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;498&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"498\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-350bc0a96c4220582ba8d5d6e5ba3bdd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-350bc0a96c4220582ba8d5d6e5ba3bdd_b.jpg\"/></figure><p>对比两个结果可以发现%返回了&#39;zhang&#39;之后两个字母和三个字母的姓名结果</p><p>&#39;__&#39;这里是用了两个&#39;_&#39;，因为一个的结果为空，两个就只返回了&#39;zhang&#39;之后两个字母的结果。</p><p>通配符虽然比较有用，但是他的搜索速度要比其他搜索要慢，而且除非绝对有必要，否则不要把通配符放在搜索模式的开始处，因为这样搜索起来是最慢的。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>三、排序数据</b></p><p>1、ORDER BY</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-db93971090c586d40da65b11c7197e20_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1680\" data-rawheight=\"1066\" class=\"origin_image zh-lightbox-thumb\" width=\"1680\" data-original=\"https://pic1.zhimg.com/v2-db93971090c586d40da65b11c7197e20_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1680&#39; height=&#39;1066&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1680\" data-rawheight=\"1066\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1680\" data-original=\"https://pic1.zhimg.com/v2-db93971090c586d40da65b11c7197e20_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-db93971090c586d40da65b11c7197e20_b.jpg\"/></figure><p>得到数据并按score排序，默认的是升序，如果要降序加一个DESC关键字就可以了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-31a8225b916c07ae0b36a751ab2943ce_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"637\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-31a8225b916c07ae0b36a751ab2943ce_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;637&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"637\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-31a8225b916c07ae0b36a751ab2943ce_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-31a8225b916c07ae0b36a751ab2943ce_b.jpg\"/></figure><p>如果是对多个列排序只需要把相应的列放在order by后面就可以了，而DESC关键字只应用到直接位于其前面的列名。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-31418e68f7e0c6ccbefa4b206d99b2a8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"463\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-31418e68f7e0c6ccbefa4b206d99b2a8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;463&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"463\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-31418e68f7e0c6ccbefa4b206d99b2a8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-31418e68f7e0c6ccbefa4b206d99b2a8_b.jpg\"/></figure><p>如图先按score排序，但是由于desc只作用在cid上面，所以score是默认的升序，而cid则是在score相同的情况是降序排序。</p><p>2、LIMIT</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-d63ca12a49a8e4f17d6d7cb61536c7ab_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"492\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-d63ca12a49a8e4f17d6d7cb61536c7ab_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;492&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"492\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-d63ca12a49a8e4f17d6d7cb61536c7ab_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-d63ca12a49a8e4f17d6d7cb61536c7ab_b.jpg\"/></figure><p>可以对比上一张发现我们的结果是这个学生成绩排名第三到第七的结果，limit的第一个参数表示从第几个位置开始，计数是从0开始，所以2得到的结果是从第三行开始，如果省略表示从0开始，第二个参数表示返回记录行的最大数，这里写的是5，如果结果只有3行就只返回3行。</p><p>同时在mysql里面是使用limit，但是在SqlServer里是用top，Oracle则是用rownum。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>四、汇总分组数据</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-47c57847668430c7109d54e3a82e4bb8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"467\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-47c57847668430c7109d54e3a82e4bb8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;467&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"467\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-47c57847668430c7109d54e3a82e4bb8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-47c57847668430c7109d54e3a82e4bb8_b.jpg\"/></figure><p>聚合函数有五个，分别是count、sum、avg、max、min，作用分别是计数、求和、求平均、最大值、最小值。</p><p>分组是group by函数，得到的结果类似Excel的数据透视表。</p><p>接下来说一下聚合函数和分组需要注意的地方。</p><p>1、count有两种用法</p><p>count（*）对表中行的数据进行计算，即使表中包含空值也会被计数。</p><p>count（column）对特定列中有值得行进行计数，忽略NULL值。</p><p>2、group by子句可以包含任意数目的列，这使得能对分组嵌套。</p><p>3、group by子句中的列必须是检索列或者有效的表达式，不能是聚合函数。</p><p>4、除聚合函数外，select语句中的每个列都必须在group by子句中给出。</p><p>5、having支持所有where操作符，差别是where过滤行，having过滤分组。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>五、条件判断</b></p><p>1、IF</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-c54b0298bb11ea7fc0275f0dc5389435_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"661\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-c54b0298bb11ea7fc0275f0dc5389435_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;661&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"661\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-c54b0298bb11ea7fc0275f0dc5389435_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-c54b0298bb11ea7fc0275f0dc5389435_b.jpg\"/></figure><p>SQL中的IF使用和Excel里面的差不多，可以用于条件判断，也可以用于存储过程的流程控制。</p><p>2、CASE WHEN</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-7d79e388fc1251ea3ac7a20d03937e6e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"718\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-7d79e388fc1251ea3ac7a20d03937e6e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;718&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"718\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-7d79e388fc1251ea3ac7a20d03937e6e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-7d79e388fc1251ea3ac7a20d03937e6e_b.jpg\"/></figure><p>图中两段SQL语句得到的结果和上面IF得到的结果是一样的，但是两个case语句里面ssex的位置有区别，第一种就是简单的case函数写法，第二种是case搜索函数写法。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-e927fbb0d0f69e2d6429c1fca15c0af5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"563\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-e927fbb0d0f69e2d6429c1fca15c0af5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;563&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"563\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-e927fbb0d0f69e2d6429c1fca15c0af5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-e927fbb0d0f69e2d6429c1fca15c0af5_b.jpg\"/></figure><p>我们还可以用select和case完成二维表的输出形式，实现数据透视表的功能。</p><p><b>六、子查询和联结表</b></p><p>之前的操作都是基于一张表的，但是实际工作中会有很多张表，而且你需要的数据不会全部都在一张表里面，这时候就需要操作多张表来获取数据了。</p><p>比如想查询没有学过某位老师的学生学号和姓名，这时就需要在多张表里面去获取数据。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-3c92f1e53c9b9038b01d7265ca62bf62_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"444\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-3c92f1e53c9b9038b01d7265ca62bf62_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;444&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"444\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-3c92f1e53c9b9038b01d7265ca62bf62_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-3c92f1e53c9b9038b01d7265ca62bf62_b.jpg\"/></figure><p>这里我们可以先建一个查询获得学过这个老师课程的学生的学号的子查询，然后在这个的基础上再去获取没有学过这位老师课程的学生学号和姓名。</p><p>再比如要获取学生的学号、姓名、选课数、总成绩，这时也是需要多张表操作的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-75b666dab8d5d464a4dae425beab5caf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"547\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-75b666dab8d5d464a4dae425beab5caf_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;547&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"547\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-75b666dab8d5d464a4dae425beab5caf_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-75b666dab8d5d464a4dae425beab5caf_b.jpg\"/></figure><p>这时有两种处理方式，一种是联结表的方式，我们可以把需要的表通过限定的列名来关联，比如这里的student.sid和sc.sid，另一种是利用join合并表的方式，把需要的数据从多张表合并到一张表，然后再进行相关的操作。</p><p>这里的join有right、left、inner、outer几种用法，类似于数学的交集和并集运算，这里找了一张图供参考：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-5a0ce005dfc3800dfc130838ef4c7085_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"790\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-5a0ce005dfc3800dfc130838ef4c7085_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;790&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"790\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-5a0ce005dfc3800dfc130838ef4c7085_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-5a0ce005dfc3800dfc130838ef4c7085_b.jpg\"/></figure><p>然后就是为什么我们这里写的left <br/>join，实际上这里不管是left还是right或者inner结果都一样，因为我们的student.sid和sc.sid是一样的，但是选择left是因为student的sid肯定是完整的，有学生可能没选课，那他在sc表中是没有数据的，用left之后如果为空是同样会返回的，从而不会漏掉。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>七、视图</b></p><p>视图是虚拟的表，与包含数据的表不一样，视图只包含使用时动态检索数据的查询。</p><p>如果查询一位老师教的课程里学生的学号、姓名、课程名称、学生成绩，可以通过表联结来查询。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-e640e766326a5218c4c5aee38e0a7747_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"511\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-e640e766326a5218c4c5aee38e0a7747_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;511&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"511\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-e640e766326a5218c4c5aee38e0a7747_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-e640e766326a5218c4c5aee38e0a7747_b.jpg\"/></figure><p>但是如果这项操作需要经常使用，比如要经常查不同老师带的学生成绩情况，不停的写SQL就比较麻烦，这时就可以用视图了，把学生学号、姓名、课程名称、成绩、老师名字放在视图里，这样下次查询的时候只需要简单SELECT语句就可以获取到数据了。</p><p>当你创建好视图的时候在左边的VIEWS下面是有你创建的视图，当然如果不用了也可以删除的。</p><p>视图重用SQL语句，同时简化复杂的SQL操作，使用的时候只是使用表的组成部分而不是整张表，可以给用户授予表的特定部分的访问权限而不是整个表的访问权限，从而能保护数据。创建好视图之后可以进行SELECT操作，过滤和排序数据，将视图联结到其他的视图或表。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>八、存储过程</b></p><p>之前的需求都可以用一条SQL语句来完成，但实际上有许多需求一条SQL语句是无法完成的，这时就需要存储过程，存储过程简单来说，就是为完成某个特定功能的SQL语句集，经编译后存储在数据库中，用户通过指定存储过程的名字并给定参数来调用执行它。</p><p>存储过程把处理封装在一个单元中，简化复杂的操作，同时保证了数据的完整性并防止出错，而且要比使用单独的SQL语句要快。以上就是存储过程的简单、安全、高性能的好处，但存储过程的编写要比SQL语句复杂，就需要更高的技能和更丰富的经验了。</p><p>1、创建不带参数的存储过程</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-5b020c557ceeaf9b25fc502491cee060_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"473\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-5b020c557ceeaf9b25fc502491cee060_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;473&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"473\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-5b020c557ceeaf9b25fc502491cee060_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-5b020c557ceeaf9b25fc502491cee060_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-567a97d1e64faee4e17103e2ad11a5e2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"627\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-567a97d1e64faee4e17103e2ad11a5e2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;627&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"627\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-567a97d1e64faee4e17103e2ad11a5e2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-567a97d1e64faee4e17103e2ad11a5e2_b.jpg\"/></figure><p>以上是创建存储过程的两种方式，一种是通过CREATE PROCEDURE语句创建，这里创建了一个名为stu_avg_score的存储过程，虽然这里没有参数，但是后面的（）是必须要有的，通过CALL调用就可以得到结果了，本例中的为 CALL stu_avg_score()。另外一种方式是通过新建函数功能来创建，不过这里Type类型要选择PROCEDURE而不是FUCTION，然后按照流程把对应的内容填上就可以了，点击Execute在Result里面查看结果，也可以用CALL调用。这里BEGIN和END语句用来限定存储过程体，过程体本身仅是一条简单的SQL语句。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>2、创建带参数的存储过程</p><p>三种参数：</p><p>IN：输入参数，表示调用者向过程传入值（传入值可以是字面量或变量）</p><p>OUT：输出参数，表示过程向调用者传出值（可以返回多个值）（传出值只能是变量）</p><p>INOUT：输入输出参数，既表示调用者向过程传入值，又表示过程向调用者传出值（值只能是变量）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-88e7d1ea78e801014ec4fab95e39a696_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"437\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-88e7d1ea78e801014ec4fab95e39a696_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;437&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"437\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-88e7d1ea78e801014ec4fab95e39a696_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-88e7d1ea78e801014ec4fab95e39a696_b.jpg\"/></figure><p>这里s1是需要输入的参数，是学生的学号，然后返回的ccount得到的是学生的选课数，在CALL调用的时候变量ccount要加@，调用时是不显示数据的，所以可以用select选择显示。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-2e86705868148ffc28a5ee56d2a1a9c5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"610\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-2e86705868148ffc28a5ee56d2a1a9c5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;610&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"610\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-2e86705868148ffc28a5ee56d2a1a9c5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-2e86705868148ffc28a5ee56d2a1a9c5_b.jpg\"/></figure><p>也可以用函数生成的形式来，只需要在对应的地方填上语句或者参数就可以了，可以直接执行，也可以用CALL调用生成结果。</p><p>这里只是展示了存储过程的创建和使用以及一些注意事项，它的实际功能比这些要复杂和强大的多，还需要实战中去体会和学习。</p><p></p>", 
            "topic": [
                {
                    "tag": "MySQL", 
                    "tagLink": "https://api.zhihu.com/topics/19554128"
                }, 
                {
                    "tag": "SQL", 
                    "tagLink": "https://api.zhihu.com/topics/19553557"
                }, 
                {
                    "tag": "MySQL 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19667043"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/32693551", 
            "userName": "张张张", 
            "userLink": "https://www.zhihu.com/people/0915edbcfb81dbf8a566b6cbfb83d064", 
            "upvote": 21, 
            "title": "Excel实现RFM模型", 
            "content": "<p><b>一、什么是 RFM 模型</b></p><p>在众多的客户关系管理 (CRM) 的分析模式中，RFM 模型是被广泛提到的。</p><p>RFM 模型是衡量客户价值和客户创利能力的重要工具和手段。该模型通过一个客户的近期购买行为、购买的总体频率以及消费总金额三项指标来描述该客户的价值状况，依据这三项指标划分 8 类客户价值。</p><p>客户数据三个要素：</p><p>R（Recency）——最近一次购买的时间有多远</p><p>最近一次消费时间越近的顾客是越有可能产生二次消费的群体。</p><p>F（Frequency）——最近一段时间内的购买次数</p><p>可以理解购买次数越多的客户是对我们产品越满意的客户，表示客户的忠诚度越高。</p><p>M（Monetary）——最近一段时间内的消费金额</p><p>消费金额是分析一个客户必不可少的一个数据，不仅是在 RFM 模型里面，比如在考虑 ROI 以及客户终身价值等分析的时候都是必需的。<br/></p><p><b>二、整体过程</b></p><p>1、获取用户数据，基本字段：用户编号（用户名称）、用户消费时间、用户消费次数、用户消费金额（具体的结合实际情况调整）</p><p>2、每个维度进行 5 个类别的划分，并对每个用户的 R、F、M 打分</p><p>3、将每个用户的 R、F、M 与总的 R、F、M 均值比较，得到一个大于（等于）平均值或者小于平均值的二分类结果，通过对比得到每类客户 RFM 的变动情况（2*2*2）共 8 个类型的结果：重要价值客户、重要唤回（保持）客户、重要深耕客户、重要挽留客户、潜力客户、新客户、一般维持客户、流失客户。</p><p>4、针对 8 大类型的客户采取不同的营销策略</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>三、Excel 实现过程</b></p><p>1、数据处理</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-d6f38c7da0dbe3d9b5c472b29f2292db_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1142\" data-rawheight=\"310\" class=\"origin_image zh-lightbox-thumb\" width=\"1142\" data-original=\"https://pic4.zhimg.com/v2-d6f38c7da0dbe3d9b5c472b29f2292db_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1142&#39; height=&#39;310&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1142\" data-rawheight=\"310\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1142\" data-original=\"https://pic4.zhimg.com/v2-d6f38c7da0dbe3d9b5c472b29f2292db_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-d6f38c7da0dbe3d9b5c472b29f2292db_b.jpg\"/></figure><p>最原始的数据是一条条交易的明细数据，从数据库里提取数据的时候就可以按照我们需要的三个字段来处理，得到如图所示的数据。当然如果你拿到的是原始的数据则只需要用 Excel 做一个数据透视表也可以得到如图所示的数据了。</p><p>2、设置 R、F、M 参数并打分</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-0e11ca32944395053e3742257a0706da_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"310\" class=\"origin_image zh-lightbox-thumb\" width=\"1336\" data-original=\"https://pic3.zhimg.com/v2-0e11ca32944395053e3742257a0706da_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1336&#39; height=&#39;310&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"310\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1336\" data-original=\"https://pic3.zhimg.com/v2-0e11ca32944395053e3742257a0706da_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-0e11ca32944395053e3742257a0706da_b.jpg\"/></figure><p>以 R 举例：</p><p>0-20（&gt;=0 and &lt;20）：得 5 分</p><p>20-26（&gt;=20 and &lt;26）：得 4 分</p><p>其他打分以此类推，当然这个打分不一定就是正确的，要结合打分之后的情况以及实际的业务情况来调整。</p><p>Excel 处理：</p><p>R 的处理稍微麻烦一点，因为你要计算每个客户最后的购买日期距离现在是多少天，所以需要用到 DATEDIF 函数来处理，然后用 LOOKUP 函数查找匹配返回对应的 R 得分，对于 lookup 函数第三个参数需要绝对引用，这样就得到每个用户的 R-score，同理可得 F-score 和 M-score。</p><p>R-score 公式：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c4b5b36d8e859a76fa287a2e506ffa73_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1338\" data-rawheight=\"214\" class=\"origin_image zh-lightbox-thumb\" width=\"1338\" data-original=\"https://pic4.zhimg.com/v2-c4b5b36d8e859a76fa287a2e506ffa73_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1338&#39; height=&#39;214&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1338\" data-rawheight=\"214\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1338\" data-original=\"https://pic4.zhimg.com/v2-c4b5b36d8e859a76fa287a2e506ffa73_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-c4b5b36d8e859a76fa287a2e506ffa73_b.jpg\"/></figure><p>打分结果统计：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-6c1c4f66c709eb144cfe6da249ce43b0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1220\" data-rawheight=\"420\" class=\"origin_image zh-lightbox-thumb\" width=\"1220\" data-original=\"https://pic1.zhimg.com/v2-6c1c4f66c709eb144cfe6da249ce43b0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1220&#39; height=&#39;420&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1220\" data-rawheight=\"420\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1220\" data-original=\"https://pic1.zhimg.com/v2-6c1c4f66c709eb144cfe6da249ce43b0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-6c1c4f66c709eb144cfe6da249ce43b0_b.jpg\"/></figure><p>可以根据分组统计的结果来检验参数设置的是否合理，哪里还需要调整。</p><p>Excel 处理：用 countif 函数统计即可。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>友情提醒：如果此处的函数不会使用可查看专栏上一篇文章《Excel 常用函数讲解》，这不上次讲解的立马就用到了。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>3、计算每个用户的 R、F、M 值</p><p>将该用户的 R-score 和所有用户的 R-score 的均值比较，如果是大于均值则为 1，否则为 0。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-8de50c5fadcc42b1d67ca7d966d44edc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"294\" class=\"origin_image zh-lightbox-thumb\" width=\"1336\" data-original=\"https://pic1.zhimg.com/v2-8de50c5fadcc42b1d67ca7d966d44edc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1336&#39; height=&#39;294&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"294\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1336\" data-original=\"https://pic1.zhimg.com/v2-8de50c5fadcc42b1d67ca7d966d44edc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-8de50c5fadcc42b1d67ca7d966d44edc_b.jpg\"/></figure><p>4、得到客户最终的 RFM</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-7d197b1964793a10a225f16439cb4655_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"944\" data-rawheight=\"556\" class=\"origin_image zh-lightbox-thumb\" width=\"944\" data-original=\"https://pic2.zhimg.com/v2-7d197b1964793a10a225f16439cb4655_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;944&#39; height=&#39;556&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"944\" data-rawheight=\"556\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"944\" data-original=\"https://pic2.zhimg.com/v2-7d197b1964793a10a225f16439cb4655_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-7d197b1964793a10a225f16439cb4655_b.jpg\"/></figure><p>这里用一个拼接符号就可以了，也可以用拼接函数得到，这样就得到每个用户的 RFM 了。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>每个 RFM 值对应的客户类型</p><p>1）RFM=111，重要价值客户</p><p>RFM 都很大，最近有购买行为，累计交易次数多，累计交易金额高，优质客户，需要保持</p><p>2）RFM=011，重要唤回客户</p><p>交易次数和交易金额高，但是最近没有交易，需要唤回</p><p>3）RFM=101，重要深耕客户</p><p>交易金额大，而且最近有交易，需要重点识别</p><p>4）RFM=001，重要挽留客户</p><p>交易金额大，但是最近没有交易而且交易次数比较少，需要重要挽留</p><p>5）RFM=110，潜力客户</p><p>交易次数多，且最近有交易，需要挖掘跟进</p><p>6）RFM=100，新客户</p><p>最近刚开始交易的用户，属于有推广价值的用户</p><p>7）RFM=010，一般维持客户</p><p>交易次数多，但是都是小额消费的，且最近没有交易，属于一般维持</p><p>8）RFM=000，流失客户</p><p>RFM 值都较低，基本流失了<br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>5、统计各类别客户数</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-424ba663af604821d9f361656cf78e5d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1316\" data-rawheight=\"618\" class=\"origin_image zh-lightbox-thumb\" width=\"1316\" data-original=\"https://pic2.zhimg.com/v2-424ba663af604821d9f361656cf78e5d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1316&#39; height=&#39;618&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1316\" data-rawheight=\"618\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1316\" data-original=\"https://pic2.zhimg.com/v2-424ba663af604821d9f361656cf78e5d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-424ba663af604821d9f361656cf78e5d_b.jpg\"/></figure><p>这样就可以很明显的知道目前我们的客户主要是属于什么类别的，以及反映出的问题，然后针对不同类型的客户我们需要采取怎样的策略来营销，提高我们的营业额</p><p>Excel 处理：</p><p>1）、可以对 RFM 分组统计，用 countif 函数即可，然后绘制条形图。</p><p>2）、对处理的数据进行数据透视表，然后得到分组统计的结果，然后绘图，个人认为是数据透视表的效果更好，因为数据透视表里面的统计数据如果双击是可以直接显示对应的明细数据，方便查看每类用户的数据。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>6、不同参数下的用户分析</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-bfb67257fdb3fef593444cf96f0535aa_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"316\" class=\"origin_image zh-lightbox-thumb\" width=\"1336\" data-original=\"https://pic3.zhimg.com/v2-bfb67257fdb3fef593444cf96f0535aa_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1336&#39; height=&#39;316&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"316\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1336\" data-original=\"https://pic3.zhimg.com/v2-bfb67257fdb3fef593444cf96f0535aa_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-bfb67257fdb3fef593444cf96f0535aa_b.jpg\"/></figure><p>可以选择购买人数、累计交易金额、平均交易金额等参数来分析目前的客户状况。</p><p>Excel 处理：数据透视表 + 条件格式</p><p>比如选择购买人数可以发现我们目前的客户维护情况怎么样，是新客户的推广工作没做好，导致新客户数较少，还是客户的复购率较低，产品需要改善，新客户的流失是什么情况。这里不详细叙说，具体结合实际工作情况灵活运用。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>以上是自己的理解，如果有疑问欢迎沟通交流，当然如果文章中有理解不对或者考虑和表述有所欠缺的地方也欢迎指点，感激不尽！</p><p class=\"ztext-empty-paragraph\"><br/></p><p>最后能关注一下公众号就更好啦（公众号：数据实践笔记）</p><p></p>", 
            "topic": [
                {
                    "tag": "模型", 
                    "tagLink": "https://api.zhihu.com/topics/19579715"
                }, 
                {
                    "tag": "数据分析工具", 
                    "tagLink": "https://api.zhihu.com/topics/19569775"
                }, 
                {
                    "tag": "Microsoft Excel", 
                    "tagLink": "https://api.zhihu.com/topics/19567930"
                }
            ], 
            "comments": [
                {
                    "userName": "陈嘉涛", 
                    "userLink": "https://www.zhihu.com/people/f0e0d8f1f832c1e27dc78674a9f77b08", 
                    "content": "可以根据分组统计的结果来检验参数设置的是否合理，哪里还需要调整。这个点用countif统计出结果后，怎么判断是否合理？这个能否详细说说", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "知乎用户", 
                            "userLink": "https://www.zhihu.com/people/0", 
                            "content": "主要还是跟你的实际情况相结合判断", 
                            "likes": 0, 
                            "replyToAuthor": "陈嘉涛"
                        }, 
                        {
                            "userName": "陈嘉涛", 
                            "userLink": "https://www.zhihu.com/people/f0e0d8f1f832c1e27dc78674a9f77b08", 
                            "content": "能够说说一个标准吗？怎么分析判断？怎么结合实际情况，我查了很多说RFM模型的，很多都不把这个参数怎么定讲清楚，其实这个很重要，很有可能一不小心就分错层级", 
                            "likes": 0, 
                            "replyToAuthor": "知乎用户"
                        }
                    ]
                }, 
                {
                    "userName": "极端原始人", 
                    "userLink": "https://www.zhihu.com/people/9a3cfd851d96b01d15259c1d795a6c3b", 
                    "content": "Vlookup哪里能不能讲仔细一点", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "花喜大叔", 
                    "userLink": "https://www.zhihu.com/people/0b2bba5926a613829f3d448c2a787ce2", 
                    "content": "可以make一个dashboard，显示一个调参模块。根据需求改变分值设置，是不是客观一些。", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "知乎用户", 
                            "userLink": "https://www.zhihu.com/people/0", 
                            "content": "<p>是的</p>", 
                            "likes": 0, 
                            "replyToAuthor": "花喜大叔"
                        }
                    ]
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/31202476", 
            "userName": "张张张", 
            "userLink": "https://www.zhihu.com/people/0915edbcfb81dbf8a566b6cbfb83d064", 
            "upvote": 63, 
            "title": "Excel常用函数解析", 
            "content": "<p>如果你每天的工作中都会用到Excel，那函数肯定会帮你提高工作效率，今天就来聊一聊常用的一些函数。<br/></p><p><b>一、清洗处理类</b></p><p><b>函数：MID</b></p><p>1、语法规则</p><p>MID(text, start_num, num_chars)</p><p>2、参数解释</p><p>text：要被截取的字符</p><p>start_num：从左起第几位开始</p><p>num_chars：截取的字符长度</p><p>3、用途</p><p>截取特定位置特定长度的字符串</p><p>4、动图演示</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-83c0b8682052edcbaf6e9093234f202a_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"599\" data-rawheight=\"245\" data-thumbnail=\"https://pic3.zhimg.com/v2-83c0b8682052edcbaf6e9093234f202a_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"599\" data-original=\"https://pic3.zhimg.com/v2-83c0b8682052edcbaf6e9093234f202a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;599&#39; height=&#39;245&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"599\" data-rawheight=\"245\" data-thumbnail=\"https://pic3.zhimg.com/v2-83c0b8682052edcbaf6e9093234f202a_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"599\" data-original=\"https://pic3.zhimg.com/v2-83c0b8682052edcbaf6e9093234f202a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-83c0b8682052edcbaf6e9093234f202a_b.gif\"/></figure><p>有了身份证号，然后提取出生年月，首先是选取目标字符B2,然后出生日期是从第7个字符开始，出生年月的长度是6，依次输入到函数即得出生年月。</p><p>5、番外</p><p>与Mid类似的还有Left和Right，功能类似，同时用于清洗处理类的函数还有连接函数Concatenate以及替换函数Replace。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>二、查找匹配类</b></p><p><b>函数：VLOOKUP</b></p><p>1、语法规则<br/>VLOOKUP (lookup_value,table_array,col_index_num,range_lookup)</p><p>2、参数解释</p><p>lookup_value：要查找的值</p><p>table_array：要查找的区域</p><p>col_index_num：返回数据在查找区域的第几列数</p><p>range_lookup：模糊匹配/精确匹配</p><p>3、用途</p><p>按列查找，最终返回该列所需查询列序所对应的值</p><p>4、动图演示</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-3ac932b26f428b7511d0f8772bb6d719_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"599\" data-rawheight=\"240\" data-thumbnail=\"https://pic2.zhimg.com/v2-3ac932b26f428b7511d0f8772bb6d719_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"599\" data-original=\"https://pic2.zhimg.com/v2-3ac932b26f428b7511d0f8772bb6d719_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;599&#39; height=&#39;240&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"599\" data-rawheight=\"240\" data-thumbnail=\"https://pic2.zhimg.com/v2-3ac932b26f428b7511d0f8772bb6d719_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"599\" data-original=\"https://pic2.zhimg.com/v2-3ac932b26f428b7511d0f8772bb6d719_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-3ac932b26f428b7511d0f8772bb6d719_b.gif\"/></figure><p>lookup_value是单元格F4的值“小郑”，table_array是A:D这四列，因为成绩是在第四列，如果是要查性别的话只需要选取A:C这三列即可，col_index_num是4，因为目标列“成绩”是在选取的列中位于第四列，range_lookup是0，精确查找，如果是1的话则是模糊查找。</p><p>5、番外：</p><p>与VLOOKUP对应的还有HLOOKUP，一个是按列查找，一个是按行查找。同类型的其他函数还有INDEX、OFFSET。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>函数LOOKUP</b></p><p>1、语法规则</p><p>向量形式：LOOKUP(lookup_value,lookup_vector,result_vector)</p><p>备注：这里只介绍向量形式</p><p>数组形式：LOOKUP(lookup_value,array)</p><p>2、参数解释</p><p>lookup_value：要查找的数值</p><p>lookup_vector：包含一行或一列的区域，区间内的数值必须是升序的</p><p>result_vector：包含一行或一列的区域，区间内的数值必须是升序的，大小必须和lookup_vector一致</p><p>3、用途</p><p>查找某个条件对应的值并返回</p><p>4、动图演示</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-702617c645f9fc45ca001d2412b48cbe_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"170\" data-thumbnail=\"https://pic3.zhimg.com/v2-702617c645f9fc45ca001d2412b48cbe_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic3.zhimg.com/v2-702617c645f9fc45ca001d2412b48cbe_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;600&#39; height=&#39;170&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"170\" data-thumbnail=\"https://pic3.zhimg.com/v2-702617c645f9fc45ca001d2412b48cbe_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic3.zhimg.com/v2-702617c645f9fc45ca001d2412b48cbe_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-702617c645f9fc45ca001d2412b48cbe_b.gif\"/></figure><p>这里的lookup_vector和result_vector我是直接在输入里面手动打出来了，当然也可以事先在列中输入好，然后选取，效果是一样的。</p><p>5、番外</p><p>当然这里你也可以用IF来判断，不过整个公式就会变得很长，可读性要差好多，如果条件是几十个呢，估计得写懵逼吧。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>三、计算统计类</b></p><p><b>函数：COUNTIF</b></p><p>1、语法规则</p><p>COUNTIF（range，criteria）</p><p>2、参数解释</p><p>range：要计算其中非空单元格数目的区域</p><p>criteria ：以数字、表达式或文本形式定义的条件</p><p>3、用途</p><p>对报表范围中符合指定条件的值计数</p><p>4、动图演示</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-adb1fd1538f832c4751bd2d67c0d53cc_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"272\" data-thumbnail=\"https://pic1.zhimg.com/v2-adb1fd1538f832c4751bd2d67c0d53cc_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-adb1fd1538f832c4751bd2d67c0d53cc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;600&#39; height=&#39;272&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"272\" data-thumbnail=\"https://pic1.zhimg.com/v2-adb1fd1538f832c4751bd2d67c0d53cc_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-adb1fd1538f832c4751bd2d67c0d53cc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-adb1fd1538f832c4751bd2d67c0d53cc_b.gif\"/></figure><p>如图所示，很简单的一个条件统计。</p><p>5、番外</p><p>如果是多条件统计就可以用到Countifs函数。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>函数：SUMIF</b></p><p>1、语法规则</p><p>SUMIF(range，criteria，sum_range)</p><p>2、参数解释</p><p>range：用于条件判断的区域</p><p>criteria：求和条件</p><p>sum_range：求和区域</p><p>3、用途</p><p>对报表范围中符合指定条件的值求和</p><p>4、动图演示</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-32264ee340537c45a208ea68e4b7a359_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"230\" data-thumbnail=\"https://pic2.zhimg.com/v2-32264ee340537c45a208ea68e4b7a359_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-32264ee340537c45a208ea68e4b7a359_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;600&#39; height=&#39;230&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"230\" data-thumbnail=\"https://pic2.zhimg.com/v2-32264ee340537c45a208ea68e4b7a359_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-32264ee340537c45a208ea68e4b7a359_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-32264ee340537c45a208ea68e4b7a359_b.gif\"/></figure><p>range是“年级”这一列，criteria是F3单元格，sum_range是“成绩”列。</p><p>5、番外</p><p>如果是多条件求和，比如这里想球每个年级男女不同性别的总成绩，就需要函数SUMIFS。同类型的函数还有SUMPRODUCT、MAX、MIN、AVERAGE。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>四、逻辑判断类</b></p><p><b>函数ISERROR/IF</b></p><p>1、语法规则</p><p>IF(logical_test,value_if_true,value_if_false)</p><p>2、参数解释</p><p>logical_test：判断条件</p><p>value_if_true：判断条件为真时的结果</p><p>value_if_false：判断条件为假时的结果</p><p>ISERROR（）函数是用来返回TRUE或FALSE的，与IF结合使用是一个经典的防报错公式</p><p>3、用途</p><p>条件判断和防报错</p><p>4、动图演示</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-2ed4c829f6e7cb92ee6e171a63eb980f_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"298\" data-thumbnail=\"https://pic4.zhimg.com/v2-2ed4c829f6e7cb92ee6e171a63eb980f_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-2ed4c829f6e7cb92ee6e171a63eb980f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;600&#39; height=&#39;298&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"298\" data-thumbnail=\"https://pic4.zhimg.com/v2-2ed4c829f6e7cb92ee6e171a63eb980f_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-2ed4c829f6e7cb92ee6e171a63eb980f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-2ed4c829f6e7cb92ee6e171a63eb980f_b.gif\"/></figure><p>这里如果目标值为空的时候，用完成值除以目标值得到的完成率是返回一个“#DIV/0!”的错误，但是加上IF和ISERROR判断之后其他的结果不变，但是错误的空格都返还空单元格，当然你也可以设置为空时返回的内容。</p><p>5、番外</p><p>没有番外。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>五、时间序列类</b></p><p><b>函数DATEDIF</b></p><p>1、语法规则</p><p>DATEDIF(start_date,end_date,unit)</p><p>2、参数解释</p><p>start_date：起始时间</p><p>end_date：结束时间</p><p>unit：所需信息的返回类型，“Y”“M”“D”分别表示年/月/天</p><p>3、用途</p><p>返回两个日期之间的年\\月\\日间隔数</p><p>4、动图演示</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-ef247e201baaa63df2afd0072a820c4a_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"315\" data-thumbnail=\"https://pic3.zhimg.com/v2-ef247e201baaa63df2afd0072a820c4a_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic3.zhimg.com/v2-ef247e201baaa63df2afd0072a820c4a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;600&#39; height=&#39;315&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"315\" data-thumbnail=\"https://pic3.zhimg.com/v2-ef247e201baaa63df2afd0072a820c4a_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic3.zhimg.com/v2-ef247e201baaa63df2afd0072a820c4a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-ef247e201baaa63df2afd0072a820c4a_b.gif\"/></figure><p>today（）函数是用来生成今天的日期的，当然你也可以指定日期，然后计算入职时间和今日之间的差值，然后以月分形式返回就得到了在职月数，同样的也可以得到年数。</p><p>5、番外</p><p>依旧没有番外。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>以上只是我个人觉得比较常用的一些函数，当然Excel的函数是远不止我介绍的，在工作中要结合实际情况灵活运用，同时还有一些功能强大的组合函数能帮你更好的处理你的Excel，提高你的工作效率。</p><p>我找了一份Excel学习的资料，还是比较系统的。关键是每章都有详细的讲解，同时讲解的案例的文档和数据都是有提供的，所以不仅可以看书学，还可以实际自己动手按照书中的例子自己一步步实现，下面是目录，关注我的公众号“数据实践笔记（DataPracticeNotes）”后台回复“Excel”即可得到资料的下载链接</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-a25a58a0281a2e5efbb079cb66e54071_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1230\" data-rawheight=\"794\" class=\"origin_image zh-lightbox-thumb\" width=\"1230\" data-original=\"https://pic2.zhimg.com/v2-a25a58a0281a2e5efbb079cb66e54071_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1230&#39; height=&#39;794&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1230\" data-rawheight=\"794\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1230\" data-original=\"https://pic2.zhimg.com/v2-a25a58a0281a2e5efbb079cb66e54071_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-a25a58a0281a2e5efbb079cb66e54071_b.jpg\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "Excel 公式", 
                    "tagLink": "https://api.zhihu.com/topics/19619229"
                }, 
                {
                    "tag": "Microsoft Excel", 
                    "tagLink": "https://api.zhihu.com/topics/19567930"
                }, 
                {
                    "tag": "Excel 函数", 
                    "tagLink": "https://api.zhihu.com/topics/20029400"
                }
            ], 
            "comments": [
                {
                    "userName": "李宗丽", 
                    "userLink": "https://www.zhihu.com/people/f8ad737dec6f1b6a55cfd13eebced4dd", 
                    "content": "Excel", 
                    "likes": 1, 
                    "childComments": []
                }, 
                {
                    "userName": "李宗丽", 
                    "userLink": "https://www.zhihu.com/people/f8ad737dec6f1b6a55cfd13eebced4dd", 
                    "content": "非常需要 ，希望可以得到，非常感谢", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "hello lenovo", 
                    "userLink": "https://www.zhihu.com/people/cda7bfc4311ae0c1ed813b191653040d", 
                    "content": "Countifs 能否详细解读下", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "妞大大大羊", 
                    "userLink": "https://www.zhihu.com/people/e67e0b82b775302a863e8334f23c8d0c", 
                    "content": "好像已经失效了哦", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/30943348", 
            "userName": "张张张", 
            "userLink": "https://www.zhihu.com/people/0915edbcfb81dbf8a566b6cbfb83d064", 
            "upvote": 12, 
            "title": "杭州租房市场初探", 
            "content": "<p>租房一直是我这样的外来务工人员的一件烦心事，虽然目前租的房子自己比较满意，但是还是想来看看杭州现在的租房市场情况。</p><p>用爬虫爬取了嗨住网杭州的租房信息，总共是23591条。选取爬嗨住的原因主要是：房源数量多，信息标签完整，网站没有反爬措施，自己目前租的房子就是在嗨住上面找到的。</p><p>最终的数据显示如下：</p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-4f86a37c1828ca1d6cb3178f68d842d0_b.jpg\" data-caption=\"\" data-rawwidth=\"2082\" data-rawheight=\"474\" class=\"origin_image zh-lightbox-thumb\" width=\"2082\" data-original=\"https://pic1.zhimg.com/v2-4f86a37c1828ca1d6cb3178f68d842d0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;2082&#39; height=&#39;474&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"2082\" data-rawheight=\"474\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2082\" data-original=\"https://pic1.zhimg.com/v2-4f86a37c1828ca1d6cb3178f68d842d0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-4f86a37c1828ca1d6cb3178f68d842d0_b.jpg\"/></figure><p>接下来就来看看这些数据情况<br/></p><p>一、各区的租房数</p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-b8b7ff6ca0a6fe27e7989b1d607f17bd_b.jpg\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"338\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-b8b7ff6ca0a6fe27e7989b1d607f17bd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;338&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"338\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-b8b7ff6ca0a6fe27e7989b1d607f17bd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-b8b7ff6ca0a6fe27e7989b1d607f17bd_b.jpg\"/></figure><p>如图显示：</p><p>滨江、西湖、下城三个区的租房数是最多的</p><p>上城区的租房数最少，并且是远远少于其他几个区的</p><p class=\"ztext-empty-paragraph\"><br/></p><p>二、租金分布</p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-df41ccf91f55495cda9ab0426c221b65_b.jpg\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"341\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-df41ccf91f55495cda9ab0426c221b65_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;341&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"341\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-df41ccf91f55495cda9ab0426c221b65_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-df41ccf91f55495cda9ab0426c221b65_b.jpg\"/></figure><p>租金0-1000的房源数小于1000套，整体占比4%</p><p>租金1001-2000的房源数最多，占比高达35%，单人租房基本上价格就在这个区间，可选的房源还是比较多的，当然土豪的话就不用太考虑价格，那就随意了</p><p>租金2001-5000的房源数占比50%，主要适配合租的人群，价格也是可以接受的</p><p>租金10000以上的房源有168套，多是高档小区的高档装修房，我就在网上看看了</p><p class=\"ztext-empty-paragraph\"><br/></p><p>接下来看看最贵的租房信息是哪条</p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-1e80649bbb0e9caf570ae26ffc0586a6_b.jpg\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"315\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-1e80649bbb0e9caf570ae26ffc0586a6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;315&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"315\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-1e80649bbb0e9caf570ae26ffc0586a6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-1e80649bbb0e9caf570ae26ffc0586a6_b.jpg\"/></figure><p>网站上显示的最贵的是42000一个月，但是从出租信息可以发现以这个小区目前的房价、出租面积、装修情况来看是达不到这个出租价格的，所以可以判定这条出租信息存在房源虚假的情况，最高的应该是36000一个月的滨江金色海岸的租房信息，目前这个小区房价均价在7万左右，2007年建成，房子是豪华装修的，实际的信息和价格是比较匹配的。<br/></p><p>三、价格区间和各区域的分布占比分布</p><p>1、各区域的价格分布</p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-1561aca583396bd3881a6149fd9c51da_b.jpg\" data-caption=\"\" data-rawwidth=\"1452\" data-rawheight=\"544\" class=\"origin_image zh-lightbox-thumb\" width=\"1452\" data-original=\"https://pic3.zhimg.com/v2-1561aca583396bd3881a6149fd9c51da_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1452&#39; height=&#39;544&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"1452\" data-rawheight=\"544\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1452\" data-original=\"https://pic3.zhimg.com/v2-1561aca583396bd3881a6149fd9c51da_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-1561aca583396bd3881a6149fd9c51da_b.jpg\"/></figure><p>各区域的每个价格区间的租房数占比接近，1001-2000的占比最高，随着价格的上升，占比越来越低。两个例外的：上城区和下城区，这两个区域里面3001-4000的占比是最高的，甚至4001-5000的占比都是比1001-2000的占比高的，好的地理位置决定了高的房租价格。<br/></p><p>2、价格区间在各区域的分布</p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-2093de26d74a748884bcec2b1cdecc20_b.jpg\" data-caption=\"\" data-rawwidth=\"1254\" data-rawheight=\"606\" class=\"origin_image zh-lightbox-thumb\" width=\"1254\" data-original=\"https://pic1.zhimg.com/v2-2093de26d74a748884bcec2b1cdecc20_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1254&#39; height=&#39;606&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"1254\" data-rawheight=\"606\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1254\" data-original=\"https://pic1.zhimg.com/v2-2093de26d74a748884bcec2b1cdecc20_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-2093de26d74a748884bcec2b1cdecc20_b.jpg\"/></figure><p>杭州目前价格低（0-1000）的房源主要集中在余杭，单人适合租住的价格区间（1001-2000）除了上城区和下城区较低，其他各区域占比分布相对均匀。价格&gt;10000的房源里面上城占比最多，主要集中在钱塘江沿线，比如蓝色钱江（是不是有点耳熟）、金色海岸和水岸枫亭等小区。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>四、地图显示</p><p>1、租金0-1000</p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-aa4f44d0727f3e358b692c17948af6d6_b.jpg\" data-caption=\"\" data-rawwidth=\"1540\" data-rawheight=\"1016\" class=\"origin_image zh-lightbox-thumb\" width=\"1540\" data-original=\"https://pic3.zhimg.com/v2-aa4f44d0727f3e358b692c17948af6d6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1540&#39; height=&#39;1016&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"1540\" data-rawheight=\"1016\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1540\" data-original=\"https://pic3.zhimg.com/v2-aa4f44d0727f3e358b692c17948af6d6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-aa4f44d0727f3e358b692c17948af6d6_b.jpg\"/></figure><p>备注：圆圈越大表示该位置的房源数越多</p><p>地图上可以很直观的看见租金0-1000在每个区都有的，不过居住条件就不敢肯定了，在一号线终点临平以及一号线沿线的下沙区域租金0-1000的房源分布是相对比较密集的。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>2、租金大于10000</p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-c8b7892da474197def51a312802c0c27_b.jpg\" data-caption=\"\" data-rawwidth=\"1448\" data-rawheight=\"986\" class=\"origin_image zh-lightbox-thumb\" width=\"1448\" data-original=\"https://pic4.zhimg.com/v2-c8b7892da474197def51a312802c0c27_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1448&#39; height=&#39;986&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"1448\" data-rawheight=\"986\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1448\" data-original=\"https://pic4.zhimg.com/v2-c8b7892da474197def51a312802c0c27_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-c8b7892da474197def51a312802c0c27_b.jpg\"/></figure><p>备注：圆圈越大表示该位置的房源数越多</p><p>这里先说明一下：</p><p>1）拿到的位置数据是小区的名称，要转化为经纬度，同时如果经纬度数据是以百度地图得到的还需要校正偏差才能在tableau上面绘制，比如我自己的数据就是这样处理的。</p><p>2）tableau地图的钱塘江绘制有一点问题，钱江新城那一块儿给绘制成钱塘江了，所以不是小区在江上面，同时九堡大桥之后的钱塘江一直不显示，具体小区位置可根据道路来参考。</p><p>从图中可以看出租金大于10000的房源主要集中在钱江新城一带和武林广场附近，以及个别区域零星有一些，距离市区位置再远一些的基本上就没有了。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>3、整体显示</p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-46491a0ef67f06a3a0094d920424557d_b.jpg\" data-caption=\"\" data-rawwidth=\"1396\" data-rawheight=\"1050\" class=\"origin_image zh-lightbox-thumb\" width=\"1396\" data-original=\"https://pic2.zhimg.com/v2-46491a0ef67f06a3a0094d920424557d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1396&#39; height=&#39;1050&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"1396\" data-rawheight=\"1050\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1396\" data-original=\"https://pic2.zhimg.com/v2-46491a0ef67f06a3a0094d920424557d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-46491a0ef67f06a3a0094d920424557d_b.jpg\"/></figure><p>PS：地铁线路是自己徒手画上去的，可能略有偏差</p><p>从图中可以看出房源的分布情况，留石高架以南，紫金港路以东，钱江以北到杭州东站基本上房源相对比较密集，可选房源较多。滨江房源多是地铁沿线以及公司园区附近，下沙钱塘江沿线、高校附近、客运中心和九堡附近、临平、丁桥、三墩、留下、转塘几个区域的房源数相对比较密集，其他位置的房源则是零星分布，相对较少。</p><p>杭州租房市场初探就到这儿了，主要看看杭州租房的一些整体情况。对于我们拿到的这批数据还可以做其他的事情，比如根据租房的信息标签来判定租房信息是否是虚假信息，也可以根据租房信息分类找到最适合自己的房子，这些就在后面的文章中来写了，有兴趣的小伙伴也可以自己试一下。</p><p></p>", 
            "topic": [
                {
                    "tag": "数据分析", 
                    "tagLink": "https://api.zhihu.com/topics/19559424"
                }, 
                {
                    "tag": "杭州", 
                    "tagLink": "https://api.zhihu.com/topics/19558830"
                }, 
                {
                    "tag": "数据可视化", 
                    "tagLink": "https://api.zhihu.com/topics/19593576"
                }
            ], 
            "comments": [
                {
                    "userName": "后来", 
                    "userLink": "https://www.zhihu.com/people/0b53c85a4892d1076160dc43b3d118e9", 
                    "content": "楼主大大能不能帮忙推荐房源啊", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "知乎用户", 
                            "userLink": "https://www.zhihu.com/people/0", 
                            "content": "可以看看另外一篇文章，主要自己要有自己找房的思路", 
                            "likes": 0, 
                            "replyToAuthor": "后来"
                        }
                    ]
                }, 
                {
                    "userName": "咸党", 
                    "userLink": "https://www.zhihu.com/people/c6ed12fd1d242e53aede38be851ee634", 
                    "content": "另外一篇文章更加看不懂", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "往事随风", 
                    "userLink": "https://www.zhihu.com/people/bfe5173def0a4bac33b6bf02fab07c75", 
                    "content": "<p>数据做的很好 你该去做做数据分析 应该会很优秀 还有就是判断一个房子是不是虚假房源不是你觉得价格高了或者低了就是虚假房源哦 有些房子就是这个价格 同一个小区永远相信价格高的那个就对了</p>", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "知乎用户", 
                            "userLink": "https://www.zhihu.com/people/0", 
                            "content": "这只是一个初级，最理想的确实还有很多可以做分析，判断是否虚假房源会有一个相对价格，不是绝对判断，当然这个也可以有其他的维度来辅助，谢谢你的建议，还有很多需要的", 
                            "likes": 0, 
                            "replyToAuthor": "往事随风"
                        }
                    ]
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/30033354", 
            "userName": "张张张", 
            "userLink": "https://www.zhihu.com/people/0915edbcfb81dbf8a566b6cbfb83d064", 
            "upvote": 3, 
            "title": "白夜追凶—观众在追什么", 
            "content": "<p>ps：文章9月27号发表在个人公众号，现搬运过来</p><p>最近国产剧《白夜追凶》很火，豆瓣上面的评分也达到了9.1，不过我一集都还没有看，于是想着能不能用数据来分析一下呢。说做就做，用爬虫拿了豆瓣上面白夜追凶截止到9月25号的13000条用户评论的信息，接下来看看这些数据有什么好玩的。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>一、用户评级分布</b></p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-e7db764689d0f0d8a777cd5bbac9f438_b.jpg\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"186\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-e7db764689d0f0d8a777cd5bbac9f438_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;186&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"186\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-e7db764689d0f0d8a777cd5bbac9f438_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e7db764689d0f0d8a777cd5bbac9f438_b.jpg\"/></figure><p>从用户评级分布来看五星的占比遥遥领先，也是符合白夜追凶现在的豆瓣9.1的评分的，不过还有0.58%的用户是没有打分的，不知道豆瓣在计算的时候是怎么处理的<br/></p><p><b>二、每天用户评论数分布</b></p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-a1e3bb17cd27e3c4d8307492c0f6d1d4_b.jpg\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"274\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-a1e3bb17cd27e3c4d8307492c0f6d1d4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;274&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"274\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-a1e3bb17cd27e3c4d8307492c0f6d1d4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-a1e3bb17cd27e3c4d8307492c0f6d1d4_b.jpg\"/></figure><p>评论数据是从8月30号开始的，基本的趋势是线性上升的，但是这个图里面有两个点是比较异常的，9月13号和9月20号，这两天的评论数突然下降了很多，当时猜测是由于看的人变少了，所以评论数下降，那百度一下白夜追凶更新的时间来看看</p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-0e0a24a46e4de9075ddd5faa1033216d_b.jpg\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"270\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-0e0a24a46e4de9075ddd5faa1033216d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;270&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"270\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-0e0a24a46e4de9075ddd5faa1033216d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-0e0a24a46e4de9075ddd5faa1033216d_b.jpg\"/></figure><p>还是验证了猜测，周三只有vip会员可以抢先看，但是就会有一个新的问题了，那么同样是9月6号的周三却没有出现大幅下跌的情况，我的猜想是距离开播时间不长，热度还不是很高，这个从百度指数也可以参考一二，换个思路考虑周四就会发现每个周四的评论数都是突然增加很多，这样也可以间接验证之前猜测</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>三、每小时用户数评论分布</b></p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-865eea533e8faa0daf3e585a26e2e6f1_b.jpg\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"274\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-865eea533e8faa0daf3e585a26e2e6f1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;274&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"274\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-865eea533e8faa0daf3e585a26e2e6f1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-865eea533e8faa0daf3e585a26e2e6f1_b.jpg\"/></figure><p>一天评论数量最多的时间是晚上10点到11点，之后就处于下降的趋势，在早上6点之后开始上升，上午9点到晚上7点基本上是一个比较稳定的趋势，整体还是比较符合一个正常分布的，侧面也可以简单的验证一下是否有水军来刷评论。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>四、评论内容分析</b></p><p>13000条评论，总共100多万字，这么多的用户评论，这些用户都在说些什么呢？那就把每句话分词处理一下，简单来说就是把一句话分成若干个词或者字，处理的效果如下：</p><p>处理前：</p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-2d7ed5881e6d6f5b81b2d65747f50832_b.jpg\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"330\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-2d7ed5881e6d6f5b81b2d65747f50832_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;330&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"330\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-2d7ed5881e6d6f5b81b2d65747f50832_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-2d7ed5881e6d6f5b81b2d65747f50832_b.jpg\"/></figure><p>处理后：</p><p>处理之后就变成一个个的词或者字了</p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-2c8e1dd9fca3eec0cde11761e8b6bb50_b.jpg\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"247\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-2c8e1dd9fca3eec0cde11761e8b6bb50_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;247&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"247\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-2c8e1dd9fca3eec0cde11761e8b6bb50_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-2c8e1dd9fca3eec0cde11761e8b6bb50_b.jpg\"/></figure><p>那么我们来看看排名靠前的都是哪些词</p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-abf8694bad3a612ce50b619adf0941ca_b.jpg\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"306\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-abf8694bad3a612ce50b619adf0941ca_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;306&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"306\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-abf8694bad3a612ce50b619adf0941ca_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-abf8694bad3a612ce50b619adf0941ca_b.jpg\"/></figure><p>排在第一的是潘粤明，主角没毛病，从top20的词可以看出观众的评价还是比较高，比较一致的，比如好看、良心、紧凑、演技在线、停不下来、五星，但是这个地方出现了一个词是我之前没有见过的——打call，百度之后发现原来也是一个夸奖词，我的理解就是鼓掌加上6666。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>接下来用词云展示这些词，Python词云处理的不是很好，找了一个在线生成词云的，效果也一般，这里就不多花时间来处理了，后面有时间再来细究，毕竟Python的词云还是比较好玩的</p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-6c7ff1960d6edffd28b6afb58bea0345_b.jpg\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"365\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-6c7ff1960d6edffd28b6afb58bea0345_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;365&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"365\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-6c7ff1960d6edffd28b6afb58bea0345_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-6c7ff1960d6edffd28b6afb58bea0345_b.jpg\"/></figure><figure><noscript><img src=\"https://pic2.zhimg.com/v2-407aeae94551901393c0e6333c87793d_b.jpg\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"299\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-407aeae94551901393c0e6333c87793d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;299&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"640\" data-rawheight=\"299\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-407aeae94551901393c0e6333c87793d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-407aeae94551901393c0e6333c87793d_b.jpg\"/></figure><p>说实话我自己都觉得丑</p><p>但是整体的感觉还是有的</p><p>所以最后观众在追什么呢？我觉得在追潘粤明分饰两角的在线演技和环环相扣的紧凑剧情，你觉得呢？</p><p class=\"ztext-empty-paragraph\"><br/></p><p>分析就到这儿结束了，接下来是实现的过程，有兴趣的话也可以自己去做一个喜欢的电视剧或者电影分析，肯定会比我做的好，因为我觉得自己的这份做的不咋滴</p><p><b>一、爬虫过程</b></p><p>爬虫很简单，豆瓣的前端我觉得写的是比较好解析的，需要注意的是豆瓣不登录的话只能看见前10页的评论，所以要处理cookies，在这里我没有处理cookies，而是采取模拟登录的方式来解决，代码如下：</p><div class=\"highlight\"><pre><code class=\"language-text\">#导入需要的包\nimport json\nimport time\nfrom selenium import webdriver\nfrom bs4 import BeautifulSoup\n\ndef get_start():\n    #打开浏览器和网页\n   url = &#39;https://movie.douban.com/subject/26883064/comments?status=P&#39;\n   driver = webdriver.Chrome()\n   driver.get(url)\n   #登录\n   time.sleep(1)\n   button_login = driver.find_element_by_class_name(&#39;nav-login&#39;).click()\n   time.sleep(1)\n   button_user = driver.find_element_by_id(&#39;email&#39;).send_keys(&#39;username&#39;)\n   time.sleep(1)\n   password = driver.find_element_by_id(&#39;password&#39;)\n   actions = webdriver.ActionChains(driver)\n   actions.move_to_element(password)\n   actions.click()\n   actions.send_keys(&#39;yourpassword&#39;)\n   actions.perform()\n   #开始爬虫\n   items = get_detail(driver.page_source)\n   for item in items:\n       write(item)\n   print(&#39;第1页结束&#39;)\n\n   i = 1\n   while i &lt; 720:\n       driver.execute_script(&#34;window.scrollTo(0, 2600)&#34;)\n       button = driver.find_element_by_class_name(&#39;next&#39;).click()\n       items = get_detail(driver.page_source)\n       for item in items:\n           write(item)\n       i += 1\n       print(&#39;第%s页结束&#39; % i)\n       time.sleep(2)\n\n#写入本地文件\ndef write(content):\n   with open(&#39;result.txt&#39;, &#39;a&#39;, encoding=&#39;utf-8&#39;) as f:\n       f.write(json.dumps(content, ensure_ascii=False) + &#39;\\n&#39;)\n       f.close()\n\n#爬虫\ndef get_detail(source):\n   soup = BeautifulSoup(source, &#39;lxml&#39;)\n   infos = soup.find_all(name=&#39;div&#39;, class_=&#39;comment-item&#39;)\n   for info in infos:\n       yield {\n           &#39;评论&#39;: info.find(name=&#39;p&#39;).get_text().replace(&#39;\\n        &#39;, &#39;&#39;),\n           &#39;评级&#39;: info.select(&#39;.comment-info span&#39;)[1].get(&#39;title&#39;),\n           &#39;时间&#39;: info.find(name=&#39;span&#39;, class_=&#39;comment-time&#39;).get(&#39;title&#39;),\n       }\n\ndef main():\n   get_start()\n\nif __name__ == &#39;__main__&#39;:\n   main()</code></pre></div><p><b>二、jieba分词</b></p><div class=\"highlight\"><pre><code class=\"language-text\">import jieba\n\nfilename = &#39;comment.txt&#39;\njieba.suggest_freq((&#39;白夜追凶&#39;), True)\njieba.suggest_freq((&#39;演技在线&#39;), True)\njieba.suggest_freq((&#39;潘老师&#39;), True)\njieba.suggest_freq((&#39;打call&#39;), True)\nwith open(filename, &#39;r&#39;, encoding=&#39;utf-8&#39;) as f:\n   text = re.sub(r&#39;\\W+&#39;, &#39; &#39;, f.read(), flags=re.U)\nmytext = &#34; &#34;.join(jieba.cut(text, cut_all=False, HMM=False))</code></pre></div><p>jieba分词很强大，还有很多好玩的地方需要我去摸索，虽然他自带35万的词典，也可以用HMM识别新词，但是总还是有一些不能正确识别并分词的，比如我们这里面的白夜追凶就被分为了‘白夜’和‘追凶’，打call也被分开了，所以要添加新词，同时还有同义词处理，比如潘粤明和潘老师其实就是同一个人，还要设置停用词，更多更好玩的还需要继续研究一下</p><p><b>三、词云</b></p><div class=\"highlight\"><pre><code class=\"language-text\">#导入需要的包\nfrom wordcloud import WordCloud, ImageColorGenerator\nimport matplotlib.pyplot as plt\n\nbackground_Image = plt.imread(&#39;pym2.jpg&#39;)\nwc = WordCloud(background_color=&#39;white&#39;, mask=background_Image, max_words=200,\n              font_path=&#39;simsun.ttf&#39;, max_font_size=50, random_state=10)\nwc.generate(mytext)\nimage_colors = ImageColorGenerator(background_Image)\nwc.recolor(color_func=image_colors)\nplt.imshow(wc)\nplt.axis(&#39;off&#39;)\nplt.show()</code></pre></div><p>Python实现词云还是比较简单的，甚至如果你不设置参数的话两三行代码应该就可以搞定，但是他有22个参数可以设置，所以决定了你生成的词云图是多样化的，我也只是刚接触，后面还需要接续来研究研究，不过有一点需要注意的是再生成中文词云的时候需要你自己下载中文字体并且调用的，因为Python的Wordcloud是不支持中文的，在代码的红色部分已表明。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>其实这篇文章还是有三点缺陷的，在后面还需要不断努力来完善，也欢迎大神多多指导，感激不尽~</p>", 
            "topic": [
                {
                    "tag": "数据分析", 
                    "tagLink": "https://api.zhihu.com/topics/19559424"
                }, 
                {
                    "tag": "爬虫", 
                    "tagLink": "https://api.zhihu.com/topics/20049326"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/29282026", 
            "userName": "张张张", 
            "userLink": "https://www.zhihu.com/people/0915edbcfb81dbf8a566b6cbfb83d064", 
            "upvote": 27, 
            "title": "爬虫大众点评—杭州美食圈", 
            "content": "<p>最近接触了解了一点关于爬虫的知识，然后就想着实践一下，考虑自己来杭州也有一年多了，但是也没怎么逛吃逛吃，所以这次就想着把杭州的美食爬一遍，说不定能找到几家自己喜欢吃的呢，那爬哪呢——大众点评呗。</p><p><b>一、爬虫</b></p><p>先说一下爬大众点评遇到的一些坑吧：</p><p>1、当你打开大众点评的网页进入杭州美食之后就发现一页页店铺的信息，显示有50页，但是实际上是远不止50页的，我第一次爬的时候还单纯的在想这么大的杭州怎么只有750家店铺上了大众点评，所以要想法子获取更多的页面链接</p><p>2、第一次爬下750家店铺的数据时发现总是会少2条左右的数据，而且抽取几家店铺核对数据发现数据对不上，这就尴尬了，说明爬取的过程出了问题，比如我要的数据是店名、菜系、区划分、地址、评论条数、评级、服务评分、环境评分、口味评分、人均价格，但是并不是所有的店家都有这个数据的，甲店铺可能没有人均价格，乙店铺可能没有服务评分的内容，那么在爬取的过程中就会用后面店铺的数据来填补，导致数据错乱，所以怎么办呢？换个思路重新写咯</p><p>3、在观察店铺的信息的时候发现还有暂停营业和尚未营业的标签，所以这个还要区分，要不然后面的分析半天还不知道这家店铺是不是在营业就尴尬了</p><p>把这些坑理顺规避之后就开始爬虫，整体思路也比较简单：</p><p>1、构建爬取的链接，上面说到大众点评最多只显示50页，所以你要获得更多的链接，我的做法是通过设置人均价格的区间来循环，然后拼接字符串生成链接</p><p>2、解析网页链接</p><p>3、提取所需的店铺信息</p><p>4、写入本地文件（因为还要拿这些数据来分析）</p><p>最后的过程还是比较顺利的，拿到了6393条完整的数据</p><p>这里说明一下我在设置人均价格的时候最低设置的是50，其实50以下的还有很多店铺，甚至比50以上的还要多，但是考虑这些店铺里面大部分都是小吃快餐、面包甜点、水果饮料之类的，所以对这部分数据进行了舍去，最终的核心代码如下：</p><div class=\"highlight\"><pre><code class=\"language-text\">infos = soup.select(&#34;#shop-all-list &gt; ul &gt; li &gt; div.txt&#34;) #获取商铺列表\n    for info in infos:\n        yield {\n            &#39;店名&#39;: info.h4.get_text(),\n            &#39;是否营业&#39;: info.find(class_=&#34;istopTrade&#34;).string if info.find(class_=&#34;istopTrade&#34;) else None,\n            &#39;评级&#39;: info.find(name=&#39;div&#39;, attrs={&#39;class&#39;: &#39;comment&#39;}).span.get(&#39;title&#39;),\n            &#39;评论&#39;: info.find(name=&#39;div&#39;, attrs={&#39;class&#39;: &#39;comment&#39;}).a.get_text().strip()[:5],\n            &#39;均价&#39;: info.find(name=&#39;a&#39;, attrs={&#39;class&#39;:&#39;mean-price&#39;, &#39;target&#39;: &#39;_blank&#39;}).b.get_text(),\n            &#39;口味&#39;: info.select(&#39;.comment-list b&#39;)[0].string if info.select(&#39;.comment-list b&#39;) else None,\n            &#39;环境&#39;: info.select(&#39;.comment-list b&#39;)[1].string if info.select(&#39;.comment-list b&#39;) else None,\n            &#39;服务&#39;: info.select(&#39;.comment-list b&#39;)[2].string if info.select(&#39;.comment-list b&#39;) else None,\n            &#39;菜系&#39;: info.find(class_=&#34;tag&#34;).string if info.find(class_=&#34;tag&#34;) else None,\n            &#39;区划分&#39;: info.select(&#39;.tag-addr a&#39;)[1].string if info.select(&#39;.tag-addr a&#39;) else None,\n            &#39;地址&#39;: info.find(class_=&#34;addr&#34;).get_text() if info.find(class_=&#34;addr&#34;) else None,\n        }</code></pre></div><p>得到最终的数据如下：</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-e3b544e3536b73272e9894657559ada0_b.png\" data-rawwidth=\"1638\" data-rawheight=\"180\" class=\"origin_image zh-lightbox-thumb\" width=\"1638\" data-original=\"https://pic1.zhimg.com/v2-e3b544e3536b73272e9894657559ada0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1638&#39; height=&#39;180&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1638\" data-rawheight=\"180\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1638\" data-original=\"https://pic1.zhimg.com/v2-e3b544e3536b73272e9894657559ada0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e3b544e3536b73272e9894657559ada0_b.png\"/></figure><p>现在有了数据就来分析看看有没有什么比较好玩的。</p><p><b>二、可视化分析</b></p><p><b>备注：所有图都是用tableau完成的</b></p><p>1、店铺的营业情况</p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-1a5cc8ca22e2cde360a3a2b98f9357bc_b.png\" data-rawwidth=\"1600\" data-rawheight=\"702\" class=\"origin_image zh-lightbox-thumb\" width=\"1600\" data-original=\"https://pic1.zhimg.com/v2-1a5cc8ca22e2cde360a3a2b98f9357bc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1600&#39; height=&#39;702&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1600\" data-rawheight=\"702\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1600\" data-original=\"https://pic1.zhimg.com/v2-1a5cc8ca22e2cde360a3a2b98f9357bc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-1a5cc8ca22e2cde360a3a2b98f9357bc_b.png\"/></figure><p>尚未营业和暂停营业的比例很低，加起来一共280家店铺左右</p><p>正在营业的店铺占比高达95.65%</p><p>接下来的分析都是基于正在营业的店铺进行的</p><p class=\"ztext-empty-paragraph\"><br/></p><p>2、菜系的分布</p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-30bee32dcb93f429685467d12b796d67_b.png\" data-rawwidth=\"1606\" data-rawheight=\"1076\" class=\"origin_image zh-lightbox-thumb\" width=\"1606\" data-original=\"https://pic4.zhimg.com/v2-30bee32dcb93f429685467d12b796d67_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1606&#39; height=&#39;1076&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1606\" data-rawheight=\"1076\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1606\" data-original=\"https://pic4.zhimg.com/v2-30bee32dcb93f429685467d12b796d67_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-30bee32dcb93f429685467d12b796d67_b.png\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>备注：圈越大表示店铺数越多</p><p>从图中可以明显的发现杭州的店铺中杭帮/江浙菜的数量最多，远远多于其他的菜系，其次是火锅。八大菜系的川湘粤三类的店铺数量是比较多的，如果是喜欢其他四个菜系口味的可能就需要自己去发掘了。对于喜爱国外菜品的顾客来说可选择的种类的还是比较多的，西餐、日本料理、韩国料理、东南亚菜的店铺数量也是比较多的，对于喜欢吃宵夜烧烤和小龙虾的顾客来说杭州的选择也是很多的，当然也还有一些比较小众的，比如台湾菜、西北菜，由于店铺数量较少就没在图上显示菜系名。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>3、评级分布</p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-2de8228857860a201881652d67f918b1_b.png\" data-rawwidth=\"1742\" data-rawheight=\"476\" class=\"origin_image zh-lightbox-thumb\" width=\"1742\" data-original=\"https://pic2.zhimg.com/v2-2de8228857860a201881652d67f918b1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1742&#39; height=&#39;476&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1742\" data-rawheight=\"476\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1742\" data-original=\"https://pic2.zhimg.com/v2-2de8228857860a201881652d67f918b1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-2de8228857860a201881652d67f918b1_b.png\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>准四星和四星的商户占据了近70%的比例，绝大部分的用户都是在这个级别的。五星商户只有177家，占比仅为2.8%，说明顾客的各方面要求还是比较高的，如果五星的选择相对较少，那准五星的选择还是比较多的，有639家商户。最下面还有26家惨不忍睹的二星商户，不知道这26家商户现在每天的生意怎么样了。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>4、人均消费分布</p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-60bc35a421e3c818651481e82972e8c8_b.png\" data-rawwidth=\"1788\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb\" width=\"1788\" data-original=\"https://pic1.zhimg.com/v2-60bc35a421e3c818651481e82972e8c8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1788&#39; height=&#39;408&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1788\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1788\" data-original=\"https://pic1.zhimg.com/v2-60bc35a421e3c818651481e82972e8c8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-60bc35a421e3c818651481e82972e8c8_b.png\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>这个应该也是大家比较关心的，从图中可以看出这些店铺的价格还是比较亲民的，三分之二的商户的消费都是在50-99元之间，当然如果你想吃点好的，在100-149之间可选择的也是很多的，再往上的话可能选择就少了很多，如果你是要和对象约会呢，或者请比较重要的朋友吃饭那就需要好好的选一选了，最后对于人均消费500以上的那30家店，我就看看吧。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>5、商圈店铺情况</p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-cb537b72b432add12206827d84d8d823_b.png\" data-rawwidth=\"1794\" data-rawheight=\"1066\" class=\"origin_image zh-lightbox-thumb\" width=\"1794\" data-original=\"https://pic4.zhimg.com/v2-cb537b72b432add12206827d84d8d823_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1794&#39; height=&#39;1066&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1794\" data-rawheight=\"1066\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1794\" data-original=\"https://pic4.zhimg.com/v2-cb537b72b432add12206827d84d8d823_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-cb537b72b432add12206827d84d8d823_b.png\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p>把大众点评的数据爬下来之后发现杭州居然有这么多商圈，不过稍微观察一下就发现这里面包括了千岛湖、桐庐、淳安、青山一些县的商户信息，商户数量最多的十个商圈依次是：下沙、龙井/虎跑、开发区/高教园、千岛湖风景区、余杭区、高新文教区、西湖北线/黄龙、湖滨、临平、古墩路沿线。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>6、top10商户对比分析</p><p>备注：这里的top10商户数量可能比实际的要少一到两家，因为有的商家的人均消费低于50就不会被我爬取到</p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-afa8f972a4b03a283053b767f26441f9_b.png\" data-rawwidth=\"1806\" data-rawheight=\"626\" class=\"origin_image zh-lightbox-thumb\" width=\"1806\" data-original=\"https://pic2.zhimg.com/v2-afa8f972a4b03a283053b767f26441f9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1806&#39; height=&#39;626&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1806\" data-rawheight=\"626\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1806\" data-original=\"https://pic2.zhimg.com/v2-afa8f972a4b03a283053b767f26441f9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-afa8f972a4b03a283053b767f26441f9_b.png\"/></figure><p>门店数top商户依次是：必胜客、两岸咖啡、楼外楼、外婆家、胖哥两肉蟹煲、澳门豆捞、弄堂里、新白鹿、扇贝王、老头儿油爆虾（其中剔除了零零食和元祖食品）</p><p>必胜客排名第一可以理解，毕竟随便一个商场基本上都会有的，至于为什么没有麦当劳和肯德基呢，因为他们的人均消费不到50，所以最终的数据是不包括他俩的。第二的两岸咖啡不了解，也没怎么听周边的小伙伴说过，至于其他的七家店基本上都是杭州知名度很高的。十家店里面楼外楼的人均消费一枝独秀，紧随其后的是澳门豆捞和扇贝王，另外的七家店的人均消费还是很亲民的。评论数这一项杭州的三大土著饭店新白鹿、外婆家、弄堂里是遥遥领先，其他的店基本上就跟在后面跑就行了。</p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-8832d0c8cf69171f11905698d0297fcc_b.png\" data-rawwidth=\"1830\" data-rawheight=\"630\" class=\"origin_image zh-lightbox-thumb\" width=\"1830\" data-original=\"https://pic1.zhimg.com/v2-8832d0c8cf69171f11905698d0297fcc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1830&#39; height=&#39;630&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1830\" data-rawheight=\"630\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1830\" data-original=\"https://pic1.zhimg.com/v2-8832d0c8cf69171f11905698d0297fcc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-8832d0c8cf69171f11905698d0297fcc_b.png\"/></figure><p>再来看看这十家店用户的评分情况：口味最好的是胖哥俩和油爆虾，最差的是新浪有约扇贝王和楼外楼，不做评价，自己喜欢的才是最好的；服务这一项得分最高的是胖哥俩、油爆虾和新白鹿，最差的是扇贝王，都没去过，不做评价；环境最好的是肉蟹煲和新白鹿，最差的是新浪有约扇贝王，也都没去过不做评价。对于这些店多多少少可能存在刷评论的情况，其实可以通过爬取用户的评论打分再来进一步的详细分析一下，但是在我第一次测试成功爬取用户的评论之后，大众点评把我的IP封了，由于暂时没空来处理这个问题，所以这一项分析就没进行，等后面有空了再来处理，对于大众点评我只想说一句话：我还会回来的</p><p class=\"ztext-empty-paragraph\"><br/></p><p>7、菜系对比分析</p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-249c6926332b4ccbe1c63e1609fe3b20_b.png\" data-rawwidth=\"1694\" data-rawheight=\"620\" class=\"origin_image zh-lightbox-thumb\" width=\"1694\" data-original=\"https://pic1.zhimg.com/v2-249c6926332b4ccbe1c63e1609fe3b20_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1694&#39; height=&#39;620&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1694\" data-rawheight=\"620\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1694\" data-original=\"https://pic1.zhimg.com/v2-249c6926332b4ccbe1c63e1609fe3b20_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-249c6926332b4ccbe1c63e1609fe3b20_b.png\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>这里选取了11个菜系来做对比分析的，本来是选商户数量top10，但是第11是小龙虾，所以也放进来做分析了。</p><p>人均消费top3菜系分别是日本料理、西餐、海鲜，其他的8个菜系的人均消费还是较低的，而在口味、服务、环境三项的评分中日本料理都是遥遥领先的，在杭州随便选择一家日料店的话基本上都是会让你满意而归的，当然如果真的运气比较差选了一家这个菜系里面评分最低的那也是点背了，三项数据里面评分低的明显的是小吃快餐，都是不及格的分数，惨不忍睹啊，商户数量最多的杭帮/江浙菜的三项评分也不是很高，排在中等靠后的水平，特意加上的小龙虾怎么样呢？三项得分跟其他10个菜系做对比也只是处于中等的水平，最重要的口味的得分也不是很高，所以每个菜系里面要找到最好吃最合适的店铺还是需要你耐心的去发现的。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>8、商圈对比分析</p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-22855a6fa3fba7e0d8953834a139409a_b.png\" data-rawwidth=\"1712\" data-rawheight=\"1060\" class=\"origin_image zh-lightbox-thumb\" width=\"1712\" data-original=\"https://pic3.zhimg.com/v2-22855a6fa3fba7e0d8953834a139409a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1712&#39; height=&#39;1060&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1712\" data-rawheight=\"1060\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1712\" data-original=\"https://pic3.zhimg.com/v2-22855a6fa3fba7e0d8953834a139409a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-22855a6fa3fba7e0d8953834a139409a_b.png\"/></figure><p>商圈数量较多，此处选择一些比较常见的来对比分析</p><p>人均消费最高的商圈是龙井/虎跑，毕竟是在西湖景区里面，其次是钱江新城，对于钱江新城我只有一个印象：土豪聚集地，人均消费超过一百的商圈有西湖北线/黄龙、湖滨、凤起路沿线、星光大道、西溪、城战火车站、城西银泰、湖墅南路，大部分都是离西湖风景区比价近的，或者就是一个区比较集中的商业圈，比如城西银泰、西溪、星光大道。如果你是第一次到杭州玩，在西湖边逛累了就可以就近选择凤起路沿线和湖滨的店铺吃顿饭，基本上都是会让你满意的，如果是在城西的话，城西银泰也是一个不错的选择。另外来说一下千岛湖风景区，人均消费还是比较亲民的，但是三项的评分有点低，当然千岛湖景区是有一些不错的五星商户，评分也比较高，但是更多的是一些得分较低的商户拉低了整个商圈的的评分，所以如果去玩的话对于吃饭这一项还需要仔细选择。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>9、五星商户对比分析</p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-c8f4d9edfad8bf0695f3d0d4106ede3f_b.png\" data-rawwidth=\"1690\" data-rawheight=\"960\" class=\"origin_image zh-lightbox-thumb\" width=\"1690\" data-original=\"https://pic4.zhimg.com/v2-c8f4d9edfad8bf0695f3d0d4106ede3f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1690&#39; height=&#39;960&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1690\" data-rawheight=\"960\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1690\" data-original=\"https://pic4.zhimg.com/v2-c8f4d9edfad8bf0695f3d0d4106ede3f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-c8f4d9edfad8bf0695f3d0d4106ede3f_b.png\"/></figure><p>出去吃饭的话肯定希望能吃到一顿好吃满意的饭菜，那么这些五星的商户就是你的首选了，如果想低消费的话那韩国料理、农家菜里面的选择还是可以的，如果你的预算再提高一点，那么火锅海鲜的选择也是比较多的，火锅类别中海底捞有6家店，捞王锅物料理有5家店。这里对西餐说明一下，西餐里面有14家必胜客，而必胜客的人均消费是70元，所以拉低了整体的人均消费，实际上五星的西餐的消费是远远高于人均169的。人均消费200以上的话日料就是一个不错的选择了，在这34家店中御牛道日式料理炭火烤肉有6家店都是五星，而且人均消费只有150元左右，性价比还是不错的。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>10、五星商户地图分布</p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-df579b0b081546d983e8a4324bbff799_b.png\" data-rawwidth=\"1614\" data-rawheight=\"956\" class=\"origin_image zh-lightbox-thumb\" width=\"1614\" data-original=\"https://pic2.zhimg.com/v2-df579b0b081546d983e8a4324bbff799_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1614&#39; height=&#39;956&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1614\" data-rawheight=\"956\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1614\" data-original=\"https://pic2.zhimg.com/v2-df579b0b081546d983e8a4324bbff799_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-df579b0b081546d983e8a4324bbff799_b.png\"/></figure><p>这一步真的很麻烦，首先从大众点评上爬取到的数据都是商户的地址，而且他们的地址写的也不是都很规范，要把这些地址转化为经纬度才行，技术上自己解决不了只能网上百度咯，找到了一个转化的软件，成功识别转化率还是不错的，但是6393家还是有难度，于是我就偷懒把五星商铺筛选出来然后投放到地图上，看着最后的结果还是比较满意的，虽然没有6393家那么壮观了。这里有一点需要说明就是tableau上面杭州的道路图和实际的位置是有一点偏差的，大概是往东偏北10度的方向移动了一小段距离，所以在图里你会看见钱江新城的五星商铺和道路都跑到钱塘江里面去了。这里只是做一个可视化就不细究了，从图中也可以看出五星商铺主要还是集中在西湖附近的一些商业中心地段。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>11、推荐</p><p>逛了一圈，那么最终有哪些店可以推荐呢？</p><p>人均消费50-99：</p><p>1）杭帮/江浙菜：聚一阁桐庐农家菜，解放路89-5号，综合评分：27.10</p><p>2）火锅：落端云串串香，黄姑山路38-2号，综合评分：27.40</p><p>3）日本料理：月泷轩(万达店)，祥泰街万达金街东区一楼商铺3-2-139号，综合评分：27.30</p><p>4）韩国料理：晌熏欧巴年糕(和达城店)，经济开发区2号大街与5号交叉口和达城4层，综合评分：27.90</p><p>5）海鲜：蒸小鲜(西溪新座店)，西溪路550号西溪新座7幢一层，综合评分：27.20</p><p>6）川菜：鱼跃青春，文一路128号-1，综合评分：27.40</p><p>7）小龙虾：虾匠龙虾，钱塘之星2幢122商铺，综合评分：27.10</p><p>8）西餐：SAN CASTLE城堡西餐厅，艮山西路102创意设计中心A-126，综合评分：27.50</p><p class=\"ztext-empty-paragraph\"><br/></p><p>人均消费100-199：</p><p>1）杭帮/江浙菜：梅子青酒店·绿如蓝餐厅，湖州街599号天邑国际2幢，综合评分：27.10</p><p>2）火锅：辣哆哆美蛙鱼头火锅，庆春路235号2楼，综合评分：27.60</p><p>3）日本料理：渔竹精致料理，中山北路145号，综合评分：27.40</p><p>4）东南亚菜：Thai Square 泰渡泰国料理，教工路26世贸丽晶城欧美中心D座二楼，综合评分：27.00</p><p>5）海鲜：臻货(西湖店)，保俶路2号，综合评分：27.10</p><p>6）小龙虾：黄尚煌小龙虾.面，武林路277号皇后公园内，综合评分：27.20</p><p>7）西餐：雅觅餐厅酒吧(Yummy)，环城东路23-1号一楼，综合评分：27.60</p><p class=\"ztext-empty-paragraph\"><br/></p><p>人均消费200以上：</p><p>1）杭帮/江浙菜：天伦里餐厅，西溪路550号西溪新座7号楼1楼东边，综合评分：27.20</p><p>2）火锅：钱席海鲜火锅(五星路店)，钱江新城五星路198号瑞晶国际大厦35楼，综合评分：27.20</p><p>3）日本料理：江户前寿司(黄龙店)，曙光路49号黄龙饭店对面，综合评分：27.20</p><p>4）烧烤：宜之蘭烧肉，景昙路9号501城市广场5F-04，综合评分：27.40</p><p>5）西餐：mamala 西餐厅，通益路111号LOFT49艺术仓库12号，综合评分：27.60</p><p>以上推荐的店铺都是基于数据分析的，不夹杂个人的感情色彩和口味（说的好像我有钱去吃似的），所以最终的好不好吃还是需要你自己实地去品尝一番。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>希望对你有帮助，来杭州吃的开心玩的开心！</p><p></p><p></p><p></p><p></p>", 
            "topic": [
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }, 
                {
                    "tag": "数据分析", 
                    "tagLink": "https://api.zhihu.com/topics/19559424"
                }, 
                {
                    "tag": "爬虫", 
                    "tagLink": "https://api.zhihu.com/topics/20049326"
                }
            ], 
            "comments": [
                {
                    "userName": "陆小烂", 
                    "userLink": "https://www.zhihu.com/people/fb2809e580557fb1207660afb56c3445", 
                    "content": "<p>数据怎么爬出来的啊？我用八爪虫也是只爬到50页，750条，跟你说的一样也是少一两条？？求教求教</p>", 
                    "likes": 1, 
                    "childComments": [
                        {
                            "userName": "知乎用户", 
                            "userLink": "https://www.zhihu.com/people/0", 
                            "content": "可以采用分区域，分价格区间，这样就把总的数据分成好几块儿了，然后再抓取每块儿的数据，最终汇总就是所有的数据了", 
                            "likes": 1, 
                            "replyToAuthor": "陆小烂"
                        }, 
                        {
                            "userName": "陆小烂", 
                            "userLink": "https://www.zhihu.com/people/fb2809e580557fb1207660afb56c3445", 
                            "content": "我目前只会用八爪鱼（上一条评论我回复错了）和Google浏览器的web scraper插件，这样不用写代码的工具抓取数据，不知道你了不了解", 
                            "likes": 0, 
                            "replyToAuthor": "知乎用户"
                        }
                    ]
                }, 
                {
                    "userName": "Patrick Wang", 
                    "userLink": "https://www.zhihu.com/people/d1199c471faedf9b93ab27cee571573b", 
                    "content": "<p>其实还有大量的店铺是没有人均消费，按人均消费分拆最终拿到的店铺数是少很多很多的。</p>", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "Patrick Wang", 
                    "userLink": "https://www.zhihu.com/people/d1199c471faedf9b93ab27cee571573b", 
                    "content": "<p>再补充一下，大杭州的美食店铺保守估计也在2万家以上。</p>", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "Feel", 
                    "userLink": "https://www.zhihu.com/people/89c8b6fac24f3ece09bbdffbd2075f18", 
                    "content": "可不可以看一下你的全部数据啊！我怎么老师被反爬虫了", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/28586467", 
            "userName": "张张张", 
            "userLink": "https://www.zhihu.com/people/0915edbcfb81dbf8a566b6cbfb83d064", 
            "upvote": 38, 
            "title": "Titanic: kaggle入门实践-top10%（附Python代码）", 
            "content": "<p>Titanic是kaggle的一个入门级比赛，也是目前参赛队伍最多的比赛，有7000多支队伍。</p><p>问题背景：大家非常熟悉的【Jack and Rose】 的故事，豪华游轮沉没，大家逃生，逃生的结果有生有死，那么现在就需要我们根据已有的数据来预测这些乘客里面哪些是生哪些是死</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>一、获取数据</b></p><div class=\"highlight\"><pre><code class=\"language-python3\"><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"n\">data_train</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s1\">&#39;/Titanic/train.csv&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">data_test</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s1\">&#39;/Titanic/test.csv&#39;</span><span class=\"p\">)</span></code></pre></div><p><b>二、熟悉数据</b></p><div class=\"highlight\"><pre><code class=\"language-text\">data_train.head(5)</code></pre></div><figure><noscript><img src=\"https://pic3.zhimg.com/v2-2ac2170f9c55d40e318c479241190456_b.png\" data-rawwidth=\"2006\" data-rawheight=\"490\" class=\"origin_image zh-lightbox-thumb\" width=\"2006\" data-original=\"https://pic3.zhimg.com/v2-2ac2170f9c55d40e318c479241190456_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;2006&#39; height=&#39;490&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"2006\" data-rawheight=\"490\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2006\" data-original=\"https://pic3.zhimg.com/v2-2ac2170f9c55d40e318c479241190456_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-2ac2170f9c55d40e318c479241190456_b.png\"/></figure><div class=\"highlight\"><pre><code class=\"language-text\">data_test.head(5)</code></pre></div><figure><noscript><img src=\"https://pic1.zhimg.com/v2-51f5b9ef3ae18c2dcf12650139d7d360_b.png\" data-rawwidth=\"1812\" data-rawheight=\"382\" class=\"origin_image zh-lightbox-thumb\" width=\"1812\" data-original=\"https://pic1.zhimg.com/v2-51f5b9ef3ae18c2dcf12650139d7d360_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1812&#39; height=&#39;382&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1812\" data-rawheight=\"382\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1812\" data-original=\"https://pic1.zhimg.com/v2-51f5b9ef3ae18c2dcf12650139d7d360_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-51f5b9ef3ae18c2dcf12650139d7d360_b.png\"/></figure><p>查看训练数据和测试数据的前5条，测试数据比训练数据少Survived字段，这也是我们最终的结果要得到并上传的</p><ul><li>PassengerId =&gt; 乘客ID</li><li>Survived =&gt; 是否存活（测试数据里面需要我们预测的）</li><li>Pclass =&gt; 乘客等级(1/2/3等舱位)</li><li>Name =&gt; 乘客姓名</li><li>Sex =&gt; 性别</li><li>Age =&gt; 年龄</li><li>SibSp =&gt; 堂兄弟/妹个数</li><li>Parch =&gt; 父母与小孩个数</li><li>Ticket =&gt; 船票信息</li><li>Fare =&gt; 票价</li><li>Cabin =&gt; 客舱</li><li>Embarked =&gt; 登船港口</li></ul><p>总共12列数据，其中Survive的一列在测试数据里面是需要我们来预测的，其他11列数据则是乘客的特征，供我们在后面的数据分析中使用（预测时不是所有的特征都需要使用）</p><p><b>数据整体情况：</b></p><div class=\"highlight\"><pre><code class=\"language-text\">data_train.info()</code></pre></div><figure><noscript><img src=\"https://pic1.zhimg.com/v2-779f5529d3f8c43f287ed7f93ecfb8e4_b.png\" data-rawwidth=\"2012\" data-rawheight=\"586\" class=\"origin_image zh-lightbox-thumb\" width=\"2012\" data-original=\"https://pic1.zhimg.com/v2-779f5529d3f8c43f287ed7f93ecfb8e4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;2012&#39; height=&#39;586&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"2012\" data-rawheight=\"586\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2012\" data-original=\"https://pic1.zhimg.com/v2-779f5529d3f8c43f287ed7f93ecfb8e4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-779f5529d3f8c43f287ed7f93ecfb8e4_b.png\"/></figure><p>训练数据总共是891条数据</p><p>Age只有714条，缺失177条</p><p>Cabin只有204条，缺失687条，缺失比较严重</p><p>Embarked缺失2条数据</p><p><b>数值类型数据分布：</b></p><div class=\"highlight\"><pre><code class=\"language-text\">data_train.describe()</code></pre></div><figure><noscript><img src=\"https://pic1.zhimg.com/v2-7392316746fe5aea5b5139f4793a1374_b.png\" data-rawwidth=\"1996\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"1996\" data-original=\"https://pic1.zhimg.com/v2-7392316746fe5aea5b5139f4793a1374_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1996&#39; height=&#39;552&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1996\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1996\" data-original=\"https://pic1.zhimg.com/v2-7392316746fe5aea5b5139f4793a1374_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-7392316746fe5aea5b5139f4793a1374_b.png\"/></figure><p>1、大概38%左右的人最后获救</p><p>2、Pclass中2、3船舱的人要比1多</p><p>3、不到1%的乘客年龄在65-80（最大的是80）</p><p>4、大多数乘客没有携带家属</p><p>5、票价差异比较大，只有1%不到的乘客购买了512$的船票</p><p><b>离散类型数据分布：</b></p><div class=\"highlight\"><pre><code class=\"language-text\">data_train.describe(include=[np.object])</code></pre></div><figure><noscript><img src=\"https://pic2.zhimg.com/v2-fa5bb80e83cac74a89792705b86afab1_b.png\" data-rawwidth=\"1914\" data-rawheight=\"324\" class=\"origin_image zh-lightbox-thumb\" width=\"1914\" data-original=\"https://pic2.zhimg.com/v2-fa5bb80e83cac74a89792705b86afab1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1914&#39; height=&#39;324&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1914\" data-rawheight=\"324\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1914\" data-original=\"https://pic2.zhimg.com/v2-fa5bb80e83cac74a89792705b86afab1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-fa5bb80e83cac74a89792705b86afab1_b.png\"/></figure><p>1、Name属性是唯一，没有重名</p><p>2、性别就男和女（那时应该还没有人妖吧）</p><p>3、Ticket不是唯一的，891名乘客只有681张船票，说明可能有的是和亲人共用一张船票的</p><p>4、登录港口是3个</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>三、初探各数据与Survived之间的关联性</b></p><p><b>离散型特征与Survived之间的关联性</b></p><p>1、Pclass与Survived</p><div class=\"highlight\"><pre><code class=\"language-text\">data_train[[&#39;Pclass&#39;, &#39;Survived&#39;]].groupby([&#39;Pclass&#39;], as_index=False).mean().sort_values(by=&#39;Survived&#39;, ascending=False)</code></pre></div><figure><noscript><img src=\"https://pic1.zhimg.com/v2-2bcc419a6c2ad993bc01eec20a51c138_b.png\" data-rawwidth=\"2006\" data-rawheight=\"264\" class=\"origin_image zh-lightbox-thumb\" width=\"2006\" data-original=\"https://pic1.zhimg.com/v2-2bcc419a6c2ad993bc01eec20a51c138_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;2006&#39; height=&#39;264&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"2006\" data-rawheight=\"264\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2006\" data-original=\"https://pic1.zhimg.com/v2-2bcc419a6c2ad993bc01eec20a51c138_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-2bcc419a6c2ad993bc01eec20a51c138_b.png\"/></figure><p>Pclass的数值越小最后获救的概率越大，并且很明显，后期可做为一个建模特征</p><p>2、Sex与Survived</p><div class=\"highlight\"><pre><code class=\"language-text\">data_train[[&#39;Sex&#39;, &#39;Survived&#39;]].groupby([&#39;Sex&#39;], as_index=False).mean().sort_values(by=&#39;Survived&#39;, ascending=False)</code></pre></div><figure><noscript><img src=\"https://pic4.zhimg.com/v2-ffab933558fb6ad383456a065583d047_b.png\" data-rawwidth=\"1908\" data-rawheight=\"204\" class=\"origin_image zh-lightbox-thumb\" width=\"1908\" data-original=\"https://pic4.zhimg.com/v2-ffab933558fb6ad383456a065583d047_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1908&#39; height=&#39;204&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1908\" data-rawheight=\"204\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1908\" data-original=\"https://pic4.zhimg.com/v2-ffab933558fb6ad383456a065583d047_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-ffab933558fb6ad383456a065583d047_b.png\"/></figure><p>Sex中女性的获救概率远远高于男性，毕竟女士和小孩先走</p><p>3、SibSp与Survived</p><div class=\"highlight\"><pre><code class=\"language-text\">data_train[[&#39;SibSp&#39;, &#39;Survived&#39;]].groupby([&#39;SibSp&#39;], as_index=False).mean().sort_values(by=&#39;Survived&#39;, ascending=False)</code></pre></div><figure><noscript><img src=\"https://pic3.zhimg.com/v2-728b1aa5157cb96c1078c3f3e18fdfce_b.png\" data-rawwidth=\"1998\" data-rawheight=\"498\" class=\"origin_image zh-lightbox-thumb\" width=\"1998\" data-original=\"https://pic3.zhimg.com/v2-728b1aa5157cb96c1078c3f3e18fdfce_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1998&#39; height=&#39;498&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1998\" data-rawheight=\"498\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1998\" data-original=\"https://pic3.zhimg.com/v2-728b1aa5157cb96c1078c3f3e18fdfce_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-728b1aa5157cb96c1078c3f3e18fdfce_b.png\"/></figure><p>兄弟姐妹个数似乎与Survived之间没有明显的关联</p><p>4、Parch与Survived</p><div class=\"highlight\"><pre><code class=\"language-text\">data_train[[&#39;Parch&#39;, &#39;Survived&#39;]].groupby([&#39;Parch&#39;], as_index=False).mean().sort_values(by=&#39;Survived&#39;, ascending=False)</code></pre></div><figure><noscript><img src=\"https://pic3.zhimg.com/v2-7cb5a08b41830be25d14d8ca2603259e_b.png\" data-rawwidth=\"2002\" data-rawheight=\"496\" class=\"origin_image zh-lightbox-thumb\" width=\"2002\" data-original=\"https://pic3.zhimg.com/v2-7cb5a08b41830be25d14d8ca2603259e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;2002&#39; height=&#39;496&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"2002\" data-rawheight=\"496\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2002\" data-original=\"https://pic3.zhimg.com/v2-7cb5a08b41830be25d14d8ca2603259e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-7cb5a08b41830be25d14d8ca2603259e_b.png\"/></figure><p>父母子女个数似乎与Survived之间也没有明显的关联，但是后期可以考虑合并SibSp和Parch两个特征建立一个新的特征FamilySize，毕竟we are family，亲人之间是不可分割的</p><p>5、Embarked与Survived</p><div class=\"highlight\"><pre><code class=\"language-text\">data_train[[&#39;Embarked&#39;, &#39;Survived&#39;]].groupby([&#39;Embarked&#39;], as_index=False).mean().sort_values(by=&#39;Survived&#39;, ascending=False)</code></pre></div><figure><noscript><img src=\"https://pic4.zhimg.com/v2-52364069d325507ac207dd5c8444ec5f_b.png\" data-rawwidth=\"2018\" data-rawheight=\"276\" class=\"origin_image zh-lightbox-thumb\" width=\"2018\" data-original=\"https://pic4.zhimg.com/v2-52364069d325507ac207dd5c8444ec5f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;2018&#39; height=&#39;276&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"2018\" data-rawheight=\"276\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2018\" data-original=\"https://pic4.zhimg.com/v2-52364069d325507ac207dd5c8444ec5f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-52364069d325507ac207dd5c8444ec5f_b.png\"/></figure><p>Enbarked中C的获救概率要高于Q和S</p><p><b>连续型特征与Survived之间的关联性</b></p><p>字不如表，表不如图，接下来的数据探索过程都用图来绘制</p><p>导入画图需要的包</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span class=\"kn\">import</span> <span class=\"nn\">seaborn</span> <span class=\"k\">as</span> <span class=\"nn\">sns</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span></code></pre></div><p>1、Age与Survived</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span class=\"n\">grid</span> <span class=\"o\">=</span> <span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">FacetGrid</span><span class=\"p\">(</span><span class=\"n\">data_train</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Survived&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">grid</span><span class=\"o\">.</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">ply</span><span class=\"o\">.</span><span class=\"n\">hist</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Age&#39;</span><span class=\"p\">,</span> <span class=\"n\">bins</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">set_style</span><span class=\"p\">(</span><span class=\"n\">darkgrid</span><span class=\"p\">)</span><span class=\"c1\">#设置背景</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span></code></pre></div><figure><noscript><img src=\"https://pic4.zhimg.com/v2-166eaee6b150a9efccf83ce04b553d33_b.png\" data-rawwidth=\"1188\" data-rawheight=\"574\" class=\"origin_image zh-lightbox-thumb\" width=\"1188\" data-original=\"https://pic4.zhimg.com/v2-166eaee6b150a9efccf83ce04b553d33_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1188&#39; height=&#39;574&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1188\" data-rawheight=\"574\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1188\" data-original=\"https://pic4.zhimg.com/v2-166eaee6b150a9efccf83ce04b553d33_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-166eaee6b150a9efccf83ce04b553d33_b.png\"/></figure><ul><li>婴儿（Age&lt;4）的存活概率较大</li><li>年长者（Age=80）存活下来了</li><li>大部分青年（15~25）没有存活下来</li></ul><p>2、Age/Pclass和Survived</p><div class=\"highlight\"><pre><code class=\"language-text\">grid = sns.FacetGrid(data_train, &#39;Survived&#39;, size=2.2, aspect=1.6)\ngrid.map(plt.hist, &#39;Age&#39;, alpha=0.5, bins=20)\nsns.set_style(&#39;darkgrid&#39;)\nplt.show()</code></pre></div><figure><noscript><img src=\"https://pic3.zhimg.com/v2-5f67d45448938c3700a6c34476d0bca2_b.png\" data-rawwidth=\"1296\" data-rawheight=\"910\" class=\"origin_image zh-lightbox-thumb\" width=\"1296\" data-original=\"https://pic3.zhimg.com/v2-5f67d45448938c3700a6c34476d0bca2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1296&#39; height=&#39;910&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1296\" data-rawheight=\"910\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1296\" data-original=\"https://pic3.zhimg.com/v2-5f67d45448938c3700a6c34476d0bca2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-5f67d45448938c3700a6c34476d0bca2_b.png\"/></figure><ul><li>Pclass=1中大部分乘客都存活下来了</li><li>Pclass=2和Pclass=3中婴儿的存活概率较高</li><li>Pclass=3的乘客最多，但是大部分都没有存活下下来</li></ul><p>3、Embarked/Sex/Fare和Survived</p><div class=\"highlight\"><pre><code class=\"language-text\">grid = sns.FacetGrid(data_train, row=&#39;Embarked&#39;, col=&#39;Survived&#39;, size=2.2, aspect=1.6)\ngrid.map(sns.barplot, &#39;Sex&#39;, &#39;Fare&#39;, alpha=0.5, ci=None)\nsns.set_style(&#39;darkgrid&#39;)\nplt.show()</code></pre></div><figure><noscript><img src=\"https://pic1.zhimg.com/v2-6d0f9e1fb29da63149201fe103326698_b.png\" data-rawwidth=\"1362\" data-rawheight=\"1088\" class=\"origin_image zh-lightbox-thumb\" width=\"1362\" data-original=\"https://pic1.zhimg.com/v2-6d0f9e1fb29da63149201fe103326698_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1362&#39; height=&#39;1088&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1362\" data-rawheight=\"1088\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1362\" data-original=\"https://pic1.zhimg.com/v2-6d0f9e1fb29da63149201fe103326698_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-6d0f9e1fb29da63149201fe103326698_b.png\"/></figure><ul><li>票价越高存活率越大</li><li>Embarked=C中男性的存活率比较高，但可能与Pclass的特征相关</li></ul><p>4、Cabin属性里面缺失值较多，那我们先来看看有Cabin和没Cabin得乘客的获救情况是什么样的</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">)</span>\n<span class=\"n\">Survived_cabin</span> <span class=\"o\">=</span> <span class=\"n\">data_train</span><span class=\"o\">.</span><span class=\"n\">Survived</span><span class=\"p\">[</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">notnull</span><span class=\"p\">(</span><span class=\"n\">data_train</span><span class=\"o\">.</span><span class=\"n\">Cabin</span><span class=\"p\">)]</span><span class=\"o\">.</span><span class=\"n\">value_counts</span><span class=\"p\">()</span>\n<span class=\"n\">Survived_nocabin</span> <span class=\"o\">=</span> <span class=\"n\">data_train</span><span class=\"o\">.</span><span class=\"n\">Survived</span><span class=\"p\">[</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">isnull</span><span class=\"p\">(</span><span class=\"n\">data_train</span><span class=\"o\">.</span><span class=\"n\">Cabin</span><span class=\"p\">)]</span><span class=\"o\">.</span><span class=\"n\">value_counts</span><span class=\"p\">()</span>\n<span class=\"n\">df</span><span class=\"o\">=</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span><span class=\"sa\">u</span><span class=\"s1\">&#39;有&#39;</span><span class=\"p\">:</span><span class=\"n\">Survived_cabin</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">&#39;无&#39;</span><span class=\"p\">:</span><span class=\"n\">Survived_nocabin</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">()</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"s1\">&#39;bar&#39;</span><span class=\"p\">,</span> <span class=\"n\">stacked</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s2\">&#34;按Cabin有无看获救情况&#34;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xlabel</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s2\">&#34;Cabin有无&#34;</span><span class=\"p\">)</span> \n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylabel</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s2\">&#34;人数&#34;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span></code></pre></div><figure><noscript><img src=\"https://pic2.zhimg.com/v2-708f5c8baebefb7e73c82617f0e5a181_b.png\" data-rawwidth=\"1260\" data-rawheight=\"938\" class=\"origin_image zh-lightbox-thumb\" width=\"1260\" data-original=\"https://pic2.zhimg.com/v2-708f5c8baebefb7e73c82617f0e5a181_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1260&#39; height=&#39;938&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1260\" data-rawheight=\"938\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1260\" data-original=\"https://pic2.zhimg.com/v2-708f5c8baebefb7e73c82617f0e5a181_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-708f5c8baebefb7e73c82617f0e5a181_b.png\"/></figure><ul><li>有Cabin的似乎获救的概率要高一点</li></ul><p class=\"ztext-empty-paragraph\"><br/></p><p><b>四、特征处理</b></p><p>数据整体和特征了解之后就可以把我们需要的特征转化为想要的数据，以及对一些比较重要的数据进行缺失填补</p><p>1、Name属性的处理</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span class=\"k\">for</span> <span class=\"n\">dataset</span> <span class=\"ow\">in</span> <span class=\"n\">combine</span><span class=\"p\">:</span>\n    <span class=\"n\">dataset</span><span class=\"p\">[</span><span class=\"s1\">&#39;Title&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"o\">.</span><span class=\"nb\">str</span><span class=\"o\">.</span><span class=\"n\">extract</span><span class=\"p\">(</span><span class=\"s1\">&#39;([A-Za-z]+)\\.&#39;</span><span class=\"p\">,</span> <span class=\"n\">expand</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">dataset</span><span class=\"p\">[</span><span class=\"s1\">&#39;Title&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"p\">[</span><span class=\"s1\">&#39;Title&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">([</span><span class=\"s1\">&#39;Lady&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Countess&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Col&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Don&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Dr&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Major&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Rev&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Sir&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Jonkheer&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Dona&#39;</span><span class=\"p\">],</span> <span class=\"s1\">&#39;Rare&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">dataset</span><span class=\"p\">[</span><span class=\"s1\">&#39;Title&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"p\">[</span><span class=\"s1\">&#39;Title&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;Mlle&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Miss&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">dataset</span><span class=\"p\">[</span><span class=\"s1\">&#39;Title&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"p\">[</span><span class=\"s1\">&#39;Title&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;Ms&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Miss&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">dataset</span><span class=\"p\">[</span><span class=\"s1\">&#39;Title&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"p\">[</span><span class=\"s1\">&#39;Title&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;Mme&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Mrs&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">title_map</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;Mr&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Miss&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Mrs&#39;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Master&#39;</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Rare&#39;</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">}</span>\n    <span class=\"n\">dataset</span><span class=\"p\">[</span><span class=\"s1\">&#39;Title&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"p\">[</span><span class=\"s1\">&#39;Title&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">title_map</span><span class=\"p\">)</span>\n    <span class=\"n\">dataset</span><span class=\"p\">[</span><span class=\"s1\">&#39;Title&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"p\">[</span><span class=\"s1\">&#39;Title&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">fillna</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span></code></pre></div><figure><noscript><img src=\"https://pic4.zhimg.com/v2-4ffa541ed1bc966a477213470052280f_b.png\" data-rawwidth=\"2006\" data-rawheight=\"450\" class=\"origin_image zh-lightbox-thumb\" width=\"2006\" data-original=\"https://pic4.zhimg.com/v2-4ffa541ed1bc966a477213470052280f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;2006&#39; height=&#39;450&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"2006\" data-rawheight=\"450\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2006\" data-original=\"https://pic4.zhimg.com/v2-4ffa541ed1bc966a477213470052280f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-4ffa541ed1bc966a477213470052280f_b.png\"/></figure><p>通过处理发现Miss和Mrs以及Master的存活概率要高很多，是一个不错的特征</p><p class=\"ztext-empty-paragraph\"><br/></p><p>2、对SibSp和Parch属性处理</p><div class=\"highlight\"><pre><code class=\"language-text\">for dataset in combine:\n    dataset[&#39;FamilySize&#39;] = dataset[&#39;SibSp&#39;] + dataset[&#39;Parch&#39;] + 1\n    dataset[&#39;FamilySizePlus&#39;] = 0\n    dataset.loc[dataset[&#39;FamilySize&#39;] == 1, &#39;FamilySizePlus&#39;] = 1\n    dataset.loc[dataset[&#39;FamilySize&#39;] == 2, &#39;FamilySizePlus&#39;] = 2\n    dataset.loc[dataset[&#39;FamilySize&#39;] == 3, &#39;FamilySizePlus&#39;] = 2\n    dataset.loc[dataset[&#39;FamilySize&#39;] == 4, &#39;FamilySizePlus&#39;] = 2\n    dataset.loc[dataset[&#39;FamilySize&#39;] == 5, &#39;FamilySizePlus&#39;] = 1\n    dataset.loc[dataset[&#39;FamilySize&#39;] == 6, &#39;FamilySizePlus&#39;] = 1\n    dataset.loc[dataset[&#39;FamilySize&#39;] == 7, &#39;FamilySizePlus&#39;] = 1</code></pre></div><figure><noscript><img src=\"https://pic4.zhimg.com/v2-59edda243959a0761fd156fa7a2b0cf7_b.png\" data-rawwidth=\"2016\" data-rawheight=\"620\" class=\"origin_image zh-lightbox-thumb\" width=\"2016\" data-original=\"https://pic4.zhimg.com/v2-59edda243959a0761fd156fa7a2b0cf7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;2016&#39; height=&#39;620&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"2016\" data-rawheight=\"620\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2016\" data-original=\"https://pic4.zhimg.com/v2-59edda243959a0761fd156fa7a2b0cf7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-59edda243959a0761fd156fa7a2b0cf7_b.png\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-07f6b6d383af4f2f83f8a9576dfeb616_b.png\" data-rawwidth=\"2012\" data-rawheight=\"272\" class=\"origin_image zh-lightbox-thumb\" width=\"2012\" data-original=\"https://pic3.zhimg.com/v2-07f6b6d383af4f2f83f8a9576dfeb616_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;2012&#39; height=&#39;272&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"2012\" data-rawheight=\"272\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2012\" data-original=\"https://pic3.zhimg.com/v2-07f6b6d383af4f2f83f8a9576dfeb616_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-07f6b6d383af4f2f83f8a9576dfeb616_b.png\"/></figure><p>上面对SibSp和Parch两个特征处理的时候发现两个单独的特征对Survived并没有明显的影响，所以构建新的特征FamilySize，但是发现并不是FamilySize越大存活率越高，是否有家庭对存活率的影响也不是很明显，有的博客采取的做法是构建新的IsAlone特征来处理，但是最终的效果不是很好，所以我选择构建FamilySizePlus这个新的特征，主要是将一些FamilySize进行分组处理</p><p class=\"ztext-empty-paragraph\"><br/></p><p>3、对Sex属性的处理</p><div class=\"highlight\"><pre><code class=\"language-text\">for dataset in combine:\n    dataset[&#39;Sex&#39;] = dataset[&#39;Sex&#39;].map({&#39;female&#39;: 1, &#39;male&#39;: 0}).astype(int)</code></pre></div><p>转化为数字，很easy</p><p class=\"ztext-empty-paragraph\"><br/></p><p>4、对Age属性的处理</p><ul><li>填补缺失值</li></ul><div class=\"highlight\"><pre><code class=\"language-text\">guess_ages = np.zeros((2, 3))\nfor dataset in combine:\n    for i in range(0, 2):\n        for j in range(0, 3):\n            guess_df = dataset[(dataset[&#39;Sex&#39;] == i) &amp; (dataset[&#39;Pclass&#39;] == j+1)][&#39;Age&#39;].dropna()\n            age_guess = guess_df.median()\n            guess_ages[i,j] = int(age_guess / 0.5 + 0.5) * 0.5\n    for i in range(0, 2):\n        for j in range(0, 3):\n            dataset.loc[(dataset.Age.isnull()) &amp; (dataset.Sex == i) &amp; (dataset.Pclass == j + 1), &#39;Age&#39;] = guess_ages[i, j]\n    dataset[&#39;Age&#39;] = dataset[&#39;Age&#39;].astype(int)</code></pre></div><ul><li>分组</li></ul><div class=\"highlight\"><pre><code class=\"language-text\">for dataset in combine:    \n    dataset.loc[ dataset[&#39;Age&#39;] &lt;= 16, &#39;Age&#39;] = 0\n    dataset.loc[(dataset[&#39;Age&#39;] &gt; 16) &amp; (dataset[&#39;Age&#39;] &lt;= 32), &#39;Age&#39;] = 1\n    dataset.loc[(dataset[&#39;Age&#39;] &gt; 32) &amp; (dataset[&#39;Age&#39;] &lt;= 48), &#39;Age&#39;] = 2\n    dataset.loc[(dataset[&#39;Age&#39;] &gt; 48) &amp; (dataset[&#39;Age&#39;] &lt;= 64), &#39;Age&#39;] = 3\n    dataset.loc[ dataset[&#39;Age&#39;] &gt; 64, &#39;Age&#39;]</code></pre></div><p>Age缺失值较多，但是也是一个比较重要的特征，可以采取不同的方式处理，有根据均值和标准差来随机生成，也有根据随机森林预测的，但是这样的话容易引入噪声。此处采取的做法是根据每个船舱的性别的中位数来填充，还有别的做法比如根据每个船舱不同的title的值来填充。</p><p>然后对Age的年龄分段，可以尝试分四组或者分五组来分别看每种分法下的各组存活率，同时也可以处理为成年和未成年</p><p class=\"ztext-empty-paragraph\"><br/></p><p>5、Embarked属性处理</p><ul><li>填补缺失值</li></ul><div class=\"highlight\"><pre><code class=\"language-text\">freq_port = data_train.Embarked.dropna().mode()[0]\nfor dataset in combine:\n    dataset[&#39;Embarked&#39;] = dataset[&#39;Embarked&#39;].fillna(freq_port)</code></pre></div><ul><li>特征值转换</li></ul><div class=\"highlight\"><pre><code class=\"language-text\">for dataset in combine:\n    dataset[&#39;Embarked&#39;] = dataset[&#39;Embarked&#39;].map({&#39;S&#39;: 0, &#39;C&#39;: 1, &#39;Q&#39;: 2})</code></pre></div><p>缺失值很少，此处选择用出现次数最多的港口来填充</p><p class=\"ztext-empty-paragraph\"><br/></p><p>6、Fare属性处理</p><ul><li>填补缺失值</li></ul><div class=\"highlight\"><pre><code class=\"language-text\">data_test[&#39;Fare&#39;].fillna(data_test[&#39;Fare&#39;].dropna().median(), inplace=True)</code></pre></div><ul><li>分组</li></ul><div class=\"highlight\"><pre><code class=\"language-text\">for dataset in combine:\n    dataset.loc[ dataset[&#39;Fare&#39;] &lt;= 7.91, &#39;Fare&#39;] = 0\n    dataset.loc[(dataset[&#39;Fare&#39;] &gt; 7.91) &amp; (dataset[&#39;Fare&#39;] &lt;= 14.454), &#39;Fare&#39;] = 1\n    dataset.loc[(dataset[&#39;Fare&#39;] &gt; 14.454) &amp; (dataset[&#39;Fare&#39;] &lt;= 31), &#39;Fare&#39;]   = 2\n    dataset.loc[ dataset[&#39;Fare&#39;] &gt; 31, &#39;Fare&#39;] = 3\n    dataset[&#39;Fare&#39;] = dataset[&#39;Fare&#39;].astype(int)</code></pre></div><p>测试集里面有Fare缺失，用中位数来填充，然后进行分组处理</p><p class=\"ztext-empty-paragraph\"><br/></p><p>7、Cabin属性处理</p><div class=\"highlight\"><pre><code class=\"language-text\">for dataset in combine:\n    dataset.loc[(dataset.Cabin.isnull()), &#39;Cabin&#39;] = 0\n    dataset.loc[(dataset.Cabin.notnull()), &#39;Cabin&#39;] = 1</code></pre></div><p>Cabin属性简单的做有无处理，在前面的可视化里面发现其实Cabin的有无对于存活率的影响不是很大，所以在后面的建模里面要考虑对这个特征的处理</p><p>PS：个人觉得对于Cabin特征可以考虑首字母的存活率，因为首字母可能对应船舱的位置，对乘客存活有一定的影响，后面有空了再对这一特征进行处理</p><p class=\"ztext-empty-paragraph\"><br/></p><p>8、Ticket属性处理</p><div class=\"highlight\"><pre><code class=\"language-text\">df = data_train[&#39;Ticket&#39;].value_counts()\ndf = pd.DataFrame(df)\ndf = df[df[&#39;Ticket&#39;] &gt; 1]\ndf_ticket = df.index.values        #共享船票的票号\ntickets = data_train.Ticket.values    #所有的船票\nresult = []\nfor ticket in tickets:\n    if ticket in df_ticket:\n        ticket = 1\n    else:\n        ticket = 0                 #遍历所有船票，在共享船票里面的为1，否则为0\n    result.append(ticket)\nresults = pd.DataFrame(result)\nresults.columns = [&#39;Ticket_Count&#39;]\ndata_train = pd.concat([data_train, results], axis=1)</code></pre></div><p>ticket主要考虑有乘客共享船票的，如果是一个家庭的那么很大的可能性是一家人都活了或者都遇难 ，但是在船票共享里面并不是所有的家庭共享的，还有一种情况是跟朋友一起共享的，同时并不是共享了船票最后的存活率就一定高，可能有的共享船票的存活率反而比较低，这可能也跟Pclass和Cabin有关系，这一块儿还可以再深入挖掘。</p><p>PS：这段代码应该有更简洁的代码，如果有大神帮忙写出更简洁的代码，感激不尽！</p><p>五、创建模型</p><p>1、数据准备</p><div class=\"highlight\"><pre><code class=\"language-text\">#把不需要的特征丢掉\ndata_train = data_train.drop([&#39;PassengerId&#39;, &#39;Name&#39;, &#39;SibSp&#39;, &#39;Parch&#39;, &#39;Ticket&#39;, &#39;FamilySize&#39;], axis=1)\ndata_test_X  = data_test.drop([&#39;PassengerId&#39;, &#39;Name&#39;, &#39;SibSp&#39;, &#39;Parch&#39;, &#39;Ticket&#39;, &#39;FamilySize&#39;], axis=1).copy()\n#选取各数据对应的特征\nX_train = data_train[[&#39;Pclass&#39;, &#39;Sex&#39;, &#39;Age&#39;, &#39;Fare&#39;, &#39;Embarked&#39;, &#39;Cabin&#39;, &#39;Title&#39;, &#39;FamilySizePlus&#39;, &#39;Ticket_Count&#39;]]\nY_train = data_train[&#39;Survived&#39;]\nX_test = data_test_X</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>2、模型训练比较</p><div class=\"highlight\"><pre><code class=\"language-text\"># Logistic Regression\nlogreg = LogisticRegression()\nlogreg.fit(X_train, Y_train)\nY_pred = logreg.predict(X_test)\nacc_log = round(logreg.score(X_train, Y_train) * 100, 2)\n\n# Support Vector Machines\nsvc = SVC()\nsvc.fit(X_train, Y_train)\nY_pred = svc.predict(X_test)\nacc_svc = round(svc.score(X_train, Y_train) * 100, 2)\n\n#  k-Nearest Neighbors\nknn = KNeighborsClassifier(n_neighbors = 3)\nknn.fit(X_train, Y_train)\nY_pred = knn.predict(X_test)\nacc_knn = round(knn.score(X_train, Y_train) * 100, 2)\n\n# Gaussian Naive Bayes\ngaussian = GaussianNB()\ngaussian.fit(X_train, Y_train)\nY_pred = gaussian.predict(X_test)\nacc_gaussian = round(gaussian.score(X_train, Y_train) * 100, 2)\n\n# Linear SVC\nlinear_svc = LinearSVC()\nlinear_svc.fit(X_train, Y_train)\nY_pred = linear_svc.predict(X_test)\nacc_linear_svc = round(linear_svc.score(X_train, Y_train) * 100, 2)\n\n# Stochastic Gradient Descent\nsgd = SGDClassifier()\nsgd.fit(X_train, Y_train)\nY_pred = sgd.predict(X_test)\nacc_sgd = round(sgd.score(X_train, Y_train) * 100, 2)\n\n# Decision Tree\ndecision_tree = DecisionTreeClassifier()\ndecision_tree.fit(X_train, Y_train)\nY_pred = decision_tree.predict(X_test)\nacc_decision_tree = round(decision_tree.score(X_train, Y_train) * 100, 2)\n\n# Random Forest\nrandom_forest = RandomForestClassifier(n_estimators=100)\nrandom_forest.fit(X_train, Y_train)\nY_pred = random_forest.predict(X_test)\nrandom_forest.score(X_train, Y_train)\nacc_random_forest = round(random_forest.score(X_train, Y_train) * 100, 2)\n\nmodels = pd.DataFrame({\n    &#39;Model&#39;: [&#39;Support Vector Machines&#39;, &#39;KNN&#39;, &#39;Logistic Regression&#39;, \n              &#39;Random Forest&#39;, &#39;Naive Bayes&#39;, \n              &#39;Stochastic Gradient Decent&#39;, &#39;Linear SVC&#39;, \n              &#39;Decision Tree&#39;],\n    &#39;Score&#39;: [acc_svc, acc_knn, acc_log, \n              acc_random_forest, acc_gaussian, \n              acc_sgd, acc_linear_svc, acc_decision_tree]})\nprint(models.sort_values(by=&#39;Score&#39;, ascending=False))</code></pre></div><figure><noscript><img src=\"https://pic3.zhimg.com/v2-f55eb7b2a03c24ef14d660bb1d61e9be_b.png\" data-rawwidth=\"1688\" data-rawheight=\"264\" class=\"origin_image zh-lightbox-thumb\" width=\"1688\" data-original=\"https://pic3.zhimg.com/v2-f55eb7b2a03c24ef14d660bb1d61e9be_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1688&#39; height=&#39;264&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1688\" data-rawheight=\"264\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1688\" data-original=\"https://pic3.zhimg.com/v2-f55eb7b2a03c24ef14d660bb1d61e9be_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-f55eb7b2a03c24ef14d660bb1d61e9be_b.png\"/></figure><p>测试不同的模型的得分情况，选择得分最高的那一个（随机森林）</p><p>PS：这段代码是在pycharm里面跑的，所以跟上面那些在jupyter跑的代码和结果显示有一点区别</p><p class=\"ztext-empty-paragraph\"><br/></p><p>3、各特征的重要性</p><div class=\"highlight\"><pre><code class=\"language-text\">features = pd.DataFrame()\nfeatures[&#39;Feature&#39;] = X_train.columns\nfeatures[&#39;importance&#39;] = random_forest.feature_importances_\nprint(features)</code></pre></div><figure><noscript><img src=\"https://pic1.zhimg.com/v2-755460b74b79a1af34743dec5258b2c0_b.png\" data-rawwidth=\"2228\" data-rawheight=\"268\" class=\"origin_image zh-lightbox-thumb\" width=\"2228\" data-original=\"https://pic1.zhimg.com/v2-755460b74b79a1af34743dec5258b2c0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;2228&#39; height=&#39;268&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"2228\" data-rawheight=\"268\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2228\" data-original=\"https://pic1.zhimg.com/v2-755460b74b79a1af34743dec5258b2c0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-755460b74b79a1af34743dec5258b2c0_b.png\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>4、模型调参</p><div class=\"highlight\"><pre><code class=\"language-text\">forest = RandomForestClassifier(max_features=&#39;sqrt&#39;)\nparameter_grid = {\n                 &#39;max_depth&#39; : [4,5,6,7,8],\n                 &#39;n_estimators&#39;: [100,200,250,500],\n                 &#39;criterion&#39;: [&#39;gini&#39;,&#39;entropy&#39;]\n                 }\ncross_validation = StratifiedKFold(Y_train, n_folds=5)\ngrid_search = GridSearchCV(forest,\n                           param_grid=parameter_grid,\n                           cv=cross_validation)\ngrid_search.fit(X_train, Y_train)\nprint(&#39;Best score: {}&#39;.format(grid_search.best_score_))\nprint(&#39;Best parameters: {}&#39;.format(grid_search.best_params_))</code></pre></div><figure><noscript><img src=\"https://pic3.zhimg.com/v2-7549820e39e1dc1f0c37762acbe7b512_b.png\" data-rawwidth=\"1814\" data-rawheight=\"74\" class=\"origin_image zh-lightbox-thumb\" width=\"1814\" data-original=\"https://pic3.zhimg.com/v2-7549820e39e1dc1f0c37762acbe7b512_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1814&#39; height=&#39;74&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1814\" data-rawheight=\"74\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1814\" data-original=\"https://pic3.zhimg.com/v2-7549820e39e1dc1f0c37762acbe7b512_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-7549820e39e1dc1f0c37762acbe7b512_b.png\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>调参个人觉得也是很重要的，一个调参让自己的得分提高了0.02，排名提高有1千多名，所以效果还是很不错的。</p><p>n_estimators：弱学习器的最大迭代次数，或者说最大的弱学习器的个数，默认是100，一般来说n_estimators太小，容易欠拟合，太大容易过拟合</p><p>criterion：即CART树做划分时对特征的评价标准</p><p>max_depth：决策树最大深度</p><p class=\"ztext-empty-paragraph\"><br/></p><p>5、结果预测</p><div class=\"highlight\"><pre><code class=\"language-text\">random_forest = RandomForestClassifier(n_estimators=250, max_depth=5, criterion=&#39;gini&#39;)\nrandom_forest.fit(X_train, Y_train)\nY_pred = random_forest.predict(X_test)</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>六、提交预测结果</p><div class=\"highlight\"><pre><code class=\"language-text\">submission = pd.DataFrame({\n        &#34;PassengerId&#34;: data_test[&#34;PassengerId&#34;],\n        &#34;Survived&#34;: Y_pred\n    })\nsubmission.to_csv(&#39;submission.csv&#39;, index=False)</code></pre></div><p>最终得分：0.8061</p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-532a7e99117fb245baa2d3561b897c92_b.jpg\" data-rawwidth=\"845\" data-rawheight=\"134\" class=\"origin_image zh-lightbox-thumb\" width=\"845\" data-original=\"https://pic3.zhimg.com/v2-532a7e99117fb245baa2d3561b897c92_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;845&#39; height=&#39;134&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"845\" data-rawheight=\"134\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"845\" data-original=\"https://pic3.zhimg.com/v2-532a7e99117fb245baa2d3561b897c92_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-532a7e99117fb245baa2d3561b897c92_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>排名：667（top10%）</p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-46801304e301b66a2f12372cee25e7c2_b.png\" data-rawwidth=\"302\" data-rawheight=\"127\" class=\"content_image\" width=\"302\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;302&#39; height=&#39;127&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"302\" data-rawheight=\"127\" class=\"content_image lazy\" width=\"302\" data-actualsrc=\"https://pic3.zhimg.com/v2-46801304e301b66a2f12372cee25e7c2_b.png\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>总结：</p><p>整个过程收获很多，需要学习的地方也很多</p><p class=\"ztext-empty-paragraph\"><br/></p><p>PS：我自己建了一个公众号，主要记录一些自己的数据学习笔记，一方面是巩固，另一方面也是为了督促自己去学习。做为一名初学者还有很多的知识要学，如果你也跟我一样是一名初学者欢迎你关注我的公众号，可以一起讨论一起学习</p><p>关注公众号<b>数据实践笔记</b>（扫描二维码即可）回复Titanic给你数据和代码（为了学习和交流而不是单纯的跑一遍代码得到一个分数）</p><p class=\"ztext-empty-paragraph\"><br/></p><p>aHR0cDovL3dlaXhpbi5xcS5jb20vci85VHZjeEo3RWQ4TUlyZHFuOTI3bg== (二维码自动识别)</p>", 
            "topic": [
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }, 
                {
                    "tag": "「泰坦尼克号」沉没事故", 
                    "tagLink": "https://api.zhihu.com/topics/19599634"
                }, 
                {
                    "tag": "Kaggle", 
                    "tagLink": "https://api.zhihu.com/topics/20003862"
                }
            ], 
            "comments": [
                {
                    "userName": "乐在么么茶", 
                    "userLink": "https://www.zhihu.com/people/20c560c5c63da888d50ee65acd5ebd00", 
                    "content": "该评论已删除", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "知乎用户", 
                            "userLink": "https://www.zhihu.com/people/0", 
                            "content": "conbine里面包括train和test", 
                            "likes": 0, 
                            "replyToAuthor": "乐在么么茶"
                        }, 
                        {
                            "userName": "乐在么么茶", 
                            "userLink": "https://www.zhihu.com/people/20c560c5c63da888d50ee65acd5ebd00", 
                            "content": "该评论已删除", 
                            "likes": 0, 
                            "replyToAuthor": "知乎用户"
                        }
                    ]
                }, 
                {
                    "userName": "summer", 
                    "userLink": "https://www.zhihu.com/people/17f94cf9c0815d108a692359d6ea08f4", 
                    "content": "答主，我在引用for dataset in combine时显示name combine is not defined是什么错误？", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "知乎用户", 
                    "userLink": "https://www.zhihu.com/people/0", 
                    "content": "<p>用同样的模型跑的，训练集分数达到95，测试集预测传上去只有0.79o(╥﹏╥)o</p>", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "知乎用户", 
                            "userLink": "https://www.zhihu.com/people/0", 
                            "content": "<p>我自己跑的有在文章代码的基础上修改了一些特征处理，跟文章有一点区别</p>", 
                            "likes": 0, 
                            "replyToAuthor": "知乎用户"
                        }
                    ]
                }, 
                {
                    "userName": "Lxuex", 
                    "userLink": "https://www.zhihu.com/people/d3b7a5934d8dde0923426538e1853159", 
                    "content": "<p>。。。。。。这代码和kaggle数据集上的2735votes 一样啊.</p>", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "candy陈", 
                    "userLink": "https://www.zhihu.com/people/8e3662b94b875f1ac41495b48352fea3", 
                    "content": "<p>写的很好，我要夸夸你，你一定是美貌与智慧并存的男子，你的存在让我们自惭形秽。</p><a class=\"comment_sticker\" href=\"https://pic4.zhimg.com/v2-ba306425d0a7aee2c7260381f1bf7b97.gif\" data-width=\"\" data-height=\"\">[欢呼]</a>", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }
    ], 
    "url": "https://zhuanlan.zhihu.com/c_120257886"
}

{
    "title": "java编程探索录", 
    "description": "寻找遇到的一些关于java编程和算法的问题的答案~~", 
    "followers": [
        "https://www.zhihu.com/people/xiao-xiao-du-shu-lang", 
        "https://www.zhihu.com/people/10p-1", 
        "https://www.zhihu.com/people/wang-tian-yi-13-10", 
        "https://www.zhihu.com/people/shi-yang-74-6", 
        "https://www.zhihu.com/people/su-tian-27-77", 
        "https://www.zhihu.com/people/lan-lan-lan-lan-96-82", 
        "https://www.zhihu.com/people/leftw", 
        "https://www.zhihu.com/people/xuan-yi-97-9", 
        "https://www.zhihu.com/people/ace-98-79", 
        "https://www.zhihu.com/people/ren-hao-84-60", 
        "https://www.zhihu.com/people/wang-mei-38-47", 
        "https://www.zhihu.com/people/ma-jiao-ting", 
        "https://www.zhihu.com/people/zhu-lan-sha-yue", 
        "https://www.zhihu.com/people/zou-tian-44-30", 
        "https://www.zhihu.com/people/liu-tao-18-50-57", 
        "https://www.zhihu.com/people/xiong-biao-42", 
        "https://www.zhihu.com/people/wang-zhe-de-rong-yao-75-23", 
        "https://www.zhihu.com/people/li-hao-94-22-76", 
        "https://www.zhihu.com/people/programmer_song", 
        "https://www.zhihu.com/people/xin-ba-33-19", 
        "https://www.zhihu.com/people/jiu-ye-20-63", 
        "https://www.zhihu.com/people/bi-duan-32", 
        "https://www.zhihu.com/people/bu-ru-gui-qu-22-63", 
        "https://www.zhihu.com/people/better-girl-93-52", 
        "https://www.zhihu.com/people/hu-ming-liu", 
        "https://www.zhihu.com/people/tang-58-83", 
        "https://www.zhihu.com/people/zai-lu-shang-41-60-14", 
        "https://www.zhihu.com/people/long-36-4", 
        "https://www.zhihu.com/people/yige-ren-37-33", 
        "https://www.zhihu.com/people/pin-cha-17-85", 
        "https://www.zhihu.com/people/zou-guo-de-du-bu-ceng-cuo-guo", 
        "https://www.zhihu.com/people/xuexz", 
        "https://www.zhihu.com/people/tiger-43-73", 
        "https://www.zhihu.com/people/brokennight"
    ], 
    "article": [
        {
            "url": "https://zhuanlan.zhihu.com/p/44957705", 
            "userName": "black", 
            "userLink": "https://www.zhihu.com/people/498a68ceba804b2d2198fab3d8f444fe", 
            "upvote": 1, 
            "title": "java Process类详解！", 
            "content": "<p>本篇文章是继我的上一篇文章</p><a href=\"https://zhuanlan.zhihu.com/p/33547017\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">black：java Runtime.exec方法详解！</a><p>如果对runtime.exec方法不了解建议先行阅读上篇文章。</p><p>好的，进入正题，我们先来看看Process类在API中的解释：</p><blockquote>java.lang <br/>类 Process<br/>java.lang.Object<br/>  <br/><b>java.lang.Process</b><br/><br/>public abstract class <b>Process</b>extends Object<br/><br/><code><a href=\"https://zhuanlan.zhihu.com/java/lang/ProcessBuilder.html#start()\" class=\"internal\">ProcessBuilder.start()</a></code>  和 <code><a href=\"https://zhuanlan.zhihu.com/java/lang/Runtime.html#exec(java.lang.String%5B%5D,%20java.lang.String%5B%5D,%20java.io.File)\" class=\"internal\">Runtime.exec</a></code>  方法创建一个本机进程，并返回 <code>Process</code>  子类的一个实例，该实例可用来控制进程并获得相关信息。<code>Process</code>  类提供了执行从进程输入、执行输出到进程、等待进程完成、检查进程的退出状态以及销毁（杀掉）进程的方法。  <br/>创建进程的方法可能无法针对某些本机平台上的特定进程很好地工作，比如，本机窗口进程，守护进程，Microsoft Windows 上的 Win16/DOS  进程，或者 shell 脚本。创建的子进程没有自己的终端或控制台。它的所有标准 io（即 stdin、stdout 和 stderr）操作都将通过三个流 (<code><a href=\"https://zhuanlan.zhihu.com/java/lang/Process.html#getOutputStream()\" class=\"internal\">getOutputStream()</a></code>、<code><a href=\"https://zhuanlan.zhihu.com/java/lang/Process.html#getInputStream()\" class=\"internal\">getInputStream()</a></code>  和 <code><a href=\"https://zhuanlan.zhihu.com/java/lang/Process.html#getErrorStream()\" class=\"internal\">getErrorStream()</a></code>)  重定向到父进程。父进程使用这些流来提供到子进程的输入和获得从子进程的输出。因为有些本机平台仅针对标准输入和输出流提供有限的缓冲区大小，如果读写子进程的输出流或输入流迅速出现失败，则可能导致子进程阻塞，甚至产生死锁。   <br/>当没有 <code>Process</code> 对象的更多引用时，不是删掉子进程，而是继续异步执行子进程。  <br/>对于带有 <code>Process</code> 对象的 Java 进程，没有必要异步或并发执行由 <code>Process</code>  对象表示的进程。</blockquote><p class=\"ztext-empty-paragraph\"><br/></p><p>需要我们注意的地方就是“因为有些本机平台仅针对标准输入和输出流提供有限的缓冲区大小，如果读写子进程的输出流或输入流迅速出现失败，则可能导致子进程阻塞，甚至产生死锁。”。这是一个可能出现的BUG，我们只需留意一下。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>以及“当没有 <code>Process</code> 对象的更多引用时，不是删掉子进程，而是继续异步执行子进程。”的意思，我大概理解为，即使在程序运行时已经没有变量引用Process的实例对象时，按java的gc机制，Process应该是被回收的，但是它不会，它会继续独立的运行下去，也就是说，如果我们Process对象已经使用完毕了，我们最好调用它的destroy方法去结束该子进程。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>当<code><a href=\"https://zhuanlan.zhihu.com/java/lang/ProcessBuilder.html#start()\" class=\"internal\">ProcessBuilder.start()</a></code> 和 <code><a href=\"https://zhuanlan.zhihu.com/java/lang/Runtime.html#exec(java.lang.String%5B%5D,%20java.lang.String%5B%5D,%20java.io.File)\" class=\"internal\">Runtime.exec</a></code> 方法执行之后都会返回一个Process类的实例，它不代表上述方法创建的进程，但是可以用来操纵该进程。那么既然可以操纵进程，那肯定要调用方法，如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-b7a769f54bc297652cb476756373eee3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"958\" data-rawheight=\"376\" class=\"origin_image zh-lightbox-thumb\" width=\"958\" data-original=\"https://pic4.zhimg.com/v2-b7a769f54bc297652cb476756373eee3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;958&#39; height=&#39;376&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"958\" data-rawheight=\"376\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"958\" data-original=\"https://pic4.zhimg.com/v2-b7a769f54bc297652cb476756373eee3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-b7a769f54bc297652cb476756373eee3_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>由于Process类是Object类的直接子类，所以除了Object的基础方法外，以上便是Process所有的全部方法。</p><p>看本篇文章的标题大家也都清楚了，重点是如何对正在运行的程序输入数据，并获取输出的数据。在java，数据的传递，主要是以IO的数据流为主，还要JDK1.4中开始提供NIO，以数据块传输，这又是后话了。</p><p>那么，如何获取Process的数据流呢，那便是要依靠getInputStream和getOutputStream方法了，但是！需要注意的是：</p><h2><b>Input和Output都是针对当前调用Process的程序而言的，而不是针对Process！</b></h2><h2><b>也就是说如果你要往Process进程中输入数据，那么你要调用Process的getOutputStream方法！</b></h2><h2><b>相反，如果你要获取Process进程的输出数据，那么你要调用Process的getInputStream方法！</b></h2><p class=\"ztext-empty-paragraph\"><br/></p><p>在API中也说了，但是并不好理解：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-705aeec6a7523b721a1629f1f4dc8342_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"885\" data-rawheight=\"647\" class=\"origin_image zh-lightbox-thumb\" width=\"885\" data-original=\"https://pic3.zhimg.com/v2-705aeec6a7523b721a1629f1f4dc8342_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;885&#39; height=&#39;647&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"885\" data-rawheight=\"647\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"885\" data-original=\"https://pic3.zhimg.com/v2-705aeec6a7523b721a1629f1f4dc8342_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-705aeec6a7523b721a1629f1f4dc8342_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>换成咋们人说的话，站在我们自己写的程序角度来想，如果我们的程序想要往别的程序输入数据，那么就是我们程序要输出对吧，所以我们需要获取输出流也就是调用getOutputStream方法，那么反过来，如果我们要获取别的程序的输出的数据，对于我们程序来说也就是输入的数据，所以我们要获取输入流，调用getInputStream方法。</p><p>这是Process设计者的锅，不怪我们，但是我们也只有这样使用了。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>另外的几个方法也简单介绍一下吧：</p><p>destroy：杀掉该Process对象代表的进程。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>exitValue：返回该Process对象代表的进程的出口值，值0表示正常退出，非0非正常。关于该方法，应该是返回System.exit(int)方法中的参数。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>waitFor：返回该Process对象代表的进程的出口值，值0表示正常退出，非0非正常。</p><p>该方法很类似exitValue方法，但是他们有个取别很大的地方，那就是exitValue方法会直接返回一个值，但是当前程序有可能还在运行中，所以该值不一定是正确的，而本方法会一直等待Process对象代表的进程退出后才返回值，而且调用本方法的进程将会一直堵塞等待返回值。建议使用本方法！</p><p class=\"ztext-empty-paragraph\"><br/></p><p>getErrorStream：与getInputStream的作用差不多，但略有些区别，在程序正常运行后输出的值是在getInputStream流中，但是如果程序出现错误后，输出的错误信息在getInputStream中是看不到的，因为错误信息在getErrorStream中！</p><p>我认为本方法和getInputStream的不同与System.out.println()和System.err.println()是对应的。所以我们在获取Process对象代表的进程的输出时不能只调用getInputStream方法，也应该调用getErrorStream方法，把两个流结合在一起进行查看。这样得到的信息才是完整的。</p><p>最后在来附上一个示例代码：</p><div class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kn\">import</span> <span class=\"nn\">java.io.*</span><span class=\"o\">;</span>\n\n<span class=\"cm\">/**\n</span><span class=\"cm\"> *\n</span><span class=\"cm\"> * @author black\n</span><span class=\"cm\"> */</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Test</span> <span class=\"o\">{</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">IOException</span><span class=\"o\">,</span> <span class=\"n\">InterruptedException</span> <span class=\"o\">{</span>\n\t<span class=\"n\">Runtime</span> <span class=\"n\">rt</span> <span class=\"o\">=</span> <span class=\"n\">Runtime</span><span class=\"o\">.</span><span class=\"na\">getRuntime</span><span class=\"o\">();</span><span class=\"c1\">//获得Runtime对象\n</span><span class=\"c1\"></span>\t<span class=\"n\">String</span> <span class=\"n\">arr</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"s\">&#34;CLASSPATH=D://&#34;</span><span class=\"o\">,</span><span class=\"s\">&#34;Path=C:\\\\Program Files\\\\Java\\\\jdk1.8.0_131\\\\bin&#34;</span><span class=\"o\">};</span><span class=\"c1\">//执行exec时的环境变量\n</span><span class=\"c1\"></span>        \n        <span class=\"c1\">//exec方法第一个参数是执行的命令，第二个参数是环境变量，第三个参数是工作目录\n</span><span class=\"c1\"></span>\t<span class=\"n\">Process</span> <span class=\"n\">pr</span> <span class=\"o\">=</span> <span class=\"n\">rt</span><span class=\"o\">.</span><span class=\"na\">exec</span><span class=\"o\">(</span><span class=\"s\">&#34;cmd /c javac a.java &amp;&amp; java a&#34;</span><span class=\"o\">,</span> <span class=\"n\">arr</span><span class=\"o\">,</span> <span class=\"k\">new</span> <span class=\"n\">File</span><span class=\"o\">(</span><span class=\"s\">&#34;D://&#34;</span><span class=\"o\">));</span>\n        \n        <span class=\"c1\">//获取输出流并转换成缓冲区\n</span><span class=\"c1\"></span>        <span class=\"n\">BufferedWriter</span> <span class=\"n\">bout</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">BufferedWriter</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">OutputStreamWriter</span><span class=\"o\">(</span><span class=\"n\">pr</span><span class=\"o\">.</span><span class=\"na\">getOutputStream</span><span class=\"o\">()));</span>\n        <span class=\"n\">bout</span><span class=\"o\">.</span><span class=\"na\">write</span><span class=\"o\">(</span><span class=\"s\">&#34;1 2&#34;</span><span class=\"o\">);</span><span class=\"c1\">//输出数据\n</span><span class=\"c1\"></span>        <span class=\"n\">bout</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();</span><span class=\"c1\">//关闭流\n</span><span class=\"c1\"></span>        \n        <span class=\"c1\">//SequenceInputStream是一个串联流，能够把两个流结合起来，通过该对象就可以将\n</span><span class=\"c1\"></span>        <span class=\"c1\">//getInputStream方法和getErrorStream方法获取到的流一起进行查看了，当然也可以单独操作\n</span><span class=\"c1\"></span>\t<span class=\"n\">SequenceInputStream</span> <span class=\"n\">sis</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">SequenceInputStream</span><span class=\"o\">(</span><span class=\"n\">pr</span><span class=\"o\">.</span><span class=\"na\">getInputStream</span><span class=\"o\">(),</span> <span class=\"n\">pr</span><span class=\"o\">.</span><span class=\"na\">getErrorStream</span><span class=\"o\">());</span>\n\t<span class=\"n\">InputStreamReader</span> <span class=\"n\">inst</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">InputStreamReader</span><span class=\"o\">(</span><span class=\"n\">sis</span><span class=\"o\">,</span> <span class=\"s\">&#34;GBK&#34;</span><span class=\"o\">);</span><span class=\"c1\">//设置编码格式并转换为输入流\n</span><span class=\"c1\"></span>\t<span class=\"n\">BufferedReader</span> <span class=\"n\">br</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">BufferedReader</span><span class=\"o\">(</span><span class=\"n\">inst</span><span class=\"o\">);</span><span class=\"c1\">//输入流缓冲区\n</span><span class=\"c1\"></span>\n\t<span class=\"n\">String</span> <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n\t<span class=\"n\">StringBuilder</span> <span class=\"n\">sb</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">StringBuilder</span><span class=\"o\">();</span>\n\t<span class=\"k\">while</span> <span class=\"o\">((</span><span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">br</span><span class=\"o\">.</span><span class=\"na\">readLine</span><span class=\"o\">())</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//循环读取缓冲区中的数据\n</span><span class=\"c1\"></span>\t    <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"na\">append</span><span class=\"o\">(</span><span class=\"n\">res</span><span class=\"o\">+</span><span class=\"s\">&#34;\\n&#34;</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t<span class=\"n\">br</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();</span>\n\t<span class=\"n\">pr</span><span class=\"o\">.</span><span class=\"na\">waitFor</span><span class=\"o\">();</span>\n\t<span class=\"n\">pr</span><span class=\"o\">.</span><span class=\"na\">destroy</span><span class=\"o\">();</span>\n\t<span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">out</span><span class=\"o\">.</span><span class=\"na\">print</span><span class=\"o\">(</span><span class=\"n\">sb</span><span class=\"o\">);</span><span class=\"c1\">//输出获取的数据\n</span><span class=\"c1\"></span>    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>完毕撒花~~</p><p></p>", 
            "topic": [
                {
                    "tag": "Java Web", 
                    "tagLink": "https://api.zhihu.com/topics/19622819"
                }, 
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }, 
                {
                    "tag": "javase", 
                    "tagLink": "https://api.zhihu.com/topics/19725879"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/33547017", 
            "userName": "black", 
            "userLink": "https://www.zhihu.com/people/498a68ceba804b2d2198fab3d8f444fe", 
            "upvote": 1, 
            "title": "java Runtime.exec方法详解！", 
            "content": "<p>在做一个项目时用到了Runtime.exec(String command)，但是网上的很多博客讲解的都很不详细明白，也不全，干脆我自己来做一个讲解。</p><p>我们先来看看api的解释：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-432400fd492f60d936f476efc0155e37_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1101\" data-rawheight=\"436\" class=\"origin_image zh-lightbox-thumb\" width=\"1101\" data-original=\"https://pic4.zhimg.com/v2-432400fd492f60d936f476efc0155e37_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1101&#39; height=&#39;436&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1101\" data-rawheight=\"436\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1101\" data-original=\"https://pic4.zhimg.com/v2-432400fd492f60d936f476efc0155e37_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-432400fd492f60d936f476efc0155e37_b.jpg\"/></figure><p>从字面上理解的意思就是在单独打开一条线程执行指定的命令。当然，这个方法有多个重载，如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-ce760fdffdc0d92ab70c92fc0d28e856_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"780\" data-rawheight=\"331\" class=\"origin_image zh-lightbox-thumb\" width=\"780\" data-original=\"https://pic3.zhimg.com/v2-ce760fdffdc0d92ab70c92fc0d28e856_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;780&#39; height=&#39;331&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"780\" data-rawheight=\"331\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"780\" data-original=\"https://pic3.zhimg.com/v2-ce760fdffdc0d92ab70c92fc0d28e856_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-ce760fdffdc0d92ab70c92fc0d28e856_b.jpg\"/></figure><p>下面会讲到其它的重载方法，不急。</p><p>想到api的解释我第一时间想到的就是cmd命令行！因为确实有些相似，但是转念一想又不对，“在单独的进程中执行指定的字符串命令”不就是这玩意儿吗！</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-a51c43ff79860b83fec1cef970ab8de7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"513\" data-rawheight=\"272\" class=\"origin_image zh-lightbox-thumb\" width=\"513\" data-original=\"https://pic4.zhimg.com/v2-a51c43ff79860b83fec1cef970ab8de7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;513&#39; height=&#39;272&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"513\" data-rawheight=\"272\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"513\" data-original=\"https://pic4.zhimg.com/v2-a51c43ff79860b83fec1cef970ab8de7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-a51c43ff79860b83fec1cef970ab8de7_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>然后我分别测试了这几个命令“explorer”，“calc”，“notepad”。都能正确的打开资源管理器、计算器和记事本程序。</p><p>但是cmd命令就不一样了，cmd命令不会弹出窗口，可能是以上几个命令是调用的外部的exe文件，而cmd不是吧，具体机制我不清楚，调用cmd命令呢在网上我看到了如下几种方法：</p><p class=\"ztext-empty-paragraph\"><br/></p><p>cmd /c dir 是执行完dir命令后关闭命令窗口。</p><p>cmd /k dir 是执行完dir命令后不关闭命令窗口。</p><p>cmd /c start dir 会打开一个新窗口后执行dir指令，原窗口会关闭。</p><p>cmd /k start dir 会打开一个新窗口后执行dir指令，原窗口不会关闭。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>/c start  和  /k start 我没测试过，主要使用的是/c，/k我测试了很多次，使用/k的话它怎么都获取不到输出的信息，无论是输入流还是错误输入流都不行！但是用/c就能正常获取，所以我一直使用的是/c。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>然后，重点来了！划重点了！</p><p>谁说的调用一次exec方法不能执行多条cmd命令！</p><h2><b>rt.exec(&#34;cmd /c set CLASSPATH=D:\\\\ &amp;&amp; javac D:\\\\a.java &amp;&amp; java a&#34;);</b> </h2><p class=\"ztext-empty-paragraph\"><br/></p><p>一个“&amp;&amp;”完美搞定~~</p><p>实测连接三条命令没问题，上限没测试过，各位看官无聊了可以去试试~~</p><p class=\"ztext-empty-paragraph\"><br/></p><p>但是，该方法有局限性，它只能在cmd里面使用，也就是前面必须有cmd三个字，你可以自己试试win+r调用cmd然后用&amp;&amp;连接多条命令执行，经过我的实测，是没有问题的，也就是说exec方法本质上还是只能调用一条命令的，我们能一次执行多条命令实际上是利用了cmd的语法的好处。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>在上述代码中我先是设置了类路径为D盘根目录，完了编译a.java文件，紧接着运行a.class，在这里如果不设置classpath属性的话会导致运行a.class时报找不到类文件的错误。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>可能大家已经觉得了，在上面的代码中我要设置classpath的属性又要javac一个完整的绝对路径，有没有什么方法能够一劳永逸呢？别说，还真有，这里就会用到其它几个重载的exec方法了。在这里我们只讲一个方法，因为其它的方法包括以上的那个方法最终都是调用它。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-932ade02f10941c8b3f5154398617689_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1484\" data-rawheight=\"940\" class=\"origin_image zh-lightbox-thumb\" width=\"1484\" data-original=\"https://pic2.zhimg.com/v2-932ade02f10941c8b3f5154398617689_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1484&#39; height=&#39;940&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1484\" data-rawheight=\"940\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1484\" data-original=\"https://pic2.zhimg.com/v2-932ade02f10941c8b3f5154398617689_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-932ade02f10941c8b3f5154398617689_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>我们来一个参数一个参数的详解，第一个参数cmdarray——包含所调用命令极其参数的数组。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>例如：shutdown -s -t 3600——在一小时后自动关机命令</p><p class=\"ztext-empty-paragraph\"><br/></p><p>我们可以构建这样的一个数组：String arr[] = {&#34;shutdown&#34;,&#34;-s&#34;,&#34;-t&#34;,&#34;3600&#34;};</p><p>数组第一个元素“shutdown”是命令，其后的三个-s、-t、3600都是参数，然后直接将这个数组注入exec方法即可。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>需要注意的是，在调用这个方法时我们不能将命令和参数放在一起——String arr[] = {&#34;shutdown -s -t 3600&#34;};</p><p class=\"ztext-empty-paragraph\"><br/></p><p>这样去调用的话程序会把“shutdown -s -t 3600”当成是一条命令的名称，它会去查找“shutdown -s -t 3600”这条命令，它当然会找不到，所以就会报错，想要偷懒的话我们可以调用这个方法，我自己平时也是调用的这个方法，比较方便：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-fa6b76f7e70720b0f396c100c071b5b4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"781\" data-rawheight=\"61\" class=\"origin_image zh-lightbox-thumb\" width=\"781\" data-original=\"https://pic1.zhimg.com/v2-fa6b76f7e70720b0f396c100c071b5b4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;781&#39; height=&#39;61&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"781\" data-rawheight=\"61\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"781\" data-original=\"https://pic1.zhimg.com/v2-fa6b76f7e70720b0f396c100c071b5b4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-fa6b76f7e70720b0f396c100c071b5b4_b.jpg\"/></figure><p>这个重载的方法会自动将一条字符串分解成命令和参数，最后再去调用我们现在讲解的这个方法。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>然后是第二个参数：envp——字符串数组，其中每个元素的环境变量的设置格式为 <i>name</i>=<i>value</i>，如果子进程应该继承当前进程的环境，或该参数为null。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>这个参数说白了就是去设置当前进程的环境变量，在上面的连接多条命令的例子中我们设置了classpath的路径，classpath其实就是一个环境变量，所以我们在这里就可以构建一个这样的数组：</p><div class=\"highlight\"><pre><code class=\"language-java\"><span class=\"n\">String</span> <span class=\"n\">envp</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"s\">&#34;CLASSPATH=D://&#34;</span><span class=\"o\">}</span></code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>然后注入进exec方法即可，这样的话就可以直接java a去运行a.class了，程序会到D盘的根目录下去寻找a.class文件。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>但是在我的测试中发现了一个很怪异的现象就是如果你在调用该方法的时候提供了这个参数，并且命令是cmd开头也就是在cmd中执行命令的时候，系统的环境变量就好像不存在了一样！你的环境变量就只剩下你数组提供的了。但是如果你不在cmd中执行命令，而是直接执行命令的话系统的环境变量又能发挥工作。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>最后是第三个参数：dir——子进程的工作目录；如果子进程应该继承当前进程的工作目录，则该参数为 null。</p><p>其实就是设置当前的目录，一般要和cmd配合才能起作用，因为如果不在cmd里面执行命令的话，设置了目录也无济于事，程序依旧只会去环境变量设置的目录中寻找程序。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>接下来我们就把上面的加粗的例子用这个方法调用：</p><div class=\"highlight\"><pre><code class=\"language-java\"><span class=\"n\">String</span> <span class=\"n\">arr</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"s\">&#34;CLASSPATH=D://&#34;</span><span class=\"o\">,</span><span class=\"s\">&#34;Path=C:\\\\Program Files\\\\Java\\\\jdk1.8.0_131\\\\bin&#34;</span><span class=\"o\">};</span>  \n  \n<span class=\"n\">rt</span><span class=\"o\">.</span><span class=\"na\">exec</span><span class=\"o\">(</span><span class=\"s\">&#34;cmd /c javac a.java &amp;&amp; java a&#34;</span><span class=\"o\">,</span> <span class=\"n\">arr</span><span class=\"o\">,</span> <span class=\"k\">new</span> <span class=\"n\">File</span><span class=\"o\">(</span><span class=\"s\">&#34;D://&#34;</span><span class=\"o\">));</span></code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>在上述代码中我设置的环境变量数组使得命令能找到a.class和java这两个文件，因为第二个参数的怪异性，所以我这里还要设置java文件路径才能正常工作，最后设置的目录使得命令能找到a.java文件。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>最后，大家应该注意到了，exec方法还有一个返回的对象Process，这个对象是给我们用来控制exec方法创建的进程的，该对象可用来控制进程并获得相关信息。Process 类提供了执行从进程输入、执行输出到进程、等待进程完成、检查进程的退出状态以及销毁（杀掉）进程的方法。 我将在下篇文章详细讲解Process类，我们下次再见~~拜拜~~</p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }, 
                {
                    "tag": "编程", 
                    "tagLink": "https://api.zhihu.com/topics/19554298"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/29008333", 
            "userName": "black", 
            "userLink": "https://www.zhihu.com/people/498a68ceba804b2d2198fab3d8f444fe", 
            "upvote": 3, 
            "title": "java大数算法完成五则运算之除及取余", 
            "content": "<p>这几天偷懒去了~~今天把大数系列的最后一篇文章更新了~~</p><p class=\"ztext-empty-paragraph\"><br/></p><p>因为商和余其实是一个运算，只不过分属两个部分，所以放一起说了。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>老样子，先来讲思路，原谅我水平有限，想不出来更好的方法，（有的话可以在下方评论告诉我~~）也没遇见过类似的可以借鉴的算法，于是就用我们平时做除法的方法。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-ef74c03bf30d07b19946ac4d7b048d83_b.png\" data-rawwidth=\"594\" data-rawheight=\"232\" class=\"origin_image zh-lightbox-thumb\" width=\"594\" data-original=\"https://pic4.zhimg.com/v2-ef74c03bf30d07b19946ac4d7b048d83_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;594&#39; height=&#39;232&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"594\" data-rawheight=\"232\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"594\" data-original=\"https://pic4.zhimg.com/v2-ef74c03bf30d07b19946ac4d7b048d83_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-ef74c03bf30d07b19946ac4d7b048d83_b.png\"/></figure><p>如上图例子所示，商和余都是未知的，而且都是需要多次在尾部添加数据，那么数组弃用，集合又太庞大，但是我想到了用StringBuilder，数据可变，又方便添加数据，性能好，关键是还小，可以很方便的使用。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>然后，我们需要一个循环来控制开始和结束，这个循环肯定是以被除数的最高位到最低位，那么我们用a代表被除数，b代表除数，就有了这个for (int i = 0; i &lt; a.length; i++)循环，每次循环我们要将对应的被除数位a[i]添加至余数的末尾，然后将比较余数与除数，这时我们会得到三个结果之中的一个。</p><ul><li>余数小于除数：往商数的末尾加零，然后continue至下一次循环</li></ul><figure><noscript><img src=\"https://pic4.zhimg.com/v2-665c6224eba3a56df146ddd214e52d87_b.png\" data-rawwidth=\"594\" data-rawheight=\"208\" class=\"origin_image zh-lightbox-thumb\" width=\"594\" data-original=\"https://pic4.zhimg.com/v2-665c6224eba3a56df146ddd214e52d87_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;594&#39; height=&#39;208&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"594\" data-rawheight=\"208\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"594\" data-original=\"https://pic4.zhimg.com/v2-665c6224eba3a56df146ddd214e52d87_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-665c6224eba3a56df146ddd214e52d87_b.png\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><ul><li>余数等于除数：往商数的末尾加一，清零余数，然后continue至下一次循环</li><li>余数大于除数：这也是我们着重要考虑的分支。</li></ul><p>                               由于循环是一位一位往前推进的，所以余数最多大除数一位，而一位的</p><p>                               差距是不可能达到十倍的，最多商9。</p><p>                               例如除数101，被除数1000，余数为同样位数时为100，小于除数，进入</p><p>                               下一循环，余数为1000，如果商10，除数与商的乘积为1010，大于</p><p>                               1000，所以只能商9，余89。</p><p>                               既然商只可能为1至9，那我完全可以用一个1至9的循环来找出商。</p><p>                               最后把添加商，同时用余数减去商与除数的乘积的差来当作新余数，进</p><p>                               入下一循环。</p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-b3f6d689b6596d35e6839395b3a5bb98_b.png\" data-rawwidth=\"594\" data-rawheight=\"325\" class=\"origin_image zh-lightbox-thumb\" width=\"594\" data-original=\"https://pic1.zhimg.com/v2-b3f6d689b6596d35e6839395b3a5bb98_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;594&#39; height=&#39;325&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"594\" data-rawheight=\"325\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"594\" data-original=\"https://pic1.zhimg.com/v2-b3f6d689b6596d35e6839395b3a5bb98_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b3f6d689b6596d35e6839395b3a5bb98_b.png\"/></figure><p>取余也很简单，最后留下的余数即为余数。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>最后上源代码：代码中所有调用到的函数请参考<a href=\"https://zhuanlan.zhihu.com/p/28542444\" class=\"internal\">java大数算法完成五则运算之类基础</a></p><p class=\"ztext-empty-paragraph\"><br/></p><div class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"n\">BigNum</span> <span class=\"nf\">div</span><span class=\"o\">(</span><span class=\"n\">BigNum</span> <span class=\"n\">div</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">Exception</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">newNum</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span><span class=\"c1\">//商数组\n</span><span class=\"c1\"></span>        <span class=\"kt\">char</span> <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span><span class=\"c1\">//商正负号\n</span><span class=\"c1\"></span>        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">SIGN</span> <span class=\"o\">==</span> <span class=\"n\">div</span><span class=\"o\">.</span><span class=\"na\">SIGN</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//同号为正，异号为负\n</span><span class=\"c1\"></span>            <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"sc\">&#39;+&#39;</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n            <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"sc\">&#39;-&#39;</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">DIGITS</span> <span class=\"o\">&lt;</span> <span class=\"n\">div</span><span class=\"o\">.</span><span class=\"na\">DIGITS</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//被除数位数小于除数，结果直接为零\n</span><span class=\"c1\"></span>            <span class=\"n\">newNum</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">1</span><span class=\"o\">];</span>\n            <span class=\"n\">newNum</span><span class=\"o\">[</span><span class=\"n\">0</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span>\n            <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"sc\">&#39;+&#39;</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">DIGITS</span> <span class=\"o\">==</span> <span class=\"n\">div</span><span class=\"o\">.</span><span class=\"na\">DIGITS</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//被除数位数等于除数\n</span><span class=\"c1\"></span>            <span class=\"k\">switch</span> <span class=\"o\">(</span><span class=\"n\">ArrCompare</span><span class=\"o\">(</span><span class=\"n\">NUM</span><span class=\"o\">,</span> <span class=\"n\">div</span><span class=\"o\">.</span><span class=\"na\">NUM</span><span class=\"o\">))</span> <span class=\"o\">{</span><span class=\"c1\">//同位数下比较被除数与除数大小\n</span><span class=\"c1\"></span>                <span class=\"k\">case</span> <span class=\"o\">-</span><span class=\"nl\">1:</span><span class=\"c1\">//被除数小于除数\n</span><span class=\"c1\"></span>                    <span class=\"n\">newNum</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">1</span><span class=\"o\">];</span>\n                    <span class=\"n\">newNum</span><span class=\"o\">[</span><span class=\"n\">0</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span>\n                    <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"sc\">&#39;+&#39;</span><span class=\"o\">;</span>\n                    <span class=\"k\">break</span><span class=\"o\">;</span>\n                <span class=\"k\">case</span> <span class=\"nl\">0:</span><span class=\"c1\">//被除数等于除数\n</span><span class=\"c1\"></span>                    <span class=\"n\">newNum</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">1</span><span class=\"o\">];</span>\n                    <span class=\"n\">newNum</span><span class=\"o\">[</span><span class=\"n\">0</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n                    <span class=\"k\">break</span><span class=\"o\">;</span>\n                <span class=\"k\">case</span> <span class=\"nl\">1:</span><span class=\"c1\">//被除数大于除数\n</span><span class=\"c1\"></span>                    <span class=\"n\">newNum</span> <span class=\"o\">=</span> <span class=\"n\">divAndRem</span><span class=\"o\">(</span><span class=\"n\">NUM</span><span class=\"o\">,</span> <span class=\"n\">div</span><span class=\"o\">.</span><span class=\"na\">NUM</span><span class=\"o\">,</span> <span class=\"kc\">true</span><span class=\"o\">);</span>\n                    <span class=\"k\">break</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span><span class=\"c1\">//被除数位数大于除数\n</span><span class=\"c1\"></span>            <span class=\"n\">newNum</span> <span class=\"o\">=</span> <span class=\"n\">divAndRem</span><span class=\"o\">(</span><span class=\"n\">NUM</span><span class=\"o\">,</span> <span class=\"n\">div</span><span class=\"o\">.</span><span class=\"na\">NUM</span><span class=\"o\">,</span> <span class=\"kc\">true</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n        <span class=\"n\">BigNum</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">BigNum</span><span class=\"o\">(</span><span class=\"n\">newNum</span><span class=\"o\">,</span> <span class=\"n\">newNumSign</span><span class=\"o\">);</span>\n        <span class=\"k\">return</span> <span class=\"n\">b</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"cm\">/**\n</span><span class=\"cm\">     * 大数数组相除，a为被除数，b为除数，flag值为true返回商数，false返回余数     *\n</span><span class=\"cm\">     * @param a\n</span><span class=\"cm\">     * @param b\n</span><span class=\"cm\">     * @param flag\n</span><span class=\"cm\">     * @return\n</span><span class=\"cm\">     */</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"nf\">divAndRem</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">a</span><span class=\"o\">[],</span> <span class=\"kt\">int</span> <span class=\"n\">b</span><span class=\"o\">[],</span> <span class=\"kt\">boolean</span> <span class=\"n\">flag</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">StringBuilder</span> <span class=\"n\">quotient</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">StringBuilder</span><span class=\"o\">();</span><span class=\"c1\">//保存商数\n</span><span class=\"c1\"></span>        <span class=\"n\">StringBuilder</span> <span class=\"n\">remainder</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">StringBuilder</span><span class=\"o\">();</span><span class=\"c1\">//保存余数\n</span><span class=\"c1\"></span>        <span class=\"c1\">//根据平常进行除法运算的方法来实现\n</span><span class=\"c1\"></span>        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span><span class=\"c1\">//被除数从最高位到最低位循环\n</span><span class=\"c1\"></span>            <span class=\"n\">remainder</span><span class=\"o\">.</span><span class=\"na\">append</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]);</span><span class=\"c1\">//添加余数\n</span><span class=\"c1\"></span>            <span class=\"k\">if</span> <span class=\"o\">((</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"n\">1</span><span class=\"o\">)</span> <span class=\"o\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//如果余数位数小于除数，则给对应商数位赋零，同时进入下一层循环\n</span><span class=\"c1\"></span>                <span class=\"n\">quotient</span><span class=\"o\">.</span><span class=\"na\">append</span><span class=\"o\">(</span><span class=\"n\">0</span><span class=\"o\">);</span>\n                <span class=\"k\">continue</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n            <span class=\"c1\">//当余数与除数位数一致或大于时判断余数与除数的大小\n</span><span class=\"c1\"></span>            <span class=\"k\">switch</span> <span class=\"o\">(</span><span class=\"n\">intArrCompaerTo</span><span class=\"o\">(</span><span class=\"n\">stringToIntArr</span><span class=\"o\">(</span><span class=\"n\">remainder</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">()),</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n                <span class=\"k\">case</span> <span class=\"o\">-</span><span class=\"nl\">1:</span><span class=\"c1\">//余数小于除数，给对应商数位赋零，同时进入下一层循环\n</span><span class=\"c1\"></span>                    <span class=\"n\">quotient</span><span class=\"o\">.</span><span class=\"na\">append</span><span class=\"o\">(</span><span class=\"n\">0</span><span class=\"o\">);</span>\n                    <span class=\"k\">continue</span><span class=\"o\">;</span>\n                <span class=\"k\">case</span> <span class=\"nl\">0:</span><span class=\"c1\">//余数等于除数，给对应商数位赋一，同时把余数清零\n</span><span class=\"c1\"></span>                    <span class=\"n\">quotient</span><span class=\"o\">.</span><span class=\"na\">append</span><span class=\"o\">(</span><span class=\"n\">1</span><span class=\"o\">);</span>\n                    <span class=\"n\">remainder</span><span class=\"o\">.</span><span class=\"na\">delete</span><span class=\"o\">(</span><span class=\"n\">0</span><span class=\"o\">,</span> <span class=\"n\">remainder</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">());</span>\n                    <span class=\"k\">break</span><span class=\"o\">;</span>\n                <span class=\"k\">case</span> <span class=\"nl\">1:</span><span class=\"c1\">//余数大于除数\n</span><span class=\"c1\"></span>                    <span class=\"kt\">int</span> <span class=\"n\">remTemp</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"n\">stringToIntArr</span><span class=\"o\">(</span><span class=\"n\">remainder</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">());</span><span class=\"c1\">//保存余数的数组\n</span><span class=\"c1\"></span>                    <span class=\"kt\">int</span> <span class=\"n\">jTemp</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">1</span><span class=\"o\">];</span><span class=\"c1\">//把j转换成数组以便运算\n</span><span class=\"c1\"></span>                    <span class=\"kt\">int</span> <span class=\"n\">proTemp</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span><span class=\"c1\">//保存j与b的乘积\n</span><span class=\"c1\"></span>                    <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"n\">1</span><span class=\"o\">;</span> <span class=\"n\">j</span> <span class=\"o\">&lt;</span> <span class=\"n\">10</span><span class=\"o\">;</span> <span class=\"n\">j</span><span class=\"o\">++)</span> <span class=\"o\">{</span><span class=\"c1\">//最多只能为9\n</span><span class=\"c1\"></span>                        <span class=\"n\">jTemp</span><span class=\"o\">[</span><span class=\"n\">0</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">j</span><span class=\"o\">;</span>\n                        <span class=\"n\">proTemp</span> <span class=\"o\">=</span> <span class=\"n\">mulNum</span><span class=\"o\">(</span><span class=\"n\">jTemp</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">);</span>\n                        <span class=\"kt\">int</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">intArrCompaerTo</span><span class=\"o\">(</span><span class=\"n\">proTemp</span><span class=\"o\">,</span> <span class=\"n\">remTemp</span><span class=\"o\">);</span><span class=\"c1\">//保存除数乘商的积与余数的大小比的值\n</span><span class=\"c1\"></span>                        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">==</span> <span class=\"o\">-</span><span class=\"n\">1</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">j</span> <span class=\"o\">!=</span> <span class=\"n\">9</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//积大于余数才继续，并且在商为9时即使积小于余数也要往下执行\n</span><span class=\"c1\"></span>                            <span class=\"k\">continue</span><span class=\"o\">;</span>\n                        <span class=\"o\">}</span>\n                        <span class=\"k\">if</span> <span class=\"o\">((</span><span class=\"n\">c</span> <span class=\"o\">==</span> <span class=\"o\">-</span><span class=\"n\">1</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">j</span> <span class=\"o\">==</span> <span class=\"n\">9</span><span class=\"o\">)</span> <span class=\"o\">||</span> <span class=\"n\">c</span> <span class=\"o\">==</span> <span class=\"n\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                            <span class=\"c1\">//当商为9，积小于余数时，或者积等于余数时，不用将乘积的循环往前跳一次\n</span><span class=\"c1\"></span>                        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span><span class=\"c1\">//将乘积的循环往前跳一次\n</span><span class=\"c1\"></span>                            <span class=\"n\">jTemp</span><span class=\"o\">[</span><span class=\"n\">0</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"o\">--</span><span class=\"n\">j</span><span class=\"o\">;</span>\n                            <span class=\"n\">proTemp</span> <span class=\"o\">=</span> <span class=\"n\">mulNum</span><span class=\"o\">(</span><span class=\"n\">jTemp</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">);</span>\n                        <span class=\"o\">}</span>\n                        <span class=\"n\">quotient</span><span class=\"o\">.</span><span class=\"na\">append</span><span class=\"o\">(</span><span class=\"n\">j</span><span class=\"o\">);</span><span class=\"c1\">//添加商\n</span><span class=\"c1\"></span>                        <span class=\"n\">remainder</span><span class=\"o\">.</span><span class=\"na\">delete</span><span class=\"o\">(</span><span class=\"n\">0</span><span class=\"o\">,</span> <span class=\"n\">remainder</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">());</span><span class=\"c1\">//清空余数\n</span><span class=\"c1\"></span>                        <span class=\"n\">remainder</span><span class=\"o\">.</span><span class=\"na\">append</span><span class=\"o\">(</span><span class=\"n\">intArrToString</span><span class=\"o\">(</span><span class=\"n\">subNum</span><span class=\"o\">(</span><span class=\"n\">remTemp</span><span class=\"o\">,</span> <span class=\"n\">proTemp</span><span class=\"o\">)));</span><span class=\"c1\">//添加余数减去积的差\n</span><span class=\"c1\"></span>                        <span class=\"k\">break</span><span class=\"o\">;</span>\n                    <span class=\"o\">}</span>\n                    <span class=\"k\">break</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">flag</span> <span class=\"o\">?</span> <span class=\"n\">stringToIntArr</span><span class=\"o\">(</span><span class=\"n\">quotient</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">())</span> <span class=\"o\">:</span> <span class=\"n\">stringToIntArr</span><span class=\"o\">(</span><span class=\"n\">remainder</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">());</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"n\">BigNum</span> <span class=\"nf\">rem</span><span class=\"o\">(</span><span class=\"n\">BigNum</span> <span class=\"n\">rem</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">Exception</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">newNum</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n        <span class=\"k\">switch</span> <span class=\"o\">(</span><span class=\"n\">compareTo</span><span class=\"o\">(</span><span class=\"n\">rem</span><span class=\"o\">))</span> <span class=\"o\">{</span><span class=\"c1\">//比较被除数与除数大小\n</span><span class=\"c1\"></span>            <span class=\"k\">case</span> <span class=\"o\">-</span><span class=\"nl\">1:</span><span class=\"c1\">//被除数小于除数时余数就是被除数本身\n</span><span class=\"c1\"></span>                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"o\">;</span>\n            <span class=\"k\">case</span> <span class=\"nl\">0:</span><span class=\"c1\">//被除数等于除数时余数为零\n</span><span class=\"c1\"></span>                <span class=\"n\">newNum</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">1</span><span class=\"o\">];</span>\n                <span class=\"n\">newNum</span><span class=\"o\">[</span><span class=\"n\">0</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span>\n                <span class=\"k\">break</span><span class=\"o\">;</span>\n            <span class=\"k\">case</span> <span class=\"nl\">1:</span><span class=\"c1\">//被除数大于除数\n</span><span class=\"c1\"></span>                <span class=\"n\">newNum</span> <span class=\"o\">=</span> <span class=\"n\">divAndRem</span><span class=\"o\">(</span><span class=\"n\">NUM</span><span class=\"o\">,</span> <span class=\"n\">rem</span><span class=\"o\">.</span><span class=\"na\">NUM</span><span class=\"o\">,</span> <span class=\"kc\">false</span><span class=\"o\">);</span>\n                <span class=\"k\">break</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"n\">BigNum</span><span class=\"o\">(</span><span class=\"n\">newNum</span><span class=\"o\">,</span> <span class=\"sc\">&#39;+&#39;</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span></code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>java大数算法完成五则运算这系列文章到这里也就结束了，有什么想法或建议欢迎在下方评论区告诉我，最后，写文不易~~点个赞吧！</p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }, 
                {
                    "tag": "编程", 
                    "tagLink": "https://api.zhihu.com/topics/19554298"
                }, 
                {
                    "tag": "算法", 
                    "tagLink": "https://api.zhihu.com/topics/19553510"
                }
            ], 
            "comments": [
                {
                    "userName": "Yang", 
                    "userLink": "https://www.zhihu.com/people/e8d4fe0e36a04fc109a456bf081ab683", 
                    "content": "<p>以7546除23为例。</p><p>先减去23的100倍，就是2300，可以减3次，余下646。   此时商就是300；</p><p>然后646减去23的10倍，就是230，可以减2次，余下186。此时商就是320；</p><p>然后186减去23，可以减8次，此时商就是328</p>", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "black", 
                            "userLink": "https://www.zhihu.com/people/498a68ceba804b2d2198fab3d8f444fe", 
                            "content": "可以的，也是一个挺好的想法，这个算法应该会比我的效率高一些，开销会小一些", 
                            "likes": 0, 
                            "replyToAuthor": "Yang"
                        }
                    ]
                }, 
                {
                    "userName": "SenseSensibility", 
                    "userLink": "https://www.zhihu.com/people/2cadec8dd719d7deccfc8651bba4e30c", 
                    "content": "<p>太感谢了，学校作业要求重写Java BigInteger 真的难死我了，就这个除法我想太多了。现在好了</p><a class=\"comment_sticker\" href=\"https://pic3.zhimg.com/v2-cb8443f07a41298e45191cef11b90fd2.gif\" data-width=\"\" data-height=\"\">[干杯]</a>", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "black", 
                            "userLink": "https://www.zhihu.com/people/498a68ceba804b2d2198fab3d8f444fe", 
                            "content": "你运气还真好", 
                            "likes": 1, 
                            "replyToAuthor": "SenseSensibility"
                        }
                    ]
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/28672880", 
            "userName": "black", 
            "userLink": "https://www.zhihu.com/people/498a68ceba804b2d2198fab3d8f444fe", 
            "upvote": 4, 
            "title": "java大数算法完成五则运算之乘", 
            "content": "<p>到了乘法部分了，乘法呢稍微麻烦点</p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-7829d285ea6e90742d5c352d8220b93d_b.png\" data-rawwidth=\"408\" data-rawheight=\"352\" class=\"content_image\" width=\"408\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;408&#39; height=&#39;352&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"408\" data-rawheight=\"352\" class=\"content_image lazy\" width=\"408\" data-actualsrc=\"https://pic2.zhimg.com/v2-7829d285ea6e90742d5c352d8220b93d_b.png\"/></figure><p>如图所示，下面的每一位乘以上面的乘数时都要将分积的位提前，最后根据分积的位来对应加起来即为最终结果。麻烦就来了，每一部分的积考虑到可能为大数，那么必须使用数组来存放，这么多的分积如果都使用单个数组来存放，不仅麻烦而且浪费资源，并且记录分积在总积中的位也是个问题，这种情况下我自然而然的想到了二维数组来存放，每一行就是一个分积，在计算总积时却有问题了，没法保证每个分积正确的错位相加，想了几个方法都不行，比如在前后补零使得位数一致，但是前置位的零很好区别删除，后置位却没法分辩等等。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>于是我去博客上看看有没有类似的文章可以借鉴，运气不错，还真找到了一个。</p><p>原地址：<a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/sunkun2013/article/details/11822927\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">浅谈一下大数相乘有关思路(图解)与用java代码具体解决方案</a></p><p>原博客主的思路：</p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-dcf9e2c38126f924bf359c40aa775e6f_b.png\" data-rawwidth=\"805\" data-rawheight=\"2373\" class=\"origin_image zh-lightbox-thumb\" width=\"805\" data-original=\"https://pic4.zhimg.com/v2-dcf9e2c38126f924bf359c40aa775e6f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;805&#39; height=&#39;2373&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"805\" data-rawheight=\"2373\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"805\" data-original=\"https://pic4.zhimg.com/v2-dcf9e2c38126f924bf359c40aa775e6f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-dcf9e2c38126f924bf359c40aa775e6f_b.png\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>原博客主的思路与我类似，利用正斜线相加的方法巧妙的帮我解决了分积相加的问题，同时更简单，在他的思路中，分积不用进位，将分积全部相加之后，再来进位。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>思路完结，上代码~~代码中所有调用到的函数请参考<a href=\"https://zhuanlan.zhihu.com/p/28542444\" class=\"internal\">java大数算法完成五则运算之类基础</a></p><div class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"n\">BigNum</span> <span class=\"nf\">mul</span><span class=\"o\">(</span><span class=\"n\">BigNum</span> <span class=\"n\">mul</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">Exception</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">mulNum</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"n\">mul</span><span class=\"o\">.</span><span class=\"na\">NUM</span><span class=\"o\">;</span><span class=\"c1\">//要乘的大数数组\n</span><span class=\"c1\"></span>        <span class=\"kt\">char</span> <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span><span class=\"c1\">//积数的符号\n</span><span class=\"c1\"></span>        <span class=\"kt\">int</span> <span class=\"n\">newNum</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span><span class=\"c1\">//积数的数组\n</span><span class=\"c1\"></span>        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">SIGN</span> <span class=\"o\">==</span> <span class=\"n\">mul</span><span class=\"o\">.</span><span class=\"na\">SIGN</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//同号为正，异号为负\n</span><span class=\"c1\"></span>            <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"sc\">&#39;+&#39;</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n            <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"sc\">&#39;-&#39;</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"n\">newNum</span> <span class=\"o\">=</span> <span class=\"n\">mulNum</span><span class=\"o\">(</span><span class=\"n\">NUM</span><span class=\"o\">,</span> <span class=\"n\">mulNum</span><span class=\"o\">);</span>\n        <span class=\"n\">BigNum</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">BigNum</span><span class=\"o\">(</span><span class=\"n\">newNum</span><span class=\"o\">,</span> <span class=\"n\">newNumSign</span><span class=\"o\">);</span>\n        <span class=\"k\">return</span> <span class=\"n\">b</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"cm\">/**\n</span><span class=\"cm\">     * 大数数组相乘，不分符号\n</span><span class=\"cm\">     *\n</span><span class=\"cm\">     * @param b\n</span><span class=\"cm\">     * @return\n</span><span class=\"cm\">     */</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"nf\">mulNum</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">a</span><span class=\"o\">[],</span> <span class=\"kt\">int</span> <span class=\"n\">b</span><span class=\"o\">[])</span> <span class=\"o\">{</span>\n        <span class=\"c1\">//productNum存放两个数组每个数字互相相乘的积\n</span><span class=\"c1\"></span>        <span class=\"kt\">int</span> <span class=\"n\">productNum</span><span class=\"o\">[][]</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">][</span><span class=\"n\">b</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">];</span>\n        <span class=\"c1\">//num存放积数，num长度范围，最大：两个数组长度的和，最小：两个数组长度的和减一\n</span><span class=\"c1\"></span>        <span class=\"c1\">//这里先用最小范围存放，第一位暂时不进位即可\n</span><span class=\"c1\"></span>        <span class=\"kt\">int</span> <span class=\"n\">num</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">+</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">-</span> <span class=\"n\">1</span><span class=\"o\">];</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span><span class=\"c1\">//两两相乘\n</span><span class=\"c1\"></span>            <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span> <span class=\"n\">j</span> <span class=\"o\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">j</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n                <span class=\"n\">productNum</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">][</span><span class=\"n\">j</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">*</span> <span class=\"n\">b</span><span class=\"o\">[</span><span class=\"n\">j</span><span class=\"o\">];</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n        <span class=\"c1\">//二维数组中每一条正斜线的和正是对应位的总积值\n</span><span class=\"c1\"></span>        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span> <span class=\"n\">t</span> <span class=\"o\">&lt;</span> <span class=\"n\">num</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">t</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n                <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span> <span class=\"n\">j</span> <span class=\"o\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">j</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n                    <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">==</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                        <span class=\"n\">num</span><span class=\"o\">[</span><span class=\"n\">t</span><span class=\"o\">]</span> <span class=\"o\">+=</span> <span class=\"n\">productNum</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">][</span><span class=\"n\">j</span><span class=\"o\">];</span>\n                    <span class=\"o\">}</span>\n                <span class=\"o\">}</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">num</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">-</span> <span class=\"n\">1</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&gt;</span> <span class=\"o\">-</span><span class=\"n\">1</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">--)</span> <span class=\"o\">{</span><span class=\"c1\">//从左往右进位，第一位不进位\n</span><span class=\"c1\"></span>            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">num</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">9</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">i</span> <span class=\"o\">&gt;</span> <span class=\"n\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">num</span><span class=\"o\">[</span><span class=\"n\">i</span> <span class=\"o\">-</span> <span class=\"n\">1</span><span class=\"o\">]</span> <span class=\"o\">+=</span> <span class=\"n\">num</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">/</span> <span class=\"n\">10</span><span class=\"o\">;</span>\n                <span class=\"n\">num</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">%=</span> <span class=\"n\">10</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">num</span><span class=\"o\">[</span><span class=\"n\">0</span><span class=\"o\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">9</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//如果第一位需要进位，则先转换成字符串在转换成数组即可\n</span><span class=\"c1\"></span>            <span class=\"n\">String</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">intArrToString</span><span class=\"o\">(</span><span class=\"n\">num</span><span class=\"o\">);</span>\n            <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"n\">stringToIntArr</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">num</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span></code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>最后万分感谢原博客主的分享~~</p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }, 
                {
                    "tag": "编程", 
                    "tagLink": "https://api.zhihu.com/topics/19554298"
                }, 
                {
                    "tag": "算法", 
                    "tagLink": "https://api.zhihu.com/topics/19553510"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/28643192", 
            "userName": "black", 
            "userLink": "https://www.zhihu.com/people/498a68ceba804b2d2198fab3d8f444fe", 
            "upvote": 0, 
            "title": "java大数算法完成五则运算之加减", 
            "content": "<p>接昨天的《java大数算法完成五则运算之类基础》这篇文章，今天就先说说加减，毕竟比较简单，就丢一起了。</p><p>首先先说说算法思路，就是用最简单的最实用的，我们平时做加减的方法！数字右对齐，往左递推，依次运算，进位借位即可</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-a2600d88a2489105d41cd325724a9c30_b.png\" data-rawwidth=\"368\" data-rawheight=\"325\" class=\"content_image\" width=\"368\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;368&#39; height=&#39;325&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"368\" data-rawheight=\"325\" class=\"content_image lazy\" width=\"368\" data-actualsrc=\"https://pic1.zhimg.com/v2-a2600d88a2489105d41cd325724a9c30_b.png\"/></figure><p>废话不多说，直接上代码：</p><p>关于类中的其它方法和属性详看<a href=\"https://zhuanlan.zhihu.com/p/28542444\" class=\"internal\">java大数算法完成五则运算之类基础</a>，这里就不再讲了</p><div class=\"highlight\"><pre><code class=\"language-java\"> <span class=\"kd\">public</span> <span class=\"n\">BigNum</span> <span class=\"nf\">add</span><span class=\"o\">(</span><span class=\"n\">BigNum</span> <span class=\"n\">add</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">Exception</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">addnum</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"n\">add</span><span class=\"o\">.</span><span class=\"na\">NUM</span><span class=\"o\">;</span><span class=\"c1\">//保存加的数组\n</span><span class=\"c1\"></span>        <span class=\"kt\">char</span> <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span><span class=\"c1\">//保存和的符号\n</span><span class=\"c1\"></span>        <span class=\"kt\">int</span> <span class=\"n\">newNum</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span><span class=\"c1\">//保存和的数组\n</span><span class=\"c1\"></span>        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">SIGN</span> <span class=\"o\">==</span> <span class=\"n\">add</span><span class=\"o\">.</span><span class=\"na\">SIGN</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//同正负号时，符号不变一致\n</span><span class=\"c1\"></span>            <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"n\">SIGN</span><span class=\"o\">;</span>\n            <span class=\"n\">newNum</span> <span class=\"o\">=</span> <span class=\"n\">addnum</span><span class=\"o\">(</span><span class=\"n\">NUM</span><span class=\"o\">,</span> <span class=\"n\">addnum</span><span class=\"o\">);</span><span class=\"c1\">//调用加法\n</span><span class=\"c1\"></span>        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span><span class=\"c1\">//异号时，谁的绝对值比较大就用谁的符号\n</span><span class=\"c1\"></span>            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">intArrCompaerTo</span><span class=\"o\">(</span><span class=\"n\">NUM</span><span class=\"o\">,</span> <span class=\"n\">addnum</span><span class=\"o\">)</span> <span class=\"o\">==</span> <span class=\"n\">1</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"n\">SIGN</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n                <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"n\">add</span><span class=\"o\">.</span><span class=\"na\">SIGN</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n            <span class=\"n\">newNum</span> <span class=\"o\">=</span> <span class=\"n\">subNum</span><span class=\"o\">(</span><span class=\"n\">NUM</span><span class=\"o\">,</span> <span class=\"n\">addnum</span><span class=\"o\">);</span><span class=\"c1\">//调用减法\n</span><span class=\"c1\"></span>        <span class=\"o\">}</span>\n        <span class=\"n\">BigNum</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">BigNum</span><span class=\"o\">(</span><span class=\"n\">newNum</span><span class=\"o\">,</span> <span class=\"n\">newNumSign</span><span class=\"o\">);</span>\n        <span class=\"k\">return</span> <span class=\"n\">b</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"nf\">addnum</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">a</span><span class=\"o\">[],</span> <span class=\"kt\">int</span> <span class=\"n\">b</span><span class=\"o\">[])</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">p1</span><span class=\"o\">;</span><span class=\"c1\">//较大大数数组运算指针，指针均从右往左\n</span><span class=\"c1\"></span>        <span class=\"kt\">int</span> <span class=\"n\">p2</span><span class=\"o\">;</span><span class=\"c1\">//较小大数数组运算指针\n</span><span class=\"c1\"></span>        <span class=\"kt\">int</span> <span class=\"n\">num</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span><span class=\"c1\">//和数组\n</span><span class=\"c1\"></span>        <span class=\"kt\">int</span> <span class=\"n\">p3</span><span class=\"o\">;</span><span class=\"c1\">//和数组指针\n</span><span class=\"c1\"></span>        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">==</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//当两个大数位数一样时\n</span><span class=\"c1\"></span>            <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">-</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n            <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">+</span> <span class=\"n\">1</span><span class=\"o\">];</span><span class=\"c1\">//加一是因为有可能会多进一位\n</span><span class=\"c1\"></span>            <span class=\"n\">p3</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span>\n            <span class=\"k\">for</span> <span class=\"o\">(;</span> <span class=\"n\">p1</span> <span class=\"o\">&gt;</span> <span class=\"o\">-</span><span class=\"n\">1</span><span class=\"o\">;</span> <span class=\"n\">p1</span><span class=\"o\">--)</span> <span class=\"o\">{</span>\n                <span class=\"kt\">int</span> <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span><span class=\"c1\">//保存每位之和\n</span><span class=\"c1\"></span>                <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">[</span><span class=\"n\">p1</span><span class=\"o\">]</span> <span class=\"o\">+</span> <span class=\"n\">b</span><span class=\"o\">[</span><span class=\"n\">p2</span><span class=\"o\">--];</span>\n                <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">temp</span> <span class=\"o\">&gt;</span> <span class=\"n\">9</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//当前位之和大于9要进位\n</span><span class=\"c1\"></span>                    <span class=\"n\">num</span><span class=\"o\">[</span><span class=\"n\">p3</span><span class=\"o\">--]</span> <span class=\"o\">=</span> <span class=\"n\">temp</span> <span class=\"o\">%</span> <span class=\"n\">10</span><span class=\"o\">;</span><span class=\"c1\">//加上个位\n</span><span class=\"c1\"></span>                    <span class=\"n\">num</span><span class=\"o\">[</span><span class=\"n\">p3</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">temp</span> <span class=\"o\">/</span> <span class=\"n\">10</span><span class=\"o\">;</span><span class=\"c1\">//进位\n</span><span class=\"c1\"></span>                <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n                    <span class=\"n\">num</span><span class=\"o\">[</span><span class=\"n\">p3</span><span class=\"o\">--]</span> <span class=\"o\">=</span> <span class=\"n\">temp</span><span class=\"o\">;</span>\n                <span class=\"o\">}</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span><span class=\"c1\">//两个大数位数不相同时\n</span><span class=\"c1\"></span>            <span class=\"kt\">int</span> <span class=\"n\">tempNum</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">;</span><span class=\"c1\">//用临时数组保存当前对象的大数\n</span><span class=\"c1\"></span>            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//tempNum恒存放大的大数，add存放小的大数\n</span><span class=\"c1\"></span>                <span class=\"n\">tempNum</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"o\">;</span>\n                <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n            <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"n\">tempNum</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">-</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n            <span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">-</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n            <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">tempNum</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">+</span> <span class=\"n\">1</span><span class=\"o\">];</span>\n            <span class=\"n\">p3</span> <span class=\"o\">=</span> <span class=\"n\">tempNum</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span>\n            <span class=\"k\">for</span> <span class=\"o\">(;</span> <span class=\"n\">p1</span> <span class=\"o\">&gt;</span> <span class=\"o\">-</span><span class=\"n\">1</span><span class=\"o\">;</span> <span class=\"n\">p1</span><span class=\"o\">--)</span> <span class=\"o\">{</span>\n                <span class=\"kt\">int</span> <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span><span class=\"c1\">//保存每位的和\n</span><span class=\"c1\"></span>                <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">p2</span> <span class=\"o\">&lt;</span> <span class=\"n\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//较小数组可能会先加完\n</span><span class=\"c1\"></span>                    <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">tempNum</span><span class=\"o\">[</span><span class=\"n\">p1</span><span class=\"o\">];</span>\n                <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n                    <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">tempNum</span><span class=\"o\">[</span><span class=\"n\">p1</span><span class=\"o\">]</span> <span class=\"o\">+</span> <span class=\"n\">b</span><span class=\"o\">[</span><span class=\"n\">p2</span><span class=\"o\">--];</span>\n                <span class=\"o\">}</span>\n                <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">temp</span> <span class=\"o\">&gt;</span> <span class=\"n\">9</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//进位\n</span><span class=\"c1\"></span>                    <span class=\"n\">num</span><span class=\"o\">[</span><span class=\"n\">p3</span><span class=\"o\">--]</span> <span class=\"o\">=</span> <span class=\"n\">temp</span> <span class=\"o\">%</span> <span class=\"n\">10</span><span class=\"o\">;</span><span class=\"c1\">//加上个位\n</span><span class=\"c1\"></span>                    <span class=\"n\">num</span><span class=\"o\">[</span><span class=\"n\">p3</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">temp</span> <span class=\"o\">/</span> <span class=\"n\">10</span><span class=\"o\">;</span><span class=\"c1\">//进位\n</span><span class=\"c1\"></span>                <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n                    <span class=\"n\">num</span><span class=\"o\">[</span><span class=\"n\">p3</span><span class=\"o\">--]</span> <span class=\"o\">=</span> <span class=\"n\">temp</span><span class=\"o\">;</span>\n                <span class=\"o\">}</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">num</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span></code></pre></div><p>加法的代码就是这些，没什么很难的，就是稍微有点绕，要根据符号的不同来选择做加法还是减法，要根据位数不一样来写不同的实现方法，减法也是类似。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>接下来是减法：</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-878e5d23046138baa47ef1757382e67e_b.png\" data-rawwidth=\"408\" data-rawheight=\"282\" class=\"content_image\" width=\"408\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;408&#39; height=&#39;282&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"408\" data-rawheight=\"282\" class=\"content_image lazy\" width=\"408\" data-actualsrc=\"https://pic3.zhimg.com/v2-878e5d23046138baa47ef1757382e67e_b.png\"/></figure><div class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"n\">BigNum</span> <span class=\"nf\">sub</span><span class=\"o\">(</span><span class=\"n\">BigNum</span> <span class=\"n\">sub</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">Exception</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">subNum</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"n\">sub</span><span class=\"o\">.</span><span class=\"na\">NUM</span><span class=\"o\">;</span><span class=\"c1\">//减数\n</span><span class=\"c1\"></span>        <span class=\"kt\">char</span> <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span><span class=\"c1\">//保存差的符号\n</span><span class=\"c1\"></span>        <span class=\"kt\">int</span> <span class=\"n\">newNum</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span><span class=\"c1\">//保存差的数组\n</span><span class=\"c1\"></span>        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">SIGN</span> <span class=\"o\">==</span> <span class=\"n\">sub</span><span class=\"o\">.</span><span class=\"na\">SIGN</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//符号相同时\n</span><span class=\"c1\"></span>            <span class=\"k\">switch</span> <span class=\"o\">(</span><span class=\"n\">compareTo</span><span class=\"o\">(</span><span class=\"n\">sub</span><span class=\"o\">))</span> <span class=\"o\">{</span><span class=\"c1\">//比较大小\n</span><span class=\"c1\"></span>                <span class=\"k\">case</span> <span class=\"o\">-</span><span class=\"nl\">1:</span><span class=\"c1\">//小于\n</span><span class=\"c1\"></span>                    <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"sc\">&#39;-&#39;</span><span class=\"o\">;</span>\n                    <span class=\"k\">break</span><span class=\"o\">;</span>\n                <span class=\"k\">case</span> <span class=\"nl\">0:</span><span class=\"c1\">//等于\n</span><span class=\"c1\"></span>                    <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"sc\">&#39;+&#39;</span><span class=\"o\">;</span>\n                    <span class=\"n\">newNum</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">1</span><span class=\"o\">];</span>\n                    <span class=\"n\">newNum</span><span class=\"o\">[</span><span class=\"n\">0</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span>\n                    <span class=\"k\">break</span><span class=\"o\">;</span>\n                <span class=\"k\">case</span> <span class=\"nl\">1:</span><span class=\"c1\">//大于\n</span><span class=\"c1\"></span>                    <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"sc\">&#39;+&#39;</span><span class=\"o\">;</span>\n                    <span class=\"k\">break</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n            <span class=\"n\">newNum</span> <span class=\"o\">=</span> <span class=\"n\">subNum</span><span class=\"o\">(</span><span class=\"n\">NUM</span><span class=\"o\">,</span> <span class=\"n\">sub</span><span class=\"o\">.</span><span class=\"na\">NUM</span><span class=\"o\">);</span><span class=\"c1\">//调用减法\n</span><span class=\"c1\"></span>        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span><span class=\"c1\">//异号\n</span><span class=\"c1\"></span>            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">SIGN</span> <span class=\"o\">==</span> <span class=\"sc\">&#39;+&#39;</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"sc\">&#39;+&#39;</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n                <span class=\"n\">newNumSign</span> <span class=\"o\">=</span> <span class=\"sc\">&#39;-&#39;</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n            <span class=\"n\">newNum</span> <span class=\"o\">=</span> <span class=\"n\">addnum</span><span class=\"o\">(</span><span class=\"n\">NUM</span><span class=\"o\">,</span> <span class=\"n\">sub</span><span class=\"o\">.</span><span class=\"na\">NUM</span><span class=\"o\">);</span><span class=\"c1\">//调用加法\n</span><span class=\"c1\"></span>        <span class=\"o\">}</span>\n        <span class=\"n\">BigNum</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">BigNum</span><span class=\"o\">(</span><span class=\"n\">newNum</span><span class=\"o\">,</span> <span class=\"n\">newNumSign</span><span class=\"o\">);</span>\n        <span class=\"k\">return</span> <span class=\"n\">b</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"nf\">subNum</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">a</span><span class=\"o\">[],</span> <span class=\"kt\">int</span> <span class=\"n\">b</span><span class=\"o\">[])</span> <span class=\"o\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span><span class=\"c1\">//较大大数数组运算指针，指针均从右往左\n</span><span class=\"c1\"></span>        <span class=\"kt\">int</span> <span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span><span class=\"c1\">//较小大数数组运算指针\n</span><span class=\"c1\"></span>        <span class=\"kt\">int</span> <span class=\"n\">num</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span><span class=\"c1\">//余数组\n</span><span class=\"c1\"></span>        <span class=\"kt\">int</span> <span class=\"n\">big</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">;</span><span class=\"c1\">//保存较大数组，b保存较小数组\n</span><span class=\"c1\"></span>        <span class=\"kt\">int</span> <span class=\"n\">p3</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span><span class=\"c1\">//余数组指针\n</span><span class=\"c1\"></span>\n        <span class=\"k\">switch</span> <span class=\"o\">(</span><span class=\"n\">intArrCompaerTo</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">{</span><span class=\"c1\">//比较两个数组大小，使得big恒保存较大数组\n</span><span class=\"c1\"></span>            <span class=\"k\">case</span> <span class=\"o\">-</span><span class=\"nl\">1:</span><span class=\"c1\">//a小于b\n</span><span class=\"c1\"></span>                <span class=\"n\">big</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"o\">;</span>\n                <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">;</span>\n                <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"n\">big</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">-</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n                <span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">-</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n                <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">big</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">];</span>\n                <span class=\"n\">p3</span> <span class=\"o\">=</span> <span class=\"n\">num</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">-</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n                <span class=\"k\">break</span><span class=\"o\">;</span>\n            <span class=\"k\">case</span> <span class=\"nl\">0:</span><span class=\"c1\">//a=b，结果为零，直接返回\n</span><span class=\"c1\"></span>                <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">1</span><span class=\"o\">];</span>\n                <span class=\"n\">num</span><span class=\"o\">[</span><span class=\"n\">0</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span>\n                <span class=\"k\">return</span> <span class=\"n\">num</span><span class=\"o\">;</span>\n            <span class=\"k\">case</span> <span class=\"nl\">1:</span><span class=\"c1\">//a大于b\n</span><span class=\"c1\"></span>                <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"n\">big</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">-</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n                <span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">-</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n                <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">big</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">];</span>\n                <span class=\"n\">p3</span> <span class=\"o\">=</span> <span class=\"n\">num</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">-</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n                <span class=\"k\">break</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">for</span> <span class=\"o\">(;</span> <span class=\"n\">p1</span> <span class=\"o\">&gt;</span> <span class=\"o\">-</span><span class=\"n\">1</span><span class=\"o\">;</span> <span class=\"n\">p1</span><span class=\"o\">--)</span> <span class=\"o\">{</span><span class=\"c1\">//以大数组的长度来从右往左运算\n</span><span class=\"c1\"></span>            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">p2</span> <span class=\"o\">&lt;</span> <span class=\"n\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//当大数组还有数字而小数组没有后执行\n</span><span class=\"c1\"></span>                <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">big</span><span class=\"o\">[</span><span class=\"n\">p1</span><span class=\"o\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//如果当前位小于0，即在上一次循环中被借了一位，再往前借一次\n</span><span class=\"c1\"></span>                    <span class=\"n\">big</span><span class=\"o\">[</span><span class=\"n\">p1</span> <span class=\"o\">-</span> <span class=\"n\">1</span><span class=\"o\">]</span> <span class=\"o\">-=</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n                    <span class=\"n\">big</span><span class=\"o\">[</span><span class=\"n\">p1</span><span class=\"o\">]</span> <span class=\"o\">+=</span> <span class=\"n\">10</span><span class=\"o\">;</span>\n                <span class=\"o\">}</span>\n                <span class=\"n\">num</span><span class=\"o\">[</span><span class=\"n\">p3</span><span class=\"o\">--]</span> <span class=\"o\">=</span> <span class=\"n\">big</span><span class=\"o\">[</span><span class=\"n\">p1</span><span class=\"o\">];</span>\n            <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span><span class=\"c1\">//小数组还有数字\n</span><span class=\"c1\"></span>                <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">big</span><span class=\"o\">[</span><span class=\"n\">p1</span><span class=\"o\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">[</span><span class=\"n\">p2</span><span class=\"o\">])</span> <span class=\"o\">{</span><span class=\"c1\">//大数组的当前位小于小数组的当前位时借位\n</span><span class=\"c1\"></span>                    <span class=\"n\">big</span><span class=\"o\">[</span><span class=\"n\">p1</span> <span class=\"o\">-</span> <span class=\"n\">1</span><span class=\"o\">]</span> <span class=\"o\">-=</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n                    <span class=\"n\">big</span><span class=\"o\">[</span><span class=\"n\">p1</span><span class=\"o\">]</span> <span class=\"o\">+=</span> <span class=\"n\">10</span><span class=\"o\">;</span>\n                <span class=\"o\">}</span>\n                <span class=\"n\">num</span><span class=\"o\">[</span><span class=\"n\">p3</span><span class=\"o\">--]</span> <span class=\"o\">=</span> <span class=\"n\">big</span><span class=\"o\">[</span><span class=\"n\">p1</span><span class=\"o\">]</span> <span class=\"o\">-</span> <span class=\"n\">b</span><span class=\"o\">[</span><span class=\"n\">p2</span><span class=\"o\">--];</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">num</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span></code></pre></div><p></p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }, 
                {
                    "tag": "编程", 
                    "tagLink": "https://api.zhihu.com/topics/19554298"
                }, 
                {
                    "tag": "算法", 
                    "tagLink": "https://api.zhihu.com/topics/19553510"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/28542444", 
            "userName": "black", 
            "userLink": "https://www.zhihu.com/people/498a68ceba804b2d2198fab3d8f444fe", 
            "upvote": 4, 
            "title": "java大数算法完成五则运算之类基础", 
            "content": "<p>      大家好，我是black，这是我专栏的第一篇文章，说点啥呢，专栏的目的就是分享和展示自己的思想和价值技术，我当然也不例外，这应该是我想要做这个专栏的最初的冲动原因吧。</p><p>       回到正题，之所以会做用算法做大数的四则运算是因为在参加蓝桥杯比赛的时候被两道大数题给坑惨了，因为训练的时候没做过大数的题，在这上面吃了大亏，回来后痛定思痛，在网上找了一些方法，才发现有BigDecimal和BigInteger这两个api类可以完美解决我的问题，我自然很好奇，于是在网上找到了这两个类的源码来看，结果越看越头痛，整个源码没法在我心中有一个完整的结构，后来突然内心一动，为什么不自己来写一个类似的api类呢？这个想法出来后就在心里一发不可收拾，越加无法控制，说动就动。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>类名：BigNum</p><p>功能：实现整数大数的五则运算，同时该类使用了Comparable接口，可以进行排序比较</p><p>属性：</p><ol><li>NUM：存放表示大数的数组</li><li>SIGN：存放大数的正负号</li><li>DIGITS：存放大数的位数</li><li>所有属性均为final，不可修改</li></ol><p>构造方法：</p><ol><li>BigNum(String number);使用传入的字符串转换成int型数组，会过滤掉开头的零和非数字以及非正负号以外的其它所有符号，会忽略小数点及小数点后的所有字符，以最后一次出现的“-”“+”为该大数符号，如未指定则默认为“+”，如果字符串为null或空将会抛出异常</li><li>BigNum(int[] numArr, char sign);过滤传入的int型数组的开头的零，传给NUM，如果数组中的数字超过一位将拆分为多位数，将sign传给SIGN，如果numArr为空，或者sign不为正负号将抛出异常</li></ol><p>主要方法：</p><ol><li>add：加</li><li>sub：减</li><li>mul：乘</li><li>div：除</li><li>rem：取余</li><li>以及一些具体做运算的方法，将在讲到加减乘除这些方法时一并讲</li></ol><p>其它方法：</p><ol><li>public static int[] stringToIntArr(String s)；将传入的字符串转换成int数组，该方法为静态方法，会过滤掉开头的零和非数字，会忽略小数点及小数点后的所有字符。</li><li>public static String intArrToString(int arr[])；将传入的int数组转换成字符串，该方法为静态方法。</li><li>public int compareTo(BigNum num)；比较两个bignum对象的大小，包括符号，若当前对象小于，等于，大于num，则返回负整数，零，正整数</li><li>private int ArrCompare(int a[], int b[])；大数数组同位数下比较大小，无符号，若a小于，等于，大于b，则返回负整数，零，正整数</li><li>private int intArrCompaerTo(int numA[], int numB[])；判断两个大数数组的大小,无符号,若numA小于，等于，大于numB，则返回负整数，零，正整数</li><li>public String toString()；重写toString，将NUM数组转换成字符串，同时在前面加上符号，正号默认不加。</li></ol><p>贴上代码：</p><div class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">BigNum</span> <span class=\"kd\">implements</span> <span class=\"n\">Comparable</span><span class=\"o\">&lt;</span><span class=\"n\">BigNum</span><span class=\"o\">&gt;</span> <span class=\"o\">{</span>\n\n    <span class=\"cm\">/**\n</span><span class=\"cm\">     * 表示大数的数组\n</span><span class=\"cm\">     */</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">final</span> <span class=\"kt\">int</span> <span class=\"n\">NUM</span><span class=\"o\">[];</span>\n    <span class=\"cm\">/**\n</span><span class=\"cm\">     * 表示大数的正负号\n</span><span class=\"cm\">     */</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">final</span> <span class=\"kt\">char</span> <span class=\"n\">SIGN</span><span class=\"o\">;</span>\n    <span class=\"cm\">/**\n</span><span class=\"cm\">     * 表示大数的位数\n</span><span class=\"cm\">     */</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">final</span> <span class=\"kt\">int</span> <span class=\"n\">DIGITS</span><span class=\"o\">;</span>\n\n    <span class=\"kd\">public</span> <span class=\"nf\">BigNum</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">number</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">Exception</span> <span class=\"o\">{</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">number</span> <span class=\"o\">==</span> <span class=\"kc\">null</span> <span class=\"o\">||</span> <span class=\"n\">number</span> <span class=\"o\">==</span><span class=\"s\">&#34;&#34;</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"n\">Exception</span><span class=\"o\">(</span><span class=\"s\">&#34;字符串为空！&#34;</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n        <span class=\"kt\">char</span> <span class=\"n\">numChar</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"n\">number</span><span class=\"o\">.</span><span class=\"na\">toCharArray</span><span class=\"o\">();</span>\n        <span class=\"kt\">char</span> <span class=\"n\">sign</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span>\n        <span class=\"c1\">//从左往右获取输入的值\n</span><span class=\"c1\"></span>        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">numChar</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"c1\">//设置大数正负号，以最后一个符号为准\n</span><span class=\"c1\"></span>            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">numChar</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">==</span> <span class=\"n\">43</span> <span class=\"o\">||</span> <span class=\"n\">numChar</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">==</span> <span class=\"n\">45</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">sign</span> <span class=\"o\">=</span> <span class=\"n\">numChar</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">];</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">sign</span> <span class=\"o\">==</span> <span class=\"n\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">sign</span> <span class=\"o\">=</span> <span class=\"sc\">&#39;+&#39;</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"n\">NUM</span> <span class=\"o\">=</span> <span class=\"n\">stringToIntArr</span><span class=\"o\">(</span><span class=\"n\">number</span><span class=\"o\">);</span>\n        <span class=\"n\">SIGN</span> <span class=\"o\">=</span> <span class=\"n\">sign</span><span class=\"o\">;</span>\n        <span class=\"n\">DIGITS</span> <span class=\"o\">=</span> <span class=\"n\">NUM</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"nf\">BigNum</span><span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"n\">numArr</span><span class=\"o\">,</span> <span class=\"kt\">char</span> <span class=\"n\">sign</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">Exception</span> <span class=\"o\">{</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">numArr</span> <span class=\"o\">==</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"n\">Exception</span><span class=\"o\">(</span><span class=\"s\">&#34;数组为空！&#34;</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">sign</span> <span class=\"o\">!=</span> <span class=\"sc\">&#39;-&#39;</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">sign</span> <span class=\"o\">!=</span> <span class=\"sc\">&#39;+&#39;</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"n\">Exception</span><span class=\"o\">(</span><span class=\"s\">&#34;符号错误！非正负号！&#34;</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n        <span class=\"n\">SIGN</span> <span class=\"o\">=</span> <span class=\"n\">sign</span><span class=\"o\">;</span>\n        <span class=\"n\">NUM</span> <span class=\"o\">=</span> <span class=\"n\">stringToIntArr</span><span class=\"o\">(</span><span class=\"n\">intArrToString</span><span class=\"o\">(</span><span class=\"n\">numArr</span><span class=\"o\">));</span>\n        <span class=\"n\">DIGITS</span> <span class=\"o\">=</span> <span class=\"n\">NUM</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"nf\">stringToIntArr</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kt\">char</span> <span class=\"n\">numChar</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"na\">toCharArray</span><span class=\"o\">();</span>\n        <span class=\"n\">StringBuilder</span> <span class=\"n\">sb</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">StringBuilder</span><span class=\"o\">();</span>\n        <span class=\"kt\">boolean</span> <span class=\"n\">flag</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"o\">;</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">numChar</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span><span class=\"c1\">//从左往右获取输入的值\n</span><span class=\"c1\"></span>            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">numChar</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">==</span> <span class=\"n\">48</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">flag</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//过滤掉开头的零\n</span><span class=\"c1\"></span>                <span class=\"k\">continue</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">numChar</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">==</span> <span class=\"n\">46</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//忽略小数点&#39;.&#39;后的值\n</span><span class=\"c1\"></span>                <span class=\"k\">break</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">numChar</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">47</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">numChar</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">58</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//过滤掉非数字\n</span><span class=\"c1\"></span>                <span class=\"n\">flag</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><span class=\"o\">;</span>\n                <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"na\">append</span><span class=\"o\">(</span><span class=\"n\">numChar</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]);</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">flag</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"na\">append</span><span class=\"o\">(</span><span class=\"s\">&#34;0&#34;</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n        <span class=\"kt\">char</span> <span class=\"n\">tempCharArr</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">().</span><span class=\"na\">toCharArray</span><span class=\"o\">();</span>\n        <span class=\"kt\">int</span> <span class=\"n\">num</span><span class=\"o\">[]</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">int</span><span class=\"o\">[</span><span class=\"n\">tempCharArr</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">];</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span> <span class=\"n\">j</span> <span class=\"o\">&lt;</span> <span class=\"n\">num</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">j</span><span class=\"o\">++)</span> <span class=\"o\">{</span><span class=\"c1\">//将获取到的数字从char转换成int\n</span><span class=\"c1\"></span>            <span class=\"n\">num</span><span class=\"o\">[</span><span class=\"n\">j</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">Integer</span><span class=\"o\">.</span><span class=\"na\">valueOf</span><span class=\"o\">(</span><span class=\"s\">&#34;&#34;</span> <span class=\"o\">+</span> <span class=\"n\">tempCharArr</span><span class=\"o\">[</span><span class=\"n\">j</span><span class=\"o\">]);</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">num</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"n\">String</span> <span class=\"nf\">intArrToString</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">arr</span><span class=\"o\">[])</span> <span class=\"o\">{</span>\n        <span class=\"n\">StringBuilder</span> <span class=\"n\">sb</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">StringBuilder</span><span class=\"o\">(</span><span class=\"n\">arr</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">);</span>\n        <span class=\"kt\">boolean</span> <span class=\"n\">flag</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"o\">;</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">arr</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"n\">0</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">flag</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//过滤掉开头的零\n</span><span class=\"c1\"></span>                <span class=\"k\">continue</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n            <span class=\"n\">flag</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><span class=\"o\">;</span>\n            <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"na\">append</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">flag</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"na\">append</span><span class=\"o\">(</span><span class=\"s\">&#34;0&#34;</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">sb</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">();</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"cm\">/**\n</span><span class=\"cm\">     * 比较两个bignum对象的大小，包括符号。\n</span><span class=\"cm\">     * 若当前对象小于，等于，大于比较对象，则返回负整数，零，正整数\n</span><span class=\"cm\">     *\n</span><span class=\"cm\">     * @param num\n</span><span class=\"cm\">     * @return\n</span><span class=\"cm\">     */</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">compareTo</span><span class=\"o\">(</span><span class=\"n\">BigNum</span> <span class=\"n\">num</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"k\">this</span> <span class=\"o\">==</span> <span class=\"n\">num</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">return</span> <span class=\"n\">0</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">num</span> <span class=\"o\">==</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">return</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">SIGN</span> <span class=\"o\">&lt;</span> <span class=\"n\">num</span><span class=\"o\">.</span><span class=\"na\">SIGN</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//当前对象正号      +号的ascll为43，-号为45  \n</span><span class=\"c1\"></span>            <span class=\"k\">return</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">SIGN</span> <span class=\"o\">&gt;</span> <span class=\"n\">num</span><span class=\"o\">.</span><span class=\"na\">SIGN</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//当前对象负号\n</span><span class=\"c1\"></span>            <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"n\">1</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span><span class=\"c1\">//同号\n</span><span class=\"c1\"></span>            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">SIGN</span> <span class=\"o\">==</span> <span class=\"sc\">&#39;+&#39;</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//同正\n</span><span class=\"c1\"></span>                <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">DIGITS</span> <span class=\"o\">&gt;</span> <span class=\"n\">num</span><span class=\"o\">.</span><span class=\"na\">DIGITS</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//位数大\n</span><span class=\"c1\"></span>                    <span class=\"k\">return</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n                <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">DIGITS</span> <span class=\"o\">&lt;</span> <span class=\"n\">num</span><span class=\"o\">.</span><span class=\"na\">DIGITS</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//位数小\n</span><span class=\"c1\"></span>                    <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"n\">1</span><span class=\"o\">;</span>\n                <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span><span class=\"c1\">//位数相同\n</span><span class=\"c1\"></span>                    <span class=\"k\">return</span> <span class=\"n\">ArrCompare</span><span class=\"o\">(</span><span class=\"n\">NUM</span><span class=\"o\">,</span> <span class=\"n\">num</span><span class=\"o\">.</span><span class=\"na\">NUM</span><span class=\"o\">);</span>\n                <span class=\"o\">}</span>\n            <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span><span class=\"c1\">//同负，结果全部取反\n</span><span class=\"c1\"></span>                <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">DIGITS</span> <span class=\"o\">&gt;</span> <span class=\"n\">num</span><span class=\"o\">.</span><span class=\"na\">DIGITS</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//位数大\n</span><span class=\"c1\"></span>                    <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"n\">1</span><span class=\"o\">;</span>\n                <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">DIGITS</span> <span class=\"o\">&lt;</span> <span class=\"n\">num</span><span class=\"o\">.</span><span class=\"na\">DIGITS</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"c1\">//位数小\n</span><span class=\"c1\"></span>                    <span class=\"k\">return</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n                <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span><span class=\"c1\">//位数相同\n</span><span class=\"c1\"></span>                    <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"n\">1</span> <span class=\"o\">*</span> <span class=\"n\">ArrCompare</span><span class=\"o\">(</span><span class=\"n\">NUM</span><span class=\"o\">,</span> <span class=\"n\">num</span><span class=\"o\">.</span><span class=\"na\">NUM</span><span class=\"o\">);</span>\n                <span class=\"o\">}</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"cm\">/**\n</span><span class=\"cm\">     * 大数数组同位数下比较大小，无符号。\n</span><span class=\"cm\">     * 若a小于，等于，大于b，则返回负整数，零，正整数\n</span><span class=\"cm\">     *\n</span><span class=\"cm\">     * @param a\n</span><span class=\"cm\">     * @param b\n</span><span class=\"cm\">     * @return\n</span><span class=\"cm\">     */</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"nf\">ArrCompare</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">a</span><span class=\"o\">[],</span> <span class=\"kt\">int</span> <span class=\"n\">b</span><span class=\"o\">[])</span> <span class=\"o\">{</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">b</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">])</span> <span class=\"o\">{</span>\n                <span class=\"k\">return</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">])</span> <span class=\"o\">{</span>\n                <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"n\">1</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">0</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"cm\">/**\n</span><span class=\"cm\">     * 判断两个大数数组的大小,无符号。\n</span><span class=\"cm\">     * 若当前数组小于，等于，大于比较数组，则返回负整数，零，正整数\n</span><span class=\"cm\">     *\n</span><span class=\"cm\">     * @param numArr\n</span><span class=\"cm\">     * @return\n</span><span class=\"cm\">     */</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"nf\">intArrCompaerTo</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">numA</span><span class=\"o\">[],</span> <span class=\"kt\">int</span> <span class=\"n\">numB</span><span class=\"o\">[])</span> <span class=\"o\">{</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">numA</span> <span class=\"o\">==</span> <span class=\"n\">numB</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">return</span> <span class=\"n\">0</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">numA</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">&gt;</span> <span class=\"n\">numB</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">return</span> <span class=\"n\">1</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">numA</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">&lt;</span> <span class=\"n\">numB</span><span class=\"o\">.</span><span class=\"na\">length</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"n\">1</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n            <span class=\"k\">return</span> <span class=\"n\">ArrCompare</span><span class=\"o\">(</span><span class=\"n\">numA</span><span class=\"o\">,</span> <span class=\"n\">numB</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">toString</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"o\">(</span><span class=\"n\">SIGN</span> <span class=\"o\">==</span> <span class=\"sc\">&#39;+&#39;</span> <span class=\"o\">?</span> <span class=\"s\">&#34;&#34;</span> <span class=\"o\">:</span> <span class=\"n\">SIGN</span><span class=\"o\">)</span> <span class=\"o\">+</span> <span class=\"n\">intArrToString</span><span class=\"o\">(</span><span class=\"n\">NUM</span><span class=\"o\">);</span><span class=\"c1\">//忽略正号\n</span><span class=\"c1\"></span>    <span class=\"o\">}</span></code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>最后，为了避免太长，我将会写成一个系列~~请关注本专栏后续的大数运算系列，接下来将会对五则运算逐个详解（其实是为了多两篇文章。。。）</p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }, 
                {
                    "tag": "算法", 
                    "tagLink": "https://api.zhihu.com/topics/19553510"
                }, 
                {
                    "tag": "编程", 
                    "tagLink": "https://api.zhihu.com/topics/19554298"
                }
            ], 
            "comments": []
        }
    ], 
    "url": "https://zhuanlan.zhihu.com/java-of-black"
}

{
    "title": "Apollo18号", 
    "description": "Apollo是一个开放的、完整的、安全的平台，助力自动驾驶行业发展。在“Apollo18号”专栏我们会发布汽车及自动驾驶的相关技术文章、活动等信息，分享并创造一个讨论自动驾驶未来的平台。", 
    "followers": [
        "https://www.zhihu.com/people/zhou-dazhi", 
        "https://www.zhihu.com/people/xiao-xiong-juan-juan-51", 
        "https://www.zhihu.com/people/chu-tian-shu-8-3", 
        "https://www.zhihu.com/people/annie-21-46", 
        "https://www.zhihu.com/people/Junyi_Ji", 
        "https://www.zhihu.com/people/chen-hao-69-14", 
        "https://www.zhihu.com/people/zxs-95-52", 
        "https://www.zhihu.com/people/zhang-lin-hao-3", 
        "https://www.zhihu.com/people/wu-peng-ju-42", 
        "https://www.zhihu.com/people/huang-he-zan-52", 
        "https://www.zhihu.com/people/skylerchan", 
        "https://www.zhihu.com/people/frank-huang-17", 
        "https://www.zhihu.com/people/xys-55-68", 
        "https://www.zhihu.com/people/hoffman-29", 
        "https://www.zhihu.com/people/ni-kan-dao-wo-de-xiao-xiong-liao-ma-3", 
        "https://www.zhihu.com/people/larrymusk", 
        "https://www.zhihu.com/people/yier-san-si-27", 
        "https://www.zhihu.com/people/foxever", 
        "https://www.zhihu.com/people/lan-lan-23-25", 
        "https://www.zhihu.com/people/shi-kong-chuan-suo-64", 
        "https://www.zhihu.com/people/alex-73-8-6", 
        "https://www.zhihu.com/people/chen-zhen-yu-69", 
        "https://www.zhihu.com/people/chen-bo-bo-20", 
        "https://www.zhihu.com/people/error-server", 
        "https://www.zhihu.com/people/asher-yu", 
        "https://www.zhihu.com/people/li-fei-23-19", 
        "https://www.zhihu.com/people/shui-mu-qing-hua-88-16", 
        "https://www.zhihu.com/people/san-mao-92-82", 
        "https://www.zhihu.com/people/yang-jiang-hua-23", 
        "https://www.zhihu.com/people/wujupi", 
        "https://www.zhihu.com/people/peng-chen-75-36", 
        "https://www.zhihu.com/people/qiu-shi-04-25", 
        "https://www.zhihu.com/people/liang-bei-bei-97-83", 
        "https://www.zhihu.com/people/xinghaitec", 
        "https://www.zhihu.com/people/zhong-you-dong", 
        "https://www.zhihu.com/people/tan-hao-72-88", 
        "https://www.zhihu.com/people/jin-tian-33-40", 
        "https://www.zhihu.com/people/zhang-shu-63", 
        "https://www.zhihu.com/people/neal-liu-31", 
        "https://www.zhihu.com/people/wang-li-yun-93", 
        "https://www.zhihu.com/people/ting-mabu", 
        "https://www.zhihu.com/people/wang-kai-ming-11", 
        "https://www.zhihu.com/people/beyond-43-32", 
        "https://www.zhihu.com/people/klar-81", 
        "https://www.zhihu.com/people/seekxi-ke", 
        "https://www.zhihu.com/people/lai-ri-fang-chang-61-77", 
        "https://www.zhihu.com/people/wen-fu-12-40", 
        "https://www.zhihu.com/people/lam-lam-54", 
        "https://www.zhihu.com/people/y-y-61-45", 
        "https://www.zhihu.com/people/L-guorong", 
        "https://www.zhihu.com/people/xxxs-89", 
        "https://www.zhihu.com/people/lewen-mu", 
        "https://www.zhihu.com/people/yang-jie-10", 
        "https://www.zhihu.com/people/lei-da-83-22", 
        "https://www.zhihu.com/people/mo-xiao-63-90", 
        "https://www.zhihu.com/people/wang-xi-86-50", 
        "https://www.zhihu.com/people/shawnfei", 
        "https://www.zhihu.com/people/yang-gen-92-35", 
        "https://www.zhihu.com/people/wang-ning-71-98", 
        "https://www.zhihu.com/people/hema_", 
        "https://www.zhihu.com/people/yaphets-80", 
        "https://www.zhihu.com/people/zhi-zhang-xiao-xiao-qi", 
        "https://www.zhihu.com/people/tang-jun-feng-72", 
        "https://www.zhihu.com/people/mou-mou-mou-", 
        "https://www.zhihu.com/people/mo-mo-xiong-13-78", 
        "https://www.zhihu.com/people/li-jing-ying-36-35", 
        "https://www.zhihu.com/people/allen-63-98-62", 
        "https://www.zhihu.com/people/sheng-gao", 
        "https://www.zhihu.com/people/sky-63-72-8", 
        "https://www.zhihu.com/people/buzzzlightyear", 
        "https://www.zhihu.com/people/lyu-76", 
        "https://www.zhihu.com/people/yuan-shun-bao", 
        "https://www.zhihu.com/people/nphs", 
        "https://www.zhihu.com/people/jht1759", 
        "https://www.zhihu.com/people/xu-qing-86", 
        "https://www.zhihu.com/people/liu-zong-dai", 
        "https://www.zhihu.com/people/feng-qing-69", 
        "https://www.zhihu.com/people/luo-kai-yi-30", 
        "https://www.zhihu.com/people/seasoul-40", 
        "https://www.zhihu.com/people/www.xuqisen.com", 
        "https://www.zhihu.com/people/yang-yang-51-21", 
        "https://www.zhihu.com/people/cong-william-34", 
        "https://www.zhihu.com/people/liu-xi-ming-5-97", 
        "https://www.zhihu.com/people/zhan-mu-si-91", 
        "https://www.zhihu.com/people/sangshuduo", 
        "https://www.zhihu.com/people/hyl13", 
        "https://www.zhihu.com/people/dou-fu-hua-78-48", 
        "https://www.zhihu.com/people/mr-edward-88", 
        "https://www.zhihu.com/people/hai-bao-5-53", 
        "https://www.zhihu.com/people/wang-ming-66-71", 
        "https://www.zhihu.com/people/wang-qi-51", 
        "https://www.zhihu.com/people/tan-26-98", 
        "https://www.zhihu.com/people/xxxxxxooooo", 
        "https://www.zhihu.com/people/day-may-99", 
        "https://www.zhihu.com/people/xia-you-dao-21", 
        "https://www.zhihu.com/people/wgw0415", 
        "https://www.zhihu.com/people/hh-zz-77-1", 
        "https://www.zhihu.com/people/baron924", 
        "https://www.zhihu.com/people/jiang-yuan-qing-73", 
        "https://www.zhihu.com/people/ye-cha-4", 
        "https://www.zhihu.com/people/cai-shao-jun-6", 
        "https://www.zhihu.com/people/yang-ian-65", 
        "https://www.zhihu.com/people/driftking-10", 
        "https://www.zhihu.com/people/tao_tie", 
        "https://www.zhihu.com/people/hustxiao-cai-niao", 
        "https://www.zhihu.com/people/yu-xjie", 
        "https://www.zhihu.com/people/ye-ling-1", 
        "https://www.zhihu.com/people/da-ci-bei-zhe", 
        "https://www.zhihu.com/people/su-feng-yu-5", 
        "https://www.zhihu.com/people/jia-gong-zi-50", 
        "https://www.zhihu.com/people/jun.zeng.x14", 
        "https://www.zhihu.com/people/wang-slam", 
        "https://www.zhihu.com/people/zhang-yan-fu-9-71", 
        "https://www.zhihu.com/people/sodas", 
        "https://www.zhihu.com/people/hao-ren-79-93", 
        "https://www.zhihu.com/people/zhou-kemu-41-47", 
        "https://www.zhihu.com/people/xieyuesong", 
        "https://www.zhihu.com/people/sid-zeng-32", 
        "https://www.zhihu.com/people/lgc-44-20", 
        "https://www.zhihu.com/people/zhang-ji-qi-99", 
        "https://www.zhihu.com/people/chena-18", 
        "https://www.zhihu.com/people/miao-666miao-666", 
        "https://www.zhihu.com/people/chen-jia-hao-64-50", 
        "https://www.zhihu.com/people/long-shao-42-72", 
        "https://www.zhihu.com/people/cui-colby", 
        "https://www.zhihu.com/people/xuwei0221", 
        "https://www.zhihu.com/people/ju-shang-38", 
        "https://www.zhihu.com/people/wang-shi-tou-57", 
        "https://www.zhihu.com/people/inki-40-30", 
        "https://www.zhihu.com/people/wang-meng-ya-68", 
        "https://www.zhihu.com/people/yiiwood", 
        "https://www.zhihu.com/people/wang-shuai-jun-66", 
        "https://www.zhihu.com/people/leslie-33-96", 
        "https://www.zhihu.com/people/liu-zi-shuai-84", 
        "https://www.zhihu.com/people/lin-ming-33-56", 
        "https://www.zhihu.com/people/li-hang-66-82", 
        "https://www.zhihu.com/people/shi-tou-26-50-7", 
        "https://www.zhihu.com/people/zhu-xing-yu-72-10", 
        "https://www.zhihu.com/people/casperwin", 
        "https://www.zhihu.com/people/rancho-98-64", 
        "https://www.zhihu.com/people/chen-quan-77-72", 
        "https://www.zhihu.com/people/Ni_Guo_Chen", 
        "https://www.zhihu.com/people/mang-guo-guo-guo-59-24", 
        "https://www.zhihu.com/people/li-bing-39", 
        "https://www.zhihu.com/people/shan-ding-ye-ren", 
        "https://www.zhihu.com/people/gouchaoer", 
        "https://www.zhihu.com/people/DrAuto", 
        "https://www.zhihu.com/people/li-xiao-78-51", 
        "https://www.zhihu.com/people/yan-wu-60-56", 
        "https://www.zhihu.com/people/wang-xiao-hu-27-48", 
        "https://www.zhihu.com/people/llllllllll-80", 
        "https://www.zhihu.com/people/jack-sa", 
        "https://www.zhihu.com/people/wang-tian-ge-ge", 
        "https://www.zhihu.com/people/motorBanana", 
        "https://www.zhihu.com/people/jacky-87-43-8", 
        "https://www.zhihu.com/people/fagul", 
        "https://www.zhihu.com/people/yycc-2", 
        "https://www.zhihu.com/people/music-14-44", 
        "https://www.zhihu.com/people/leo-lee-1", 
        "https://www.zhihu.com/people/jack-fan-76-54", 
        "https://www.zhihu.com/people/tian-kong-9-1", 
        "https://www.zhihu.com/people/wu-jia-xi-12-6", 
        "https://www.zhihu.com/people/yu-yu-yu-yu-yu-63-75", 
        "https://www.zhihu.com/people/hierarch-30", 
        "https://www.zhihu.com/people/wei-qiang-72-84", 
        "https://www.zhihu.com/people/yuan-xing-ke-17-46", 
        "https://www.zhihu.com/people/xie-xiao-xiao-8", 
        "https://www.zhihu.com/people/andrew-wang-88", 
        "https://www.zhihu.com/people/hua-jian-yihu-jiu-16-74", 
        "https://www.zhihu.com/people/PU1043", 
        "https://www.zhihu.com/people/jluautolab", 
        "https://www.zhihu.com/people/xiang-zhi-dao-de-geng-duo-79", 
        "https://www.zhihu.com/people/yildhd-wang", 
        "https://www.zhihu.com/people/qiao-hai-jun", 
        "https://www.zhihu.com/people/lang-ya-30-36", 
        "https://www.zhihu.com/people/steve-pod", 
        "https://www.zhihu.com/people/zhang-ding-kun-81", 
        "https://www.zhihu.com/people/yangdaiyu123", 
        "https://www.zhihu.com/people/xiao-ming-92-36-38", 
        "https://www.zhihu.com/people/chunlei-yi", 
        "https://www.zhihu.com/people/yang-zhen-nan-96", 
        "https://www.zhihu.com/people/dui-jiao-xiang-18", 
        "https://www.zhihu.com/people/zhang-shuo-75-45", 
        "https://www.zhihu.com/people/will-67-94", 
        "https://www.zhihu.com/people/yuercl", 
        "https://www.zhihu.com/people/fu-xiao-47-20", 
        "https://www.zhihu.com/people/mr-f-67-68", 
        "https://www.zhihu.com/people/xie-an-ping", 
        "https://www.zhihu.com/people/fu-ben-xu-19", 
        "https://www.zhihu.com/people/vincent-62-30-39", 
        "https://www.zhihu.com/people/liudaoxianren", 
        "https://www.zhihu.com/people/dan-ke-59-14", 
        "https://www.zhihu.com/people/wu-kong-j", 
        "https://www.zhihu.com/people/pipi_genius", 
        "https://www.zhihu.com/people/linpan-25-98", 
        "https://www.zhihu.com/people/jiang-wu-41", 
        "https://www.zhihu.com/people/chen-zi-qian-78-80", 
        "https://www.zhihu.com/people/fiona-28-79", 
        "https://www.zhihu.com/people/xia-mu-38", 
        "https://www.zhihu.com/people/sword0227", 
        "https://www.zhihu.com/people/robert-wu-50", 
        "https://www.zhihu.com/people/wu-dong-yuan-60", 
        "https://www.zhihu.com/people/tzyuan", 
        "https://www.zhihu.com/people/mou-ren-53-3", 
        "https://www.zhihu.com/people/jax-59", 
        "https://www.zhihu.com/people/zhang-qin-sheng-sheng", 
        "https://www.zhihu.com/people/YangDRDreamWorld", 
        "https://www.zhihu.com/people/li-zhi-long-92-10", 
        "https://www.zhihu.com/people/yang-tong-xue-25-31", 
        "https://www.zhihu.com/people/mafiaw", 
        "https://www.zhihu.com/people/hu-rui-49-66", 
        "https://www.zhihu.com/people/wang-hao-cheng-71", 
        "https://www.zhihu.com/people/bao-shi-jie-da-66", 
        "https://www.zhihu.com/people/liu-yi-25-60", 
        "https://www.zhihu.com/people/yang-zhen-xuan-98", 
        "https://www.zhihu.com/people/xueerzhizhi", 
        "https://www.zhihu.com/people/zou-lu-96-93", 
        "https://www.zhihu.com/people/iyunye", 
        "https://www.zhihu.com/people/xiao-mai-bu-zuo-ji-plus", 
        "https://www.zhihu.com/people/weng-gong-yu", 
        "https://www.zhihu.com/people/wang-he-zhang", 
        "https://www.zhihu.com/people/Z_plusplus", 
        "https://www.zhihu.com/people/joewang-38", 
        "https://www.zhihu.com/people/michael-zhou-7", 
        "https://www.zhihu.com/people/WangLi_ShangHai", 
        "https://www.zhihu.com/people/yan-shi-tao-13", 
        "https://www.zhihu.com/people/mo-xue-37-89", 
        "https://www.zhihu.com/people/cowseden", 
        "https://www.zhihu.com/people/huang-zi-shan-14-83", 
        "https://www.zhihu.com/people/wang-an-zhi-45-26", 
        "https://www.zhihu.com/people/harry-1-54-91", 
        "https://www.zhihu.com/people/fan-shi-wei-13-62", 
        "https://www.zhihu.com/people/zhi-shi-61-26", 
        "https://www.zhihu.com/people/ming-shu-3", 
        "https://www.zhihu.com/people/wellp-c", 
        "https://www.zhihu.com/people/lambcui", 
        "https://www.zhihu.com/people/ji-yan-wei-54", 
        "https://www.zhihu.com/people/li-ficy", 
        "https://www.zhihu.com/people/jackxuforward", 
        "https://www.zhihu.com/people/liuermaomao", 
        "https://www.zhihu.com/people/jiang-tao-72", 
        "https://www.zhihu.com/people/232007", 
        "https://www.zhihu.com/people/suyang-34-4", 
        "https://www.zhihu.com/people/csocheng", 
        "https://www.zhihu.com/people/tina-61-84", 
        "https://www.zhihu.com/people/jabari", 
        "https://www.zhihu.com/people/sheng-ji-chen", 
        "https://www.zhihu.com/people/pan-nan-xing", 
        "https://www.zhihu.com/people/iMenng", 
        "https://www.zhihu.com/people/zhang-mr-95", 
        "https://www.zhihu.com/people/huang-mao-mao-61-40", 
        "https://www.zhihu.com/people/lucillegyl", 
        "https://www.zhihu.com/people/eric-chen-16-85", 
        "https://www.zhihu.com/people/your-song-56", 
        "https://www.zhihu.com/people/hang-hang-5-79", 
        "https://www.zhihu.com/people/xie-hai-68-79", 
        "https://www.zhihu.com/people/paul-cheng-75", 
        "https://www.zhihu.com/people/lj1996", 
        "https://www.zhihu.com/people/xli-zhong-li-zhong", 
        "https://www.zhihu.com/people/robby-robby", 
        "https://www.zhihu.com/people/peter9606", 
        "https://www.zhihu.com/people/cathy-99-55", 
        "https://www.zhihu.com/people/jin-qi-16-57", 
        "https://www.zhihu.com/people/liu-zhen-77-82", 
        "https://www.zhihu.com/people/ha-ha-97-12", 
        "https://www.zhihu.com/people/zhu-zhi-jun-17", 
        "https://www.zhihu.com/people/ye-yan-68", 
        "https://www.zhihu.com/people/zhang-han-yi", 
        "https://www.zhihu.com/people/lin-can-sheng", 
        "https://www.zhihu.com/people/taotao-39", 
        "https://www.zhihu.com/people/vvs5680", 
        "https://www.zhihu.com/people/guo-manto", 
        "https://www.zhihu.com/people/jia-wu-33", 
        "https://www.zhihu.com/people/cocoya-73", 
        "https://www.zhihu.com/people/yin-h", 
        "https://www.zhihu.com/people/wukongcode", 
        "https://www.zhihu.com/people/zhangchao-84", 
        "https://www.zhihu.com/people/zhu-bin-99-50", 
        "https://www.zhihu.com/people/jie-feng-bo", 
        "https://www.zhihu.com/people/mike-magic-28", 
        "https://www.zhihu.com/people/xiao-qi-e-77-51"
    ], 
    "article": [
        {
            "url": "https://zhuanlan.zhihu.com/p/53224329", 
            "userName": "冯宗宝", 
            "userLink": "https://www.zhihu.com/people/f45590a219abdb40ca49864c057d8f10", 
            "upvote": 4, 
            "title": "Apollo传感器网络配置、数据验证、传感器标定", 
            "content": "<p>在完成了车辆适配后，接下来第二阶段就需要校验网络配置是否完整，传感器数据是否正常，最后通过标定传感器让系统完整地运行起来。</p><h2>设备权限</h2><p>在引入新的硬件设备过程中，由于需要将设备映射到docker环境中，所以设备的挂载很重要，权限是个重要的问题：1、需要让设备在docker；2、有可以读写的权限；所以需要用到udev的设备挂载机制。可以参考如下的配置，为你的新设备增加新的规则：</p><div class=\"highlight\"><pre><code class=\"language-text\">SUBSYSTEM==&#34;tty&#34;, SUBSYSTEMS==&#34;usb-serial&#34;, DRIVERS==&#34;novatel_gps&#34;, ATTRS{port_number}==&#34;0&#34;, MODE=&#34;0666&#34;, SYMLINK+=&#34;novatel0&#34;, OWNER=&#34;apollo&#34;, GROUP=&#34;apollo&#34;\nSUBSYSTEM==&#34;tty&#34;, SUBSYSTEMS==&#34;usb-serial&#34;, DRIVERS==&#34;novatel_gps&#34;, ATTRS{port_number}==&#34;1&#34;, MODE=&#34;0666&#34;, SYMLINK+=&#34;novatel1&#34;, OWNER=&#34;apollo&#34;, GROUP=&#34;apollo&#34;\nSUBSYSTEM==&#34;tty&#34;, SUBSYSTEMS==&#34;usb-serial&#34;, DRIVERS==&#34;novatel_gps&#34;, ATTRS{port_number}==&#34;2&#34;, MODE=&#34;0666&#34;, SYMLINK+=&#34;novatel2&#34;, OWNER=&#34;apollo&#34;, GROUP=&#34;apollo&#34;</code></pre></div><blockquote>udev 添加Udev规则，让Linux自动挂载U盘「或你的其他设备」可以参考：<a href=\"https://link.zhihu.com/?target=https%3A//blog.csdn.net/jchen1218/article/details/12948851\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">添加Udev规则，让Linux自动挂载U盘（转载） - 陈建的专栏 - CSDN博客</a></blockquote><p class=\"ztext-empty-paragraph\"><br/></p><h2>GPS+IMU</h2><p>PP6在使用之前使用使用Minicom等工具配置。</p><div class=\"highlight\"><pre><code class=\"language-bash\">WIFICONFIG STATE OFF\nUNLOGALL THISPORT\nCONNECTIMU COM3 IMU_ADIS16488\nINSCOMMAND ENABLE\nSETIMUORIENTATION <span class=\"m\">5</span>\nALIGNMENTMODE AUTOMATIC  \nVEHICLEBODYROTATION <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span>\nCOM COM1 <span class=\"m\">9600</span> N <span class=\"m\">8</span> <span class=\"m\">1</span> N OFF OFF\nCOM COM2 <span class=\"m\">9600</span> N <span class=\"m\">8</span> <span class=\"m\">1</span> N OFF OFF\nINTERFACEMODE COM1 NOVATEL NOVATEL ON\nPPSCONTROL ENABLE POSITIVE <span class=\"m\">1</span>.0 <span class=\"m\">10000</span>\nMARKCONTROL MARK1 ENABLE POSITIVE\nEVENTINCONTROL MARK1 ENABLE POSITIVE <span class=\"m\">0</span> <span class=\"m\">2</span>\ninterfacemode usb2 rtcmv3 none off\nrtksource auto any\npsrdiffsource auto any\nSETIMUTOANTOFFSET <span class=\"m\">0</span>.539 <span class=\"m\">0</span>.755 <span class=\"m\">0</span>.995 <span class=\"m\">0</span>.05 <span class=\"m\">0</span>.05 <span class=\"m\">0</span>.08\nSETIMUTOANTOFFSET2 -0.539 <span class=\"m\">0</span>.755 <span class=\"m\">0</span>.995 <span class=\"m\">0</span>.05 <span class=\"m\">0</span>.05 <span class=\"m\">0</span>.08\nSETINSOFFSET <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">0</span>\nEVENTOUTCONTROL MARK2 ENABLE POSITIVE <span class=\"m\">999999990</span> <span class=\"m\">10</span>\nEVENTOUTCONTROL MARK1 ENABLE POSITIVE <span class=\"m\">500000000</span> <span class=\"m\">500000000</span>\n\nLOG COM2 GPRMC ONTIME <span class=\"m\">1</span>.0 <span class=\"m\">0</span>.25\nLOG USB1 GPGGA ONTIME <span class=\"m\">1</span>.0\n\nlog USB1 bestgnssposb ontime <span class=\"m\">1</span>\nlog USB1 bestgnssvelb ontime <span class=\"m\">1</span>\nlog USB1 bestposb ontime <span class=\"m\">1</span>\nlog USB1 INSPVAXB ontime <span class=\"m\">1</span>\nlog USB1 INSPVASB ontime <span class=\"m\">0</span>.01\nlog USB1 CORRIMUDATASB ontime <span class=\"m\">0</span>.01\nlog USB1 RAWIMUSXB onnew <span class=\"m\">0</span> <span class=\"m\">0</span>\nlog USB1 mark1pvab onnew\n\nlog USB1 rangeb ontime <span class=\"m\">1</span>\nlog USB1 bdsephemerisb\nlog USB1 gpsephemb\nlog USB1 gloephemerisb\nlog USB1 bdsephemerisb ontime <span class=\"m\">15</span>\nlog USB1 gpsephemb ontime <span class=\"m\">15</span>\nlog USB1 gloephemerisb ontime <span class=\"m\">15</span>\n\nlog USB1 imutoantoffsetsb once\nlog USB1 vehiclebodyrotationb onchanged\n\nSAVECONFIG</code></pre></div><p>其中：</p><div class=\"highlight\"><pre><code class=\"language-text\">SETIMUTOANTOFFSET 0.539 0.755 0.995 0.05 0.05 0.08\nSETIMUTOANTOFFSET2 -0.539 0.755 0.995 0.05 0.05 0.08</code></pre></div><p>两行为摇杆臂的值，需要更新车辆的测量值。</p><h2>杠杆臂测量</h2><p>步骤如下:</p><ol><li>在接受测量之前，打开IPC。</li><li>当IMU和GPS天线就位时，必须测量从IMU到GPS天线的距离。距离测量应为：X偏移，Y偏移，和Z偏移。偏移误差必须在一厘米以内，以达到定位和定位的高精度。 更多信息，参见：</li></ol><blockquote>NovAtel ProPak6 安装与操作手册:<br/><a href=\"https://link.zhihu.com/?target=https%3A//www.novatel.com/assets/Documents/Manuals/OM-20000148.pdf\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">novatel.com/assets/Docu</span><span class=\"invisible\">ments/Manuals/OM-20000148.pdf</span><span class=\"ellipsis\"></span></a></blockquote><h2>Radar配置</h2><p>毫米波雷达通过CAN卡连接，只不过需要注意，毫米波雷达配置的CAN卡通道ID 是1，在连接的时候保持一致即可。</p><p>启动的默认配置见「modules/drivers/radar/conti<i>radar/conf/conti_radar_conf.pb.txt</i>」，在配置完成之后，就可启动Radar，看下数据情况(包含障碍物情况的数据)：</p><div class=\"highlight\"><pre><code class=\"language-bash\">contiobs <span class=\"o\">{</span>\n  header <span class=\"o\">{</span>\n    timestamp_sec: <span class=\"m\">1535088836</span>.19\n    module_name: <span class=\"s2\">&#34;conti_radar&#34;</span>\n    sequence_num: <span class=\"m\">1950</span>\n  <span class=\"o\">}</span>\n  clusterortrack: <span class=\"nb\">false</span>\n  obstacle_id: <span class=\"m\">25</span>\n  longitude_dist: <span class=\"m\">121</span>.2\n  lateral_dist: <span class=\"m\">4</span>.8\n  longitude_vel: <span class=\"m\">0</span>.0\n  lateral_vel: <span class=\"m\">0</span>.0\n  rcs: <span class=\"m\">13</span>.5\n  dynprop: <span class=\"m\">1</span>\n  longitude_dist_rms: <span class=\"m\">0</span>.371\n  lateral_dist_rms: <span class=\"m\">0</span>.478\n  longitude_vel_rms: <span class=\"m\">0</span>.371\n  lateral_vel_rms: <span class=\"m\">0</span>.616\n  probexist: <span class=\"m\">1</span>.0\n  meas_state: <span class=\"m\">2</span>\n  longitude_accel: <span class=\"m\">0</span>.01\n  lateral_accel: <span class=\"m\">0</span>.0\n  oritation_angle: <span class=\"m\">0</span>.0\n  longitude_accel_rms: <span class=\"m\">0</span>.794\n  lateral_accel_rms: <span class=\"m\">0</span>.005\n  oritation_angle_rms: <span class=\"m\">1</span>.909\n  length: <span class=\"m\">2</span>.0\n  width: <span class=\"m\">2</span>.4\n  obstacle_class: <span class=\"m\">1</span>\n<span class=\"o\">}</span>\nobject_list_status <span class=\"o\">{</span>\n  nof_objects: <span class=\"m\">14</span>\n  meas_counter: <span class=\"m\">36624</span>\n  interface_version: <span class=\"m\">0</span>\n<span class=\"o\">}</span>\n\n---</code></pre></div><h2>Camera</h2><p>usb_cam默认启动，会报错，因为没有对设备重命名。</p><div class=\"highlight\"><pre><code class=\"language-text\">[ INFO] [1535089299.676995851]: Loading nodelet /camera_obstacle/sensor_camera_obstacle of type usb_cam/UsbCamNodelet to manager camera_nodelet_manager with the following remappings:\n[ INFO] [1535089299.677044849]: /apollo/sensor/camera/traffic/camera_info -&gt; /apollo/sensor/camera/obstacle/front_6mm/camera_info\n[ INFO] [1535089299.677056740]: /camera_obstacle/image_raw0 -&gt; /apollo/sensor/camera/obstacle/front_6mm\n[ INFO] [1535089299.680885333]: waitForService: Service [/camera_obstacle/camera_nodelet_manager/load_nodelet] has not been advertised, waiting...\n[ INFO] [1535089299.897115702]: waitForService: Service [/camera_obstacle/camera_nodelet_manager/load_nodelet] is now available.\n[FATAL] [1535089300.326627240]: Failed to load nodelet &#39;/camera_short/sensor_camera_traffic_short` of type `usb_cam/UsbCamNodelet` to manager `camera_nodelet_manager&#39;\n[camera_obstacle/sensor_camera_obstacle-6] process has died [pid 27927, exit code 255, cmd /home/tmp/ros/lib/nodelet/nodelet load usb_cam/UsbCamNodelet camera_nodelet_manager /camera_obstacle/image_raw0:=/apollo/sensor/camera/obstacle/front_6mm /apollo/sensor/camera/traffic/camera_info:=/apollo/sensor/camera/obstacle/front_6mm/camera_info __name:=sensor_camera_obstacle __log:=/home/apollo/.ros/log/2486d64c-a75a-11e8-a968-78d0042501bf/camera_obstacle-sensor_camera_obstacle-6.log].\nlog file: /home/apollo/.ros/log/2486d64c-a75a-11e8-a968-78d0042501bf/camera_obstacle-sensor_camera_obstacle-6*.log\n[ INFO] [1535089299.852239084]: Loading nodelet /camera_short/sensor_camera_traffic_short of type usb_cam/UsbCamNode</code></pre></div><p>重新适配设备编号即可</p><p>进行设备挂载。</p><div class=\"highlight\"><pre><code class=\"language-bash\"><span class=\"c1\"># in dev docker</span>\nbash /apollo/docker/setup_host/setup_host.sh</code></pre></div><p>其次需要根据相机类型，进行设备固化。红绿灯检测短焦相机设备固定为/dev/camera/obstacle；红绿灯检测长焦相机，设备固定为/dev/camera/trafficlights；车道线保持相机固定为/dev/camera/lanemark。示例：</p><div class=\"highlight\"><pre><code class=\"language-bash\"><span class=\"c1\"># in dev docker</span>\nln -s /dev/video0  /dev/camera/obstacle\nln -s /dev/video1  /dev/camera/trafficlights\nln -s /dev/video1  /dev/camera/lanemark</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-0cecdab1de965b8e5c201be914fb694e_b.jpg\" data-size=\"normal\" data-rawwidth=\"926\" data-rawheight=\"540\" class=\"origin_image zh-lightbox-thumb\" width=\"926\" data-original=\"https://pic3.zhimg.com/v2-0cecdab1de965b8e5c201be914fb694e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;926&#39; height=&#39;540&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"926\" data-rawheight=\"540\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"926\" data-original=\"https://pic3.zhimg.com/v2-0cecdab1de965b8e5c201be914fb694e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-0cecdab1de965b8e5c201be914fb694e_b.jpg\"/><figcaption>Apollo获取到的camera原始数据</figcaption></figure><h2>Lidar</h2><p>目前报错网络信息报错，怀疑是网络配置问题导致的，：</p><div class=\"highlight\"><pre><code class=\"language-bash\"><span class=\"o\">[</span> WARN<span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"m\">1535089776</span>.640078078<span class=\"o\">]</span>: Velodyne port <span class=\"m\">2368</span> poll<span class=\"o\">()</span> timeout\n<span class=\"o\">[</span> WARN<span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"m\">1535089777</span>.640430607<span class=\"o\">]</span>: Velodyne port <span class=\"m\">2368</span> poll<span class=\"o\">()</span> timeout\n<span class=\"o\">[</span> WARN<span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"m\">1535089778</span>.641730238<span class=\"o\">]</span>: Velodyne port <span class=\"m\">2368</span> poll<span class=\"o\">()</span> timeout\n<span class=\"o\">[</span> WARN<span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"m\">1535089779</span>.652137980<span class=\"o\">]</span>: Velodyne port <span class=\"m\">2368</span> poll<span class=\"o\">()</span> timeout\n<span class=\"o\">[</span> WARN<span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"m\">1535089780</span>.652533234<span class=\"o\">]</span>: Velodyne port <span class=\"m\">2368</span> poll<span class=\"o\">()</span> timeout\n<span class=\"o\">[</span> WARN<span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"m\">1535089781</span>.653267734<span class=\"o\">]</span>: Velodyne port <span class=\"m\">2368</span> poll<span class=\"o\">()</span> timeout\n<span class=\"o\">[</span> WARN<span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"m\">1535089782</span>.660089381<span class=\"o\">]</span>: Velodyne port <span class=\"m\">2368</span> poll<span class=\"o\">()</span> timeout\n<span class=\"o\">[</span> WARN<span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"m\">1535089783</span>.661315852<span class=\"o\">]</span>: Velodyne port <span class=\"m\">2368</span> poll<span class=\"o\">()</span> timeout\n<span class=\"o\">[</span> WARN<span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"m\">1535089784</span>.662609897<span class=\"o\">]</span>: Velodyne port <span class=\"m\">2368</span> poll<span class=\"o\">()</span> timeout</code></pre></div><p>主机从velodyne也是可以拿到数据的：</p><div class=\"highlight\"><pre><code class=\"language-bash\">sudo tcpdump -i eth0 udp port <span class=\"m\">2368</span></code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-d36d972fd1bc94a089b3a2d07acaf9be_b.jpg\" data-size=\"normal\" data-rawwidth=\"1594\" data-rawheight=\"514\" class=\"origin_image zh-lightbox-thumb\" width=\"1594\" data-original=\"https://pic3.zhimg.com/v2-d36d972fd1bc94a089b3a2d07acaf9be_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1594&#39; height=&#39;514&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1594\" data-rawheight=\"514\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1594\" data-original=\"https://pic3.zhimg.com/v2-d36d972fd1bc94a089b3a2d07acaf9be_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-d36d972fd1bc94a089b3a2d07acaf9be_b.jpg\"/><figcaption>激光雷达通过以太网发送给IPC的数据包</figcaption></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>如图所示，激光雷达数据从<code>192.168.3.43</code>网段发送出来，而此时，IPC的IP为<code>192.168.0.7</code>，所以数据包没有被正确解析到。</p><p>解决方案：</p><p>IPC默认会有两个网卡，<code>eth0</code> 和 <code>eth1</code> ，加入<code>eth0</code>连接路由器，另外一个网卡<code>eth1</code>用来接收激光雷达数据。现在两块网卡都需要设置静态IP。一方面是为了固定IP，ssh连接方便，另一方面是为了正确地接收激光雷达数据。</p><p><code>/etc/network/interfaces</code>中对两块网卡的配置举例：</p><div class=\"highlight\"><pre><code class=\"language-bash\">auto eth0\niface eth0 inet static\naddress <span class=\"m\">192</span>.168.0.7  <span class=\"c1\">#IP地址</span>\ngateway <span class=\"m\">192</span>.168.0.1    <span class=\"c1\">#网关</span>\nnetmask <span class=\"m\">255</span>.255.255.0  <span class=\"c1\">#网络掩码</span>\nnetwork <span class=\"m\">192</span>.168.0.1 <span class=\"c1\">#网络地址</span>\nbroadcast <span class=\"m\">192</span>.168.1.255  <span class=\"c1\">#广播</span>\n\n\nauto eth1\niface eth1 inet static\naddress <span class=\"m\">192</span>.168.3.7  <span class=\"c1\">#IP地址</span>\ngateway <span class=\"m\">192</span>.168.3.1    <span class=\"c1\">#网关</span>\nnetmask <span class=\"m\">255</span>.255.255.0  <span class=\"c1\">#网络掩码</span>\nnetwork <span class=\"m\">192</span>.168.3.1 <span class=\"c1\">#网络地址</span>\nbroadcast <span class=\"m\">192</span>.168.3.255  <span class=\"c1\">#广播</span></code></pre></div><p>另外，我们对激光雷达的数据只是获取成功，还没有完成校验，校验的过程，是看点云和时间戳的情况。祸不单行，其中依然有需要调整的地方，因为没有获取到时间戳，所以需要调整激光雷达到GNSS的接线：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-b7d08190ec28b641783298c7733909f9_b.jpg\" data-size=\"normal\" data-rawwidth=\"2016\" data-rawheight=\"1512\" class=\"origin_image zh-lightbox-thumb\" width=\"2016\" data-original=\"https://pic2.zhimg.com/v2-b7d08190ec28b641783298c7733909f9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;2016&#39; height=&#39;1512&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"2016\" data-rawheight=\"1512\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2016\" data-original=\"https://pic2.zhimg.com/v2-b7d08190ec28b641783298c7733909f9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-b7d08190ec28b641783298c7733909f9_b.jpg\"/><figcaption>GPS到激光雷达授时错误信息</figcaption></figure><p>在修改接线顺序之后，成功的拿到了激光雷达的点云、时间戳等数据。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-04e682e9473f4e62160c1cb520137ee6_b.jpg\" data-size=\"normal\" data-rawwidth=\"2880\" data-rawheight=\"1644\" class=\"origin_image zh-lightbox-thumb\" width=\"2880\" data-original=\"https://pic3.zhimg.com/v2-04e682e9473f4e62160c1cb520137ee6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;2880&#39; height=&#39;1644&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"2880\" data-rawheight=\"1644\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2880\" data-original=\"https://pic3.zhimg.com/v2-04e682e9473f4e62160c1cb520137ee6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-04e682e9473f4e62160c1cb520137ee6_b.jpg\"/><figcaption>拿到的点云数据可以在Dreamview中展示</figcaption></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>至此，所有传感器的数据均以验证完毕。接下来开始从激光雷达与GNSS的标定开始。</p><p>在开始之前应该检查如下List: </p><ul><li>GPS硬件天线的安装位置是否正确； </li><li>摇杆臂的值是否设置正确； </li><li>GPS与惯导是否在对齐状态； </li><li>定位状态是否为56；</li><li>道路有边界，推荐道路两侧有墙，可以区分出明显的边界与反射；</li></ul><p>最终的标定结果：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-ddc17aef5cdd45647c3ee44db0b2f388_b.jpg\" data-size=\"normal\" data-rawwidth=\"833\" data-rawheight=\"678\" class=\"origin_image zh-lightbox-thumb\" width=\"833\" data-original=\"https://pic1.zhimg.com/v2-ddc17aef5cdd45647c3ee44db0b2f388_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;833&#39; height=&#39;678&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"833\" data-rawheight=\"678\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"833\" data-original=\"https://pic1.zhimg.com/v2-ddc17aef5cdd45647c3ee44db0b2f388_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-ddc17aef5cdd45647c3ee44db0b2f388_b.jpg\"/><figcaption>GNSS到Lidar的标定结果</figcaption></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>其他类型的传感器配置请参考文档 「<a href=\"https://link.zhihu.com/?target=https%3A//github.com/ApolloAuto/apollo/blob/master/docs/quickstart/apollo_2_0_sensor_calibration_guide.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ApolloAuto/apollo</a>」</p><p class=\"ztext-empty-paragraph\"><br/></p><p>「完」</p>", 
            "topic": [
                {
                    "tag": "自动驾驶", 
                    "tagLink": "https://api.zhihu.com/topics/19635352"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/48691936", 
            "userName": "冯宗宝", 
            "userLink": "https://www.zhihu.com/people/f45590a219abdb40ca49864c057d8f10", 
            "upvote": 5, 
            "title": "如何在一辆新车适配Apollo?", 
            "content": "<h2>概述</h2><p>如何在Apollo适配一个新车型？开发者有各式各样的车，有Apollo推荐的类似MKZ的乘用车，有自己组装的非乘用车，适配这些新车，不得不说这是个挑战，因为需要对车辆反馈和可以控制的信号比较了解，也就是说车辆需要具备线控是适配Apollo基础条件。以下总结了适配一辆新车大致的几个阶段，供理解与参考：</p><p class=\"ztext-empty-paragraph\"><br/></p><p>主要的逻辑如下：</p><ol><li>车辆反馈、控制信号在CANBUS模块的适配</li><li>反馈信号的测试</li><li>控制信号的测试</li><li>控制参数的调整</li></ol><p class=\"ztext-empty-paragraph\"><br/></p><blockquote>尽管已经有相应的文档来突出逻辑的主干部分，但过程很重要，坑也有必要重点指出，让后面的开发者着重检查。</blockquote><p class=\"ztext-empty-paragraph\"><br/></p><p>适配一辆新车，最重要的还是适配控制层。我引用一张Apollo数据与控制流程图，指示出其中需要适配的部分。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-bfd145eb4cb86f748822dc767ba6dd81_b.jpg\" data-size=\"normal\" data-rawwidth=\"1398\" data-rawheight=\"730\" class=\"origin_image zh-lightbox-thumb\" width=\"1398\" data-original=\"https://pic2.zhimg.com/v2-bfd145eb4cb86f748822dc767ba6dd81_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1398&#39; height=&#39;730&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1398\" data-rawheight=\"730\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1398\" data-original=\"https://pic2.zhimg.com/v2-bfd145eb4cb86f748822dc767ba6dd81_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-bfd145eb4cb86f748822dc767ba6dd81_b.jpg\"/><figcaption>Apollo数据与控制流</figcaption></figure><blockquote>Note:图中从Control到Canbus的方式，是Apollo3.0之前的逻辑，新版本加入了对控制指令在Guardian模块的安全过滤，可以通过配置不经过Guardian模块。</blockquote><p class=\"ztext-empty-paragraph\"><br/></p><p>针对此图，我们再描述一遍控制的逻辑。</p><ul><li>控制模块负责解析车辆可以识别的控制信号，将该指令通过`ControlCommand`(topic:`/apollo/control`)发布出来；</li><li>Canbus模块是通过Can卡发送上游控制模块（或者由Guardian模块过滤过之后的）控制命令与车辆交互的；</li><li>Canbus一方面执行控制指令，另外一方面将车辆底盘的信号，反馈给Chassis（Topic:`/apollo/canbus/chassis`、`/apollo/canbus/chassis_detail`）;</li></ul><p class=\"ztext-empty-paragraph\"><br/></p><h2>1、准备DBC文件</h2><p>DBC文件以及经过CANOE等工具验证没有问题，其中包含Apollo所需要的控制信号、反馈信号、耗时要求等内容。文档参见：<a href=\"https://link.zhihu.com/?target=http%3A//apollo-homepage.bj.bcebos.com/Apollo_by_wire_requirement.xlsx\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">apollo-homepage.bj.bcebos.com</span><span class=\"invisible\">/Apollo_by_wire_requirement.xlsx</span><span class=\"ellipsis\"></span></a></p><h2>2、生成信号列表和数据类</h2><p>需要将信号的控制、字段和类型抽取出来是个体力活，而且对安全性要求较高。可以使用Apollo提供的工具来完成。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>只不过要提醒一点的是，该工具在厂家自己适配的`SENDER`中不能正确识别命令下发和反馈信号，导致生成的信号控制类不可用。用Pro车型的DBC文件举例`Pro_V3.dbc`：</p><div class=\"highlight\"><pre><code class=\"language-bash\">BO_ <span class=\"m\">293</span> motorPositionGasBrakeSideC: <span class=\"m\">8</span> gasBrakeSideC\n SG_ motorPositionSensor3_GB_C : <span class=\"m\">32</span><span class=\"p\">|</span><span class=\"m\">16</span>@1+ <span class=\"o\">(</span><span class=\"m\">1</span>,0<span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"m\">0</span><span class=\"p\">|</span><span class=\"m\">32768</span><span class=\"o\">]</span> <span class=\"s2\">&#34;&#34;</span>  ACU\n SG_ motorPositionSensor2_GB_C : <span class=\"m\">16</span><span class=\"p\">|</span><span class=\"m\">16</span>@1+ <span class=\"o\">(</span><span class=\"m\">1</span>,0<span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"m\">0</span><span class=\"p\">|</span><span class=\"m\">32768</span><span class=\"o\">]</span> <span class=\"s2\">&#34;&#34;</span>  ACU\n SG_ motorPositionSensor1_GB_C : <span class=\"m\">0</span><span class=\"p\">|</span><span class=\"m\">16</span>@1+ <span class=\"o\">(</span><span class=\"m\">1</span>,0<span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"m\">0</span><span class=\"p\">|</span><span class=\"m\">32768</span><span class=\"o\">]</span> <span class=\"s2\">&#34;&#34;</span>  ACU\n SG_ motorPosition_GB_C : <span class=\"m\">48</span><span class=\"p\">|</span><span class=\"m\">16</span>@1+ <span class=\"o\">(</span><span class=\"m\">1</span>,0<span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"m\">0</span><span class=\"p\">|</span><span class=\"m\">32768</span><span class=\"o\">]</span> <span class=\"s2\">&#34;&#34;</span>  ACU</code></pre></div><p>对不同的汽车厂商来说，应该从DBC文件中获取行最后一个字段，作为`pro_conf.yml` 配置文件中`sender` 字段的值，这样才可以生成正确的下发报文和反馈报文。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>如何识别下发报文和反馈报文</b>？</p><p>一般来说，对字段有`set`操作的可以认为是控制指令下发操作；对字段有`get` 操作的，一般是获取来自车辆底盘的信号。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>换挡操作的报文下发</b></p><div class=\"highlight\"><pre><code class=\"language-text\">// config detail: {&#39;name&#39;: &#39;gearSelection&#39;, &#39;enum&#39;: {8: &#39;GEARSELECTION_D&#39;, 1: &#39;GEARSELECTION_P&#39;, 2: &#39;GEARSELECTION_R&#39;, 4: &#39;GEARSELECTION_N&#39;}, &#39;precision&#39;: 1.0, &#39;len&#39;: 4, &#39;is_signed_var&#39;: False, &#39;offset&#39;: 0.0, &#39;physical_range&#39;: &#39;[0|0]&#39;, &#39;bit&#39;: 2, &#39;type&#39;: &#39;enum&#39;, &#39;order&#39;: &#39;intel&#39;, &#39;physical_unit&#39;: &#39;&#39;}\nvoid Gatewaycommand300::set_p_gearselection(uint8_t* data,\n    Gatewaycommand_300::GearselectionType gearselection) {\n  int x = gearselection;\n\n  Byte to_set(data + 0);\n  to_set.set_value(x, 2, 4);\n}</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p><b>一个换挡反馈报文</b></p><div class=\"highlight\"><pre><code class=\"language-text\">// config detail: {&#39;name&#39;: &#39;gearselection&#39;, &#39;enum&#39;: {8: &#39;GEARSELECTION_D&#39;, 1: &#39;GEARSELECTION_P&#39;, 2: &#39;GEARSELECTION_R&#39;, 4: &#39;GEARSELECTION_N&#39;}, &#39;precision&#39;: 1.0, &#39;len&#39;: 4, &#39;is_signed_var&#39;: False, &#39;offset&#39;: 0.0, &#39;physical_range&#39;: &#39;[0|0]&#39;, &#39;bit&#39;: 2, &#39;type&#39;: &#39;enum&#39;, &#39;order&#39;: &#39;intel&#39;, &#39;physical_unit&#39;: &#39;&#39;}\nGatewaycommand_300::GearselectionType Gatewaycommand300::gearselection(const std::uint8_t* bytes, int32_t length) const {\n  Byte t0(bytes + 0);\n  int32_t x = t0.get_byte(2, 4);\n\n  Gatewaycommand_300::GearselectionType ret =  static_cast&lt;Gatewaycommand_300::GearselectionType&gt;(x);\n  return ret;\n}</code></pre></div><p>参考的一个`pro_conf.yml`配置。文件中对`Sender`字段的配置，该字段默认值为`MAB` 是林肯车型适配的`sender`。</p><div class=\"highlight\"><pre><code class=\"language-text\">dbc_file: Pro_v3.dbc\nprotocol_conf: pro.yml\ncar_type: pro\nsender_list: []\nsender: MAB\nblack_list: []\n\noutput_dir: output/</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>最后生成的内容分为两部分：1、原始信号反馈、控制类；2、底盘相关字段；</p><h2>3、收集车辆反馈信号</h2><p>生成基本的控制信号类方法和信号字段之后，我们需要将他们整合到Canbus模块。</p><p>1、反馈信号的原始类文件，即vehicle目录下的`audi`目录，完全拷贝到`modules/canbus/vehicle/下；</p><p>2、将生成的`audi.proto`文件中的所有message，复制到`modules/canbus/proto/chassis_detail.proto`尾部追加；</p><p>3、在`chassis_detail.proto`中的message类型ChassisDetail尾部追加`Audi audi`字段,以此作为适配反馈和控制的底盘；</p><p>4、在`modules/canbus/proto/vehicle.proto`的VehicleBrand类型的massage中追加`AUDI_Q7`,主要用作CAN卡的启动配置选择；</p><p>5、在`modules/canbus/conf`下新增或者修改已存配置文件`canbus_conf.pb.txt`,在其中brand字段填写上一步配置的`AUDI_Q7`字段，并检查CAN卡的通道是否是`CHANNEL_ID_ZERO`,如果不是也可以在此处配置；另外为了调试方便，还可以打开CAN卡的调试模式（enable_debug_mode:true）、反馈日志（enable_receiver_log:true）、发送日志（enable_sender_log:true）;</p><p class=\"ztext-empty-paragraph\"><br/></p><p>这些配置步骤的准备工作，如果正常，就能在启动`script/bootscript.sh`脚本之后，看到Monitor对CAN卡硬件的监控状态为OK啦。接下来看就可以从底盘信号中拿取信号，试着往外发布了。</p><div class=\"highlight\"><pre><code class=\"language-cpp\"><span class=\"n\">Chassis</span> <span class=\"n\">AudiController</span><span class=\"o\">::</span><span class=\"n\">chassis</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"n\">chassis_</span><span class=\"p\">.</span><span class=\"n\">Clear</span><span class=\"p\">();</span>\n\n  <span class=\"n\">ChassisDetail</span> <span class=\"n\">chassis_detail</span><span class=\"p\">;</span>\n  <span class=\"n\">message_manager_</span><span class=\"o\">-&gt;</span><span class=\"n\">GetSensorData</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">chassis_detail</span><span class=\"p\">);</span>\n\n  <span class=\"c1\">// 21, 22, previously 1, 2\n</span><span class=\"c1\"></span>  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">driving_mode</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">Chassis</span><span class=\"o\">::</span><span class=\"n\">EMERGENCY_MODE</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">set_chassis_error_code</span><span class=\"p\">(</span><span class=\"n\">Chassis</span><span class=\"o\">::</span><span class=\"n\">NO_ERROR</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"n\">chassis_</span><span class=\"p\">.</span><span class=\"n\">set_driving_mode</span><span class=\"p\">(</span><span class=\"n\">driving_mode</span><span class=\"p\">());</span>\n  <span class=\"n\">chassis_</span><span class=\"p\">.</span><span class=\"n\">set_error_code</span><span class=\"p\">(</span><span class=\"n\">chassis_error_code</span><span class=\"p\">());</span>\n\n  <span class=\"c1\">// 3\n</span><span class=\"c1\"></span>  <span class=\"n\">chassis_</span><span class=\"p\">.</span><span class=\"n\">set_engine_started</span><span class=\"p\">(</span><span class=\"nb\">true</span><span class=\"p\">);</span>\n\n  <span class=\"c1\">// 4 此处从底盘信号engine_705中获取发动机转速，并赋值给chassis.engine_rpm \n</span><span class=\"c1\"></span>  <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">chassis_detail</span><span class=\"p\">.</span><span class=\"n\">audi</span><span class=\"p\">().</span><span class=\"n\">has_engine_705</span><span class=\"p\">()</span> <span class=\"o\">||</span>\n   <span class=\"o\">!</span><span class=\"n\">chassis_detail</span><span class=\"p\">.</span><span class=\"n\">audi</span><span class=\"p\">().</span><span class=\"n\">engine_705</span><span class=\"p\">().</span><span class=\"n\">has_enginerpm</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n    <span class=\"n\">chassis_</span><span class=\"p\">.</span><span class=\"n\">set_engine_rpm</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">chassis_detail</span><span class=\"p\">.</span><span class=\"n\">audi</span><span class=\"p\">().</span><span class=\"n\">has_engine_705</span><span class=\"p\">()</span> <span class=\"o\">&amp;&amp;</span> \n    <span class=\"n\">chassis_detail</span><span class=\"p\">.</span><span class=\"n\">audi</span><span class=\"p\">().</span><span class=\"n\">engine_705</span><span class=\"p\">().</span><span class=\"n\">has_enginerpm</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n    <span class=\"n\">chassis_</span><span class=\"p\">.</span><span class=\"n\">set_engine_rpm</span><span class=\"p\">(</span><span class=\"n\">chassis_detail</span><span class=\"p\">.</span><span class=\"n\">audi</span><span class=\"p\">().</span><span class=\"n\">engine_705</span><span class=\"p\">().</span><span class=\"n\">enginerpm</span><span class=\"p\">());</span>\n  <span class=\"p\">}</span>\n  <span class=\"c1\">// 其他反馈信号也是一样道理\n</span><span class=\"c1\"></span>  <span class=\"k\">return</span> <span class=\"n\">chassis_</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div><blockquote>代码文件为`<a href=\"https://link.zhihu.com/?target=http%3A//audi_control.cc\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">audi_control.cc</span><span class=\"invisible\"></span></a>`</blockquote><p class=\"ztext-empty-paragraph\"><br/></p><p>编写完信号获取的代码之后，编译Apollo，再次进入，并启动发动机，观察结果：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-9d7084bfba1f0d2c25603f797ec8663b_b.jpg\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"1042\" class=\"origin_image zh-lightbox-thumb\" width=\"728\" data-original=\"https://pic4.zhimg.com/v2-9d7084bfba1f0d2c25603f797ec8663b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;728&#39; height=&#39;1042&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"1042\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"728\" data-original=\"https://pic4.zhimg.com/v2-9d7084bfba1f0d2c25603f797ec8663b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-9d7084bfba1f0d2c25603f797ec8663b_b.jpg\"/><figcaption>车辆反馈信号</figcaption></figure><p>如图，我们通过查看topic（rostopic echo）已经拿到了发动机转速信息。其他信号是一样的道理。</p><h2>4、控制信号的下发执行</h2><p>控制信号的下发，简言之就是对车辆的操作，发送ControlCommand，即topic为`apollo/control`。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>同样，控制型号需要通过CANBUS模块发送给车辆执行的内容，所以接下来就是完成控制信号的控制。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>要完善的有几个内容：</p><p>- 进入自动驾驶模式的方式；</p><p>- 退出自动驾驶的方法；</p><p>- 刹车信号的控制；</p><p>- 加速信号的控制；</p><p>- 转向信号的控制；</p><p>- 换挡信号的控制；</p><p class=\"ztext-empty-paragraph\"><br/></p><div class=\"highlight\"><pre><code class=\"language-text\">// 反馈OK,以确保跟车辆底盘握手成功。\nErrorCode AudiController::EnableAutoMode() {\n  if (driving_mode() == Chassis::COMPLETE_AUTO_DRIVE) {\n    AINFO &lt;&lt; &#34;already in COMPLETE_AUTO_DRIVE mode&#34;;\n    return ErrorCode::OK;\n  }\n  //brake_60_-&gt;set_enable();\n  //throttle_62_-&gt;set_enable();\n  gatewaycommand_300_-&gt;set_magneticclutch(true);\n\n  can_sender_-&gt;Update();\n  const int32_t flag =\n      CHECK_RESPONSE_STEER_UNIT_FLAG | CHECK_RESPONSE_SPEED_UNIT_FLAG;\n  if (!CheckResponse(flag, true)) {\n    AERROR &lt;&lt; &#34;Failed to switch to COMPLETE_AUTO_DRIVE mode.&#34;;\n    Emergency();\n    set_chassis_error_code(Chassis::CHASSIS_ERROR);\n    return ErrorCode::CANBUS_ERROR;\n  } else {\n    set_driving_mode(Chassis::COMPLETE_AUTO_DRIVE);\n    AINFO &lt;&lt; &#34;Switch to COMPLETE_AUTO_DRIVE mode ok.&#34;;\n    return ErrorCode::OK;\n  }\n\n// audi default, -470 ~ 470, left:+, right:-\n// need to be compatible with control module, so reverse\n// steering with old angle speed\n// angle:-99.99~0.00~99.99, unit:, left:-, right:+\nvoid AudiController::Steer(double angle) {\n  if (!(driving_mode() == Chassis::COMPLETE_AUTO_DRIVE ||\n        driving_mode() == Chassis::AUTO_STEER_ONLY)) {\n    AINFO &lt;&lt; &#34;The current driving mode does not need to set steer.&#34;;\n    return;\n  }\n  // const double real_angle = params_.max_steer_angle() * angle / 100.0;\n  // reverse sign\n  /* ADD YOUR OWN CAR CHASSIS OPERATION\n  steering_64_-&gt;set_steering_angle(real_angle)-&gt;set_steering_angle_speed(200);\n  */\n  inputpositionsteering_20_-&gt;set_inputsteering(angle * 5);\n}\n\n}</code></pre></div><blockquote>代码文件为`<a href=\"https://link.zhihu.com/?target=http%3A//audi_control.cc\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">audi_control.cc</span><span class=\"invisible\"></span></a>`</blockquote><p class=\"ztext-empty-paragraph\"><br/></p><p>但测试时并不是只有control模块能做这件事，只要起一个rosnode，不断发布控制指令即可。有一个工具，`teleop`就是这个逻辑。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>启动逻辑：</p><p>1. `m1` 强制进入自动驾驶模式；</p><p>2. 发送控制指令（比如转向），如果错误检查canbus模块输出，如果是默认情况，此处有坑。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>如果是默认情况，控制信号经过了`Guardian`模块，但是该字段先在gflags里面有设置为false，如下所示：</p><div class=\"highlight\"><pre><code class=\"language-text\">// enable receiving guardian command\n// TODO(QiL) : depreciate this after test\nDEFINE_bool(receive_guardian, false,\n            &#34;Enable receiving guardian message on canbus side&#34;);</code></pre></div><p>而后又在配置文件中置为了true，导致控制指令的走向排查错了方向。</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><div class=\"highlight\"><pre><code class=\"language-text\"> if (!FLAGS_receive_guardian) {\n    AdapterManager::AddControlCommandCallback(&amp;Canbus::OnControlCommand, this);\n  } else {\n    AdapterManager::AddGuardianCallback(&amp;Canbus::OnGuardianCommand, this);\n  }</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>如果没有别的异常，先在就可以进入自动驾驶欧式了。</p><p>如果有问题？确保打开所有级别的日志信息，不要错过任何代码中插入的日志关键字作为检查项；</p><p>如何打开？在`modules/canbus/conf/canbus.conf`中增加`--v=4` 或者`logbuflevel=4`均可。</p><p class=\"ztext-empty-paragraph\"><br/></p><h2>5、信号控制问题</h2><p>1、车辆速度信号（0x708）反馈单位，&#39;physical_unit&#39;: &#39;KMH&#39; 但拿到的值跟现实不符；</p><p>real_value = raw_value * factor + offset</p><p class=\"ztext-empty-paragraph\"><br/></p><p>2、角度需要标注出正负角度，这样才能知道转向；</p><p class=\"ztext-empty-paragraph\"><br/></p><h2>参考日志</h2><h2> 1、不能识别控制信号和反馈信号导致的一个编译错误</h2><p class=\"ztext-empty-paragraph\"><br/></p><div class=\"highlight\"><pre><code class=\"language-bash\">ERROR: /apollo/modules/canbus/vehicle/audi/BUILD:36:1: C++ compilation of rule <span class=\"s1\">&#39;//modules/canbus/vehicle/audi:audi_controller&#39;</span> failed <span class=\"o\">(</span>Exit <span class=\"m\">1</span><span class=\"o\">)</span>\nmodules/canbus/vehicle/audi/audi_controller.cc: In member <span class=\"k\">function</span> <span class=\"s1\">&#39;virtual apollo::canbus::Chassis apollo::canbus::audi::AudiController::chassis()&#39;</span>:\nmodules/canbus/vehicle/audi/audi_controller.cc:204:87: error: no matching <span class=\"k\">function</span> <span class=\"k\">for</span> call to <span class=\"s1\">&#39;apollo::canbus::Chassis::set_gear_location(apollo::canbus::Gearposition_704_GearpositionType)&#39;</span>\n     chassis_.set_gear_location<span class=\"o\">(</span>chassis_detail.audi<span class=\"o\">()</span>.gearposition_704<span class=\"o\">()</span>.gearposition<span class=\"o\">())</span><span class=\"p\">;</span>\n                                                                                       ^\nmodules/canbus/vehicle/audi/audi_controller.cc:204:87: note: candidate is:\nIn file included from bazel-out/local-opt/genfiles/modules/canbus/proto/vehicle_parameter.pb.h:33:0,\n                 from bazel-out/local-opt/genfiles/modules/canbus/proto/canbus_conf.pb.h:33,\n                 from ./modules/canbus/vehicle/vehicle_controller.h:27,\n                 from ./modules/canbus/vehicle/audi/audi_controller.h:23,\n                 from modules/canbus/vehicle/audi/audi_controller.cc:16:\nbazel-out/local-opt/genfiles/modules/canbus/proto/chassis.pb.h:2248:13: note: void apollo::canbus::Chassis::set_gear_location<span class=\"o\">(</span>apollo::canbus::Chassis_GearPosition<span class=\"o\">)</span>\n inline void Chassis::set_gear_location<span class=\"o\">(</span>::apollo::canbus::Chassis_GearPosition value<span class=\"o\">)</span> <span class=\"o\">{</span>\n             ^\nbazel-out/local-opt/genfiles/modules/canbus/proto/chassis.pb.h:2248:13: note:   no known conversion <span class=\"k\">for</span> argument <span class=\"m\">1</span> from <span class=\"s1\">&#39;apollo::canbus::Gearposition_704_GearpositionType&#39;</span> to <span class=\"s1\">&#39;apollo::canbus::Chassis_GearPosition&#39;</span></code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>1、不断从进入自动驾驶到人工驾驶循环；</p><p>2、下发报文如何调试？</p><p class=\"ztext-empty-paragraph\"><br/></p><h2>2、未能正确进入自动驾驶模式，且有信号超时的部分日志</h2><p class=\"ztext-empty-paragraph\"><br/></p><div class=\"highlight\"><pre><code class=\"language-text\">==&gt; canbus.in_dev_docker.apollo.log.INFO.20180810-104824.18243 &lt;==\nI0810 10:48:25.780036 18243 canbus.cc:42] The adapter manager is successfully initialized.\nI0810 10:48:25.780200 18243 canbus.cc:50] The canbus conf file is loaded: modules/canbus/conf/canbus_conf_audi.pb.txt\nI0810 10:48:25.780205 18243 can_client_factory.cc:38] CanClientFactory::RegisterCanClients\nI0810 10:48:25.780207 18243 can_client_factory.cc:42] register can: 1\nI0810 10:48:25.780210 18243 canbus.cc:60] Can client is successfully created.\nI0810 10:48:25.780231 18243 canbus.cc:74] Message manager is successfully created.\nI0810 10:48:25.780232 18243 canbus.cc:80] The can receiver is successfully initialized.\nI0810 10:48:25.780234 18243 canbus.cc:86] The can sender is successfully initialized.\nI0810 10:48:25.780237 18243 canbus.cc:92] The vehicle controller is successfully created.\nI0810 10:48:25.780239 18243 can_sender.h:355] Add send message:300\nI0810 10:48:25.780241 18243 can_sender.h:355] Add send message:21\nI0810 10:48:25.780243 18243 can_sender.h:355] Add send message:20\nI0810 10:48:25.780244 18243 audi_controller.cc:95] AudiController is initialized.\nI0810 10:48:25.780246 18243 canbus.cc:98] The vehicle controller is successfully initialized.\nI0810 10:48:25.780313 18243 canbus.cc:117] Can client is started.\nI0810 10:48:25.780396 18243 canbus.cc:123] Can receiver is started.\nI0810 10:48:25.780433 18276 can_receiver.h:132] Can client receiver thread starts.\nI0810 10:48:25.780463 18277 can_sender.h:287] Can client sender thread starts.\nW0810 10:50:42.182757 18277 can_sender.h:321] Too much time for calculation: 7235us is more than minimum period: 5000us</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>### 3、不断循环进入退出自动驾驶模式的日志（主要是经过了guardian模块的原因）：</p><p class=\"ztext-empty-paragraph\"><br/></p><div class=\"highlight\"><pre><code class=\"language-text\">I0810 15:57:18.231076  6434 guardian.cc:140] Emergency stop triggered! with system status from monitor as : 1\nI0810 15:57:18.241261  6434 guardian.cc:105] Safety state triggered, with system safety mode trigger time : 1.53389e+09\nI0810 15:57:18.241408  6434 guardian.cc:111] Ultrasonic sensor not enabled for faulted, will do emergency stop!\nI0810 15:57:18.241425  6434 guardian.cc:135] Temporarily ignore the ultrasonic sensor output during hardware re-alignment!\nI0810 15:57:18.241430  6434 guardian.cc:140] Emergency stop triggered! with system status from monitor as : 1</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><div class=\"highlight\"><pre><code class=\"language-text\">I0812 12:33:13.169888 23298 message_manager.h:173] [DEBUG] Unable to get protocol data because of invalid message_id:0430\nI0812 12:33:13.169898 23298 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0430,len:8,data:0000000000000000,\nI0812 12:33:13.170135 23299 can_sender.h:309] [DEBUG] send_can_frame#id:0x0021,len:8,data:FE3F000000000000,\nI0812 12:33:13.170385 23298 message_manager.h:173] [DEBUG] Unable to get protocol data because of invalid message_id:0431\nI0812 12:33:13.170395 23298 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0431,len:8,data:0000000000000000,\nI0812 12:33:13.170619 23299 can_sender.h:309] [DEBUG] send_can_frame#id:0x0020,len:8,data:FF3F000000000000,\nI0812 12:33:13.170882 23298 message_manager.h:173] [DEBUG] Unable to get protocol data because of invalid message_id:0432\nI0812 12:33:13.170893 23298 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0432,len:8,data:0000000000000000,\nI0812 12:33:13.171130 23298 message_manager.h:173] [DEBUG] Unable to get protocol data because of invalid message_id:0433\nI0812 12:33:13.171139 23298 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0433,len:8,data:0000000000000000,\nI0812 12:33:13.171386 23298 message_manager.h:173] [DEBUG] Unable to get protocol data because of invalid message_id:0434\n\n\nI0812 12:36:34.143390 23298 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0336,len:8,data:10FFFF9430010000,\nI0812 12:36:34.143630 23298 message_manager.h:173] [DEBUG] Unable to get protocol data because of invalid message_id:0335\nI0812 12:36:34.143640 23298 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0335,len:8,data:0000000000000000,\nI0812 12:36:34.144309 23299 can_sender.h:309] [DEBUG] send_can_frame#id:0x0300,len:8,data:2000000100000000,\nI0812 12:36:34.144629 23299 can_sender.h:309] [DEBUG] send_can_frame#id:0x0021,len:8,data:FE3F000000000000,\nI0812 12:36:34.144863 23266 canbus.cc:152] [DEBUG] engine_started: true engine_rpm: 679 speed_mps: 0 fuel_range_m: 0 throttle_percentage: 0 steering_percentage: 16285 parking_brake: true driving_mode: COMPLETE_AUTO_DRIVE error_code: NO_ERROR gear_location: GEAR_PARKING header { timestamp_sec: 1534048594.1447713 module_name: &#34;chassis&#34; sequence_num: 44954 } signal { turn_signal: TURN_NONE } engage_advice { advice: DISALLOW_ENGAGE reason: &#34;CANBUS not ready, firmware error or emergency button pressed!&#34; } wheel_speed { wheel_spd_rr: 0 wheel_spd_rl: 0 wheel_spd_fr: 0 wheel_spd_fl: 0 }\nI0812 12:36:34.144919 23299 can_sender.h:309] [DEBUG] send_can_frame#id:0x0020,len:8,data:FF3F000000000000,</code></pre></div><h2>转向调试</h2><p class=\"ztext-empty-paragraph\"><br/></p><p>监听油门踏板信号的发送数据：</p><div class=\"highlight\"><pre><code class=\"language-text\">apollo@in_dev_docker:/apollo/data/log$ tail -f canbus.INFO | grep &#34;send_can_frame#id:0x0300&#34;\nI0812 13:15:57.172904 24344 can_sender.h:309] [DEBUG] send_can_frame#id:0x0300,len:8,data:2000000100000000,\nI0812 13:15:57.193202 24344 can_sender.h:309] [DEBUG] send_can_frame#id:0x0300,len:8,data:2000000100000000,\nI0812 13:15:57.214828 24344 can_sender.h:309] [DEBUG] send_can_frame#id:0x0300,len:8,data:2000000100000000,\nI0812 13:15:57.234797 24344 can_sender.h:309] [DEBUG] send_can_frame#id:0x0300,len:8,data:2000000100000000,\nI0812 13:15:57.255151 24344 can_sender.h:309] [DEBUG] send_can_frame#id:0x0300,len:8,data:2000000100000000,</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><div class=\"highlight\"><pre><code class=\"language-text\">apollo@in_dev_docker:/apollo/data/log$ tail -f canbus.INFO | grep &#34;recv_can_frame#id:0x0124&#34;\nI0812 13:17:39.439062 24343 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0124,len:8,data:8E539D53C0538E53,\nI0812 13:17:39.459025 24343 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0124,len:8,data:8E539D53C0538E53,\nI0812 13:17:39.478745 24343 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0124,len:8,data:C0539D53C0538E53,\nI0812 13:17:39.499053 24343 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0124,len:8,data:8E539D53C0538E53,\nI0812 13:17:39.519502 24343 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0124,len:8,data:8E539D53C0538E53,\nI0812 13:17:39.539433 24343 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0124,len:8,data:8E539D53C0538E53,</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>**转向反馈信号**</p><p>在测试过程中发现的测试问题，发现油门过大。</p><div class=\"highlight\"><pre><code class=\"language-cpp\">  <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">chassis_detail</span><span class=\"p\">.</span><span class=\"n\">audi</span><span class=\"p\">().</span><span class=\"n\">has_gaspedal_706</span><span class=\"p\">()</span> <span class=\"o\">||</span>\n  <span class=\"o\">!</span><span class=\"n\">chassis_detail</span><span class=\"p\">.</span><span class=\"n\">audi</span><span class=\"p\">().</span><span class=\"n\">gaspedal_706</span><span class=\"p\">().</span><span class=\"n\">has_gaspedalposition</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n    <span class=\"n\">chassis_</span><span class=\"p\">.</span><span class=\"n\">set_throttle_percentage</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">chassis_detail</span><span class=\"p\">.</span><span class=\"n\">audi</span><span class=\"p\">().</span><span class=\"n\">has_gaspedal_706</span><span class=\"p\">()</span> <span class=\"o\">&amp;&amp;</span>\n      <span class=\"n\">chassis_detail</span><span class=\"p\">.</span><span class=\"n\">audi</span><span class=\"p\">().</span><span class=\"n\">gaspedal_706</span><span class=\"p\">().</span><span class=\"n\">has_gaspedalposition</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n    <span class=\"n\">chassis_</span><span class=\"p\">.</span><span class=\"n\">set_throttle_percentage</span><span class=\"p\">(</span>\n        <span class=\"n\">chassis_detail</span><span class=\"p\">.</span><span class=\"n\">audi</span><span class=\"p\">().</span><span class=\"n\">gaspedal_706</span><span class=\"p\">().</span><span class=\"n\">gaspedalposition</span><span class=\"p\">());</span>\n  <span class=\"p\">}</span>\n</code></pre></div><h2>油门调试</h2><p>监听油门踏板信号的发送数据：</p><div class=\"highlight\"><pre><code class=\"language-text\">apollo@in_dev_docker:/apollo/data/log$ tail -f canbus.INFO | grep &#34;send_can_frame#id:0x0021&#34;\nI0812 13:05:15.805725 24344 can_sender.h:309] [DEBUG] send_can_frame#id:0x0021,len:8,data:FE3F000000000000,\nI0812 13:05:15.826007 24344 can_sender.h:309] [DEBUG] send_can_frame#id:0x0021,len:8,data:FE3F000000000000,\nI0812 13:05:15.846329 24344 can_sender.h:309] [DEBUG] send_can_frame#id:0x0021,len:8,data:FE3F000000000000,\nI0812 13:05:15.866488 24344 can_sender.h:309] [DEBUG] send_can_frame#id:0x0021,len:8,data:FE3F000000000000,\nI0812 13:05:15.886785 24344 can_sender.h:309] [DEBUG] send_can_frame#id:0x0021,len:8,data:FE3F000000000000,\nI0812 13:05:15.907239 24344 can_sender.h:309] [DEBUG] send_can_frame#id:0x0021,len:8,data:FE3F000000000000,\nI0812 13:05:15.927361 24344 can_sender.h:309] [DEBUG] send_can_frame#id:0x0021,len:8,data:FE3F000000000000,</code></pre></div><p>油门的反馈数据：</p><div class=\"highlight\"><pre><code class=\"language-text\">I0812 13:01:52.416574 24343 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0706,len:2,data:0B00,\nI0812 13:01:52.625324 24343 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0706,len:2,data:0B00,\nI0812 13:01:52.825000 24343 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0706,len:2,data:0A00,\nI0812 13:01:53.025012 24343 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0706,len:2,data:0001,\nI0812 13:03:49.036394 24343 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0706,len:2,data:0000,\nI0812 13:03:49.236274 24343 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0706,len:2,data:0000,\nI0812 13:03:49.436159 24343 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0706,len:2,data:0000,\nI0812 13:03:49.636353 24343 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0706,len:2,data:0000,\nI0812 13:03:49.835999 24343 can_receiver.h:175] [DEBUG] recv_can_frame#id:0x0706,len:2,data:0000,</code></pre></div><p>CAN可以接收到frame，但是通过teleop下发的数据无变化。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>发现的一些问题：</b></p><p>1、执行轨迹回放功能报错：rtk_play.sh，docker镜像缺失或者scipy版本需要升级。</p><p>2、安装完kernel后，执行grub时，并没有默认加载，需要手动修改grub加载指定内核版本才可以。</p><p>3、在6108GC工控机上实际安装docker的过程中，在未安装apollo-kernel之前，因为底层文件系统驱动类型的原因（overlay、devicemapper不适配）</p><p class=\"ztext-empty-paragraph\"><br/></p><p>4、运行速度标定报错，just like :</p><div class=\"highlight\"><pre><code class=\"language-text\">python data_collector.py \nAttributeError: &#39;DataCollector&#39; object has no attribute &#39;in_session&#39;</code></pre></div><p>解决方案参见pull request :</p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/ApolloAuto/apollo/commit/f4a39ddfc3c76825065bb67a57776766d8888c85\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-2666d4878b82ecbd4aad13f48f3ae932_ipico.jpg\" data-image-width=\"128\" data-image-height=\"128\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[tools]* fix control calibration tools init parameters · ApolloAuto/apollo@f4a39dd</a><p></p>", 
            "topic": [
                {
                    "tag": "汽车", 
                    "tagLink": "https://api.zhihu.com/topics/19551915"
                }, 
                {
                    "tag": "阿波罗", 
                    "tagLink": "https://api.zhihu.com/topics/19586342"
                }, 
                {
                    "tag": "自动驾驶", 
                    "tagLink": "https://api.zhihu.com/topics/19635352"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/30311165", 
            "userName": "冯宗宝", 
            "userLink": "https://www.zhihu.com/people/f45590a219abdb40ca49864c057d8f10", 
            "upvote": 13, 
            "title": "3D 障碍物感知", 
            "content": "<p>Apollo解决的障碍物感知问题：</p><ul><li>高精地图ROI过滤器（HDMap ROI Filter）</li><li>基于卷积神经网络分割（CNN Segmentation）</li><li>MinBox 障碍物边框构建（MinBox Builder）</li><li>HM对象跟踪（HM Object Tracker）</li></ul><h2>高精地图ROI过滤器</h2><p>ROI（The Region of Interest）指定从高精地图检索到包含路面、路口的可驾驶区域。高精地图 ROI 过滤器（往下简称“过滤器”）处理在ROI之外的激光雷达点，去除背景对象，如路边建筑物和树木等，剩余的点云留待后续处理。</p><p>给定一个高精地图，每个激光雷达点的关系意味着它在ROI内部还是外部。每个激光雷达点可以查询一个车辆周围区域的2D量化的查找表（LUT）。过滤器模块的输入和输出汇总于下表。</p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-84c45537e03dd52bba687600f313125f_b.jpg\" data-caption=\"\" data-rawwidth=\"726\" data-rawheight=\"109\" class=\"origin_image zh-lightbox-thumb\" width=\"726\" data-original=\"https://pic4.zhimg.com/v2-84c45537e03dd52bba687600f313125f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;726&#39; height=&#39;109&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"726\" data-rawheight=\"109\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"726\" data-original=\"https://pic4.zhimg.com/v2-84c45537e03dd52bba687600f313125f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-84c45537e03dd52bba687600f313125f_b.jpg\"/></figure><p>一般来说，Apollo 高精地图 ROI过滤器有以下三步：</p><ol><li>坐标转换</li><li>ROI LUT构造</li><li>ROI LUT点查询</li></ol><h2>坐标转换</h2><p>对于（高精地图ROI）过滤器来说，高精地图数据接口被定义为一系列多边形集合，每个集合由世界坐标系点组成有序点集。高精地图ROI点查询需要点云和多边形处在相同的坐标系，为此，Apollo将输入点云和HDMap多边形变换为来自激光雷达传感器位置的地方坐标系。</p><h2>ROI LUT构造</h2><p>Apollo采用网格显示查找表（LUT），将ROI量化为俯视图2D网格，以此决定输入点是在ROI之内还是之外。</p><p>如图1所示，该LUT覆盖了一个矩形区域，该区域位于高精地图边界上方，以普通视图周围的预定义空间范围为边界。它代表了与ROI关联网格的每个单元格（如用1/0表示在ROI的内部/外部）。 为了计算效率，Apollo使用 <b>扫描线算法</b>和 <b>位图编码</b>来构建ROI LUT。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-f870a31e2dde296f0f2364ba88d02715_b.jpg\" data-rawwidth=\"551\" data-rawheight=\"314\" class=\"origin_image zh-lightbox-thumb\" width=\"551\" data-original=\"https://pic2.zhimg.com/v2-f870a31e2dde296f0f2364ba88d02715_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;551&#39; height=&#39;314&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"551\" data-rawheight=\"314\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"551\" data-original=\"https://pic2.zhimg.com/v2-f870a31e2dde296f0f2364ba88d02715_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f870a31e2dde296f0f2364ba88d02715_b.jpg\"/><figcaption>图 1 ROI显示查找表（LUT）</figcaption></figure><p>蓝色线条标出了高精地图ROI的边界，包含路表与路口。红色加粗点表示对应于激光雷达传感器位置的地方坐标系原始位置。2D网格由8*8个绿色正方形组成，在ROI中的单元格，为蓝色填充的正方形，而之外的是黄色填充的正方形。</p><h2>ROI LUT点查询</h2><p>基于ROI LUT，查询每个输入点的关系使用两步认证。对于点查询过程，Apollo数据编译输出如下，:</p><ol><li>检查点在ROI LUT矩形区域之内还是之外。</li><li>查询LUT中相对于ROI关联点的相应单元格。</li><li>收集属于ROI的所有点，并输出其相对于输入点云的索引。</li></ol><p>用户定义的参数可在配置文`modules/perception/model/hdmap_roi_filter.config`中设置，HDMap ROI Filter 参数使用参考如下表格：</p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-f274d8c9e8ff13ba70f7724cb92413a9_b.jpg\" data-caption=\"\" data-rawwidth=\"792\" data-rawheight=\"157\" class=\"origin_image zh-lightbox-thumb\" width=\"792\" data-original=\"https://pic2.zhimg.com/v2-f274d8c9e8ff13ba70f7724cb92413a9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;792&#39; height=&#39;157&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"792\" data-rawheight=\"157\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"792\" data-original=\"https://pic2.zhimg.com/v2-f274d8c9e8ff13ba70f7724cb92413a9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f274d8c9e8ff13ba70f7724cb92413a9_b.jpg\"/></figure><h2>基于CNN的障碍物分割</h2><p>高精地图 ROI过滤之后，Apollo得到已过滤、只包含属于ROI内的点云，大部分背景障碍物，如路侧的建筑物、树木等均被移除，ROI内的点云被传递到分割模块。分割模块检测和划分前景障碍物，例如汽车，卡车，自行车和行人。</p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-96aaec22ad7a3f6a5ce9f66280c8a90d_b.jpg\" data-caption=\"\" data-rawwidth=\"779\" data-rawheight=\"120\" class=\"origin_image zh-lightbox-thumb\" width=\"779\" data-original=\"https://pic2.zhimg.com/v2-96aaec22ad7a3f6a5ce9f66280c8a90d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;779&#39; height=&#39;120&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"779\" data-rawheight=\"120\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"779\" data-original=\"https://pic2.zhimg.com/v2-96aaec22ad7a3f6a5ce9f66280c8a90d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-96aaec22ad7a3f6a5ce9f66280c8a90d_b.jpg\"/></figure><p>Apollo 使用深度卷积神经网络提高障碍物识别与分割的精度，障碍物分割包含以下四步：</p><ul><li>通道特征提取</li><li>基于卷积神经网络的障碍物预测</li><li>障碍物集群</li><li>后期处理</li></ul><p>卷积神经网络详细介绍如下：</p><h2>通道特征提取</h2><p>给定一个点云框架，Apollo在地方坐标系中构建俯视图（即投影到X-Y平面）2D网格。 基于点的X、Y坐标，相对于LiDAR传感器原点的预定范围内，每个点被量化为2D网格的一个单元。 量化后，Apollo计算网格内每个单元格中点的8个统计测量，这将是下一步中传递给CNN的输入通道特征。</p><p>计算的8个统计测量：</p><ol><li>单元格中点的最大高度</li><li>单元格中最高点的强度</li><li>单元格中点的平均高度</li><li>单元格中点的平均强度</li><li>单元格中的点数</li><li>单元格中心相对于原点的角度</li><li>单元格中心与原点之间的距离</li><li>二进制值标示单元格是空还是被占用</li></ol><h2>基于卷积神经网络的障碍物预测</h2><p>基于上述通道特征，Apollo使用深度完全卷积神经网络（FCNN）来预测单元格障碍物属性，包括潜在物体中心的偏移位移（称为中心偏移）、对象性<br/>积极性和物体高度。如图2所示，网络的输入为 <i>W</i> x <i>H</i> x <i>C</i> 通道图像，其中：</p><ul><li><i>W</i> 代表网格中的列数</li><li><i>H</i> 代表网格中的行数</li><li><i>C</i> 代表通道特征数</li></ul><p>完全卷积神经网络由三层构成：</p><ul><li>下游编码层（特征编码器）</li><li>上游解码层（特征解码器）</li><li>障碍物属性预测层（预测器）</li></ul><p>特征编码器将通道特征图像作为输入，并且随着特征抽取的增加而连续<b>下采样</b>其空间分辨率。 然后特征解码器逐渐对特征图像 <b>上采样</b>到输入2D网格的空间分辨率，可以恢复特征图像的空间细节，以促进单元格方向的障碍物位置、速度属性预测。 根据具有非线性激活（即ReLu）层的堆叠卷积/分散层来实现 <b>下采样</b>和 <b>上采样</b>操作。</p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-8b3ac7fe838dbb34e6d3ea5d99efd9d6_b.jpg\" data-rawwidth=\"882\" data-rawheight=\"245\" class=\"origin_image zh-lightbox-thumb\" width=\"882\" data-original=\"https://pic3.zhimg.com/v2-8b3ac7fe838dbb34e6d3ea5d99efd9d6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;882&#39; height=&#39;245&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"882\" data-rawheight=\"245\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"882\" data-original=\"https://pic3.zhimg.com/v2-8b3ac7fe838dbb34e6d3ea5d99efd9d6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-8b3ac7fe838dbb34e6d3ea5d99efd9d6_b.jpg\"/><figcaption>图 2 FCNN在单元格方向上的障碍物预测</figcaption></figure><h2>障碍物聚类</h2><p>在基于CNN的预测之后，Apollo获取单个单元格的预测信息。利用四个单元对象属性图像，其中包含：</p><ul><li>中心偏移</li><li>对象性</li><li>积极性</li><li>对象高度</li></ul><p>为生成障碍物，Apollo基于单元格中心偏移，预测构建有向图，并搜索连接的组件作为候选对象集群。</p><p>如图3所示，每个单元格是图的一个节点，并且基于单元格的中心偏移预测构建有向边，其指向对应于另一单元的父节点。</p><p>如图3，Apollo采用压缩的联合查找算法（Union Find algorithm ）有效查找连接组件，每个组件都是候选障碍物对象集群。对象是单个单元格成为有效对象的概率。因此，Apollo将非对象单元定义为目标小于0.5的单元格。因此，Apollo过滤出每个候选对象集群的空单元格和非对象集。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-60caa652b9571dcc532d81f861e74349_b.jpg\" data-rawwidth=\"851\" data-rawheight=\"440\" class=\"origin_image zh-lightbox-thumb\" width=\"851\" data-original=\"https://pic2.zhimg.com/v2-60caa652b9571dcc532d81f861e74349_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;851&#39; height=&#39;440&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"851\" data-rawheight=\"440\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"851\" data-original=\"https://pic2.zhimg.com/v2-60caa652b9571dcc532d81f861e74349_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-60caa652b9571dcc532d81f861e74349_b.jpg\"/><figcaption>图 3 障碍聚类</figcaption></figure><p>(a) 红色箭头表示每个单元格对象中心偏移预测；蓝色填充对应于物体概率不小于0.5的对象单元。</p><p>(b) 固体红色多边形内的单元格组成候选对象集群。</p><p>由五角星填充的红色范围表示对应于连接组件子图的根节点（单元格）。</p><p>一个候选对象集群可以由其根节点彼此相邻的多个相邻连接组件组成。</p><h2>后期处理</h2><p>聚类后，Apollo获得一组候选对象集，每个候选对象集包括若干单元格。</p><p>在后期处理中，Apollo首先对所涉及的单元格的积极性和物体高度值，平均计算每个候选群体的检测置信度分数和物体高度。 然后，Apollo去除相对于预测物体高度太高的点，并收集每个候选集中的有效单元格的点。 最后，Apollo删除具有非常低的可信度分数或小点数的候选聚类，以输出最终的障碍物集/分段。</p><p>用户定义的参数可以在`modules/perception/model/cnn_segmentation/cnnseg.conf`的配置文件中设置。 下表说明了CNN细分的参数用法和默认值：</p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-9d9f21f6048f97dc9df11ae4fc36467f_b.jpg\" data-caption=\"\" data-rawwidth=\"801\" data-rawheight=\"425\" class=\"origin_image zh-lightbox-thumb\" width=\"801\" data-original=\"https://pic4.zhimg.com/v2-9d9f21f6048f97dc9df11ae4fc36467f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;801&#39; height=&#39;425&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"801\" data-rawheight=\"425\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"801\" data-original=\"https://pic4.zhimg.com/v2-9d9f21f6048f97dc9df11ae4fc36467f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-9d9f21f6048f97dc9df11ae4fc36467f_b.jpg\"/></figure><h2>MinBox 障碍物边框构建</h2><p>对象构建器组件为检测到的障碍物建立一个边界框。因为LiDAR传感器的遮挡或距离，形成障碍物的点云可以是稀疏的，并且仅覆盖一部分表面。因此，盒构建器将恢复给定多边形点的完整边界框。即使点云稀疏，边界框的主要目的还是预估障碍物（例如，车辆）的方向。同样地，边框也用于可视化障碍物。</p><p>算法背后的想法是找到给定多边形点边缘的所有区域。在以下示例中，如果AB是边缘，则Apollo将其他多边形点投影到AB上，并建立具有最大距离的交点对，这是属于边框的边缘之一。然后直接获得边界框的另一边。通过迭代多边形中的所有边，在以下图4所示，Apollo确定了一个6边界边框，将选择具有最小面积的方案作为最终的边界框。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-30af57318719f41b9df10d9ee37f9247_b.jpg\" data-rawwidth=\"503\" data-rawheight=\"234\" class=\"origin_image zh-lightbox-thumb\" width=\"503\" data-original=\"https://pic4.zhimg.com/v2-30af57318719f41b9df10d9ee37f9247_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;503&#39; height=&#39;234&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"503\" data-rawheight=\"234\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"503\" data-original=\"https://pic4.zhimg.com/v2-30af57318719f41b9df10d9ee37f9247_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-30af57318719f41b9df10d9ee37f9247_b.jpg\"/><figcaption>图 4 MinBox 对象构建</figcaption></figure><h2>HM对象跟踪</h2><p>HM对象跟踪器跟踪分段检测到的障碍物。通常，它通过将当前检测与现有跟踪列表相关联，来形成和更新跟踪列表，如不再存在，则删除旧的跟踪列表，并在识别出新的检测时生成新的跟踪列表。 更新后的跟踪列表的运动状态将在关联后进行估计。 在HM对象跟踪器中，<b>匈牙利算法</b>(Hungarian algorithm)用于检测到跟踪关联，并采用 <b>鲁棒卡尔曼滤波器</b>(Robust Kalman Filter) 进行运动估计。</p><h2>检测跟踪关联（Detection-to-Track Association）</h2><p>当将检测与现有跟踪列表相关联时，Apollo构建了一个二分图，然后使用 <b>匈牙利算法</b>以最小成本（距离）找到最佳检测跟踪匹配。</p><p><b>计算关联距离矩阵</b></p><p>首先，建立一个关联距离矩阵。根据一系列关联特征（包括运动一致性，外观一致性等）计算给定检测和一条轨迹之间的距离。HM跟踪器距离计算中使用的一些特征如下所示：</p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-aed8d49c32daacb7d0a4c36cea32b369_b.jpg\" data-caption=\"\" data-rawwidth=\"769\" data-rawheight=\"196\" class=\"origin_image zh-lightbox-thumb\" width=\"769\" data-original=\"https://pic2.zhimg.com/v2-aed8d49c32daacb7d0a4c36cea32b369_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;769&#39; height=&#39;196&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"769\" data-rawheight=\"196\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"769\" data-original=\"https://pic2.zhimg.com/v2-aed8d49c32daacb7d0a4c36cea32b369_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-aed8d49c32daacb7d0a4c36cea32b369_b.jpg\"/></figure><p>此外，还有一些重要的距离权重参数，用于将上述关联特征组合成最终距离测量。</p><p><b>匈牙利算法的二分图匹配</b></p><p>给定关联距离矩阵，如图5所示，Apollo构造了一个二分图，并使用 <b>匈牙利算法</b>通过最小化距离成本找到最佳的检测跟踪匹配。它解决了O(n\\^3)时间复杂度中的赋值问题。 为了提高其计算性能，通过删除距离大于合理的最大距离阈值的顶点，将原始的二分图切割成子图后实现了匈牙利算法。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-b55f66297780aec0b13734fb6c2db2ca_b.jpg\" data-rawwidth=\"209\" data-rawheight=\"357\" class=\"content_image\" width=\"209\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;209&#39; height=&#39;357&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"209\" data-rawheight=\"357\" class=\"content_image lazy\" width=\"209\" data-actualsrc=\"https://pic3.zhimg.com/v2-b55f66297780aec0b13734fb6c2db2ca_b.jpg\"/><figcaption>图 5 二分图匹配（Bipartite Graph Matching）</figcaption></figure><h2>跟踪动态预估 （Track Motion Estimation）</h2><p>在检测到跟踪关联之后，HM对象跟踪器使用 <b>鲁棒卡尔曼滤波器</b>来利用恒定速度运动模型估计当前跟踪列表的运动状态。 运动状态包括锚点和速度，分别对应于3D位置及其3D速度。 为了克服由不完美的检测引起的可能的分心，在跟踪器的滤波算法中实现了鲁棒统计技术。</p><p><b>观察冗余</b></p><p>在一系列重复观测中选择速度测量，即滤波算法的输入，包括锚点移位、边界框中心偏移、边界框角点移位等。冗余观测将为滤波测量带来额外的鲁棒性， 因为所有观察失败的概率远远小于单次观察失败的概率。</p><p><b>分解</b></p><p>高斯滤波算法 （Gaussian Filter algorithms）总是假设它们的高斯分布产生噪声。 然而，这种假设可能在运动预估问题中失败，因为其测量的噪声可能来自脂肪分布。 为了克服更新增益的过度估计，在过滤过程中使用故障阈值。</p><p><b>更新关联质量</b></p><p>原始卡尔曼滤波器更新其状态不区分其测量的质量。 然而，质量是滤波噪声的有益提示，可以估计。 例如，在关联步骤中计算的距离可以是一个合理的测量质量估计。 根据关联质量更新过滤算法的状态，增强了运动估计问题的鲁棒性和平滑度。</p><p>HM对象跟踪器的高级工作流程如图6所示。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-affc24e7c2e7722bddaf6330516fe910_b.jpg\" data-rawwidth=\"649\" data-rawheight=\"213\" class=\"origin_image zh-lightbox-thumb\" width=\"649\" data-original=\"https://pic1.zhimg.com/v2-affc24e7c2e7722bddaf6330516fe910_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;649&#39; height=&#39;213&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"649\" data-rawheight=\"213\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"649\" data-original=\"https://pic1.zhimg.com/v2-affc24e7c2e7722bddaf6330516fe910_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-affc24e7c2e7722bddaf6330516fe910_b.jpg\"/><figcaption>图 6 HM对象跟踪器工作流</figcaption></figure><p>1）构造跟踪对象并将其转换为世界坐标。</p><p>2）预测现有跟踪列表的状态，并对其匹配检测。</p><p>3）在更新后的跟踪列表中更新运动状态，并收集跟踪结果。</p><h2>参考</h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/zh-cn/%25E5%258C%2588%25E7%2589%2599%25E5%2588%25A9%25E7%25AE%2597%25E6%25B3%2595\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">匈牙利算法</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%25E5%259C%25B0%25E6%2596%25B9%25E5%259D%2590%25E6%25A0%2587%25E7%25B3%25BB/5154246\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">地方坐标系</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//people.eecs.berkeley.edu/~jonlong/long_shelhamer_fcn.pdf\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Fully Convolutional Networks for Semantic Segmentation</a></li></ul>", 
            "topic": [
                {
                    "tag": "百度无人驾驶车", 
                    "tagLink": "https://api.zhihu.com/topics/20047063"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/29723684", 
            "userName": "冯宗宝", 
            "userLink": "https://www.zhihu.com/people/f45590a219abdb40ca49864c057d8f10", 
            "upvote": 40, 
            "title": "线控车辆控制组件与自动驾驶的控制", 
            "content": "<p>Apollo项目中，对参考车辆的要求：“Drive-by-wire”，线控车辆。本文从自动驾驶控制考虑，介绍车辆线控的三个方面：速度(Speed)、转向(Steering Angle)和刹车制动（Break）。</p><p>对于车辆控制的疑问有很多。比如转向，具体跟车辆的交互，是传入转向角度还是力度？刹车制动是由IPC告诉硬件多少力度呢，还是智能到具体的制动百分比就可以？要实现这些控制指令，首先与参考车辆的底盘组组件有很大的关系，要了解与车辆底盘的各个组件交互，就要先了解这些控制组件。</p><h2>速度(Speed)</h2><p>传统发动机节气门操纵机构是通过拉索或者拉杆，一端联接油门踏板，另一端联接节气门连动板而工作。但这种传统油门应用范畴受到限制并缺乏精确性。</p><h2><b>电子油门</b></h2><p>技术的发展，随着定速巡航（Cruise Main）功能的引入，车辆速度靠电子油门控制，即线控油门，现在已经有大量应用。</p><p>电子油门通过位置传感器，传送油门踩踏深浅与快慢的信号，这个信号会被ECU接收和解读，然后再发出控制指令要节气门（throttle）依指令快速或缓和开启它应当张开的角度，这个过程精准而快速。</p><p>电子油门通过用导线来代替拉索或者拉杆，在节气门安装微型电动机，用来驱动节气门开度。一般而言，增减油门就是指通过油门踏板改变发动机节气门开度，从而控制可燃混合气的流量，改变发动机的转速和功率，以适应汽车行驶的需要。</p><p>电子油门的主要功能是把驾驶员踩下油门踏板的角度转换成与其成正比的电压信号，同时把油门踏板的各种特殊位置制成接触开关，把怠速、高负荷、加减速等发动机工况变成电脉冲信号输送给电控发动机的控制器 ECU，以达到供油、喷油与变速等的优化自动控制。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-ee1271c53eb49fbd481eb26e75eaa63d_b.jpg\" data-rawwidth=\"1200\" data-rawheight=\"420\" class=\"origin_image zh-lightbox-thumb\" width=\"1200\" data-original=\"https://pic2.zhimg.com/v2-ee1271c53eb49fbd481eb26e75eaa63d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1200&#39; height=&#39;420&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1200\" data-rawheight=\"420\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1200\" data-original=\"https://pic2.zhimg.com/v2-ee1271c53eb49fbd481eb26e75eaa63d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-ee1271c53eb49fbd481eb26e75eaa63d_b.jpg\"/></figure><p><a href=\"https://link.zhihu.com/?target=http%3A//www.bosch-mobility-solutions.cn/cn/highlights/connected-mobility/active-gas-pedal/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">博世智能电子油门踏板</a></p><p>电子油门控制系统主要由油门踏板、踏板位移传感器、ECU（电控单元）、数据总线、伺服电动机和节气门执行机构组成。位移传感器安装在油门踏板内部，随时监测油门踏板的位置。当监测到油门踏板高度位置有变化，会瞬间将此信息送往ECU，ECU对该信息和其它系统传来的数据信息进行运算处理，计算出一个控制信号，通过线路送到伺服电动机继电器，伺服电动机驱动节气门执行机构，数据总线则是负责系统ECU与其它ECU之间的通讯。在自适应巡航中，则由ESP（ESC）中的ECU来控制电机，进而控制进气门开合幅度，最终控制车速。</p><p><b>与自动驾驶控制关系</b></p><p>接收到规划决策输出的有油门速度，做到自动化的定速巡航。</p><h2>转向(Steering Angle)</h2><h2>电子助力转向（EPS）</h2><p>了解车、开过车的朋友，多少知道点电子助力转向（EPS），如果没有这个助力，为上吨重的车辆转向过程是很费力的，EPS根据驾驶员的转角来增加转向力，达到转向目的。</p><h2>线控转向</h2><p>线控转向技术最先来自航空技术，如今慢慢在汽车行业出现。飞机使用线控技术是因为需要用很快的控制速度，更能灵敏地控制飞机很强的机动性、很高的速度。线控转向取消了方向盘与车轮之间的机械连接，用传感器获得方向盘的转角数据，然后ECU（电子计算单元）将其折算为具体的驱动力数据，用电机推动转向机转动车轮。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-ebf65ce95fe61d69177dd4e89b54762a_b.jpg\" data-rawwidth=\"369\" data-rawheight=\"416\" class=\"content_image\" width=\"369\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;369&#39; height=&#39;416&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"369\" data-rawheight=\"416\" class=\"content_image lazy\" width=\"369\" data-actualsrc=\"https://pic3.zhimg.com/v2-ebf65ce95fe61d69177dd4e89b54762a_b.jpg\"/></figure><p>                                日产旗下的<a href=\"https://link.zhihu.com/?target=http%3A//www.infiniti.com.cn/vehicles/new-vehicles/Q50/features.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">英菲尼迪Q50</a>是首批使用线控转向的量产车辆</p><p>线控转向的缺点是需要模拟一个方向盘的力回馈，因为方向盘没有和机械部分连接，驾驶者感觉不到路面传导来的阻力，会失去路感，不过在无人车上，就无需考虑这个了。在Q50L上线控转向还保留机械装置，保证即使电子系统全部失效，依然可以正常转向。</p><p>Question：控制命令中转向角度还是力度？</p><p>线控助力将解答我的一个问题，就是控制命令中转向角度还是力度的问题，其实这个问题的答案就在于转向所用的技术，如果是线控转向，必然是角度。</p><p>率先将线控转向技术运用与量产线的Q50，价格自然不便宜。那么一般的电子转向助力对转向的支持如何？是否意味着跟自动驾驶说拜拜？</p><h2>制动</h2><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-30c9b50b14d5341f2697e8100f7b17ec_b.jpg\" data-rawwidth=\"499\" data-rawheight=\"310\" class=\"origin_image zh-lightbox-thumb\" width=\"499\" data-original=\"https://pic1.zhimg.com/v2-30c9b50b14d5341f2697e8100f7b17ec_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;499&#39; height=&#39;310&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"499\" data-rawheight=\"310\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"499\" data-original=\"https://pic1.zhimg.com/v2-30c9b50b14d5341f2697e8100f7b17ec_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-30c9b50b14d5341f2697e8100f7b17ec_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>传统液压制动原理</p><p>传统制动系统主要由真空助力器、主缸、储液壶、轮缸、制动鼓或制动碟构成。当驾驶者踩下制动踏板时，机构会通过液压把驾驶人脚上的力量传递给车轮。但实际上要想让车停下来必须要一个很大的力量，这要比人腿的力量大很多。所以制动系统必须能够放大腿部的力量，要做到这一点有两个办法：</p><ul><li>杠杆作用</li><li>利用帕斯卡定律，用液力放大<br/>制动系统把力量传递给车轮，给车轮一个摩擦力，然后车轮也相应的给地面一个摩擦力。</li></ul><p>人们对制动性能要求的不断提高，传统的液压或者空气制动系统在加人了大量的电子控制系统如ABS、ESP等后，结构和管路布置越发复杂，液压（空气）回路泄露的隐患也加大，同时装配和维修的难度也随之提高。</p><p>制动控制是自动驾驶执行系统的重要部分，目前ADAS与制动系统高度关联的功能模块包括ESP（车身稳定系统）/AP（自动泊车）/ACC（自适应巡航）/AEB（自动紧急制动）等。<br/></p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-5a06af8ebd49f2a441f06d2e85aef402_b.jpg\" data-rawwidth=\"740\" data-rawheight=\"482\" class=\"origin_image zh-lightbox-thumb\" width=\"740\" data-original=\"https://pic3.zhimg.com/v2-5a06af8ebd49f2a441f06d2e85aef402_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;740&#39; height=&#39;482&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"740\" data-rawheight=\"482\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"740\" data-original=\"https://pic3.zhimg.com/v2-5a06af8ebd49f2a441f06d2e85aef402_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-5a06af8ebd49f2a441f06d2e85aef402_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>线控制动系统与各个模块的高度关联</p><h2>线控液压制动器(EHB)</h2><p>EHB（Electro-Hydraulic Brake）即线控液压制动器，是在传统的液压制动器基础上发展而来的。EHB用一个综合的制动模块来取代传统制动器中的压力调节器和ABS模块等，这个综合制动模块就包含了电机、泵、蓄电池等等部件，它可以产生并储存制动压力，并可分别对4个轮胎的制动力矩进行单独调节。比传统的液压制动器，EHB有了显著的进步，其结构紧凑、改善了制动效能、控制方便可靠、制动噪声显著减小、不需要真空装置、有效减轻了制动踏板的打脚、提供了更好的踏板感觉。由于模块化程度的提高，在车辆设计过程中又提高了设计的灵活性、减少了制动系统的零部件数量、节省了车内制动系统的布置、空间。可见相比传统的液压制动器，EHB有了很大的改善。但是EHB还是有其局限性，那就是整个系统仍然需要液压部件，其基本的还是离不开制动液。</p><h2>电子机械制动(EMB)</h2><p>如果把EHB称为“湿”式brake-by-wire制动系统的话，那么EMB就是“干”式brake-by-wire制动系统。</p><p>EMB全称Electro Mechanical Brake，和EHB的最大区别就在于它不再需要制动液和液压部件，制动力矩完全是通过安装在4个轮胎上的由电机驱动的执行机构产生。因此相应的取消了<b>制动主缸</b>、<b>液压管路</b>等等，可以大大简化制动系统的结构、便于布置、装配和维修，更为显著的是随着制动液的取消，对于环境的污染大大降低了。<br/></p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-366debf804f500af08b56bbe462338d6_b.jpg\" data-rawwidth=\"693\" data-rawheight=\"313\" class=\"origin_image zh-lightbox-thumb\" width=\"693\" data-original=\"https://pic3.zhimg.com/v2-366debf804f500af08b56bbe462338d6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;693&#39; height=&#39;313&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"693\" data-rawheight=\"313\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"693\" data-original=\"https://pic3.zhimg.com/v2-366debf804f500af08b56bbe462338d6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-366debf804f500af08b56bbe462338d6_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>西门子 VDO的EMB示意图</p><p>因此结构相对简单、功能集成可靠的电子机械制动系统越来越受到青睐，可以预见EMB将最终取代传统的液压（空气）制动器，成为未来车辆的发展方向。</p><p>总结一下制动组件的发展里程：</p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-cfda87e9c60de67425b4e3488e4e3ee8_b.jpg\" data-rawwidth=\"723\" data-rawheight=\"75\" class=\"origin_image zh-lightbox-thumb\" width=\"723\" data-original=\"https://pic1.zhimg.com/v2-cfda87e9c60de67425b4e3488e4e3ee8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;723&#39; height=&#39;75&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"723\" data-rawheight=\"75\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"723\" data-original=\"https://pic1.zhimg.com/v2-cfda87e9c60de67425b4e3488e4e3ee8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-cfda87e9c60de67425b4e3488e4e3ee8_b.jpg\"/></figure><p>Question:说了这么多，线控制动与自动驾驶的关联如何，线控制动需要什么样的参数才能达到制动效果？通过下面Apollo与线控各组件的交互过程，可以解答这个问题。</p><h2>Apollo与线控控制组件的交互</h2><p>Apollo自动驾驶中，数据主要来源于传感器的原始数据，包括图像、激光雷达、雷达等。end-to-end输入以图像为主。输出是车辆的控制决策指令，如方向盘角度、加速、刹车。</p><p>策略规划（planning）</p><ul><li>输入：定位、感知、预测</li><li>输出：无碰撞、舒适的轨道</li></ul><p>控制模块(control)</p><ul><li>输入：</li><ul><li>车道规划</li><li>车辆状态</li><li>HMI自动状态切换</li></ul><li>输出：给canbus模块执行的控制命令（转向，气节门，制动）</li></ul><p>Canbus模块</p><ul><li>输入：</li><ul><li>控制命令</li></ul><li>输出：底盘接受，执行，并给出状态反馈</li><ul><li>底盘状态</li><li>底盘详细状态</li></ul></ul><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-d370539ad4e41cc3b974eb38da2b4e32_b.jpg\" data-rawwidth=\"750\" data-rawheight=\"368\" class=\"origin_image zh-lightbox-thumb\" width=\"750\" data-original=\"https://pic3.zhimg.com/v2-d370539ad4e41cc3b974eb38da2b4e32_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;750&#39; height=&#39;368&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"750\" data-rawheight=\"368\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"750\" data-original=\"https://pic3.zhimg.com/v2-d370539ad4e41cc3b974eb38da2b4e32_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-d370539ad4e41cc3b974eb38da2b4e32_b.jpg\"/></figure><p>底盘组件接受控制消息（进入自动驾驶状态），通过Can执行Update:</p><ul><li>齿轮（Gear）控制</li><li>气节门(Throttle)控制，调整速度</li><li>制动（Break）控制</li><li>根据预测给出的转向目标、转向速率做响应的调整</li><li>如果有信号灯，设置喇叭（horn）、信号灯(turningSignal)、灯光光束(Beam)等</li></ul><p>以Lincoln为参考车辆实现的自动驾驶状态的控制序列：<br/></p><div class=\"highlight\"><pre><code class=\"language-text\">ErrorCode LincolnController::EnableAutoMode() {\n  if (driving_mode() == Chassis::COMPLETE_AUTO_DRIVE) {\n    AINFO &lt;&lt; &#34;already in COMPLETE_AUTO_DRIVE mode&#34;;\n    return ErrorCode::OK;\n  }\n  brake_60_-&gt;set_enable();// 制动可用\n  throttle_62_-&gt;set_enable(); // 气节门可用\n  steering_64_-&gt;set_enable(); // 转向请求可用\n\n  can_sender_-&gt;Update();\n  const int32_t flag =\n      CHECK_RESPONSE_STEER_UNIT_FLAG | CHECK_RESPONSE_SPEED_UNIT_FLAG;\n  if (!CheckResponse(flag, true)) {\n    AERROR &lt;&lt; &#34;Failed to switch to COMPLETE_AUTO_DRIVE mode.&#34;;\n    Emergency();\n    return ErrorCode::CANBUS_ERROR;\n  } else {\n    set_driving_mode(Chassis::COMPLETE_AUTO_DRIVE);\n    AINFO &lt;&lt; &#34;Switch to COMPLETE_AUTO_DRIVE mode ok.&#34;;\n    return ErrorCode::OK;\n  }\n}</code></pre></div><p class=\"ztext-empty-paragraph\"><br/></p><p>在与底盘各组件交互的过程中，组件控制需要基于ProtocolData实现与各组件的控制协议，确保控制命令在个性化平台上，兼容处理无误。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-188201b71228464e2f9e5c3783488b56_b.jpg\" data-rawwidth=\"1322\" data-rawheight=\"325\" class=\"origin_image zh-lightbox-thumb\" width=\"1322\" data-original=\"https://pic3.zhimg.com/v2-188201b71228464e2f9e5c3783488b56_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1322&#39; height=&#39;325&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"1322\" data-rawheight=\"325\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1322\" data-original=\"https://pic3.zhimg.com/v2-188201b71228464e2f9e5c3783488b56_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-188201b71228464e2f9e5c3783488b56_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>Apollo实现的众多Lincoln数据协议</p><h2>总结</h2><ul><li>梳理了车辆自动驾驶的基础，从三方面介绍了线控硬件组件：速度(Speed)、转向(Steering Angle)和刹车制动（Break）；</li><li>自动驾驶从预测的指令，到canbus到车辆控制器（vehicle controller）的传递执行过程；</li><li>参考车辆需要基于ProtocolData基类实现自己的数据协议；</li></ul><h2>引用参考</h2><ul><li><a href=\"https://www.zhihu.com/question/23704461\" class=\"internal\">汽车刹车的原理是什么？</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.infiniti-cdn.net/content/dam/Infiniti/China/Homepage/brochure/Q50_Brochure_v1.pdf\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Q50_产品手册_v1.pdf</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.leiphone.com/news/201703/eoBgkp3qJLEkXLH1.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">新能源汽车和自动驾驶技术需要什么样的制动系统？</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//auto2015.bosch.com.cn/ebrochures2015/automated/cc/cc_at/ibooster/datesheet_ibooster_cn.pdf\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">底盘控制系统iBooster ‒ 不依赖真空源的机电伺服助力机构pdf</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//auto.163.com/14/0505/17/9RGFDJHM00084TUP.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">自动驾驶的又一步 博世iBooster技术解读</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//auto.163.com/14/0414/18/9PQFVFQK00084TUP_all.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">从战斗机到Q50 英菲尼迪DAS转向技术体验（全文）</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.chinabaike.com/t/9675/2013/0910/1523950.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">BOSCH第九代ESP控制系统简介</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.elecfans.com/baike/qichedianzi/cheshendianzixitong/20100311187330.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">车辆EMB制动系统的发展历程简述</a></li></ul><p class=\"ztext-empty-paragraph\"><br/></p><p>原文发表在<a href=\"https://link.zhihu.com/?target=http%3A//www.fzb.me\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">fzb.me</span><span class=\"invisible\"></span></a>博客。</p>", 
            "topic": [
                {
                    "tag": "百度无人驾驶车", 
                    "tagLink": "https://api.zhihu.com/topics/20047063"
                }, 
                {
                    "tag": "无人驾驶车", 
                    "tagLink": "https://api.zhihu.com/topics/19653871"
                }, 
                {
                    "tag": "智能驾驶", 
                    "tagLink": "https://api.zhihu.com/topics/20050439"
                }
            ], 
            "comments": [
                {
                    "userName": "李狗", 
                    "userLink": "https://www.zhihu.com/people/3bb45384a3fec48960b3143a31008ae4", 
                    "content": "brake", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }
    ], 
    "url": "https://zhuanlan.zhihu.com/apollo"
}

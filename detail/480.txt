{
    "title": "数据分析从0到1", 
    "description": "", 
    "followers": [
        "https://www.zhihu.com/people/zm1987-36", 
        "https://www.zhihu.com/people/huayan2012517", 
        "https://www.zhihu.com/people/huoniu-43", 
        "https://www.zhihu.com/people/noregret-91", 
        "https://www.zhihu.com/people/demo-32-91", 
        "https://www.zhihu.com/people/hel0123", 
        "https://www.zhihu.com/people/erp000", 
        "https://www.zhihu.com/people/shandianxia86", 
        "https://www.zhihu.com/people/awekkk", 
        "https://www.zhihu.com/people/liang-zhen-yu-39", 
        "https://www.zhihu.com/people/wei-jie-67-4", 
        "https://www.zhihu.com/people/sunosy", 
        "https://www.zhihu.com/people/chen-chen-51-76-55", 
        "https://www.zhihu.com/people/mo-mo-73-83-84", 
        "https://www.zhihu.com/people/haobao8", 
        "https://www.zhihu.com/people/huang-xiao-38-74", 
        "https://www.zhihu.com/people/he-guo-wei-47", 
        "https://www.zhihu.com/people/xiao-mu-wu-71-52", 
        "https://www.zhihu.com/people/yang-ming-81-2-26", 
        "https://www.zhihu.com/people/luo-po-a-tong-mu", 
        "https://www.zhihu.com/people/chao-ji-a-pa-qi", 
        "https://www.zhihu.com/people/xu-cheng-ming-9", 
        "https://www.zhihu.com/people/gong-yan-zhuo", 
        "https://www.zhihu.com/people/andyandcarol", 
        "https://www.zhihu.com/people/zhi-duo-duo-78", 
        "https://www.zhihu.com/people/ivanvan", 
        "https://www.zhihu.com/people/leeper", 
        "https://www.zhihu.com/people/wang-xiao-peng-30-50"
    ], 
    "article": [
        {
            "url": "https://zhuanlan.zhihu.com/p/68014802", 
            "userName": "山草纽斜齐", 
            "userLink": "https://www.zhihu.com/people/5903a899f206eccf0bf89f4c9821bf42", 
            "upvote": 7, 
            "title": "Excel 学习路线总结", 
            "content": "<p>Excel是平时用到的最多的数据分析软件了，数据录入—快捷操作—公式、透视表、图表—宏/VBA等等,当然，还有其他的诸如power bi、power query等插件，功能非常强大，自己对excel说不上精通，倒也还熟练，以自己的经验讲讲excel的学习路线；</p><p>一、关于基础——你真的知道透视表怎么用吗？</p><p>很多文章都有写关于excel的一些操作，其实正常够用的话，会一些快捷键操作，了解一些简单的公式，同时知道Vlookup、透视表怎么用就足以应付工作了，这篇文章就总结的挺好：</p><p><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/IP-dk3E027wyrq8HUUzfcw\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">让你相见恨晚的Excel技巧大全</a>；</p><p>但是这些操作每个人掌握的程度不同，所以用法不一，呈现出来的效果也就不一样了，举个简单的例子——数据透视表：</p><p>我们正常透视表的使用如下图所示：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-e26128b945db396b4833d61d9dda77cc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1914\" data-rawheight=\"938\" class=\"origin_image zh-lightbox-thumb\" width=\"1914\" data-original=\"https://pic1.zhimg.com/v2-e26128b945db396b4833d61d9dda77cc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1914&#39; height=&#39;938&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1914\" data-rawheight=\"938\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1914\" data-original=\"https://pic1.zhimg.com/v2-e26128b945db396b4833d61d9dda77cc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e26128b945db396b4833d61d9dda77cc_b.jpg\"/></figure><p>很多人直接拉了一个透视表就完事了，然后就在这基础上进行操作，但是其实数据透视表有很多可以设置的选项，点击‘设计’选项卡——报表布局——以表格形式显示/重复所有标签，就得到如下展示：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-5674c7af9a981c24df3001e44011d1af_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1919\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb\" width=\"1919\" data-original=\"https://pic4.zhimg.com/v2-5674c7af9a981c24df3001e44011d1af_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1919&#39; height=&#39;919&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1919\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1919\" data-original=\"https://pic4.zhimg.com/v2-5674c7af9a981c24df3001e44011d1af_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-5674c7af9a981c24df3001e44011d1af_b.jpg\"/></figure><p>如果你想将透视的数据变成如上所示，排版下，几步操作就搞定了，而不需要一个一个再去重新复制粘贴等等，其他诸如切片器、透视图这些功能是一个道理。问题的关键在于你是只知道他的基本用法，而没有细细研究每个选项卡的作用，excel的操作能力就高下立见了，当然，这跟日常的使用场景是分不开的。</p><p>二、关于进阶：只做一次的事情找可行解，重复做的事情找最优解</p><p>如果你已经掌握了一般的快捷键操作，并且可以很好的使用常规公式和透视表等功能，其实已经算是厉害了，但是如果你还想要偷懒，就得研究研究一个新的工具——宏/VBA; 这两个东西的作用是什么呢？简单说就是：只做一次的事情找可行解，重复做的事情找最优解。</p><p>如果每次拿到数据你都要插入固定的几个辅助列，如果每次处理完数据都要将数据按照字段拆分成不同表格，如果客户要求数据必须按照A字段标黄、B字段标红、满足C字段条件的整行隐藏等等，那么VBA会帮你很快的解决这些问题，<b><i>只要是机械重复同样操作的步骤，都可以用VBA代码来解决</i></b>，不需要太复杂，简单的‘录制宏’就可以，代码也很好理解，我觉得并不需要去深入学习VBA，考虑怎么去优化代码提高执行速度等，编程能力弱的，只要录出来的代码能看懂，调几个参数能用就可以，下面是两段自己写的简单的代码，供演示用：</p><div class=\"highlight\"><pre><code class=\"language-vb.net\"><span class=\"p\">#</span><span class=\"n\">每次固定的位置插入几列</span>\n<span class=\"k\">Sub</span> <span class=\"nf\">myinsert</span><span class=\"p\">()</span>\n<span class=\"k\">Dim</span> <span class=\"n\">insertCol</span> <span class=\"ow\">As</span> <span class=\"kt\">String</span>\n<span class=\"n\">insertCol</span> <span class=\"o\">=</span> <span class=\"s\">&#34;R:T,W:Y,AB:AD,AG:AI,AL:AN,AQ:AS,AV:AX,BA:BC,BF:BH,BK:BM,BP:BR,BU:BW,BZ:CB,CE:CG&#34;</span>\n<span class=\"n\">Range</span><span class=\"p\">(</span><span class=\"n\">insertCol</span><span class=\"p\">).</span><span class=\"n\">Insert</span>\n<span class=\"k\">End</span> <span class=\"k\">Sub</span>\n\n<span class=\"p\">#</span><span class=\"n\">满足相关条件的整行隐藏</span>\n<span class=\"k\">Sub</span> <span class=\"nf\">condition_hide</span><span class=\"p\">()</span>\n<span class=\"k\">Dim</span> <span class=\"n\">x</span> <span class=\"ow\">As</span> <span class=\"kt\">Integer</span>\n<span class=\"k\">Dim</span> <span class=\"n\">sht</span> <span class=\"ow\">As</span> <span class=\"n\">Worksheet</span>\n<span class=\"k\">Set</span> <span class=\"n\">sht</span> <span class=\"o\">=</span> <span class=\"n\">Worksheets</span><span class=\"p\">(</span><span class=\"n\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">For</span> <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">1</span> <span class=\"k\">To</span> <span class=\"n\">sht</span><span class=\"p\">.</span><span class=\"n\">UsedRange</span><span class=\"p\">.</span><span class=\"n\">Rows</span><span class=\"p\">.</span><span class=\"n\">Count</span>\n    <span class=\"k\">If</span> <span class=\"p\">(</span><span class=\"n\">sht</span><span class=\"p\">.</span><span class=\"n\">Cells</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">12</span><span class=\"p\">).</span><span class=\"n\">Interior</span><span class=\"p\">.</span><span class=\"n\">Color</span> <span class=\"o\">=</span> <span class=\"n\">255</span><span class=\"p\">)</span> <span class=\"ow\">And</span> <span class=\"p\">(</span><span class=\"n\">sht</span><span class=\"p\">.</span><span class=\"n\">Cells</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">25</span><span class=\"p\">).</span><span class=\"n\">Value</span> <span class=\"o\">=</span> <span class=\"s\">&#34;0&#34;</span><span class=\"p\">)</span> <span class=\"ow\">And</span> <span class=\"p\">(</span><span class=\"n\">sht</span><span class=\"p\">.</span><span class=\"n\">Cells</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">29</span><span class=\"p\">).</span><span class=\"n\">Value</span> <span class=\"o\">=</span> <span class=\"s\">&#34;0&#34;</span><span class=\"p\">)</span> <span class=\"k\">Then</span>\n        <span class=\"n\">sht</span><span class=\"p\">.</span><span class=\"n\">Rows</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">).</span><span class=\"n\">EntireRow</span><span class=\"p\">.</span><span class=\"n\">Hidden</span> <span class=\"o\">=</span> <span class=\"k\">True</span>\n        <span class=\"k\">End</span> <span class=\"k\">If</span>\n    <span class=\"k\">Next</span> <span class=\"n\">x</span>\n<span class=\"k\">End</span> <span class=\"k\">Sub</span></code></pre></div><p>三、关于插件—Excel的新大陆</p><p>锦上添花、如虎添翼——这就是插件的好处，很多excel常规功能实现不了的功能，插件都能帮你搞定，大幅度的提升操作的便利性，甚至比如说常见的VBA代码——聚光灯、工作表合并与拆分，很多插件都有内置，帮助简单高效的完成工作，知乎搜索‘excel插件’，会有很多相关说明。插件不在多，在于精，对自己好用就行，自己用的是微信公众号：VBA编程学习与实践里面的易用宝，常规用的就是聚光灯和工作表拆分，还有一个公式/文本转数值（因为excel筛选后无法实现跨行转换），页面如下图所示。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-ca7f49245dc1b2dc898d39989d9811e6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1886\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb\" width=\"1886\" data-original=\"https://pic3.zhimg.com/v2-ca7f49245dc1b2dc898d39989d9811e6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1886&#39; height=&#39;919&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1886\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1886\" data-original=\"https://pic3.zhimg.com/v2-ca7f49245dc1b2dc898d39989d9811e6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-ca7f49245dc1b2dc898d39989d9811e6_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>四、关于方法——搜索引擎是你最好的帮手</p><p>用excel比较多的人一般偏数据方向，这类人大多工作的时候交流不多，所以被迫养成要独立解决问题的能力，这个时候搜索引擎就成了你最大的帮手，不懂的或者不知道怎么实现的功能——百度一下，你就知道，包括实现**的快捷键、excel怎么录制宏、有哪些比较好的excel插件，答案都写在网络上，你需要做的就是在需要的时候，找到他就好了。积小流以成江海，提升excel操作能力我能想到的最好的方法就是自己多积累多学习，举例如下：</p><p>快速访问工具栏——粘贴为值</p><p>工作中用的很多的操作就是—复制-粘贴为值，想着怎么用一个快捷键直接一次性完成‘粘贴为值’的动作，而不用每次右击再选择，百度搜一下，发现方法很简单：</p><p>文件——选项——快速访问工具栏——所有命令——找到‘粘贴值’——添加，如下图所示：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-ca89ef1273da56ab7619579ae4262ab4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"838\" data-rawheight=\"671\" class=\"origin_image zh-lightbox-thumb\" width=\"838\" data-original=\"https://pic1.zhimg.com/v2-ca89ef1273da56ab7619579ae4262ab4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;838&#39; height=&#39;671&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"838\" data-rawheight=\"671\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"838\" data-original=\"https://pic1.zhimg.com/v2-ca89ef1273da56ab7619579ae4262ab4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-ca89ef1273da56ab7619579ae4262ab4_b.jpg\"/></figure><p>回到excel界面——按下‘alt’键，左上角1,2,3,4就是对于的快捷操作项，alt+1就是保存，alt+2是撤销，一次类推，alt+4就是粘贴为值的快捷键，快捷键的顺序可以在快速访问工具栏中调整，可以将alt+1调整为‘粘贴为值’，其他增加常用操作快捷键方式与添加‘粘贴为值’方式雷同；再其他的比如——自定义排序、批量合并单元格/批量填充合并单元格、快速生成下拉列表、条件格式的使用等操作，也都是通过自己自行搜索解决的。</p><p>总结：想要在工作中充分发挥excel的能力，有一颗偷懒的心很重要~</p>", 
            "topic": [
                {
                    "tag": "Excel 技巧", 
                    "tagLink": "https://api.zhihu.com/topics/19933761"
                }, 
                {
                    "tag": "Microsoft Excel", 
                    "tagLink": "https://api.zhihu.com/topics/19567930"
                }, 
                {
                    "tag": "数据分析", 
                    "tagLink": "https://api.zhihu.com/topics/19559424"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/67652497", 
            "userName": "山草纽斜齐", 
            "userLink": "https://www.zhihu.com/people/5903a899f206eccf0bf89f4c9821bf42", 
            "upvote": 0, 
            "title": "python机器学习（1）—数据挖掘概述", 
            "content": "<p>一.准备python环境</p><div class=\"highlight\"><pre><code class=\"language-text\">import pandas as pd\nimport numpy  as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport statsmodels.api as sm\nplt.rcParams[&#39;font.sans-serif&#39;] = [u&#39;SimHei&#39;]\nplt.rcParams[&#39;axes.unicode_minus&#39;] = False</code></pre></div><p>二. sklearn的样本数据集</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span class=\"kn\">from</span> <span class=\"nn\">sklearn</span> <span class=\"k\">import</span> <span class=\"n\">datasets</span> <span class=\"c1\">#引入datasets包</span>\n<span class=\"n\">boston</span><span class=\"o\">=</span><span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">load_boston</span><span class=\"p\">()</span>\n<span class=\"c1\">#转换为数据框</span>\n<span class=\"n\">bostondf</span><span class=\"o\">=</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">feature_names</span><span class=\"p\">)</span>\n<span class=\"n\">bostondf</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span></code></pre></div><p>三.sklearn基本操作入门</p><p>(1)标准的类参数</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span class=\"c1\"># class sklearn.大类名称.Modelclass（类参数列表）</span>\n<span class=\"c1\"># Modelclass中基本通用的参数：</span>\n<span class=\"c1\"># fit_intercept=True  模型包括常数项，使用该选项是就不用在数据框中设定cons</span>\n<span class=\"c1\"># n_jobs=1 使用的例程数，等于-1时使用全部cpu</span>\n<span class=\"c1\"># max_iter=200, int,模型最大迭代次数</span>\n<span class=\"c1\"># tol=0.0001 模型收敛标准</span>\n<span class=\"c1\"># warm_start=False 是否使用上一次的拟合结果作为本次初始值</span>\n<span class=\"c1\"># sample_weight=None 案例权重</span>\n<span class=\"c1\"># random_state=None 随机器的设定</span>\n<span class=\"c1\"># shuffle=True 是否在拆分前对样本做随机排列</span>\n<span class=\"c1\">#大多数参数都会有默认值</span>\n\n\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn</span> <span class=\"k\">import</span> <span class=\"n\">preprocessing</span>\n<span class=\"c1\">#完整的类名称为 sklearn.preprocessing.StanderScaler</span>\n<span class=\"n\">std</span><span class=\"o\">=</span><span class=\"n\">preprocessing</span><span class=\"o\">.</span><span class=\"n\">StandardScaler</span><span class=\"p\">()</span><span class=\"c1\">#类的实例</span>\n<span class=\"n\">std</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn</span> <span class=\"k\">import</span> <span class=\"n\">linear_model</span>\n<span class=\"c1\"># 完整的类名称为 sklearn.linear_model.LinearRegression()</span>\n<span class=\"n\">reg</span><span class=\"o\">=</span><span class=\"n\">linear_model</span><span class=\"o\">.</span><span class=\"n\">LinearRegression</span><span class=\"p\">()</span>\n<span class=\"n\">reg</span></code></pre></div><p>(2)Moduleclass中基本通用的类方法</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span class=\"c1\"># get_params([deep]):获取模型的具体参数设定</span>\n<span class=\"c1\"># set_parama(**params):重新设定模型参数</span>\n<span class=\"c1\"># fit(X,y[,sample_weight]):使用数据拟合模型/方法</span>\n    \n<span class=\"c1\"># 特征处理class：Preprocessing、降维、Feature extraction/selection</span>\n<span class=\"c1\"># transform(X[,y]):使用拟合好的模型对指定数据进行转换</span>\n<span class=\"c1\"># fit_transform(X[,y]):对数据拟合相应的方法，并且进行转换</span>\n    \n<span class=\"c1\"># 建模分析class：Classfication、Regression、Clustering</span>\n<span class=\"c1\"># predict(X）：使用拟合好的模型对指定数据进行转换</span>\n<span class=\"c1\"># predict_proba(X):模型给出的每个案例（类别）的预测概率</span>\n<span class=\"c1\"># Score(X,y[,sample_weight]):返回模型决定系数/模型准确度评价指标</span>\n\n\n<span class=\"n\">std</span><span class=\"o\">.</span><span class=\"n\">get_params</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#使用fit方法，使std类获取数据中相应的信息</span>\n<span class=\"n\">std</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span><span class=\"c1\">#求每列均值</span>\n\n<span class=\"n\">std</span><span class=\"o\">.</span><span class=\"n\">mean_</span><span class=\"err\">，</span><span class=\"n\">std</span><span class=\"o\">.</span><span class=\"n\">var_</span>\n\n<span class=\"n\">ZX</span><span class=\"o\">=</span><span class=\"n\">std</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)[:</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"c1\">#每列每行每个数据减去均值再除以标准差，做标准化</span>\n<span class=\"n\">ZX</span><span class=\"p\">[:</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n\n<span class=\"n\">std</span><span class=\"o\">.</span><span class=\"n\">fit_transform</span><span class=\"p\">(</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)[:</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"c1\">#相当于先fit，再transform</span>\n\n<span class=\"c1\">#使用fit方法，使reg类基于指定数据估计出回归模型的相应参数</span>\n<span class=\"n\">reg</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">target</span><span class=\"p\">)</span>\n\n<span class=\"n\">reg</span><span class=\"o\">.</span><span class=\"n\">coef_</span> <span class=\"c1\">#回归系数</span>\n\n<span class=\"n\">pred</span><span class=\"o\">=</span><span class=\"n\">reg</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"n\">pred</span><span class=\"p\">[:</span><span class=\"mi\">10</span><span class=\"p\">]</span>\n\n<span class=\"n\">reg</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">target</span><span class=\"p\">)</span></code></pre></div><p>(3) Moduleclass中基本通用的类属性</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span class=\"c1\"># Moduleclass中基本通用的类属性</span>\n<span class=\"c1\"># #模型拟合前，数据可能不存在</span>\n<span class=\"c1\"># coef_: array,多因变量时为二维数组</span>\n<span class=\"c1\"># intercept_:常数项</span>\n<span class=\"c1\"># classes_:每个输出的类标签</span>\n<span class=\"c1\"># n_classes:int or list,类别数</span>\n<span class=\"c1\"># loss_:损失函数计算出来的当前损失值</span>\n<span class=\"c1\"># n_iter:迭代步数</span>\n\n<span class=\"n\">std</span><span class=\"o\">.</span><span class=\"n\">mean_</span><span class=\"p\">,</span><span class=\"n\">std</span><span class=\"o\">.</span><span class=\"n\">scale_</span><span class=\"c1\">#标准差</span>\n\n<span class=\"n\">reg</span><span class=\"o\">.</span><span class=\"n\">intercept_</span><span class=\"p\">,</span><span class=\"n\">reg</span><span class=\"o\">.</span><span class=\"n\">coef_</span></code></pre></div><p>(4)简化的调用函数</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span class=\"c1\">#特征处理class往往会有简化版本的函数可供调用，功能类似，但使用上更简单</span>\n<span class=\"k\">class</span> <span class=\"nc\">sklearn</span><span class=\"o\">.</span><span class=\"n\">preprocessing</span><span class=\"o\">.</span><span class=\"n\">StandScaler</span><span class=\"p\">()</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sklearn</span>\n<span class=\"n\">sklearn</span><span class=\"o\">.</span><span class=\"n\">preprocessing</span><span class=\"o\">.</span><span class=\"n\">scale</span><span class=\"p\">()</span>\n\n<span class=\"n\">preprocessing</span><span class=\"o\">.</span><span class=\"n\">scale</span><span class=\"p\">(</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)[:</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"c1\">#标准正态变换</span></code></pre></div><p>(5)模型的保存（持久化）</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span class=\"c1\"># 可以直接通过使用python的pickle模块将训练好的模块保存为外部文件，但最好使用sklearn中的joblib模块进行操作</span>\n\n<span class=\"c1\">#保存为外部文件 ，externals#(外部的)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.externals</span> <span class=\"k\">import</span> <span class=\"n\">joblib</span>\n<span class=\"n\">joblib</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"p\">,</span><span class=\"s1\">&#39;std.pkl&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">joblib</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">reg</span><span class=\"p\">,</span><span class=\"s1\">&#39;reg.pkl&#39;</span><span class=\"p\">)</span> <span class=\"c1\">#(路径)</span>\n\n<span class=\"c1\">#读入外部保存的文件</span>\n<span class=\"n\">reg2</span><span class=\"o\">=</span><span class=\"n\">joblib</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;reg.pkl&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">reg2</span><span class=\"o\">.</span><span class=\"n\">coef_</span></code></pre></div><p>四.实战练习</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span class=\"c1\"># 实战练习：加载sklearn自带的iris数据集，熟悉该数据集的各种属性，并尝试将其转换为数据框。</span>\n<span class=\"c1\"># 尝试在不参考任何帮助文档的情况下，按照sklearn中的标准api操作方式，使用BP神经网络对iris数据进行拟合，并返回各案例的预测类别、预测概率等结果</span>\n<span class=\"c1\"># BP神经网络对应的类为：class sklearn.neutal_network.MLPClassifier()</span>\n<span class=\"c1\"># 此处只为api操作演示，不进一步讨论模型拟合前的数据预处理问题</span>\n<span class=\"c1\"># 将上述中生成的模型存储为外部文件，并重新读入。</span>\n\n<span class=\"c1\"># 1.加载iris数据集</span>\n<span class=\"n\">iris</span><span class=\"o\">=</span><span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">load_iris</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># 2.熟悉数据集的属性</span>\n<span class=\"c1\"># iris.data,iris.feature_names,iris.target_names,iris.target</span>\n\n<span class=\"c1\"># 3.数据集转换为数据框</span>\n<span class=\"n\">irisdf</span><span class=\"o\">=</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">feature_names</span><span class=\"p\">)</span>\n<span class=\"n\">irisdf</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># 4.使用BP神经网络对iris数据进行拟合</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn</span> <span class=\"k\">import</span> <span class=\"n\">neural_network</span>\n<span class=\"n\">MLP</span><span class=\"o\">=</span><span class=\"n\">neural_network</span><span class=\"o\">.</span><span class=\"n\">MLPClassifier</span><span class=\"p\">()</span>\n<span class=\"n\">MLP</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">target</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#5.查看模型参数  </span>\n<span class=\"n\">MLP</span><span class=\"o\">.</span><span class=\"n\">get_params</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># 6.返回各案例的预测类别、预测概率</span>\n<span class=\"c1\"># # 类方法:predict_proba(X):模型给出的每个案例（类别）的预测概率</span>\n<span class=\"n\">MLP</span><span class=\"o\">.</span><span class=\"n\">predict_proba</span><span class=\"p\">(</span><span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"n\">MLP</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># 7.将上述中生成的模型存储为外部文件，并重新读入。</span>\n<span class=\"n\">joblib</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">MLP</span><span class=\"p\">,</span><span class=\"s1\">&#39;mlp.pkl&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">MLP2</span><span class=\"o\">=</span><span class=\"n\">joblib</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;mlp.pkl&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">MLP2</span><span class=\"o\">.</span><span class=\"n\">alpha</span>\n\n<span class=\"c1\">#8.查看预测准确度</span>\n<span class=\"n\">MLP</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"n\">iris</span><span class=\"o\">.</span><span class=\"n\">target</span><span class=\"p\">)</span></code></pre></div><p></p>", 
            "topic": [
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }, 
                {
                    "tag": "机器学习", 
                    "tagLink": "https://api.zhihu.com/topics/19559450"
                }, 
                {
                    "tag": "数据挖掘入门", 
                    "tagLink": "https://api.zhihu.com/topics/19693875"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/67392052", 
            "userName": "山草纽斜齐", 
            "userLink": "https://www.zhihu.com/people/5903a899f206eccf0bf89f4c9821bf42", 
            "upvote": 0, 
            "title": "SQL Server练习45题（MYSQL语法）", 
            "content": "<div class=\"highlight\"><pre><code class=\"language-text\">以下均为MYSQL语法，SQL语句不区分大小写，但是有约定俗成的固定的书写规范：\n1.关键字和函数名称全部大写\n2.数据库名称、表名称、字段名称全部小写\n3.SQL语句必须以分号结尾\n为方便观看，文中语句均改为小写且未使用分号，具体实践中需遵守书写规范，养成良好的书写习惯。</code></pre></div><p>一、创建测试数据</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"k\">CREATE</span> <span class=\"k\">DATABASE</span> <span class=\"n\">student</span><span class=\"p\">;</span>\n<span class=\"c1\">-- 学生表 Student\n</span><span class=\"c1\"></span><span class=\"k\">create</span> <span class=\"k\">table</span> <span class=\"nf\">Student</span><span class=\"p\">(</span><span class=\"n\">S</span> <span class=\"kt\">varchar</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">),</span><span class=\"n\">Sname</span> <span class=\"nf\">nvarchar</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">),</span><span class=\"n\">Sage</span> <span class=\"kt\">datetime</span><span class=\"p\">,</span><span class=\"n\">Ssex</span> <span class=\"nf\">nvarchar</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">));</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">Student</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;01&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;赵雷&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;1990-01-01&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;男&#39;</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">Student</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;02&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;钱电&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;1990-12-21&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;男&#39;</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">Student</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;03&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;孙风&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;1990-05-20&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;男&#39;</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">Student</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;04&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;李云&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;1990-08-06&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;男&#39;</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">Student</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;05&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;周梅&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;1991-12-01&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;女&#39;</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">Student</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;06&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;吴兰&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;1992-03-01&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;女&#39;</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">Student</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;07&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;郑竹&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;1989-07-01&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;女&#39;</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">Student</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;08&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;王菊&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;1990-01-20&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;女&#39;</span><span class=\"p\">);</span>\n<span class=\"c1\">-- 科目表 Course\n</span><span class=\"c1\"></span><span class=\"k\">create</span> <span class=\"k\">table</span> <span class=\"nf\">Course</span><span class=\"p\">(</span><span class=\"n\">C</span> <span class=\"kt\">varchar</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">),</span><span class=\"n\">Cname</span> <span class=\"nf\">nvarchar</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">),</span><span class=\"n\">T</span> <span class=\"kt\">varchar</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">));</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">Course</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;01&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;语文&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;02&#39;</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">Course</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;02&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;数学&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;01&#39;</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">Course</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;03&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;英语&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;03&#39;</span><span class=\"p\">);</span>\n<span class=\"c1\">-- 教师表 Teacher\n</span><span class=\"c1\"></span><span class=\"k\">create</span> <span class=\"k\">table</span> <span class=\"nf\">Teacher</span><span class=\"p\">(</span><span class=\"n\">T</span> <span class=\"kt\">varchar</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">),</span><span class=\"n\">Tname</span> <span class=\"nf\">nvarchar</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">));</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">Teacher</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;01&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;张三&#39;</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">Teacher</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;02&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;李四&#39;</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">Teacher</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;03&#39;</span> <span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"s1\">&#39;王五&#39;</span><span class=\"p\">);</span>\n<span class=\"c1\">-- 成绩表 SC\n</span><span class=\"c1\"></span><span class=\"k\">create</span> <span class=\"k\">table</span> <span class=\"nf\">SC</span><span class=\"p\">(</span><span class=\"n\">S</span> <span class=\"kt\">varchar</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">),</span><span class=\"n\">C</span> <span class=\"kt\">varchar</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">),</span><span class=\"n\">score</span> <span class=\"kt\">decimal</span><span class=\"p\">(</span><span class=\"mi\">18</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">));</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;01&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;01&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">80</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;01&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;02&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;01&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;03&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">99</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;02&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;01&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">70</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;02&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;02&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;02&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;03&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">80</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;03&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;01&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">80</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;03&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;02&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">80</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;03&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;03&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">80</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;04&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;01&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;04&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;02&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;04&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;03&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;05&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;01&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">76</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;05&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;02&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">87</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;06&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;01&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;06&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;03&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">34</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;07&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;02&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">89</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">SC</span> <span class=\"k\">values</span><span class=\"p\">(</span><span class=\"s1\">&#39;07&#39;</span> <span class=\"p\">,</span> <span class=\"s1\">&#39;03&#39;</span> <span class=\"p\">,</span> <span class=\"mi\">98</span><span class=\"p\">);</span></code></pre></div><p>二、练习题</p><p>1. 查询&#34; 01 &#34;课程比&#34; 02 &#34;课程成绩高的学生的信息及课程分数</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"err\">查询</span><span class=\"s2\">&#34; 01 &#34;</span><span class=\"err\">课程比</span><span class=\"s2\">&#34; 02 &#34;</span><span class=\"err\">课程成绩高的学生的信息及课程分数</span>\n<span class=\"s2\">&#34;select a.*,b.c,b.score \n</span><span class=\"s2\">from (select * from sc where c=&#39;01&#39;)a \n</span><span class=\"s2\">left join (select * from sc where c=&#39;02&#39;)b \n</span><span class=\"s2\">on a.s=b.s\n</span><span class=\"s2\">where a.score&gt;b.score&#34;</span>\n<span class=\"c1\">#把left join 改成为 inner join，感受下两者的不同；\n</span><span class=\"c1\">#把 where 改成为 and，感受下on 和 where的不同；\n</span><span class=\"c1\"></span>\n<span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"err\">查询同时存在</span><span class=\"s2\">&#34; 01 &#34;</span><span class=\"err\">课程和</span><span class=\"s2\">&#34; 02 &#34;</span><span class=\"err\">课程的情况</span>\n<span class=\"s2\">&#34;select * \n</span><span class=\"s2\">from (select * from sc where c=&#39;01&#39;)a \n</span><span class=\"s2\">left join (select * from sc where c=&#39;02&#39;)b \n</span><span class=\"s2\">on a.s=b.s\n</span><span class=\"s2\">where b.s is not null&#34;</span>\n\n<span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"err\">查询存在</span><span class=\"s2\">&#34; 01 &#34;</span><span class=\"err\">课程但可能不存在</span><span class=\"s2\">&#34; 02 &#34;</span><span class=\"err\">课程的情况</span><span class=\"p\">(</span><span class=\"err\">不存在时显示为</span> <span class=\"no\">null</span> <span class=\"p\">)</span>\n<span class=\"s2\">&#34;select * \n</span><span class=\"s2\">from (select * from sc where c=&#39;01&#39;)a \n</span><span class=\"s2\">left join (select * from sc where c=&#39;02&#39;)b \n</span><span class=\"s2\">on a.s=b.s&#34;</span>\n\n<span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"err\">查询不存在</span><span class=\"s2\">&#34; 01 &#34;</span><span class=\"err\">课程但存在</span><span class=\"s2\">&#34; 02 &#34;</span><span class=\"err\">课程的情况</span>\n<span class=\"s2\">&#34;select * \n</span><span class=\"s2\">from sc \n</span><span class=\"s2\">where c=&#39;02&#39;and s not in(select s from sc where c=&#39;01&#39;)&#34;</span></code></pre></div><p>2.查询平均成绩大于等于 60 分的同学的学生编号和学生姓名和平均成绩</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"err\">方法</span><span class=\"mi\">1</span><span class=\"err\">：</span>\n<span class=\"s2\">&#34;select  sc.s,student.sname ,avg(score) from sc \n</span><span class=\"s2\">left join student \n</span><span class=\"s2\">on sc.s=student.s\n</span><span class=\"s2\">-- where sc.score &gt;= 60(用where也可以)\n</span><span class=\"s2\">group by sc.s\n</span><span class=\"s2\">having avg(score) &gt;= 60&#34;</span>\n\n<span class=\"err\">方法</span><span class=\"mi\">2</span><span class=\"err\">：</span>\n<span class=\"s2\">&#34;select a.s,b.sname,a.dc \n</span><span class=\"s2\">from (select s,avg(score)dc from sc group by s)a\n</span><span class=\"s2\">left join student b \n</span><span class=\"s2\">on a.s=b.s \n</span><span class=\"s2\">where a.dc&gt;=60&#34;</span>\n<span class=\"err\">方法</span><span class=\"mi\">1</span><span class=\"err\">和方法</span><span class=\"mi\">2</span><span class=\"err\">的区别在于</span><span class=\"k\">group</span> <span class=\"n\">by是在子查询内还是子查询外</span><span class=\"err\">，执行速度有差异？</span></code></pre></div><p>3.查询在 SC 表存在成绩的学生信息</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select * from student\n</span><span class=\"s2\">where s in (select distinct s from sc)&#34;</span></code></pre></div><p>4.查询所有同学的学生编号、学生姓名、选课总数、所有课程的总成绩</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"err\">查询所有同学的学生编号、学生姓名、选课总数、所有课程的总成绩</span><span class=\"p\">(</span><span class=\"err\">没成绩的显示为</span> <span class=\"no\">null</span> <span class=\"p\">)</span>\n<span class=\"s2\">&#34;select b.s,b.sname,a.选课总数,a.总成绩 \n</span><span class=\"s2\">from (select s,count(c)选课总数,sum(score)总成绩 from sc group by s)a\n</span><span class=\"s2\">right join student b \n</span><span class=\"s2\">on a.s=b.s&#34;</span>\n<span class=\"c1\">#没成绩显示为null，说明要以student为基准（因为student表没有成绩），所以要用right join\n</span><span class=\"c1\"></span>\n<span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"err\">查有成绩的学生信息</span>\n<span class=\"s2\">&#34;select b.s,b.sname,a.选课总数,a.总成绩 from\n</span><span class=\"s2\">(select s,count(c)选课总数,sum(score)总成绩 from sc group by s)a\n</span><span class=\"s2\">left join student b on a.s=b.s&#34;</span>\n<span class=\"err\">有成绩的为</span> <span class=\"n\">sc表</span><span class=\"err\">，所以用</span><span class=\"k\">left</span> <span class=\"k\">join</span></code></pre></div><p> 5. 查询「李」姓老师的数量 </p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"k\">select</span> <span class=\"nf\">count</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"err\">李姓老师数量</span> \n<span class=\"k\">from</span> <span class=\"n\">teacher</span> \n<span class=\"k\">where</span> <span class=\"n\">tname</span> <span class=\"k\">like</span> <span class=\"s1\">&#39;李%&#39;</span></code></pre></div><p>6. 查询学过「张三」老师授课的同学的信息 </p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select * \n</span><span class=\"s2\">from student \n</span><span class=\"s2\">where s in (select s from sc where c in (select distinct c from sc where s=&#39;01&#39;) )\n</span><span class=\"s2\">\n</span><span class=\"s2\">select * from student  a\n</span><span class=\"s2\">inner  join sc on a.s=sc.s\n</span><span class=\"s2\">where c in (select distinct c from sc where s=&#39;01&#39;)\n</span><span class=\"s2\">group by a.s\n</span><span class=\"s2\">&#34;</span></code></pre></div><p>7. 查询没有学全所有课程的同学的信息</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select * from student \n</span><span class=\"s2\">where s in (select s from sc group by s having count(c)&lt;3)&#34;</span></code></pre></div><p>8. 查询至少有一门课与学号为&#34; 01 &#34;的同学所学相同的同学的信息 </p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select * from \n</span><span class=\"s2\">student \n</span><span class=\"s2\">where s in (select s from sc \n</span><span class=\"s2\">where c in (select distinct c from sc where s=&#39;01&#39;) )\n</span><span class=\"s2\">\n</span><span class=\"s2\">select * from student a\n</span><span class=\"s2\">inner join sc on a.s=sc.s\n</span><span class=\"s2\">where c in (select distinct c from sc where s=&#39;01&#39;)\n</span><span class=\"s2\">group by a.s\n</span><span class=\"s2\">&#34;</span></code></pre></div><p>9.   查询和&#34; 01 &#34;号的同学学习的课程完全相同的其他同学的信息</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select * from \n</span><span class=\"s2\">student \n</span><span class=\"s2\">where s in (select s from sc \n</span><span class=\"s2\">where c in (select distinct c from sc where s=&#39;01&#39;)and s &lt;&gt; &#39;01&#39; \n</span><span class=\"s2\">group by s\n</span><span class=\"s2\">having count(c)&gt;=3 )&#34;</span></code></pre></div><p>10. 查询没学过&#34;张三&#34;老师讲授的任一门课程的学生姓名 </p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select sname from student \n</span><span class=\"s2\">where s not in (select s from sc \n</span><span class=\"s2\">where c in (select c from course where t in (select t from teacher where tname=&#39;张三&#39;)))&#34;</span></code></pre></div><p>11. 查询两门及其以上不及格课程的同学的学号，姓名及其平均成绩 </p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select a.s,a.sname,b.平均成绩\n</span><span class=\"s2\">from student a\n</span><span class=\"s2\">right join \n</span><span class=\"s2\">(select s,avg(score) 平均成绩 from sc where score&lt;60 group by s having count(score)&gt;=2)b\n</span><span class=\"s2\">on a.s=b.s&#34;</span></code></pre></div><p>12. 检索&#34; 01 &#34;课程分数小于 60，按分数降序排列的学生信息</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"k\">select</span> <span class=\"n\">s</span> <span class=\"p\">,</span><span class=\"n\">score</span> \n<span class=\"k\">from</span> <span class=\"n\">sc</span> \n<span class=\"k\">where</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;01&#39;</span> <span class=\"k\">and</span> <span class=\"n\">score</span><span class=\"o\">&lt;</span><span class=\"mi\">60</span> \n<span class=\"k\">order</span> <span class=\"k\">by</span> <span class=\"n\">score</span> <span class=\"k\">desc</span></code></pre></div><p>13. 按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select s,\n</span><span class=\"s2\">max(case c when &#39;01&#39; then score else 0 end)&#39;01&#39;,\n</span><span class=\"s2\">max(case c when &#39;02&#39; then score else 0 end)&#39;02&#39;,\n</span><span class=\"s2\">max(case c when &#39;03&#39; then score else 0 end)&#39;03&#39;,\n</span><span class=\"s2\">avg(score)平均分 \n</span><span class=\"s2\">from sc\n</span><span class=\"s2\">group by s \n</span><span class=\"s2\">order by 平均分 desc&#34;</span></code></pre></div><p>14. 查询各科成绩最高分、最低分和平均分： 以如下形式显示：课程 ID，课程 name，最高分，最低分，平均分，及格率，中等率，优良率，优秀率；及格为&gt;=60，中等为：70-80，优良为：80-90，优秀为：&gt;=90， 要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select \n</span><span class=\"s2\">sc.c ,b.cname,\n</span><span class=\"s2\">max(sc.score)as 最高分,\n</span><span class=\"s2\">min(sc.score)as 最低分,\n</span><span class=\"s2\">avg(sc.score)as 平均分,\n</span><span class=\"s2\">count(*)as 选修人数,\n</span><span class=\"s2\">sum(case when sc.score&gt;=60 then 1 else 0 end )/count(*)as 及格率,\n</span><span class=\"s2\">sum(case when sc.score&gt;=70 and sc.score&lt;80 then 1 else 0 end )/count(*)as 中等率,\n</span><span class=\"s2\">sum(case when sc.score&gt;=80 and sc.score&lt;90 then 1 else 0 end )/count(*)as 优良率,\n</span><span class=\"s2\">sum(case when sc.score&gt;=90 then 1 else 0 end )/count(*)as 优秀率 \n</span><span class=\"s2\">from sc\n</span><span class=\"s2\">left join course b on b.c=sc.c\n</span><span class=\"s2\">group by sc.s\n</span><span class=\"s2\">order by count(*)desc, sc.c asc&#34;</span></code></pre></div><p>15. 按各科成绩进行排序，并显示排名， Score 重复时保留名次空缺</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"k\">select</span> <span class=\"o\">*</span><span class=\"p\">,</span>\n<span class=\"nf\">rank</span><span class=\"p\">()</span><span class=\"nf\">over</span><span class=\"p\">(</span><span class=\"k\">order</span> <span class=\"k\">by</span> <span class=\"n\">score</span> <span class=\"k\">desc</span><span class=\"p\">)</span><span class=\"err\">排名</span> \n<span class=\"k\">from</span> <span class=\"n\">sc</span>\n<span class=\"c1\">#rank——排名重复时保留名次\n</span><span class=\"c1\"></span><span class=\"mi\">15</span><span class=\"p\">.</span><span class=\"mi\">1</span> <span class=\"err\">按各科成绩进行排序，并显示排名，</span> <span class=\"n\">Score</span> <span class=\"err\">重复时合并名次</span>\n<span class=\"k\">select</span> <span class=\"o\">*</span><span class=\"p\">,</span>\n<span class=\"nf\">dense_rank</span><span class=\"p\">()</span><span class=\"nf\">over</span><span class=\"p\">(</span><span class=\"k\">order</span> <span class=\"k\">by</span> <span class=\"n\">score</span> <span class=\"k\">desc</span><span class=\"p\">)</span><span class=\"err\">排名</span> \n<span class=\"k\">from</span> <span class=\"n\">sc</span>\n<span class=\"c1\">#dense_rank——排名重复时合并名次\n</span><span class=\"c1\">#还有row_number——排名重复时不保留名次</span></code></pre></div><p>16.  查询学生的总成绩，并进行排名，总分重复时保留名次空缺</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select *,\n</span><span class=\"s2\">rank()over(order by 总成绩 desc)排名 \n</span><span class=\"s2\">from (select s,sum(score)总成绩 from sc group by s)a&#34;</span></code></pre></div><p>17. 统计各科成绩各分数段人数：课程编号，课程名称，[100-85]，[85-70]，[70-60]，[60-0] 及所占百分比</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"k\">select</span> <span class=\"n\">sc</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">,</span>\n<span class=\"nf\">sum</span><span class=\"p\">(</span><span class=\"k\">case</span> <span class=\"k\">when</span> <span class=\"n\">sc</span><span class=\"p\">.</span><span class=\"n\">score</span><span class=\"o\">&gt;</span><span class=\"mi\">0</span> <span class=\"k\">and</span> <span class=\"n\">sc</span><span class=\"p\">.</span><span class=\"n\">score</span><span class=\"o\">&lt;=</span><span class=\"mi\">60</span> <span class=\"k\">then</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"mi\">0</span> <span class=\"n\">end</span><span class=\"p\">)</span><span class=\"s1\">&#39;[60-0] &#39;</span><span class=\"p\">,</span>\n<span class=\"nf\">sum</span><span class=\"p\">(</span><span class=\"k\">case</span> <span class=\"k\">when</span> <span class=\"n\">sc</span><span class=\"p\">.</span><span class=\"n\">score</span><span class=\"o\">&gt;</span><span class=\"mi\">60</span> <span class=\"k\">and</span> <span class=\"n\">sc</span><span class=\"p\">.</span><span class=\"n\">score</span><span class=\"o\">&lt;=</span><span class=\"mi\">70</span> <span class=\"k\">then</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"mi\">0</span> <span class=\"n\">end</span><span class=\"p\">)</span><span class=\"s1\">&#39;[70-60] &#39;</span><span class=\"p\">,</span>\n<span class=\"nf\">sum</span><span class=\"p\">(</span><span class=\"k\">case</span> <span class=\"k\">when</span> <span class=\"n\">sc</span><span class=\"p\">.</span><span class=\"n\">score</span><span class=\"o\">&gt;</span><span class=\"mi\">70</span> <span class=\"k\">and</span> <span class=\"n\">sc</span><span class=\"p\">.</span><span class=\"n\">score</span><span class=\"o\">&lt;=</span><span class=\"mi\">85</span> <span class=\"k\">then</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"mi\">0</span> <span class=\"n\">end</span><span class=\"p\">)</span><span class=\"s1\">&#39;[85-70] &#39;</span><span class=\"p\">,</span>\n<span class=\"nf\">sum</span><span class=\"p\">(</span><span class=\"k\">case</span> <span class=\"k\">when</span> <span class=\"n\">sc</span><span class=\"p\">.</span><span class=\"n\">score</span><span class=\"o\">&gt;</span><span class=\"mi\">85</span> <span class=\"k\">and</span> <span class=\"n\">sc</span><span class=\"p\">.</span><span class=\"n\">score</span><span class=\"o\">&lt;=</span><span class=\"mi\">100</span> <span class=\"k\">then</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"mi\">0</span> <span class=\"n\">end</span><span class=\"p\">)</span><span class=\"s1\">&#39;[100-85] &#39;</span>\n<span class=\"k\">from</span> <span class=\"n\">sc</span> \n<span class=\"k\">left</span> <span class=\"k\">join</span> <span class=\"n\">course</span> <span class=\"n\">b</span> <span class=\"k\">on</span> <span class=\"n\">sc</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">b</span><span class=\"p\">.</span><span class=\"n\">c</span>\n<span class=\"k\">group</span> <span class=\"k\">by</span> <span class=\"n\">sc</span><span class=\"p\">.</span><span class=\"n\">c</span>\n<span class=\"c1\">#百分比省略掉了</span></code></pre></div><p>18. 查询各科成绩前三名的记录</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select * \n</span><span class=\"s2\">from( select *,rank()over (partition by c order by score desc)a from sc)b \n</span><span class=\"s2\">where b.a&lt;=3\n</span><span class=\"s2\">\n</span><span class=\"s2\">select a.s,a.c,a.score from sc a \n</span><span class=\"s2\">left join sc b \n</span><span class=\"s2\">on a.c=b.c and a.score&lt;b.score\n</span><span class=\"s2\">group by a.s,a.c,a.score\n</span><span class=\"s2\">having count(b.s)&lt;3\n</span><span class=\"s2\">order by a.c,a.score desc&#34;</span></code></pre></div><p>19. 查询每门课程被选修的学生数</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select c,count(c) 学生数\n</span><span class=\"s2\">from sc\n</span><span class=\"s2\">group by c&#34;</span></code></pre></div><p>20. 查询出只选修两门课程的学生学号和姓名 </p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select s,sname \n</span><span class=\"s2\">from student\n</span><span class=\"s2\">where s in \n</span><span class=\"s2\">(select s from (select s,count(c)课程数 from sc group by s)a where a.课程数=2）&#34;</span></code></pre></div><p>21. 查询男生、女生人数</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"k\">select</span> <span class=\"n\">ssex</span><span class=\"p\">,</span><span class=\"nf\">count</span><span class=\"p\">(</span><span class=\"n\">ssex</span><span class=\"p\">)</span><span class=\"err\">人数</span> \n<span class=\"k\">from</span> <span class=\"n\">student</span> \n<span class=\"k\">group</span> <span class=\"k\">by</span> <span class=\"n\">ssex</span></code></pre></div><p>22. 查询名字中含有「风」字的学生信息</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select * \n</span><span class=\"s2\">from student \n</span><span class=\"s2\">where sname like &#39;%风%&#39;\n</span><span class=\"s2\">&#34;</span></code></pre></div><p>23. 查询同名同性学生名单，并统计同名人数</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select a.*,b.同名人数 \n</span><span class=\"s2\">from student a\n</span><span class=\"s2\">left join  (select sname,ssex,count(*)同名人数 from student group by sname,ssex)b \n</span><span class=\"s2\">on a.sname=b.sname and a.ssex=b.ssex\n</span><span class=\"s2\">where b.同名人数&gt;1\n</span><span class=\"s2\">&#34;</span></code></pre></div><p>24.   查询 1990 年出生的学生名单 </p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"k\">select</span> <span class=\"o\">*</span> \n<span class=\"k\">from</span> <span class=\"n\">student</span> \n<span class=\"k\">where</span>  <span class=\"kt\">year</span><span class=\"p\">(</span><span class=\"n\">sage</span><span class=\"p\">)</span><span class=\"o\">=</span><span class=\"mi\">1990</span>\n<span class=\"c1\">#考察时间函数的用法</span></code></pre></div><p>25. 查询每门课程的平均成绩，结果按平均成绩降序排列，平均成绩相同时，按课程编号升序排列</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select c,avg(score)平均成绩\n</span><span class=\"s2\">from sc\n</span><span class=\"s2\">group by c\n</span><span class=\"s2\">order by 平均成绩 desc,c &#34;</span></code></pre></div><p>26. 查询平均成绩大于等于 85 的所有学生的学号、姓名和平均成绩 </p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select a.s,a.sname,b.平均成绩\n</span><span class=\"s2\">from student a\n</span><span class=\"s2\">left join (select s,avg(score)平均成绩 from sc group by s)b \n</span><span class=\"s2\">on a.s=b.s\n</span><span class=\"s2\">where b.平均成绩&gt;=85&#34;</span></code></pre></div><p>27. 查询课程名称为「数学」，且分数低于 60 的学生姓名和分数 </p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select b.sname,a.score \n</span><span class=\"s2\">from (select * from sc where score&lt;60 and c in(select c from course where cname=&#39;数学&#39;))a\n</span><span class=\"s2\">left join student b \n</span><span class=\"s2\">on a.s=b.s&#34;</span></code></pre></div><p>28. 查询所有学生的课程及分数情况（存在学生没成绩，没选课的情况）</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select a.sname,c.cname,b.score \n</span><span class=\"s2\">from student a\n</span><span class=\"s2\">left join sc b on a.s=b.s\n</span><span class=\"s2\">left join course c on b.c=c.c\n</span><span class=\"s2\">order by a.sname&#34;</span>\n<span class=\"c1\">#多表联结</span></code></pre></div><p>29. 查询任何一门课程成绩在 70 分以上的姓名、课程名称和分数</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select a.sname,b.score,c.cname\n</span><span class=\"s2\">from student a\n</span><span class=\"s2\">right join (select s,c,score from sc where score &gt; 70 )b\n</span><span class=\"s2\">on a.s=b.s\n</span><span class=\"s2\">left join course c on b.c=c.c\n</span><span class=\"s2\">order by a.sname\n</span><span class=\"s2\">\n</span><span class=\"s2\">select a.sname,d.cname,d.score \n</span><span class=\"s2\">from (select b.*,c.cname from(select * from sc where score&gt;70)b \n</span><span class=\"s2\">left join course c on b.c=c.c)d \n</span><span class=\"s2\">left join student a on d.s=a.s \n</span><span class=\"s2\">order by a.sname&#34;</span></code></pre></div><p>30. 查询不及格的课程</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"k\">select</span> <span class=\"o\">*</span> <span class=\"k\">from</span> \n<span class=\"n\">sc</span> \n<span class=\"k\">where</span> <span class=\"n\">score</span><span class=\"o\">&lt;</span><span class=\"mi\">60</span></code></pre></div><p>31. 查询课程编号为 01 且课程成绩在 80 分以上的学生的学号和姓名</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select s,sname \n</span><span class=\"s2\">from student\n</span><span class=\"s2\">where s in (select s from sc where c=&#39;01&#39; and score&gt;80)\n</span><span class=\"s2\">#子查询\n</span><span class=\"s2\">select a.s,b.sname from (\n</span><span class=\"s2\">select * from sc where score&gt;80 and c=01)a\n</span><span class=\"s2\">left join student b on a.s=b.s&#34;</span>\n<span class=\"c1\">#联结</span></code></pre></div><p>32. 求每门课程的学生人数</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select c,count(*)\n</span><span class=\"s2\">from sc\n</span><span class=\"s2\">group by c&#34;</span></code></pre></div><p>33. 成绩不重复，查询选修「张三」老师所授课程的学生中，成绩最高的学生信息及其成绩</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select * \n</span><span class=\"s2\">from sc \n</span><span class=\"s2\">where c=(select c from course where t=(select t from teacher where tname=&#39;张三&#39;)) \n</span><span class=\"s2\">order by score desc\n</span><span class=\"s2\">limit 1&#34;</span>\n<span class=\"c1\">#标量子查询、mysql中limit替代sql server中的top关键字</span></code></pre></div><p>34. 成绩有重复的情况下，查询选修「张三」老师所授课程的学生中，成绩最高的学生信息及其成绩</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select *\n</span><span class=\"s2\">from(select *,dense_rank()over (order by score desc)a from sc \n</span><span class=\"s2\">where c=(select c from course where t=(select t from teacher where tname=&#39;张三&#39;)))b\n</span><span class=\"s2\">where b.a=1&#34;</span>\n<span class=\"c1\">#子查询嵌套标量子查询\n</span><span class=\"c1\">#有重复排名保留名次 dense_rank()over</span></code></pre></div><p>35. 查询不同课程成绩相同的学生的学生编号、课程编号、学生成绩 </p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select * from sc a\n</span><span class=\"s2\">where s in (select s from sc b where a.s=b.s and a.score=b.score and a.c != b.c)\n</span><span class=\"s2\">\n</span><span class=\"s2\">select *\n</span><span class=\"s2\">from sc as t1\n</span><span class=\"s2\">where exists(select * from sc as t2 where t1.s=t2.s and t1.c!=t2.c and t1.score =t2.score )\n</span><span class=\"s2\">&#34;</span>\n<span class=\"c1\">#exists的用法——中级sql知识</span></code></pre></div><p>36. 查询每门功成绩最好的前两名</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select * \n</span><span class=\"s2\">from (select s,c,row_number() over(partition by c order by score desc) as rank1 from sc) b\n</span><span class=\"s2\">where b.rank1 &lt;3&#34;</span>\n<span class=\"c1\">#row_number() over（(partition by 字段 order by 字段）——组内排名</span></code></pre></div><p>37. 统计每门课程的学生选修人数（超过 5 人的课程才统计）</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select c,count(s)选修人数\n</span><span class=\"s2\">from sc\n</span><span class=\"s2\">group by c\n</span><span class=\"s2\">having 选修人数&gt;5\n</span><span class=\"s2\">order by 选修人数 desc,c&#34;</span>\n<span class=\"c1\">#having——筛选分组后的各组数据，因为where关键字无法与聚合函数一起使用</span></code></pre></div><p>38. 检索至少选修两门课程的学生学号</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select s from sc\n</span><span class=\"s2\">group by s\n</span><span class=\"s2\">having count(c)&gt;=2\n</span><span class=\"s2\">&#34;</span></code></pre></div><p>39. 查询选修了全部课程的学生信息</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select s from sc \n</span><span class=\"s2\">group by s \n</span><span class=\"s2\">having count(c)=(select distinct count(*)a from course)&#34;</span>\n<span class=\"c1\">#标量子查询</span></code></pre></div><p>40. 查询各学生的年龄，只按年份来算 </p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"k\">select</span> <span class=\"n\">s</span><span class=\"p\">,</span><span class=\"nf\">timestampdiff</span><span class=\"p\">(</span><span class=\"kt\">year</span><span class=\"p\">,</span><span class=\"n\">sage</span><span class=\"p\">,</span><span class=\"nf\">now</span><span class=\"p\">())</span><span class=\"err\">年龄</span> \n<span class=\"k\">from</span> <span class=\"n\">student</span>\n<span class=\"c1\"># TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2) 同 sql server中的 DATEDIFF(datepart,startdate,enddate)</span></code></pre></div><p>41. 按照出生日期来算，当前月日 &lt; 出生年月的月日则，年龄减一</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"c1\">#方法是把时间转化成 Int 格式来做条件比较大小，判断是否超期\n</span><span class=\"c1\"></span><span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"err\">替换日期中的</span><span class=\"s2\">&#34;-&#34;</span><span class=\"p\">,</span><span class=\"err\">更改日期格式为</span><span class=\"kt\">char</span><span class=\"err\">（</span><span class=\"n\">mysql的convert函数好像无法更改类型为varchar</span><span class=\"err\">）</span>\n<span class=\"p\">(</span><span class=\"k\">convert</span><span class=\"p\">(</span><span class=\"k\">replace</span><span class=\"p\">(</span><span class=\"n\">sage</span><span class=\"p\">,</span><span class=\"s1\">&#39;-&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span> <span class=\"p\">,</span><span class=\"kt\">char</span><span class=\"p\">(</span><span class=\"mi\">18</span><span class=\"p\">))</span>\n<span class=\"mi\">2</span><span class=\"p\">.</span><span class=\"err\">提取出生月日</span><span class=\"o\">-</span><span class=\"n\">substr函数</span>\n<span class=\"nf\">substr</span><span class=\"p\">(</span><span class=\"k\">convert</span><span class=\"p\">(</span><span class=\"k\">replace</span><span class=\"p\">(</span><span class=\"n\">sage</span><span class=\"p\">,</span><span class=\"s1\">&#39;-&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span> <span class=\"p\">,</span><span class=\"kt\">char</span><span class=\"p\">(</span><span class=\"mi\">18</span><span class=\"p\">)),</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"err\">转换为</span><span class=\"n\">int型</span>\n<span class=\"s1\">&#39;1&#39;</span><span class=\"o\">+</span><span class=\"nf\">substr</span><span class=\"p\">(</span><span class=\"k\">convert</span><span class=\"p\">(</span><span class=\"k\">replace</span><span class=\"p\">(</span><span class=\"n\">sage</span><span class=\"p\">,</span><span class=\"s1\">&#39;-&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span> <span class=\"p\">,</span><span class=\"kt\">char</span><span class=\"p\">(</span><span class=\"mi\">18</span><span class=\"p\">)),</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"mi\">4</span><span class=\"p\">.</span><span class=\"err\">同理将当前日期转化为</span><span class=\"n\">int型</span>\n<span class=\"s1\">&#39;1&#39;</span><span class=\"o\">+</span><span class=\"nf\">substr</span><span class=\"p\">(</span><span class=\"k\">convert</span><span class=\"p\">(</span><span class=\"k\">replace</span><span class=\"p\">(</span><span class=\"nf\">now</span><span class=\"p\">(),</span><span class=\"s1\">&#39;-&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span> <span class=\"p\">,</span><span class=\"kt\">char</span><span class=\"p\">(</span><span class=\"mi\">18</span><span class=\"p\">)),</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"c1\"># sql sever中getdate() 返回当前日期和时间，mysql中 now()返回当前日期和时间\n</span><span class=\"c1\"></span>\n<span class=\"s2\">&#34;select *,\n</span><span class=\"s2\">(case when (&#39;1&#39;+substr(convert(replace(sage,&#39;-&#39;,&#39;&#39;) ,char(18)),5,4))&lt; \n</span><span class=\"s2\">(select &#39;1&#39;+substr(convert(replace(now(),&#39;-&#39;,&#39;&#39;) ,char(18)),5,4)) then \n</span><span class=\"s2\">timestampdiff(year,sage,now())-1\n</span><span class=\"s2\">else timestampdiff(year,sage,now())\n</span><span class=\"s2\">end) age\n</span><span class=\"s2\">from  student&#34;</span></code></pre></div><p>42. 查询本周过生日的学生信息</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"c1\">#方法：采取将生日转化为当年日期，再转化为本年中的第几个星期进行判断搜出结果\n</span><span class=\"c1\"></span><span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"err\">生日转化为当年日期——同</span><span class=\"mi\">41</span><span class=\"err\">题先提取月日，再用</span><span class=\"nf\">concat</span><span class=\"p\">()</span><span class=\"err\">函数将本年的年份同生日月日合并，再转化为日期格式</span>\n<span class=\"k\">convert</span> <span class=\"p\">(</span><span class=\"nf\">concat</span><span class=\"p\">(</span><span class=\"kt\">year</span><span class=\"p\">(</span><span class=\"nf\">now</span><span class=\"p\">()),</span><span class=\"k\">convert</span><span class=\"p\">(</span><span class=\"nf\">substr</span><span class=\"p\">(</span><span class=\"k\">replace</span><span class=\"p\">(</span><span class=\"n\">sage</span><span class=\"p\">,</span><span class=\"s1\">&#39;-&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">),</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">),</span><span class=\"kt\">char</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">))),</span><span class=\"kt\">date</span><span class=\"p\">)</span>\n<span class=\"mi\">2</span><span class=\"p\">.</span><span class=\"err\">转化为本年中的第几个星期</span>\n<span class=\"nf\">week</span><span class=\"p\">(</span><span class=\"kt\">date</span><span class=\"err\">，</span><span class=\"k\">index</span><span class=\"p\">)</span><span class=\"err\">，该函数返回</span><span class=\"n\">date在一年当中的第几周</span><span class=\"err\">，</span><span class=\"n\">index默认为0</span>\n\n<span class=\"s2\">&#34;select \n</span><span class=\"s2\">(case when week (convert (concat(year(now()),convert(substr(replace(sage,&#39;-&#39;,&#39;&#39;),5,4),char(8))),date))\n</span><span class=\"s2\">=week(now()) then 1 else 0 end) 生日提醒 \n</span><span class=\"s2\">from student\n</span><span class=\"s2\">&#34;</span></code></pre></div><p>43. 查询下周过生日的学生信息</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select \n</span><span class=\"s2\">(case when week (convert (concat(year(now()),convert(substr(replace(sage,&#39;-&#39;,&#39;&#39;),5,4),char(8))),date))\n</span><span class=\"s2\">=week(now())+1 then 1 else 0 end) 生日提醒 \n</span><span class=\"s2\">from student&#34;</span>\n<span class=\"c1\">#下周——week(now())+1</span></code></pre></div><p>44. 查询本月过生日的学生信息</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select *,\n</span><span class=\"s2\">(case when month (convert (concat(year(now()),convert(substr(replace(sage,&#39;-&#39;,&#39;&#39;),5,4),char(8))),date))\n</span><span class=\"s2\">=month(now()) then 1 else 0 end) 生日提醒 \n</span><span class=\"s2\">from student&#34;</span>\n<span class=\"c1\">#本月——month(date)返回指定日期值的月份</span></code></pre></div><p>45. 查询下月过生日的学生信息</p><div class=\"highlight\"><pre><code class=\"language-mysql\"><span class=\"s2\">&#34;select *,(case when month (convert (concat(year(now()),convert(substr(replace(sage,&#39;-&#39;,&#39;&#39;),5,4),char(8))),date))\n</span><span class=\"s2\">=month(now())+1 then 1 else 0 end) 生日提醒 \n</span><span class=\"s2\">from student&#34;</span>\n<span class=\"c1\">#下月——month(now())+1</span></code></pre></div><p></p>", 
            "topic": [
                {
                    "tag": "MySQL 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19667043"
                }, 
                {
                    "tag": "习题解答", 
                    "tagLink": "https://api.zhihu.com/topics/20030384"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/67178650", 
            "userName": "山草纽斜齐", 
            "userLink": "https://www.zhihu.com/people/5903a899f206eccf0bf89f4c9821bf42", 
            "upvote": 1, 
            "title": "sql 学习路线总结", 
            "content": "<p>学习sql的时候找了很多资源，网上包括知乎上也有很多信息，零零碎碎看到觉得有用的，就收藏了，然后偶尔想到才去看一次，没有制定详尽的计划系统的学习，也没有持续进行实战，慢慢地那些语法就在脑海里丢失了，如今朝花夕拾，想着再重学一遍，少走弯路，如果只是入门的话，我会在万千信息中选择如下方式：</p><p>一：客户端选择</p><p>mysql、sql server、oracle等等都可以，不过因为安装Navicat Premium，自带mysql，加上mysql是开源的，所以选择了mysql（后来发现学习选自sql sever中的很多语法其实和mysql还是有区别的，为了替换为mysql用的语法，花了不少时间），安装教程参考 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/c9b28ce4b50bf0444d17d010224cb06f\" data-hash=\"c9b28ce4b50bf0444d17d010224cb06f\" data-hovercard=\"p$b$c9b28ce4b50bf0444d17d010224cb06f\">@猴子</a>  的<a href=\"https://zhuanlan.zhihu.com/p/37155150\" class=\"internal\">猴子：客户端navicat安装教程</a> 这篇教程，没有报错，非常顺利；</p><p>二：学习书籍推荐</p><p>之前刷知乎，看的很多人推荐《sql必知必会》，于是在网上买了一本，知识点都讲到了，但是对于一个纯初学者（至少对我），还是有很多概念不太好理解或者没有那么容易一下子理解，后来接触了《sql基础教程》这本书（只看到第七章），完全按照上面的操作及代码来，概念、思路都清晰了很多，所以比较推荐这本，一些sql公众号或者知乎上都有这本书的电子版。</p><p>三、学习工具</p><p>书不长带在身边，想要随时检验自己的学习成果或者学习新知识，现在都流行微信公众号了，我关注了一个比较适合自己的：@sql数据开发，上面有基础知识、有进阶知识、学习材料和常见面试题，一个够用了。</p><p>四、学习路径</p><p>1、下载mysql；</p><p>2、学习《sql基础教程》（按照示例自己一个一个敲代码），里面的知识点<a href=\"https://zhuanlan.zhihu.com/p/43284471\" class=\"internal\">懂EXCEL就会SQL，从此查数不求人</a> 这篇文章写得比较清楚了，不懂的百度；</p><p>3、闲暇的时候看看公众号中的基础知识和高级知识部分，加深知识点印象，不懂的百度；</p><p>4、做sqlzoo上的在线测试（偏基础），加深知识点印象，不懂的百度；</p><p>5、做公众号‘学习之路——sql题库——<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzA3MTg4NjY4Mw%3D%3D%26mid%3D2457299032%26idx%3D1%26sn%3D4424568a0569d45d3e84893599ef7fff%26chksm%3D88a57a6cbfd2f37ae8ebe702b7ea3d166543fc7d9359338b38a57b5ae26ced082a53deb6430d%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">SQL Server练习题</a>’里面的题目（偏进阶），加深知识点印象，不懂的百度（做题的时候发现答案中的很多代码在mysql中无法实现或者实现方式不一）</p><p>五、经验总结</p><p>在学习完《sql基础教程》的前七章后（一天1.5小时，一周就可以），基本的查询语法应该都掌握了，后面我觉得非常重要的一个知识点就是搞清楚sql语句的书写顺序和执行顺序之间的差异，简单介绍如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-83c4e8b29bb1cf01ed786c14a9bff8ff_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"686\" data-rawheight=\"199\" class=\"origin_image zh-lightbox-thumb\" width=\"686\" data-original=\"https://pic4.zhimg.com/v2-83c4e8b29bb1cf01ed786c14a9bff8ff_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;686&#39; height=&#39;199&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"686\" data-rawheight=\"199\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"686\" data-original=\"https://pic4.zhimg.com/v2-83c4e8b29bb1cf01ed786c14a9bff8ff_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-83c4e8b29bb1cf01ed786c14a9bff8ff_b.jpg\"/></figure><p>差异主要在 select和distinct 这两个语句上，虽然书写他俩靠前，但是实际执行过程中，他们是在having语句后面的（最近发现mysql中select执行顺序是在where后面，group by前面），最直接的体现是如果你在select语句后面对某列使用了别名，在where子句中使用别名会报错，因为where的执行顺序在select之前，示例如下所：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-b2ba3c1b754288ccb0644d574c48a2de_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"687\" data-rawheight=\"284\" class=\"origin_image zh-lightbox-thumb\" width=\"687\" data-original=\"https://pic3.zhimg.com/v2-b2ba3c1b754288ccb0644d574c48a2de_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;687&#39; height=&#39;284&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"687\" data-rawheight=\"284\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"687\" data-original=\"https://pic3.zhimg.com/v2-b2ba3c1b754288ccb0644d574c48a2de_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-b2ba3c1b754288ccb0644d574c48a2de_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>一方面注意书写顺序，一方面理解执行顺序，对于学习sql和理解很多sql语句中的逻辑大有裨益，关于sql sever和mysql在语法上面的差异，通过用mysql语句实现SQL Server练习题中的问题，慢慢发掘了一点，后期有时间专门整理下，现举例比如说：</p><p>1.sql server中的top关键字在mysql中是没有的，但是可以用limit实现相应功能；</p><p>2.convert对应的参数不相同，sql server中是CONVERT(data_type,expression[,style])，mysql中是CONVERT(xxx,类型)；</p><p>3.关于时间格式的很多函数或者参数，如GETDATE() 和NOW()，date_to_str()和date_format，Datename(wk,date)和WEEK(date，index)，DATEDIFF(<i>datepart</i>,<i>startdate</i>,<i>enddate</i>)和TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2)等。</p><p>六、快捷键</p><p>最后分享下Navicat 中的一些快捷键，也是百度来的，所以有问题，记得多百度，养成独立解决问题的好习惯。</p><div class=\"highlight\"><pre><code class=\"language-text\">1.ctrl+q 打开查询窗口\n2.ctrl+/ 注释sql语句\n3.ctrl+shift +/ 解除注释\n4.ctrl+r 运行查询窗口的全部sql语句\n5.ctrl+shift+r 只运行选中的sql语句\n6.F6 打开一个mysql命令行窗口\n7.CTRL+TAB键方便地切换到其他选项卡\n8.ctrl+n 打开一个新的查询窗口\n9.ctrl+w 关闭一个查询窗口\n10.ctrl+d 在查询表数据界面打开一个该表结构的窗口</code></pre></div><p></p>", 
            "topic": [
                {
                    "tag": "SQL", 
                    "tagLink": "https://api.zhihu.com/topics/19553557"
                }, 
                {
                    "tag": "数据分析", 
                    "tagLink": "https://api.zhihu.com/topics/19559424"
                }, 
                {
                    "tag": "MySQL 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19667043"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/66647390", 
            "userName": "山草纽斜齐", 
            "userLink": "https://www.zhihu.com/people/5903a899f206eccf0bf89f4c9821bf42", 
            "upvote": 1, 
            "title": "用matplotlib做抖音数据的可视化", 
            "content": "<p>在公众号@ <a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/6-ThNqG8A8wF0X4dyEHP-g\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python绿色通道</a> 上看的这个项目，里面大神做的可视化做的很炫酷，自己尝试用入门级的水平复现了一下，除了没那么炫酷外，能够做基本的分析应用。</p><p>一、获取数据</p><p>知乎好像无法上传数据，放在网盘里面，提取码：dznd </p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1BLAXeCpxfLIWV3dftolqGw\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1BLAXeC</span><span class=\"invisible\">pxfLIWV3dftolqGw</span><span class=\"ellipsis\"></span></a><p>二、数据可视化</p><p>1.导入相关库</p><div class=\"highlight\"><pre><code class=\"language-text\">import pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline  \n# %matplotlib inline 这句是IPython的魔法函数，可以在IPython编译器里直接使用，作用是内嵌画图，省略掉plt.show()这一步，直接显示图像。\n# 如果不加这一句的话，我们在画图结束之后需要加上plt.show()才可以显示图像\n\n# 在图表中显示中文\nplt.rcParams[&#39;font.sans-serif&#39;] = &#39;Microsoft YaHei&#39;\nplt.rcParams[&#39;axes.unicode_minus&#39;] = False</code></pre></div><p>2.读取数据</p><div class=\"highlight\"><pre><code class=\"language-text\"># 读入数据\ndf=pd.read_csv(&#39;douyin.csv&#39;,header=None)#无标题行\ndf.head() #显示前五行</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-149a3bfc702b4e8c73102a1dec586548_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1107\" data-rawheight=\"267\" class=\"origin_image zh-lightbox-thumb\" width=\"1107\" data-original=\"https://pic1.zhimg.com/v2-149a3bfc702b4e8c73102a1dec586548_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1107&#39; height=&#39;267&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1107\" data-rawheight=\"267\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1107\" data-original=\"https://pic1.zhimg.com/v2-149a3bfc702b4e8c73102a1dec586548_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-149a3bfc702b4e8c73102a1dec586548_b.jpg\"/></figure><p>3.数据清洗</p><div class=\"highlight\"><pre><code class=\"language-text\"># 列重命名\ndf.rename(columns={0:&#39;昵称&#39;,1:&#39;性别&#39;,2:&#39;类型&#39;,3:&#39;点赞数&#39;,4:&#39;粉丝数&#39;,5:&#39;视频数&#39;},inplace=True)\n#df.columns=[&#39;昵称&#39;,&#39;性别&#39;,&#39;类型&#39;,&#39;点赞数&#39;,&#39;粉丝数&#39;,&#39;视频数&#39;] 这个语句和上面效果一致\ndf.info()</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-53022ca34a172bcc20a8a6bf530e90be_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1113\" data-rawheight=\"279\" class=\"origin_image zh-lightbox-thumb\" width=\"1113\" data-original=\"https://pic3.zhimg.com/v2-53022ca34a172bcc20a8a6bf530e90be_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1113&#39; height=&#39;279&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1113\" data-rawheight=\"279\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1113\" data-original=\"https://pic3.zhimg.com/v2-53022ca34a172bcc20a8a6bf530e90be_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-53022ca34a172bcc20a8a6bf530e90be_b.jpg\"/></figure><p>4.数据可视化</p><div class=\"highlight\"><pre><code class=\"language-text\"># 01 性别分布情况\n# 02 点赞数TOP10\n# 03 粉丝数TOP10\n# 04 各类型点赞数汇总分布图\n# 05 各类型粉丝数汇总分布图\n# 06 视频粉丝点赞三维度图\n# 07 平均视频点赞数TOP10\n# 08 平均视频粉丝数TOP10\n\n# 01 性别分布情况\ndf.loc[df.性别 == 0, &#39;性别&#39;] = &#39;未知&#39;\ndf.loc[df.性别 == 1, &#39;性别&#39;] = &#39;男性&#39;\ndf.loc[df.性别 == 2, &#39;性别&#39;] = &#39;女性&#39;\n# df.性别.value_counts().plot.bar()\ndf.性别.value_counts().plot.pie()\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-299bd3b0b1053c4bd02623beeeeb05c5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1117\" data-rawheight=\"344\" class=\"origin_image zh-lightbox-thumb\" width=\"1117\" data-original=\"https://pic2.zhimg.com/v2-299bd3b0b1053c4bd02623beeeeb05c5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1117&#39; height=&#39;344&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1117\" data-rawheight=\"344\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1117\" data-original=\"https://pic2.zhimg.com/v2-299bd3b0b1053c4bd02623beeeeb05c5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-299bd3b0b1053c4bd02623beeeeb05c5_b.jpg\"/></figure><div class=\"highlight\"><pre><code class=\"language-text\"># 02 点赞数TOP10\ndf=df.sort_values(&#39;点赞数&#39;,ascending=False)\nattr=df.昵称[:10]\nimport seaborn as sns\nplt.figure(figsize=(12,8))\n# plt.bar(x=df.昵称[:10],height=df.点赞数[:10])\nsns.barplot(x=attr,y=df.点赞数,data=df)\nplt.savefig(&#39;dianzan.png&#39;)#保存图片\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-444bf6427fc53cbfa549317bf235ceaf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1113\" data-rawheight=\"616\" class=\"origin_image zh-lightbox-thumb\" width=\"1113\" data-original=\"https://pic4.zhimg.com/v2-444bf6427fc53cbfa549317bf235ceaf_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1113&#39; height=&#39;616&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1113\" data-rawheight=\"616\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1113\" data-original=\"https://pic4.zhimg.com/v2-444bf6427fc53cbfa549317bf235ceaf_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-444bf6427fc53cbfa549317bf235ceaf_b.jpg\"/></figure><div class=\"highlight\"><pre><code class=\"language-text\"># 03 粉丝数TOP10\ndf =df.sort_values(&#39;粉丝数&#39;, ascending=False)\nplt.figure(figsize=(12,8))\nattr=df.昵称[0:10]\nsns.barplot(x=attr,y=df.粉丝数,data=df)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-008ec3a255902cac4dfc7efea92e7856_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1111\" data-rawheight=\"650\" class=\"origin_image zh-lightbox-thumb\" width=\"1111\" data-original=\"https://pic3.zhimg.com/v2-008ec3a255902cac4dfc7efea92e7856_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1111&#39; height=&#39;650&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1111\" data-rawheight=\"650\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1111\" data-original=\"https://pic3.zhimg.com/v2-008ec3a255902cac4dfc7efea92e7856_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-008ec3a255902cac4dfc7efea92e7856_b.jpg\"/></figure><div class=\"highlight\"><pre><code class=\"language-text\"># 04 各类型点赞数汇总分布图\nleixin=df.groupby(&#39;类型&#39;)#按照类型分组\ndianzan=leixin.点赞数.agg(sum)#按照类似分类汇总求和   此时为series\ndianzan=pd.DataFrame(dianzan)  #转为DataFrame\ndianzan.reset_index(inplace=True) \ndianzan.head()\n#画mekko图（矩形树图），需要导入squarify包\nimport squarify  \nplt.figure(figsize=(12,8))\nsquarify.plot(sizes = dianzan.点赞数 ,label = dianzan.类型)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-0c9c473ee6d193b10568cbd9239e6132_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1108\" data-rawheight=\"320\" class=\"origin_image zh-lightbox-thumb\" width=\"1108\" data-original=\"https://pic3.zhimg.com/v2-0c9c473ee6d193b10568cbd9239e6132_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1108&#39; height=&#39;320&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1108\" data-rawheight=\"320\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1108\" data-original=\"https://pic3.zhimg.com/v2-0c9c473ee6d193b10568cbd9239e6132_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-0c9c473ee6d193b10568cbd9239e6132_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-e704498ff848656f6ce97df778a67848_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1112\" data-rawheight=\"610\" class=\"origin_image zh-lightbox-thumb\" width=\"1112\" data-original=\"https://pic1.zhimg.com/v2-e704498ff848656f6ce97df778a67848_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1112&#39; height=&#39;610&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1112\" data-rawheight=\"610\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1112\" data-original=\"https://pic1.zhimg.com/v2-e704498ff848656f6ce97df778a67848_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e704498ff848656f6ce97df778a67848_b.jpg\"/></figure><div class=\"highlight\"><pre><code class=\"language-text\"># 05 各类型粉丝数汇总分布图\nfensi=leixin.粉丝数.agg(sum)\nfensi=pd.DataFrame(fensi)  #转为DataFrame\nfensi.reset_index(inplace=True) \nfensi.head()\n\nplt.figure(figsize=(12,8))\nsquarify.plot(sizes = fensi.粉丝数 ,label = dianzan.类型)</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-194185eb8593b8c74b6be465e77073d8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1113\" data-rawheight=\"305\" class=\"origin_image zh-lightbox-thumb\" width=\"1113\" data-original=\"https://pic1.zhimg.com/v2-194185eb8593b8c74b6be465e77073d8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1113&#39; height=&#39;305&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1113\" data-rawheight=\"305\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1113\" data-original=\"https://pic1.zhimg.com/v2-194185eb8593b8c74b6be465e77073d8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-194185eb8593b8c74b6be465e77073d8_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-a475b6064153e83c8447bb20b7843c9f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1115\" data-rawheight=\"576\" class=\"origin_image zh-lightbox-thumb\" width=\"1115\" data-original=\"https://pic4.zhimg.com/v2-a475b6064153e83c8447bb20b7843c9f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1115&#39; height=&#39;576&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1115\" data-rawheight=\"576\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1115\" data-original=\"https://pic4.zhimg.com/v2-a475b6064153e83c8447bb20b7843c9f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-a475b6064153e83c8447bb20b7843c9f_b.jpg\"/></figure><div class=\"highlight\"><pre><code class=\"language-text\"># 06 视频粉丝点赞三维度图（气泡图）\nplt.figure(figsize=(12,8))\n# 用列表生成式和zip函数生成-视频数，粉丝数，点赞数，昵称的列表集合\ndata = [list(i) for i in zip(df[&#39;视频数&#39;], df[&#39;粉丝数&#39;], df[&#39;点赞数&#39;], df[&#39;昵称&#39;])] \nx_lst = [v[0] for v in data] \ny_lst = [v[1] for v in data] \nextra_data = [v[2]/100000 for v in data] \nsns.scatterplot(x=x_lst,y=y_lst,s=extra_data,alpha=0.5)  #具体参数百度 seaborn官方官网—API—搜索</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-35b5aed0e4c45b70eb8e770f6adf8f8b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1111\" data-rawheight=\"684\" class=\"origin_image zh-lightbox-thumb\" width=\"1111\" data-original=\"https://pic4.zhimg.com/v2-35b5aed0e4c45b70eb8e770f6adf8f8b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1111&#39; height=&#39;684&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1111\" data-rawheight=\"684\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1111\" data-original=\"https://pic4.zhimg.com/v2-35b5aed0e4c45b70eb8e770f6adf8f8b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-35b5aed0e4c45b70eb8e770f6adf8f8b_b.jpg\"/></figure><div class=\"highlight\"><pre><code class=\"language-text\">07 # 平均视频点赞数TOP10\nplt.figure(figsize=(12,8))\ndf = df[df[&#39;视频数&#39;] &gt; 0] \ndf[&#39;results&#39;]=df.点赞数/(df.视频数*10000) # 平均视频点赞数\ndf = df.sort_values(&#39;results&#39;, ascending=False)\nattr = df[&#39;昵称&#39;][0:10]\nsns.barplot(y=attr,x=df[&#39;results&#39;],data=df)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-bf90f198b6a7db37c1466d1ea39dfef6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1111\" data-rawheight=\"673\" class=\"origin_image zh-lightbox-thumb\" width=\"1111\" data-original=\"https://pic3.zhimg.com/v2-bf90f198b6a7db37c1466d1ea39dfef6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1111&#39; height=&#39;673&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1111\" data-rawheight=\"673\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1111\" data-original=\"https://pic3.zhimg.com/v2-bf90f198b6a7db37c1466d1ea39dfef6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-bf90f198b6a7db37c1466d1ea39dfef6_b.jpg\"/></figure><div class=\"highlight\"><pre><code class=\"language-text\"># 08 平均视频粉丝数TOP10\nplt.figure(figsize=(12,8))\ndf = df[df[&#39;视频数&#39;] &gt; 0] \ndf[&#39;results1&#39;]=df.粉丝数/(df.视频数*10000) #平均视频粉丝数\ndf = df.sort_values(&#39;results1&#39;, ascending=False)\nattr = df[&#39;昵称&#39;][0:10]\nv1 = df[&#39;results1&#39;][0:10]\nplt.barh(attr,width=v1)\nsns.barplot(y=attr,x=df[&#39;results1&#39;],data=df)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c345bbff57b2ac325e9ec76ae2d2ffab_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1112\" data-rawheight=\"726\" class=\"origin_image zh-lightbox-thumb\" width=\"1112\" data-original=\"https://pic4.zhimg.com/v2-c345bbff57b2ac325e9ec76ae2d2ffab_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1112&#39; height=&#39;726&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1112\" data-rawheight=\"726\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1112\" data-original=\"https://pic4.zhimg.com/v2-c345bbff57b2ac325e9ec76ae2d2ffab_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-c345bbff57b2ac325e9ec76ae2d2ffab_b.jpg\"/></figure><p>这里面几个问题还未解决：</p><p>（1）姓名中有些特殊字符如❤️，�还是无法显示；</p><p>（2）画矩形树图，里面的颜色搭配不是很好，没找到更改颜色搭配的相关参数；</p><p>（3）视频粉丝点赞三维度图、平均视频粉丝数和平均视频点赞数计算过程中要乘以相应单位，否则无法显示。</p>", 
            "topic": [
                {
                    "tag": "Matplotlib", 
                    "tagLink": "https://api.zhihu.com/topics/19748855"
                }, 
                {
                    "tag": "数据可视化", 
                    "tagLink": "https://api.zhihu.com/topics/19593576"
                }, 
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/66514096", 
            "userName": "山草纽斜齐", 
            "userLink": "https://www.zhihu.com/people/5903a899f206eccf0bf89f4c9821bf42", 
            "upvote": 12, 
            "title": "对比excel，轻松学习python数据分析", 
            "content": "<p>一直想把excel和python关联起来，加深学习pandas的印象，正好在知乎上找到@天天 提到的的《对比excel，轻松学习python数据分析》这本书，紧接着又搜到了<a href=\"https://zhuanlan.zhihu.com/p/62691924\" class=\"internal\">苏克1900：像 Excel 一样使用 python 进行数据分析</a> 这篇专栏文章，文章写得很全，遂在jupyte notebook上重写了一遍里面的代码，以供对照学习。按照书中目录，总共分为如下部分：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-09ee96e7bd136048f8cac50a10d2df6b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"643\" data-rawheight=\"1024\" class=\"origin_image zh-lightbox-thumb\" width=\"643\" data-original=\"https://pic4.zhimg.com/v2-09ee96e7bd136048f8cac50a10d2df6b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;643&#39; height=&#39;1024&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"643\" data-rawheight=\"1024\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"643\" data-original=\"https://pic4.zhimg.com/v2-09ee96e7bd136048f8cac50a10d2df6b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-09ee96e7bd136048f8cac50a10d2df6b_b.jpg\"/></figure><p><b>一、生成数据表</b></p><div class=\"highlight\"><pre><code class=\"language-python3\"><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"c1\"># 创建数据表</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span><span class=\"s2\">&#34;id&#34;</span><span class=\"p\">:[</span><span class=\"mi\">1001</span><span class=\"p\">,</span><span class=\"mi\">1002</span><span class=\"p\">,</span><span class=\"mi\">1003</span><span class=\"p\">,</span><span class=\"mi\">1004</span><span class=\"p\">,</span><span class=\"mi\">1005</span><span class=\"p\">,</span><span class=\"mi\">1006</span><span class=\"p\">],</span>\n                   <span class=\"s2\">&#34;date&#34;</span><span class=\"p\">:</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">date_range</span><span class=\"p\">(</span><span class=\"s1\">&#39;20130102&#39;</span><span class=\"p\">,</span> <span class=\"n\">periods</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">),</span>\n                   <span class=\"s2\">&#34;city&#34;</span><span class=\"p\">:[</span><span class=\"s1\">&#39;Beijing &#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;SH&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39; guangzhou &#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Shenzhen&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;shanghai&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;BEIJING &#39;</span><span class=\"p\">],</span>\n                   <span class=\"s2\">&#34;age&#34;</span><span class=\"p\">:[</span><span class=\"mi\">23</span><span class=\"p\">,</span><span class=\"mi\">44</span><span class=\"p\">,</span><span class=\"mi\">54</span><span class=\"p\">,</span><span class=\"mi\">32</span><span class=\"p\">,</span><span class=\"mi\">34</span><span class=\"p\">,</span><span class=\"mi\">32</span><span class=\"p\">],</span>\n                   <span class=\"s2\">&#34;category&#34;</span><span class=\"p\">:[</span><span class=\"s1\">&#39;100-A&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;100-B&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;110-A&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;110-C&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;210-A&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;130-F&#39;</span><span class=\"p\">],</span>\n                   <span class=\"s2\">&#34;price&#34;</span><span class=\"p\">:[</span><span class=\"mi\">1200</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nan</span><span class=\"p\">,</span><span class=\"mi\">2133</span><span class=\"p\">,</span><span class=\"mi\">5433</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nan</span><span class=\"p\">,</span><span class=\"mi\">4432</span><span class=\"p\">]},</span>\n                   <span class=\"n\">columns</span> <span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;date&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;city&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;category&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;age&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;price&#39;</span><span class=\"p\">])</span>\n<span class=\"n\">df</span> <span class=\"c1\">#打印结果</span>\n\n\t<span class=\"nb\">id</span>\t<span class=\"n\">date</span>\t<span class=\"n\">city</span>\t<span class=\"n\">category</span>\t<span class=\"n\">age</span>\t<span class=\"n\">price</span>\n<span class=\"mi\">0</span>\t<span class=\"mi\">1001</span>\t<span class=\"mi\">2013</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">02</span>\t<span class=\"n\">Beijing</span>\t<span class=\"mi\">100</span><span class=\"o\">-</span><span class=\"n\">A</span>\t<span class=\"mi\">23</span>\t<span class=\"mf\">1200.0</span>\n<span class=\"mi\">1</span>\t<span class=\"mi\">1002</span>\t<span class=\"mi\">2013</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">03</span>\t<span class=\"n\">SH</span>\t<span class=\"mi\">100</span><span class=\"o\">-</span><span class=\"n\">B</span>\t<span class=\"mi\">44</span>\t<span class=\"n\">NaN</span>\n<span class=\"mi\">2</span>\t<span class=\"mi\">1003</span>\t<span class=\"mi\">2013</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">04</span>\t<span class=\"n\">guangzhou</span>\t<span class=\"mi\">110</span><span class=\"o\">-</span><span class=\"n\">A</span>\t<span class=\"mi\">54</span>\t<span class=\"mf\">2133.0</span>\n<span class=\"mi\">3</span>\t<span class=\"mi\">1004</span>\t<span class=\"mi\">2013</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">05</span>\t<span class=\"n\">Shenzhen</span>\t<span class=\"mi\">110</span><span class=\"o\">-</span><span class=\"n\">C</span>\t<span class=\"mi\">32</span>\t<span class=\"mf\">5433.0</span>\n<span class=\"mi\">4</span>\t<span class=\"mi\">1005</span>\t<span class=\"mi\">2013</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">06</span>\t<span class=\"n\">shanghai</span>\t<span class=\"mi\">210</span><span class=\"o\">-</span><span class=\"n\">A</span>\t<span class=\"mi\">34</span>\t<span class=\"n\">NaN</span>\n<span class=\"mi\">5</span>\t<span class=\"mi\">1006</span>\t<span class=\"mi\">2013</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">07</span>\t<span class=\"n\">BEIJING</span>\t<span class=\"mi\">130</span><span class=\"o\">-</span><span class=\"n\">F</span>\t<span class=\"mi\">32</span>\t<span class=\"mf\">4432.0</span></code></pre></div><p>二、<b>数据表检查</b></p><div class=\"highlight\"><pre><code class=\"language-text\">#查看数据表的维度,对应excel CTRL+向下 CTRL+向右\ndf.shape\n(6, 6)\n# 数据表信息\ndf.info()\n# 查看数据格式,Excel中通过选中单元格并查看开始菜单中的数值类型来判断数据的格式\ndf.dtypes\n# 查看空值,对应excel CTRL+G定位空值\ndf.isnull()\n# 查看唯一值,Excel 中查看唯一值的方法是使用“条件格式”对唯一值进行颜色标记\ndf[&#39;city&#39;].unique()\n# 查看数据表数值\ndf.values\n# 查看列名称\ndf.columns\n# 查看前10行数据 \ndf.head(10)\n# 查看后10行数据 \ndf.tail(10)</code></pre></div><p>三、<b>数据表清洗</b></p><div class=\"highlight\"><pre><code class=\"language-text\"># 处理空值(删除或填充),对应excel查找和替换——删除数据表中含有空值的行\ndf.dropna(how=&#34;any&#34;)\n#使用数字 0 填充数据表中空值\ndf.fillna(value=0)\n#使用均值填充数据表中空值\ndf[&#39;price&#39;]=df[&#39;price&#39;].fillna(df[&#39;price&#39;].mean())\n# 清理空格,清除city 字段中的字符空格\ndf[&#39;city&#39;]=df[&#39;city&#39;].map(str.strip)\n# 大小写转换\ndf[&#39;city&#39;]=df[&#39;city&#39;].str.lower()\n# 更改数据格式,Excel 中通过“设置单元格格式”功能可以修改数据格式\ndf[&#39;price&#39;].astype(&#39;int&#39;)\n# 更改列名称\ndf.rename(columns={&#39;category&#39;: &#39;category-size&#39;})\n# 删除重复值,Excel 的数据目录下有“删除重复项”的功能\ndf[&#39;city&#39;].drop_duplicates()\ndf[&#39;city&#39;].drop_duplicates(keep=&#39;last&#39;)#保留最后一个重复值\n# 数值修改及替换,Excel 中使用“查找和替换”功能就可以实现数值的替换\ndf[&#39;city&#39;].replace(&#39;sh&#39;,&#39;shanghai&#39;)</code></pre></div><p><b>四、数据预处理</b></p><div class=\"highlight\"><pre><code class=\"language-text\"># 数据表合并\n#先创建 df1 数据表\ndf1=pd.DataFrame({&#34;id&#34;:[1001,1002,1003,1004,1005,1006,1007,1008],\n&#34;gender&#34;:[&#39;male&#39;,&#39;female&#39;,&#39;male&#39;,&#39;female&#39;,&#39;male&#39;,&#39;female&#39;,&#39;male&#39;,&#39;female&#39;],\n&#34;pay&#34;:[&#39;Y&#39;,&#39;N&#39;,&#39;Y&#39;,&#39;Y&#39;,&#39;N&#39;,&#39;Y&#39;,&#39;N&#39;,&#39;Y&#39;,],\n&#34;m-point&#34;:[10,12,20,40,40,40,30,20]})\n#数据表匹配合并，inner 模式, 在 Excel 中没有直接完成数据表合并的功能，可以通过 VLOOKUP 函数分步实现\ndf_inner=pd.merge(df,df1,how=&#34;inner&#34;)\ndf_inner\n#其他数据表匹配模式\ndf_left=pd.merge(df,df1,how=&#39;left&#39;)\ndf_right=pd.merge(df,df1,how=&#39;right&#39;)\ndf_outer=pd.merge(df,df1,how=&#39;outer&#39;)\ndf_outer\n# 设置索引列\ndf_inner.set_index(&#39;id&#39;)\n# 排序(按索引，按数值),Excel 中可以通过数据目录下的排序按钮直接对数据表进行排序\ndf_inner.sort_index()\ndf_inner.sort_values(by=[&#39;age&#39;]) #按列排序需要增加by 参数\n# 数据分组,Excel 中可以通过 VLOOKUP 函数进行近似匹配来完成对数值的分组，或者使用“数据透视表”来完成分组\ndf_inner[&#39;group&#39;]=np.where(df_inner[&#39;price&#39;]&gt;3000,&#39;high&#39;,&#39;low&#39;)#有点类似excel的if函数\ndf_inner\n#对复合多个条件的数据进行分组标记\ndf_inner.loc[(df[&#39;city&#39;]==&#39;beijing&#39;)&amp;(df[&#39;price&#39;]&gt;4000),&#39;sigh&#39;]=1\ndf_inner\n# 数据分列 Excel 中的数据目录下提供“分列”功能\n#对 category 字段的值依次进行分列，并创建数据表，索引值为 df_inner 的索引列，列名称为 category 和 size\nsplit=pd.DataFrame((x.split(&#39;-&#39;) for x in df[&#39;category&#39;]),index=df_inner.index,columns=[&#39;category&#39;,&#39;size&#39;])\n#将完成分列后的数据表与原 df_inner 数据表进行匹配 \npd.merge(df_inner,split,right_index=True,left_index=True)  #right_index和left_index相当于唯一字段</code></pre></div><p><b>五、数据提取</b></p><div class=\"highlight\"><pre><code class=\"language-text\"># 按标签提取(loc), Loc 函数按数据表的索引标签进行提取，iloc，ix现在用的少，暂时不提及 \n# 按索引标签提取单行的数值\ndf_inner.loc[3]\n#按索引提取区域行数值\ndf_inner.loc[0:5]\n#重设索引\ndf_inner.reset_index()\n#设置日期为索引\ndf_inner.set_index(&#39;date&#39;)\n# 提取 4 日之前的所有数据\ndf_inner.loc[:&#34;2013-01-04&#34;]\n# 按条件提取（区域和条件值）,使用 isin 函数对 city 中的值是否为 beijing 进行判断。\ndf_inner[&#39;city&#39;].isin([&#39;beijing&#39;])#返回布尔值\ndf_inner.loc[df_inner[&#39;city&#39;].isin([&#39;beijing&#39;])]#返回布尔值为True的值\n# 数值提取还可以完成类似数据分列的工作，从合并的数值中提取出制定的数值。\ncategory=df_inner[&#39;category&#39;]\npd.DataFrame(category.str[:3])  #提取前三个字符，并生成数据表</code></pre></div><p><b>六、数据筛选</b></p><div class=\"highlight\"><pre><code class=\"language-text\"># 使用与，或，非三个条件配合大于，小于和等于对数据进行筛选，并进行计数和求和。与 excel 中的筛选功能和 countifs 和 sumifs 功能相似\n\n# 按条件筛选（与&amp;，或|，非！=）,Excel 数据目录下提供了“筛选”功能，用于对数据表按不同的条件进行筛选。\n# 使用“与”条件进行筛选，条件是年龄大于 25 岁，并且城市为 beijing\ndf_inner.loc[(df_inner[&#39;age&#39;]&gt;25)&amp;(df_inner[&#39;city&#39;]==&#39;beijing&#39;)]\n# 使用“或”条件进行筛选，年龄大于 25 岁或城市为 beijing。筛选后有 6 条数据符合要求。\ndf_inner.loc[(df_inner[&#39;age&#39;]&gt;25) | (df_inner[&#39;city&#39;]==&#39;beijing&#39;)]\n#使用“非”条件进行筛选，城市不等于 beijing。将筛选结果按 id 列进行排序(sort函数只能对列表使用,报错)\ndf_inner.loc[(df_inner[&#39;age&#39;] &gt; 25) | (df_inner[&#39;city&#39;] != &#39;beijing&#39;), [&#39;id&#39;,&#39;city&#39;,&#39;age&#39;,&#39;category&#39;,&#39;gender&#39;]].sort_values(by=[&#39;age&#39;])\n# 在前面的代码后增加 price 字段以及 sum 函数，按筛选后的结果将 price 字段值进行求和，相当于 excel 中 sumifs 的功能。\ndf_inner.loc[(df_inner[&#39;age&#39;] &gt; 25) | (df_inner[&#39;city&#39;] == &#39;beijing&#39;),[&#39;id&#39;,&#39;city&#39;,&#39;age&#39;,&#39;category&#39;,&#39;gender&#39;,&#39;price&#39;]].sort_values(by=[&#39;age&#39;]).price.sum()\n# 还有一种筛选的方式是用 query 函数\ndf_inner.query(&#39;city==[&#34;beijing&#34;,&#34;shanghai&#34;]&#39;)#单引号里面要用双引号，否则会报错\n#对筛选后的结果按 price 进行求和\ndf_inner.query(&#39;city==[&#34;beijing&#34;,&#34;shanghai&#34;]&#39;).price.sum()</code></pre></div><p><b>七、数据汇总</b></p><div class=\"highlight\"><pre><code class=\"language-text\"># Excel 中使用分类汇总和数据透视可以按特定维度对数据进行汇总，python 中使用的主要函数是 groupby 和 pivot_table\n\n# 分类汇总,对所有列进行计数汇总\ndf_inner.groupby(&#39;city&#39;).count()\npd.crosstab(df_inner[&#39;city&#39;],df_inner[&#39;age&#39;])#使用crosstab可以实现单列计数汇总\n# 对特定的 ID 列进行计数汇总\ndf_inner.groupby(&#39;city&#39;)[&#39;id&#39;].count()\n#对两个字段进行汇总计数\ndf_inner.groupby([&#39;city&#39;,&#39;size&#39;])[&#39;id&#39;].count()\n# 除了计数和求和外，还可以对汇总后的数据同时按多个维度进行计算 /按城市对 price 字段进行汇总，并分别计算 price 的数量，总金额和平均金额\ndf_inner.groupby(&#39;city&#39;)[&#39;price&#39;].agg([len,np.sum,np.mean])#len这里代表的是列表中的项目个数，非字符串的长度\n\n# 数据透视,Excel 中的插入目录下提供“数据透视表”功能对数据表按特定维度进行汇总\n# 设定 city 为行字段，size 为列字段，price 为值字段。分别计算 price 的数量和金额并且按行与列进行汇总。\npd.pivot_table(df_inner,index=[&#39;city&#39;],columns=[&#39;size&#39;],values=[&#39;price&#39;],aggfunc=[len,np.sum],fill_value=0,margins=True)#margins相当于行列汇总</code></pre></div><p><b>八、数据统计</b></p><div class=\"highlight\"><pre><code class=\"language-text\"># 主要介绍数据采样，标准差，协方差和相关系数的使用方法\n# 数据采样,Excel的数据分析功能中提供了数据抽样的功能,Python 通过 sample 函数完成数据采样\n#简单的数据采样\ndf_inner.sample(n=3)\n#手动设置采样权重\nweights=[0,0,0,0,0.5,0.5]\ndf_inner.sample(n=2,weights=weights)\n# Sample 函数中还有一个参数 replace，用来设置采样后是否放回\n#采样后不放回\ndf_inner.sample(n=6, replace=False)\n#采样后放回,&#39;replace&#39;就是重复的意思。即可以重复对元素进行抽样，也就是所谓的有放回抽样\ndf_inner.sample(n=6, replace=True)  \n# 描述统计,Excel 中的数据分析中提供了描述统计的功能。Python 中可以通过 Describe 对数据进行描述统计\ndf_inner.describe()\n#数据表描述性统计\ndf_inner.describe().round(2).T #round设置小数点后位数，T代表转置\n# 标准差 Python 中的 Std 函数用来接算特定数据列的标准差\ndf_inner[&#39;price&#39;].std()\n# 协方差,python 中通过 cov 函数计算两个字段或数据表中各字段间的协方差\ndf_inner[&#39;price&#39;].cov(df_inner[&#39;m-point&#39;])\n# 相关分析,python 中通过 corr 函数完成相关分析的操作，并返回相关系数\ndf_inner[&#39;price&#39;].corr(df_inner[&#39;m-point&#39;])\n#数据表相关性分析\ndf_inner.corr()</code></pre></div><p></p>", 
            "topic": [
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }, 
                {
                    "tag": "数据分析", 
                    "tagLink": "https://api.zhihu.com/topics/19559424"
                }, 
                {
                    "tag": "Microsoft Excel", 
                    "tagLink": "https://api.zhihu.com/topics/19567930"
                }
            ], 
            "comments": [
                {
                    "userName": "天天", 
                    "userLink": "https://www.zhihu.com/people/6b6132afa7f63a81613b0593872db684", 
                    "content": "这个书是俊红大佬的，不是我的…我只是想做笔记", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "山草纽斜齐", 
                            "userLink": "https://www.zhihu.com/people/5903a899f206eccf0bf89f4c9821bf42", 
                            "content": "<p>哈哈，已改正，避免歧义</p>", 
                            "likes": 0, 
                            "replyToAuthor": "天天"
                        }
                    ]
                }
            ]
        }
    ], 
    "url": "https://zhuanlan.zhihu.com/c_1114206888237150208"
}

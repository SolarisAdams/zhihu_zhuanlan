{
    "title": "陆敏技的专栏", 
    "description": "不定期编程科普文章", 
    "followers": [
        "https://www.zhihu.com/people/jinkeyuan-92", 
        "https://www.zhihu.com/people/xiao8000", 
        "https://www.zhihu.com/people/hyy666-90", 
        "https://www.zhihu.com/people/e-vpn", 
        "https://www.zhihu.com/people/wu-yue-xiao-long-25", 
        "https://www.zhihu.com/people/zhang-ming-hui-74-40", 
        "https://www.zhihu.com/people/lu-lu-xiu-vibu-lie-ta-ni-ya", 
        "https://www.zhihu.com/people/yun-yi-68-79-21", 
        "https://www.zhihu.com/people/yi-xiao-ni-71", 
        "https://www.zhihu.com/people/kui-kui-de-da-er-niu", 
        "https://www.zhihu.com/people/gang-gang-11", 
        "https://www.zhihu.com/people/lin-57-79-33", 
        "https://www.zhihu.com/people/li-min-73-15", 
        "https://www.zhihu.com/people/shiliang-8", 
        "https://www.zhihu.com/people/yan-xin-dong-80", 
        "https://www.zhihu.com/people/wo-ai-wo-10", 
        "https://www.zhihu.com/people/tian-gu-niang-zui-ai-ta-liao", 
        "https://www.zhihu.com/people/xu-gao-fei-64", 
        "https://www.zhihu.com/people/cong-rong-dan-ya", 
        "https://www.zhihu.com/people/nemoslok", 
        "https://www.zhihu.com/people/ba-yin-dao", 
        "https://www.zhihu.com/people/rock-92-27-75", 
        "https://www.zhihu.com/people/luffycheung", 
        "https://www.zhihu.com/people/brochap", 
        "https://www.zhihu.com/people/waiting-65-39", 
        "https://www.zhihu.com/people/jiang-su-13-89", 
        "https://www.zhihu.com/people/GloryTime", 
        "https://www.zhihu.com/people/wu-bo-55-48", 
        "https://www.zhihu.com/people/eastjeep", 
        "https://www.zhihu.com/people/dai-chen-fei-85", 
        "https://www.zhihu.com/people/le-ji-55", 
        "https://www.zhihu.com/people/jian-ke-84-89", 
        "https://www.zhihu.com/people/lgy-82-82", 
        "https://www.zhihu.com/people/wang-liao-52", 
        "https://www.zhihu.com/people/copper-info", 
        "https://www.zhihu.com/people/sywzh", 
        "https://www.zhihu.com/people/luo-qin-23-67", 
        "https://www.zhihu.com/people/mk100120", 
        "https://www.zhihu.com/people/wei-wan-47-21", 
        "https://www.zhihu.com/people/zheng-er-gou", 
        "https://www.zhihu.com/people/xue-itde-gou-mao-mao", 
        "https://www.zhihu.com/people/a-men-1-7", 
        "https://www.zhihu.com/people/ma-nong-xing-qiu-10", 
        "https://www.zhihu.com/people/ma-nong-xing-qiu", 
        "https://www.zhihu.com/people/looeiy", 
        "https://www.zhihu.com/people/cassis-25", 
        "https://www.zhihu.com/people/bu-er-47-9-74", 
        "https://www.zhihu.com/people/li-xiao-yao-85-11-3", 
        "https://www.zhihu.com/people/blueblue-90-28", 
        "https://www.zhihu.com/people/jacky-46-51", 
        "https://www.zhihu.com/people/you-yin-huan-shang", 
        "https://www.zhihu.com/people/zhang-chun-xin", 
        "https://www.zhihu.com/people/aaron-wang-91-18", 
        "https://www.zhihu.com/people/a-yu-80-13-66", 
        "https://www.zhihu.com/people/wei-lai-de-cheng-xu-yuan-91", 
        "https://www.zhihu.com/people/ke-lan-ruan-jian", 
        "https://www.zhihu.com/people/shi-yuan-76-76", 
        "https://www.zhihu.com/people/lan-yan-zhi-lian", 
        "https://www.zhihu.com/people/wang-wei-75-26-63", 
        "https://www.zhihu.com/people/lian-qing-kun", 
        "https://www.zhihu.com/people/longyu-51", 
        "https://www.zhihu.com/people/wang-xin-12-2-37", 
        "https://www.zhihu.com/people/yu-bo-96-41", 
        "https://www.zhihu.com/people/hurricane419", 
        "https://www.zhihu.com/people/xu-zhao-xin-70", 
        "https://www.zhihu.com/people/liu-zhen-yu-35", 
        "https://www.zhihu.com/people/yang-mao-mao-31-64", 
        "https://www.zhihu.com/people/xin-you-ling-xi-26-76", 
        "https://www.zhihu.com/people/zhou-tao-50-55", 
        "https://www.zhihu.com/people/tian-xia-wei-gong-63-48", 
        "https://www.zhihu.com/people/alex-l-30-84", 
        "https://www.zhihu.com/people/gang-hao-iiie-a", 
        "https://www.zhihu.com/people/ahaqlj", 
        "https://www.zhihu.com/people/zhe-ye-118", 
        "https://www.zhihu.com/people/shao-xiao-66", 
        "https://www.zhihu.com/people/hei-mao-9527-61", 
        "https://www.zhihu.com/people/tian-dao-chou-qin-76-99", 
        "https://www.zhihu.com/people/yangphere", 
        "https://www.zhihu.com/people/alahlll", 
        "https://www.zhihu.com/people/zai-wai-dehai-zi", 
        "https://www.zhihu.com/people/coco-73-53-60", 
        "https://www.zhihu.com/people/da-ke-91-69", 
        "https://www.zhihu.com/people/nan-ke-yimeng-62-79", 
        "https://www.zhihu.com/people/nic-johan", 
        "https://www.zhihu.com/people/zheng-fang-jie-19", 
        "https://www.zhihu.com/people/mo-ming-10-31", 
        "https://www.zhihu.com/people/ruo-shui-84-15-34", 
        "https://www.zhihu.com/people/qia-jian-bin", 
        "https://www.zhihu.com/people/zhuo-mo-xiong-di", 
        "https://www.zhihu.com/people/adomit", 
        "https://www.zhihu.com/people/zzzman-91", 
        "https://www.zhihu.com/people/550690513", 
        "https://www.zhihu.com/people/wo-shi-xiao-hou-zhi-ya-20", 
        "https://www.zhihu.com/people/zhang-tian-qi-16", 
        "https://www.zhihu.com/people/qian-fen-25", 
        "https://www.zhihu.com/people/19860916", 
        "https://www.zhihu.com/people/yue-xia-liu-gou", 
        "https://www.zhihu.com/people/cheng-xiao-mei-6-83", 
        "https://www.zhihu.com/people/cha-xiao-dong-31", 
        "https://www.zhihu.com/people/chen-shao-xin-75-55", 
        "https://www.zhihu.com/people/li-zhu-chuan", 
        "https://www.zhihu.com/people/guang-zai-guo-guo", 
        "https://www.zhihu.com/people/ka-li-ji-47-99", 
        "https://www.zhihu.com/people/ShawHolryan", 
        "https://www.zhihu.com/people/xiao-xiao-17-30-25", 
        "https://www.zhihu.com/people/youml", 
        "https://www.zhihu.com/people/xing-zhe-wu-jiang-92-45", 
        "https://www.zhihu.com/people/lu-yi-41-68-39", 
        "https://www.zhihu.com/people/zhi-you-wo-shi-cao-mei-wei", 
        "https://www.zhihu.com/people/gaochenghui", 
        "https://www.zhihu.com/people/vladdie", 
        "https://www.zhihu.com/people/guo-tian-yu-76-81", 
        "https://www.zhihu.com/people/xu-zhi-yuan-7", 
        "https://www.zhihu.com/people/ChauLY", 
        "https://www.zhihu.com/people/li-ding-ding-95-36", 
        "https://www.zhihu.com/people/sun-bing-28", 
        "https://www.zhihu.com/people/yusong-zhu", 
        "https://www.zhihu.com/people/xin-ran-86-77", 
        "https://www.zhihu.com/people/wang-cong-90-09", 
        "https://www.zhihu.com/people/nie-le-91", 
        "https://www.zhihu.com/people/shuai-da-37", 
        "https://www.zhihu.com/people/pu-la-wang-si", 
        "https://www.zhihu.com/people/shuwuai", 
        "https://www.zhihu.com/people/sun-hao-ze-39", 
        "https://www.zhihu.com/people/wangguohao", 
        "https://www.zhihu.com/people/shao-yu-48-81", 
        "https://www.zhihu.com/people/sun-zhi-sheng-10", 
        "https://www.zhihu.com/people/ok-ok-55", 
        "https://www.zhihu.com/people/jiu-ye-20-63", 
        "https://www.zhihu.com/people/bang-bang-24-50", 
        "https://www.zhihu.com/people/xiao-h-20-95", 
        "https://www.zhihu.com/people/yuming226", 
        "https://www.zhihu.com/people/wu-zhe-ming", 
        "https://www.zhihu.com/people/saber-80-35", 
        "https://www.zhihu.com/people/shi-jian-64-41-72", 
        "https://www.zhihu.com/people/tony-92-2-22", 
        "https://www.zhihu.com/people/ji-2", 
        "https://www.zhihu.com/people/ye-yu-ting-feng-91", 
        "https://www.zhihu.com/people/bigloong", 
        "https://www.zhihu.com/people/bu-ru-gui-qu-22-63", 
        "https://www.zhihu.com/people/ji-fei-yu-41", 
        "https://www.zhihu.com/people/tszyc", 
        "https://www.zhihu.com/people/wang-xun-18-47", 
        "https://www.zhihu.com/people/wang-de-cai-2", 
        "https://www.zhihu.com/people/ding-ding-dang-dang-64", 
        "https://www.zhihu.com/people/shao-tian-zun", 
        "https://www.zhihu.com/people/jia-bo-xiao-14", 
        "https://www.zhihu.com/people/yige-ren-37-33", 
        "https://www.zhihu.com/people/tang-li-10-79", 
        "https://www.zhihu.com/people/mo-ting-70-9", 
        "https://www.zhihu.com/people/wei-dan-53-76", 
        "https://www.zhihu.com/people/yi-ya-yi-ya-yo-95-96", 
        "https://www.zhihu.com/people/ma-ke-bei-8080", 
        "https://www.zhihu.com/people/YeKelvin", 
        "https://www.zhihu.com/people/wang-can-hui-87", 
        "https://www.zhihu.com/people/wu-wen-qing-6-72", 
        "https://www.zhihu.com/people/yang-huan-12-26", 
        "https://www.zhihu.com/people/bai-yun-cang-gou-6", 
        "https://www.zhihu.com/people/mao-xing-yi", 
        "https://www.zhihu.com/people/wang-li-tian", 
        "https://www.zhihu.com/people/he-dian-ru", 
        "https://www.zhihu.com/people/rao-tao-30", 
        "https://www.zhihu.com/people/nuioi", 
        "https://www.zhihu.com/people/jiesoul", 
        "https://www.zhihu.com/people/an-wei-dong-13", 
        "https://www.zhihu.com/people/hong-yu-piao-bo", 
        "https://www.zhihu.com/people/jialiujia", 
        "https://www.zhihu.com/people/mark_mel", 
        "https://www.zhihu.com/people/e-liao-yao-20", 
        "https://www.zhihu.com/people/wj2014-59", 
        "https://www.zhihu.com/people/yang-hai-87-56", 
        "https://www.zhihu.com/people/mei-ri-ke-le-xin-qing", 
        "https://www.zhihu.com/people/sophomore2", 
        "https://www.zhihu.com/people/inai-fgo-38", 
        "https://www.zhihu.com/people/tang-liang-52-17", 
        "https://www.zhihu.com/people/jian-yu-fu-sheng-si", 
        "https://www.zhihu.com/people/kong-xiang-yu-81", 
        "https://www.zhihu.com/people/liu-yu-89-97-89", 
        "https://www.zhihu.com/people/zhuo-ji-96", 
        "https://www.zhihu.com/people/hu-jing-yao-13-74", 
        "https://www.zhihu.com/people/zuo-yi-92-10"
    ], 
    "article": [
        {
            "url": "https://zhuanlan.zhihu.com/p/58652283", 
            "userName": "撸码J", 
            "userLink": "https://www.zhihu.com/people/38630bb8d3ce44008ae0fef2fc4342bd", 
            "upvote": 0, 
            "title": "2019华为云大计：打造培育开发人员的黑土地", 
            "content": "<p>2019-3-5，码农星球君作为云享专家，参加《华为云普惠AI媒体/MVP&amp;云享专家开放日》活动。由于活动是在华为深圳坂田基地举行的，于是码农星球君特打算提前一天的晚上到达。结果，航班晚点3小时。当码农星球到达酒店的时候，已经凌晨12点半。然而吃惊的是，华为的小姐姐和小哥哥们还在接待处元气满满的等待。码农星球君当时就一个心理活动：</p><p>有人比你优秀，结果TA还比你更努力！</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-18902082b752a3619ab7626351ae342b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"869\" data-rawheight=\"489\" class=\"origin_image zh-lightbox-thumb\" width=\"869\" data-original=\"https://pic4.zhimg.com/v2-18902082b752a3619ab7626351ae342b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;869&#39; height=&#39;489&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"869\" data-rawheight=\"489\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"869\" data-original=\"https://pic4.zhimg.com/v2-18902082b752a3619ab7626351ae342b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-18902082b752a3619ab7626351ae342b_b.jpg\"/></figure><p>                                                        小姐姐们的远照</p><p>第二天公开日的行程首先是参加松山湖研发基地。华为正在改变过去那种留在开发人员心中的刻板形象。它直接为开发人员造了一座带小火车的公园作为办公区。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-5d4f8a3f46795800d74383563ece062b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1106\" data-rawheight=\"906\" class=\"origin_image zh-lightbox-thumb\" width=\"1106\" data-original=\"https://pic4.zhimg.com/v2-5d4f8a3f46795800d74383563ece062b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1106&#39; height=&#39;906&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1106\" data-rawheight=\"906\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1106\" data-original=\"https://pic4.zhimg.com/v2-5d4f8a3f46795800d74383563ece062b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-5d4f8a3f46795800d74383563ece062b_b.jpg\"/></figure><p>                                                    松山湖研发基地一览</p><p>如果注意看上图，有三只著名的黑天鹅。松山湖基地目前已容纳一万五千名研发人员，让他们天天看着黑天鹅做研发，虽景色美，然同样作为开发人员的码农星球君，突然有种瑟瑟发抖的感觉……</p><p>接着，华为云MVP及云享专家参观了“2012实验室”。2012实验室可以说是华为黑科技的集大成者。集中了包括通信技术、云技术以及人工智能等最前沿技术的研发。本次2012实验室重点参观的是其中的热技术实验室和诺亚方舟实验室。其中，诺亚方舟实验室是AI技术的汇集地，其研究方向主要包括：人机交互、计算机视觉、自然语言处理、推荐和搜索、决策与推理等等。</p><p>讲真，一圈参观下来，码农星球君只觉得：我略懂得，华为都已经做到了我心中的极致，我不懂的，好像还是做到了极致……。遗憾的是，2012实验室目前还处在有限开放的状态，并且不允许进行拍照……</p><p>在接下来的会议主题中，首先，由华为副总裁、华为云BU总裁，郑叶来介绍了华为云18年的发展概况，以及19年的发展战略。华为云在2018年新增用户增长238%，合作伙伴数量增长45%，云市场应用增长超过1500个，华为云合作伙伴超过6000家，开发者超过9万人，云服务产品超过160款，解决方案超过140个。在2019年，华为要携手技术专家，打造培育云方向及AI放的开发人员，“不忘初心，携手共赢”。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-c07e791b6dd3c94b4badc7a58526b5ad_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"876\" data-rawheight=\"582\" class=\"origin_image zh-lightbox-thumb\" width=\"876\" data-original=\"https://pic2.zhimg.com/v2-c07e791b6dd3c94b4badc7a58526b5ad_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;876&#39; height=&#39;582&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"876\" data-rawheight=\"582\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"876\" data-original=\"https://pic2.zhimg.com/v2-c07e791b6dd3c94b4badc7a58526b5ad_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-c07e791b6dd3c94b4badc7a58526b5ad_b.jpg\"/></figure><p>其次，华为云BU EI服务产品部总经理重点介绍了华为云的开发者生态。并且宣布，此次华为云发布重磅专家激励计划：投入千万级激励权益，发展1500名专家，与云专家共同打造华为云开发者生态。具体措施包括：限量开放ModelArts一站式AI开发平台，方便与会专家乃至其他开发者方便建立和训练AI模型，开放Hilens供技术专家分发、部署、管理和交易AI应用。并且，华为云将创办人工智能大赛，进一步推进AI在广大开发者中的应用。码农星球君尤其对ModelArts特别感兴趣，恨不得立马下手做几个应用。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-a661e5163ff35335a23096268c956e69_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"840\" data-rawheight=\"560\" class=\"origin_image zh-lightbox-thumb\" width=\"840\" data-original=\"https://pic2.zhimg.com/v2-a661e5163ff35335a23096268c956e69_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;840&#39; height=&#39;560&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"840\" data-rawheight=\"560\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"840\" data-original=\"https://pic2.zhimg.com/v2-a661e5163ff35335a23096268c956e69_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-a661e5163ff35335a23096268c956e69_b.jpg\"/></figure><p>在会议上，贾总作为产品线总经理，还show了一把代码，亲自建立了一个图像识别的AI模型：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-58f0c135e94097bb7e174b6378a138bf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1247\" data-rawheight=\"331\" class=\"origin_image zh-lightbox-thumb\" width=\"1247\" data-original=\"https://pic4.zhimg.com/v2-58f0c135e94097bb7e174b6378a138bf_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1247&#39; height=&#39;331&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1247\" data-rawheight=\"331\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1247\" data-original=\"https://pic4.zhimg.com/v2-58f0c135e94097bb7e174b6378a138bf_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-58f0c135e94097bb7e174b6378a138bf_b.jpg\"/></figure><p>之后，圆桌会议部分探讨了华为云在现有领域中的成功应用经验，以及郑叶来、贾永利及BU CTO张宇昕答部分专家和媒体代表的问题。</p><p>最后，华为云对获得“2018杰出贡献奖”的MVP和云享专家进行了颁奖，鼓励越来越多的开发者加入华为云的开发队伍。不知道在下面的大合照中，你能不能找到最帅的那一个我？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-c03c632b347f32b22df42bb0485f7f10_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1098\" data-rawheight=\"366\" class=\"origin_image zh-lightbox-thumb\" width=\"1098\" data-original=\"https://pic1.zhimg.com/v2-c03c632b347f32b22df42bb0485f7f10_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1098&#39; height=&#39;366&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1098\" data-rawheight=\"366\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1098\" data-original=\"https://pic1.zhimg.com/v2-c03c632b347f32b22df42bb0485f7f10_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-c03c632b347f32b22df42bb0485f7f10_b.jpg\"/></figure><p>SO，紧张、有趣、有益的一天过去了，码农星球君表示对华为的佩服和喜爱又多了一分。不知道看完本篇的你，是否跟我也一样呢？</p><p>本文作者：码农星球撸码J，感谢关注“码农星球”。本文版权属于“码农星球”。关于本文有任何困惑，请关注并联系我们。</p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/57934231", 
            "userName": "撸码J", 
            "userLink": "https://www.zhihu.com/people/38630bb8d3ce44008ae0fef2fc4342bd", 
            "upvote": 0, 
            "title": "Java全栈程序员之07：IDEA中使用MAVEN构架生产级的Web项目", 
            "content": "<p>在上一篇我们介绍了如何在IDEA中使用MAVEN，以及如何创建依赖等。那么在这一篇中，我们就试图搭建一个生产级的解决方案，大家可以使用这个解决方案作为骨架代码来搭建自己的开发环境。</p><p>在这里，我们要完成：</p><p>创建parent，在parent里完成所有的pom依赖和定义；</p><p>创建common项目，common作为工具包而存在，被其它module所依赖；</p><p>创建dao，依赖common；</p><p>创建service，依赖dao和common；</p><p>创建web，依赖service和dao；</p><p>下面开始具体的创建过程。</p><p><b>1.创建Parent</b></p><p>所谓parent就是父工程，在这个父工程里我们需要管理所有的子Module，所以我们将其当成是一个解决方案（solution）而存在。</p><p>首先，新建project，选择maven。注意下图，不要选择archetype，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-3f00155c5c3645cb7fa4f51477aa5e2e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"944\" data-rawheight=\"471\" class=\"origin_image zh-lightbox-thumb\" width=\"944\" data-original=\"https://pic3.zhimg.com/v2-3f00155c5c3645cb7fa4f51477aa5e2e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;944&#39; height=&#39;471&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"944\" data-rawheight=\"471\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"944\" data-original=\"https://pic3.zhimg.com/v2-3f00155c5c3645cb7fa4f51477aa5e2e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-3f00155c5c3645cb7fa4f51477aa5e2e_b.jpg\"/></figure><p>下一步，分别定义groupid，artifactid和version，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-dbcd41b0fcc485976d2a9525077f7a21_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"952\" data-rawheight=\"549\" class=\"origin_image zh-lightbox-thumb\" width=\"952\" data-original=\"https://pic2.zhimg.com/v2-dbcd41b0fcc485976d2a9525077f7a21_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;952&#39; height=&#39;549&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"952\" data-rawheight=\"549\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"952\" data-original=\"https://pic2.zhimg.com/v2-dbcd41b0fcc485976d2a9525077f7a21_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-dbcd41b0fcc485976d2a9525077f7a21_b.jpg\"/></figure><p>默认next，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-b75adf63b8682146668245abc6e8a307_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"949\" data-rawheight=\"548\" class=\"origin_image zh-lightbox-thumb\" width=\"949\" data-original=\"https://pic4.zhimg.com/v2-b75adf63b8682146668245abc6e8a307_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;949&#39; height=&#39;548&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"949\" data-rawheight=\"548\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"949\" data-original=\"https://pic4.zhimg.com/v2-b75adf63b8682146668245abc6e8a307_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-b75adf63b8682146668245abc6e8a307_b.jpg\"/></figure><p>Finish之后，来到下面的界面，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-cec1371500868aa42e070fc5f2008ebc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1295\" data-rawheight=\"741\" class=\"origin_image zh-lightbox-thumb\" width=\"1295\" data-original=\"https://pic1.zhimg.com/v2-cec1371500868aa42e070fc5f2008ebc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1295&#39; height=&#39;741&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1295\" data-rawheight=\"741\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1295\" data-original=\"https://pic1.zhimg.com/v2-cec1371500868aa42e070fc5f2008ebc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-cec1371500868aa42e070fc5f2008ebc_b.jpg\"/></figure><p><b>2.配置Parent依赖</b></p><p>打开pom文件，让我们输入，</p><p>&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;</p><p>&lt;project xmlns=&#34;<a href=\"https://link.zhihu.com/?target=http%3A//maven.apache.org/POM/4.0.0\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">maven.apache.org/POM/4.</span><span class=\"invisible\">0.0</span><span class=\"ellipsis\"></span></a>&#34;</p><p>         xmlns:xsi=&#34;<a href=\"https://link.zhihu.com/?target=http%3A//www.w3.org/2001/XMLSchema-instance\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">w3.org/2001/XMLSchema-i</span><span class=\"invisible\">nstance</span><span class=\"ellipsis\"></span></a>&#34;</p><p>         xsi:schemaLocation=&#34;<a href=\"https://link.zhihu.com/?target=http%3A//maven.apache.org/POM/4.0.0\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">maven.apache.org/POM/4.</span><span class=\"invisible\">0.0</span><span class=\"ellipsis\"></span></a> <a href=\"https://link.zhihu.com/?target=http%3A//maven.apache.org/xsd/maven-4.0.0.xsd\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">maven.apache.org/xsd/ma</span><span class=\"invisible\">ven-4.0.0.xsd</span><span class=\"ellipsis\"></span></a>&#34;&gt;</p><p>    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</p><p>    &lt;groupId&gt;com.zuikc&lt;/groupId&gt;</p><p>    &lt;artifactId&gt;zuikc-sln&lt;/artifactId&gt;</p><p>    &lt;packaging&gt;pom&lt;/packaging&gt;</p><p>    &lt;version&gt;1.0.1&lt;/version&gt;</p><p>    &lt;modules&gt;</p><p>        &lt;module&gt;zuikc-common&lt;/module&gt;</p><p>        &lt;module&gt;zuikc-dao&lt;/module&gt;</p><p>        &lt;module&gt;zuikc-service&lt;/module&gt;</p><p>        &lt;module&gt;zuikc-web&lt;/module&gt;</p><p>    &lt;/modules&gt;</p><p>    &lt;!-- 设置版本号 --&gt;</p><p>    &lt;properties&gt;</p><p>        &lt;java-version&gt;1.10&lt;/java-version&gt;</p><p>        &lt;javax.servlet-version&gt;3.1.0&lt;/javax.servlet-version&gt;</p><p>        &lt;javax.servlet-jsp-version&gt;2.2.1&lt;/javax.servlet-jsp-version&gt;</p><p>        &lt;jstl-version&gt;1.2&lt;/jstl-version&gt;</p><p>        &lt;taglibs-version&gt;1.1.2&lt;/taglibs-version&gt;</p><p>        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</p><p>    &lt;/properties&gt;</p><p>    &lt;!-- 统一依赖管理 --&gt;</p><p>    &lt;dependencyManagement&gt;</p><p>        &lt;dependencies&gt;</p><p>            &lt;dependency&gt;</p><p>                &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</p><p>                &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;</p><p>                &lt;version&gt;${javax.servlet-version}&lt;/version&gt;</p><p>                &lt;scope&gt;provided&lt;/scope&gt;</p><p>            &lt;/dependency&gt;</p><p>            &lt;dependency&gt;</p><p>                &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;</p><p>                &lt;artifactId&gt;javax.servlet.jsp-api&lt;/artifactId&gt;</p><p>                &lt;version&gt;${javax.servlet-jsp-version}&lt;/version&gt;</p><p>                &lt;scope&gt;provided&lt;/scope&gt;</p><p>            &lt;/dependency&gt;</p><p>            &lt;dependency&gt;</p><p>                &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</p><p>                &lt;artifactId&gt;jstl&lt;/artifactId&gt;</p><p>                &lt;version&gt;${jstl-version}&lt;/version&gt;</p><p>            &lt;/dependency&gt;</p><p>            &lt;dependency&gt;</p><p>                &lt;groupId&gt;taglibs&lt;/groupId&gt;</p><p>                &lt;artifactId&gt;standard&lt;/artifactId&gt;</p><p>                &lt;version&gt;${taglibs-version}&lt;/version&gt;</p><p>            &lt;/dependency&gt;</p><p>        &lt;/dependencies&gt;</p><p>    &lt;/dependencyManagement&gt;</p><p>    &lt;build&gt;</p><p>        &lt;plugins&gt;</p><p>            &lt;plugin&gt;</p><p>                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</p><p>                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</p><p>                &lt;configuration&gt;</p><p>                    &lt;source&gt;${java-version}&lt;/source&gt;</p><p>                    &lt;target&gt;${java-version}&lt;/target&gt;</p><p>                    &lt;encoding&gt;UTF-8&lt;/encoding&gt;</p><p>                &lt;/configuration&gt;</p><p>            &lt;/plugin&gt;</p><p>        &lt;/plugins&gt;</p><p>        &lt;pluginManagement&gt;</p><p>            &lt;plugins&gt;</p><p>                &lt;!-- 配置Tomcat插件 --&gt;</p><p>                &lt;plugin&gt;</p><p>                    &lt;groupId&gt;org.apache.tomcat.maven&lt;/groupId&gt;</p><p>                    &lt;artifactId&gt;tomcat7-maven-plugin&lt;/artifactId&gt;</p><p>                    &lt;version&gt;2.2&lt;/version&gt;</p><p>                &lt;/plugin&gt;</p><p>            &lt;/plugins&gt;</p><p>        &lt;/pluginManagement&gt;</p><p>    &lt;/build&gt;</p><p>&lt;/project&gt;</p><p>注意，这部分内容，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-5d321f9ba7bbe55024747cdf56e66687_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"296\" data-rawheight=\"102\" class=\"content_image\" width=\"296\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;296&#39; height=&#39;102&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"296\" data-rawheight=\"102\" class=\"content_image lazy\" width=\"296\" data-actualsrc=\"https://pic4.zhimg.com/v2-5d321f9ba7bbe55024747cdf56e66687_b.jpg\"/></figure><p>实际是不需要我们输入的，随着我们子module的创建，idea会自动为我们生成。</p><p>下面这部分内容是定义了一些属性。由于idea默认的servlet模块是2.3的，所以需要让我们手动定义成3.1，否则我们就使用不了servlet的注解。其次，我索性将jstl也一并引入进来。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-7c073f8ce82fc050f332c5ec52b2c848_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"541\" data-rawheight=\"142\" class=\"origin_image zh-lightbox-thumb\" width=\"541\" data-original=\"https://pic1.zhimg.com/v2-7c073f8ce82fc050f332c5ec52b2c848_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;541&#39; height=&#39;142&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"541\" data-rawheight=\"142\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"541\" data-original=\"https://pic1.zhimg.com/v2-7c073f8ce82fc050f332c5ec52b2c848_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-7c073f8ce82fc050f332c5ec52b2c848_b.jpg\"/></figure><p>以下这部分内容才是真正的依赖管理，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-50bc565df721c92a9b5473cd02decba2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"469\" data-rawheight=\"446\" class=\"origin_image zh-lightbox-thumb\" width=\"469\" data-original=\"https://pic3.zhimg.com/v2-50bc565df721c92a9b5473cd02decba2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;469&#39; height=&#39;446&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"469\" data-rawheight=\"446\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"469\" data-original=\"https://pic3.zhimg.com/v2-50bc565df721c92a9b5473cd02decba2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-50bc565df721c92a9b5473cd02decba2_b.jpg\"/></figure><p>下面是定义了两个插件。第一个是java的编译版本。第二个是使用tomcat插件来运行我们即将要创建的web项目。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-d48ec2ef4d64da138053aa5814624552_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"361\" class=\"origin_image zh-lightbox-thumb\" width=\"500\" data-original=\"https://pic3.zhimg.com/v2-d48ec2ef4d64da138053aa5814624552_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;500&#39; height=&#39;361&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"361\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"500\" data-original=\"https://pic3.zhimg.com/v2-d48ec2ef4d64da138053aa5814624552_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-d48ec2ef4d64da138053aa5814624552_b.jpg\"/></figure><p>经过上面的设置，parent部分就大功告成了。</p><p><b>3.创建common</b></p><p>Common是工具包。</p><p>在parent上右键来创建子模块。如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-9dcf1f057bd62d9a948e941827bb73f1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"969\" data-rawheight=\"299\" class=\"origin_image zh-lightbox-thumb\" width=\"969\" data-original=\"https://pic2.zhimg.com/v2-9dcf1f057bd62d9a948e941827bb73f1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;969&#39; height=&#39;299&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"969\" data-rawheight=\"299\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"969\" data-original=\"https://pic2.zhimg.com/v2-9dcf1f057bd62d9a948e941827bb73f1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-9dcf1f057bd62d9a948e941827bb73f1_b.jpg\"/></figure><p>注意，由于是普通jar包，所以也不要选archetype，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-919329e3e22b880ae4620ee0c0e16584_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"950\" data-rawheight=\"545\" class=\"origin_image zh-lightbox-thumb\" width=\"950\" data-original=\"https://pic1.zhimg.com/v2-919329e3e22b880ae4620ee0c0e16584_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;950&#39; height=&#39;545&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"950\" data-rawheight=\"545\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"950\" data-original=\"https://pic1.zhimg.com/v2-919329e3e22b880ae4620ee0c0e16584_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-919329e3e22b880ae4620ee0c0e16584_b.jpg\"/></figure><p>Next，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-281e4c30a976d9514f0c30156e3a2755_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"951\" data-rawheight=\"556\" class=\"origin_image zh-lightbox-thumb\" width=\"951\" data-original=\"https://pic2.zhimg.com/v2-281e4c30a976d9514f0c30156e3a2755_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;951&#39; height=&#39;556&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"951\" data-rawheight=\"556\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"951\" data-original=\"https://pic2.zhimg.com/v2-281e4c30a976d9514f0c30156e3a2755_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-281e4c30a976d9514f0c30156e3a2755_b.jpg\"/></figure><p>Next，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-3c60e5048a63633d1292ef676dec6e87_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"953\" data-rawheight=\"549\" class=\"origin_image zh-lightbox-thumb\" width=\"953\" data-original=\"https://pic4.zhimg.com/v2-3c60e5048a63633d1292ef676dec6e87_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;953&#39; height=&#39;549&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"953\" data-rawheight=\"549\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"953\" data-original=\"https://pic4.zhimg.com/v2-3c60e5048a63633d1292ef676dec6e87_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-3c60e5048a63633d1292ef676dec6e87_b.jpg\"/></figure><p>Finish。</p><p>创建完成后长下面这样。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-d291a7607956db1d6ea2e4f3de1523d9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"823\" data-rawheight=\"314\" class=\"origin_image zh-lightbox-thumb\" width=\"823\" data-original=\"https://pic2.zhimg.com/v2-d291a7607956db1d6ea2e4f3de1523d9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;823&#39; height=&#39;314&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"823\" data-rawheight=\"314\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"823\" data-original=\"https://pic2.zhimg.com/v2-d291a7607956db1d6ea2e4f3de1523d9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-d291a7607956db1d6ea2e4f3de1523d9_b.jpg\"/></figure><p><b>4.创建dao与service</b></p><p>用跟创建common一样的方法来创建dao和service，最终结果如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-f12ca009824fecf3a0807632348c807c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"475\" data-rawheight=\"327\" class=\"origin_image zh-lightbox-thumb\" width=\"475\" data-original=\"https://pic1.zhimg.com/v2-f12ca009824fecf3a0807632348c807c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;475&#39; height=&#39;327&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"475\" data-rawheight=\"327\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"475\" data-original=\"https://pic1.zhimg.com/v2-f12ca009824fecf3a0807632348c807c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-f12ca009824fecf3a0807632348c807c_b.jpg\"/></figure><p><b>5.创建web</b></p><p>接着让我们来创建web。</p><p>这次我们要选择“create from archetype”，如下图选择webapp，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-e06c274cd50feb152ff8ee747d358de5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1202\" data-rawheight=\"627\" class=\"origin_image zh-lightbox-thumb\" width=\"1202\" data-original=\"https://pic2.zhimg.com/v2-e06c274cd50feb152ff8ee747d358de5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1202&#39; height=&#39;627&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1202\" data-rawheight=\"627\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1202\" data-original=\"https://pic2.zhimg.com/v2-e06c274cd50feb152ff8ee747d358de5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-e06c274cd50feb152ff8ee747d358de5_b.jpg\"/></figure><p>Next，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-e1e0ba5f3ae21371831237a7e6eb4fe2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"951\" data-rawheight=\"547\" class=\"origin_image zh-lightbox-thumb\" width=\"951\" data-original=\"https://pic3.zhimg.com/v2-e1e0ba5f3ae21371831237a7e6eb4fe2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;951&#39; height=&#39;547&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"951\" data-rawheight=\"547\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"951\" data-original=\"https://pic3.zhimg.com/v2-e1e0ba5f3ae21371831237a7e6eb4fe2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-e1e0ba5f3ae21371831237a7e6eb4fe2_b.jpg\"/></figure><p>Next，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-8d0cb8d3cf53be379c840ec7157e4b78_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"947\" data-rawheight=\"549\" class=\"origin_image zh-lightbox-thumb\" width=\"947\" data-original=\"https://pic1.zhimg.com/v2-8d0cb8d3cf53be379c840ec7157e4b78_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;947&#39; height=&#39;549&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"947\" data-rawheight=\"549\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"947\" data-original=\"https://pic1.zhimg.com/v2-8d0cb8d3cf53be379c840ec7157e4b78_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-8d0cb8d3cf53be379c840ec7157e4b78_b.jpg\"/></figure><p>Next，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-246a16fe204eab763a682144998ebeed_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"950\" data-rawheight=\"548\" class=\"origin_image zh-lightbox-thumb\" width=\"950\" data-original=\"https://pic2.zhimg.com/v2-246a16fe204eab763a682144998ebeed_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;950&#39; height=&#39;548&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"950\" data-rawheight=\"548\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"950\" data-original=\"https://pic2.zhimg.com/v2-246a16fe204eab763a682144998ebeed_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-246a16fe204eab763a682144998ebeed_b.jpg\"/></figure><p>Finish，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f4f5b818e98494d2d7904d3f20a4dc41_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"962\" data-rawheight=\"331\" class=\"origin_image zh-lightbox-thumb\" width=\"962\" data-original=\"https://pic2.zhimg.com/v2-f4f5b818e98494d2d7904d3f20a4dc41_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;962&#39; height=&#39;331&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"962\" data-rawheight=\"331\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"962\" data-original=\"https://pic2.zhimg.com/v2-f4f5b818e98494d2d7904d3f20a4dc41_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f4f5b818e98494d2d7904d3f20a4dc41_b.jpg\"/></figure><p>这个时候，我们发现idea的控制台中有下图的generating，这个时候要等几分钟，才能将我们的web项目初始化，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-b5e3e32f363799450b726bce1a9aede6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1295\" data-rawheight=\"243\" class=\"origin_image zh-lightbox-thumb\" width=\"1295\" data-original=\"https://pic3.zhimg.com/v2-b5e3e32f363799450b726bce1a9aede6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1295&#39; height=&#39;243&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1295\" data-rawheight=\"243\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1295\" data-original=\"https://pic3.zhimg.com/v2-b5e3e32f363799450b726bce1a9aede6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-b5e3e32f363799450b726bce1a9aede6_b.jpg\"/></figure><p>当generating完毕，web项目就会被初始化为一些默认的文件夹和文件在里面。当前的项目我们暂时不需要spring和日志，所以就可以将applicaitonContext.xml和log4j.xm删除。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-59c2c74fe681332deb6080d2f71ed71a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"421\" data-rawheight=\"477\" class=\"origin_image zh-lightbox-thumb\" width=\"421\" data-original=\"https://pic3.zhimg.com/v2-59c2c74fe681332deb6080d2f71ed71a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;421&#39; height=&#39;477&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"421\" data-rawheight=\"477\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"421\" data-original=\"https://pic3.zhimg.com/v2-59c2c74fe681332deb6080d2f71ed71a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-59c2c74fe681332deb6080d2f71ed71a_b.jpg\"/></figure><p><b>6.Web的配置</b></p><p>接着修改web.xml，使其支持servlet3，如下，</p><p>&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;</p><p>&lt;web-app xmlns=&#34;<a href=\"https://link.zhihu.com/?target=http%3A//xmlns.jcp.org/xml/ns/javaee\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">xmlns.jcp.org/xml/ns/ja</span><span class=\"invisible\">vaee</span><span class=\"ellipsis\"></span></a>&#34; xmlns:xsi=&#34;<a href=\"https://link.zhihu.com/?target=http%3A//www.w3.org/2001/XMLSchema-instance\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">w3.org/2001/XMLSchema-i</span><span class=\"invisible\">nstance</span><span class=\"ellipsis\"></span></a>&#34;</p><p>         xsi:schemaLocation=&#34;<a href=\"https://link.zhihu.com/?target=http%3A//xmlns.jcp.org/xml/ns/javaee\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">xmlns.jcp.org/xml/ns/ja</span><span class=\"invisible\">vaee</span><span class=\"ellipsis\"></span></a></p><p>                      <a href=\"https://link.zhihu.com/?target=http%3A//xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">xmlns.jcp.org/xml/ns/ja</span><span class=\"invisible\">vaee/web-app_3_1.xsd</span><span class=\"ellipsis\"></span></a>&#34;</p><p>         version=&#34;3.1&#34; metadata-complete=&#34;false&#34;&gt;</p><p>&lt;/web-app&gt;</p><p>Maven默认的webapp模版没有创建java文件夹，让我们手动创建。手动创建完毕，发现不能在java文件夹上创建servlet，这个时候就要完成两件事情了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-ddf2f7bf0bd3304b64a893cf44ce6c1b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"319\" data-rawheight=\"255\" class=\"content_image\" width=\"319\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;319&#39; height=&#39;255&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"319\" data-rawheight=\"255\" class=\"content_image lazy\" width=\"319\" data-actualsrc=\"https://pic4.zhimg.com/v2-ddf2f7bf0bd3304b64a893cf44ce6c1b_b.jpg\"/></figure><p>第一件事情，要将java文件夹标注为：sources root，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-5a8ee6109b0d64baef8a5c0125a429bb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"926\" data-rawheight=\"823\" class=\"origin_image zh-lightbox-thumb\" width=\"926\" data-original=\"https://pic4.zhimg.com/v2-5a8ee6109b0d64baef8a5c0125a429bb_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;926&#39; height=&#39;823&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"926\" data-rawheight=\"823\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"926\" data-original=\"https://pic4.zhimg.com/v2-5a8ee6109b0d64baef8a5c0125a429bb_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-5a8ee6109b0d64baef8a5c0125a429bb_b.jpg\"/></figure><p>第二件事情要配置web的pom文件，加入对servlet3模版的支持，如下：</p><p>&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;</p><p>&lt;project xmlns=&#34;<a href=\"https://link.zhihu.com/?target=http%3A//maven.apache.org/POM/4.0.0\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">maven.apache.org/POM/4.</span><span class=\"invisible\">0.0</span><span class=\"ellipsis\"></span></a>&#34; xmlns:xsi=&#34;<a href=\"https://link.zhihu.com/?target=http%3A//www.w3.org/2001/XMLSchema-instance\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">w3.org/2001/XMLSchema-i</span><span class=\"invisible\">nstance</span><span class=\"ellipsis\"></span></a>&#34;</p><p>         xsi:schemaLocation=&#34;<a href=\"https://link.zhihu.com/?target=http%3A//maven.apache.org/POM/4.0.0\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">maven.apache.org/POM/4.</span><span class=\"invisible\">0.0</span><span class=\"ellipsis\"></span></a> <a href=\"https://link.zhihu.com/?target=http%3A//maven.apache.org/maven-v4_0_0.xsd\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">maven.apache.org/maven-</span><span class=\"invisible\">v4_0_0.xsd</span><span class=\"ellipsis\"></span></a>&#34;&gt;</p><p>    &lt;parent&gt;</p><p>        &lt;artifactId&gt;zuikc-sln&lt;/artifactId&gt;</p><p>        &lt;groupId&gt;com.zuikc&lt;/groupId&gt;</p><p>        &lt;version&gt;1.0.1&lt;/version&gt;</p><p>    &lt;/parent&gt;</p><p>    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</p><p>    &lt;packaging&gt;war&lt;/packaging&gt;</p><p>    &lt;name&gt;zuikc-web&lt;/name&gt;</p><p>    &lt;artifactId&gt;zuikc-web&lt;/artifactId&gt;</p><p>    &lt;dependencies&gt;</p><p>        &lt;dependency&gt;</p><p>            &lt;groupId&gt;com.zuikc&lt;/groupId&gt;</p><p>            &lt;artifactId&gt;zuikc-dao&lt;/artifactId&gt;</p><p>            &lt;version&gt;1.0.1&lt;/version&gt;</p><p>            &lt;scope&gt;compile&lt;/scope&gt;</p><p>        &lt;/dependency&gt;</p><p>        &lt;dependency&gt;</p><p>            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</p><p>            &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;</p><p>            &lt;scope&gt;provided&lt;/scope&gt;</p><p>        &lt;/dependency&gt;</p><p>        &lt;dependency&gt;</p><p>            &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;</p><p>            &lt;artifactId&gt;javax.servlet.jsp-api&lt;/artifactId&gt;</p><p>            &lt;scope&gt;provided&lt;/scope&gt;</p><p>        &lt;/dependency&gt;</p><p>        &lt;dependency&gt;</p><p>            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</p><p>            &lt;artifactId&gt;jstl&lt;/artifactId&gt;</p><p>        &lt;/dependency&gt;</p><p>        &lt;dependency&gt;</p><p>            &lt;groupId&gt;taglibs&lt;/groupId&gt;</p><p>            &lt;artifactId&gt;standard&lt;/artifactId&gt;</p><p>        &lt;/dependency&gt;</p><p>    &lt;/dependencies&gt;</p><p>    &lt;build&gt;</p><p>        &lt;plugins&gt;</p><p>            &lt;plugin&gt;</p><p>                &lt;groupId&gt;org.apache.tomcat.maven&lt;/groupId&gt;</p><p>                &lt;artifactId&gt;tomcat7-maven-plugin&lt;/artifactId&gt;</p><p>                &lt;configuration&gt;</p><p>                    &lt;port&gt;7070&lt;/port&gt;</p><p>                    &lt;path&gt;/&lt;/path&gt;</p><p>                &lt;/configuration&gt;</p><p>            &lt;/plugin&gt;</p><p>        &lt;/plugins&gt;</p><p>    &lt;/build&gt;</p><p>&lt;/project&gt; </p><p>在这个pom文件中，一是完成了servlet3的支持，而是让项目引入引入tomcat的插件，并指定项目在7070端口上启动。</p><p>这个时候，还是发现不能在java上创建servlet，没事，只要使用maven的reimport刷新一下就行了，如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-a6a66e97d3798c197e84a3ccc15b4030_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"950\" data-rawheight=\"867\" class=\"origin_image zh-lightbox-thumb\" width=\"950\" data-original=\"https://pic1.zhimg.com/v2-a6a66e97d3798c197e84a3ccc15b4030_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;950&#39; height=&#39;867&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"950\" data-rawheight=\"867\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"950\" data-original=\"https://pic1.zhimg.com/v2-a6a66e97d3798c197e84a3ccc15b4030_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-a6a66e97d3798c197e84a3ccc15b4030_b.jpg\"/></figure><p>这个时候，就可以在java上创建servlet了，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-5fae618046dc66713e72e4d3d04f2126_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"970\" data-rawheight=\"862\" class=\"origin_image zh-lightbox-thumb\" width=\"970\" data-original=\"https://pic3.zhimg.com/v2-5fae618046dc66713e72e4d3d04f2126_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;970&#39; height=&#39;862&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"970\" data-rawheight=\"862\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"970\" data-original=\"https://pic3.zhimg.com/v2-5fae618046dc66713e72e4d3d04f2126_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-5fae618046dc66713e72e4d3d04f2126_b.jpg\"/></figure><p>Next，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-b6fba819d7dbb368afa4bd460030e613_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"904\" data-rawheight=\"537\" class=\"origin_image zh-lightbox-thumb\" width=\"904\" data-original=\"https://pic4.zhimg.com/v2-b6fba819d7dbb368afa4bd460030e613_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;904&#39; height=&#39;537&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"904\" data-rawheight=\"537\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"904\" data-original=\"https://pic4.zhimg.com/v2-b6fba819d7dbb368afa4bd460030e613_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-b6fba819d7dbb368afa4bd460030e613_b.jpg\"/></figure><p>最后ok，可以看到，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-996e092d7cbef0ee9f67bd41d10f6f37_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"345\" data-rawheight=\"541\" class=\"content_image\" width=\"345\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;345&#39; height=&#39;541&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"345\" data-rawheight=\"541\" class=\"content_image lazy\" width=\"345\" data-actualsrc=\"https://pic4.zhimg.com/v2-996e092d7cbef0ee9f67bd41d10f6f37_b.jpg\"/></figure><p>让我们修改servlet，</p><p>package com.zuikc.servlets;</p><p>import javax.servlet.ServletException;</p><p>import javax.servlet.annotation.WebServlet;</p><p>import javax.servlet.http.HttpServletRequest;</p><p>import javax.servlet.http.HttpServletResponse;</p><p>import java.io.IOException;</p><p>@WebServlet(name = &#34;Servlet1&#34;, urlPatterns = &#34;/servlet1&#34;)</p><p>public class Servlet1 extends javax.servlet.http.HttpServlet {</p><p>    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {</p><p>    }</p><p>    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {</p><p>        //通知浏览器浏览器用utf8来解析返回的数据</p><p>        response.setHeader(&#34;Content-type&#34;, &#34;text/html;charset=UTF-8&#34;);</p><p>        //使用UTF-8转码</p><p>        response.setCharacterEncoding(&#34;UTF-8&#34;);</p><p>        response.getWriter().append(&#34;码农星球最课程，IT培训新选择！&#34;);</p><p>    }</p><p>} </p><p><b>7.配置启动</b></p><p>我们要配置用maven启动项目。如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-e6e9886209085ba540e30e44f7bd28f0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1327\" data-rawheight=\"658\" class=\"origin_image zh-lightbox-thumb\" width=\"1327\" data-original=\"https://pic1.zhimg.com/v2-e6e9886209085ba540e30e44f7bd28f0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1327&#39; height=&#39;658&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1327\" data-rawheight=\"658\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1327\" data-original=\"https://pic1.zhimg.com/v2-e6e9886209085ba540e30e44f7bd28f0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e6e9886209085ba540e30e44f7bd28f0_b.jpg\"/></figure><p>确定。</p><p>然后点击run，就可以运行项目了，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-5c3b0bdb4ec0d397d9db11dba037a223_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"825\" data-rawheight=\"223\" class=\"origin_image zh-lightbox-thumb\" width=\"825\" data-original=\"https://pic4.zhimg.com/v2-5c3b0bdb4ec0d397d9db11dba037a223_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;825&#39; height=&#39;223&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"825\" data-rawheight=\"223\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"825\" data-original=\"https://pic4.zhimg.com/v2-5c3b0bdb4ec0d397d9db11dba037a223_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-5c3b0bdb4ec0d397d9db11dba037a223_b.jpg\"/></figure><p>注意，我们初次创建，会从maven仓储中下载不少文件，如下图所示</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-92154a03736e13e1d115f48ea6fbb012_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1296\" data-rawheight=\"466\" class=\"origin_image zh-lightbox-thumb\" width=\"1296\" data-original=\"https://pic3.zhimg.com/v2-92154a03736e13e1d115f48ea6fbb012_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1296&#39; height=&#39;466&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1296\" data-rawheight=\"466\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1296\" data-original=\"https://pic3.zhimg.com/v2-92154a03736e13e1d115f48ea6fbb012_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-92154a03736e13e1d115f48ea6fbb012_b.jpg\"/></figure><p>其次，run之前需要我们将项目本身install到maven的本地仓储中。还记得上一篇中我们是怎么install的吗？来来，只要在sln上install就可以了，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-803ca8d93ad616ae8b81b52e71040900_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"475\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-803ca8d93ad616ae8b81b52e71040900_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;475&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"475\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-803ca8d93ad616ae8b81b52e71040900_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-803ca8d93ad616ae8b81b52e71040900_b.jpg\"/></figure><p>看到这些，就表示成功了，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-b54c44121bc29a7b0d9e07f81dff3611_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"868\" data-rawheight=\"365\" class=\"origin_image zh-lightbox-thumb\" width=\"868\" data-original=\"https://pic2.zhimg.com/v2-b54c44121bc29a7b0d9e07f81dff3611_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;868&#39; height=&#39;365&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"868\" data-rawheight=\"365\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"868\" data-original=\"https://pic2.zhimg.com/v2-b54c44121bc29a7b0d9e07f81dff3611_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-b54c44121bc29a7b0d9e07f81dff3611_b.jpg\"/></figure><p>现在，让我们run这个web项目，看到这个熟悉的界面，就说明tomcat启动成功，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-627adf4970071a8f7ffba4293ecc5b9a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"794\" data-rawheight=\"358\" class=\"origin_image zh-lightbox-thumb\" width=\"794\" data-original=\"https://pic3.zhimg.com/v2-627adf4970071a8f7ffba4293ecc5b9a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;794&#39; height=&#39;358&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"794\" data-rawheight=\"358\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"794\" data-original=\"https://pic3.zhimg.com/v2-627adf4970071a8f7ffba4293ecc5b9a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-627adf4970071a8f7ffba4293ecc5b9a_b.jpg\"/></figure><p>来，让我们localhost:7070/servlet1吧，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-ca9a71db7e51254ec6ba6e3da5e0168b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1134\" data-rawheight=\"638\" class=\"origin_image zh-lightbox-thumb\" width=\"1134\" data-original=\"https://pic4.zhimg.com/v2-ca9a71db7e51254ec6ba6e3da5e0168b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1134&#39; height=&#39;638&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1134\" data-rawheight=\"638\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1134\" data-original=\"https://pic4.zhimg.com/v2-ca9a71db7e51254ec6ba6e3da5e0168b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-ca9a71db7e51254ec6ba6e3da5e0168b_b.jpg\"/></figure><p>感谢关注“码农星球”。本文版权属于“码农星球”。我们提供咨询和培训服务，关于本文有任何困惑，请关注并联系我们。</p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/57933791", 
            "userName": "撸码J", 
            "userLink": "https://www.zhihu.com/people/38630bb8d3ce44008ae0fef2fc4342bd", 
            "upvote": 0, 
            "title": "Java全栈程序员之06：IDEA中MAVEN项目依赖及运行", 
            "content": "<p>MAVEN已经成为事实上的企业项目开发中的项目类型。无论是IDEA还是Eclipse，都已经默认支持创建MAVEN项目。严格意义上来说，MAVEN不是一种新的JavaEE项目类型。它凌驾于所以的项目类型上面，是对之前项目的一种“管理”。如果我们创建了MAVEN项目，那么会很方便的干这两件事情：</p><p>1：管理所有的依赖包。其中一个例子是，以往我们要引入一个第三方的jar包，需要把该jar包从网上（或者其它地方）下载回来，然后引入到项目中。而现在，我们只要在pom文件中引入改jar包的标识符，然后maven插件会自动帮我们下载该jar包并引入到项目中来。</p><p>2：方便我们编译、执行、部署项目。</p><p>且看maven项目在IDEA中如何运行。</p><p><b>1.创建parent项目</b></p><p>我假设你的项目，不会简单到只有一个Project（在IDEA中更多的称之为Module），所遇，基于一般的做法，我们首先会创建一个父项目。</p><p>该父项目会定义一些通用配置，比如会整个系统所使用的JDK版本，或者引入的通用的jar包的版本。</p><p>选择new project，如下，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-24929bdd8a16d884d69c40d5830c67e4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"950\" data-rawheight=\"475\" class=\"origin_image zh-lightbox-thumb\" width=\"950\" data-original=\"https://pic1.zhimg.com/v2-24929bdd8a16d884d69c40d5830c67e4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;950&#39; height=&#39;475&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"950\" data-rawheight=\"475\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"950\" data-original=\"https://pic1.zhimg.com/v2-24929bdd8a16d884d69c40d5830c67e4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-24929bdd8a16d884d69c40d5830c67e4_b.jpg\"/></figure><p>Next，在此页面，定义groupid和标识符和版本号，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-c4a6991b58add7864da1b3f68ecb31c8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"953\" data-rawheight=\"550\" class=\"origin_image zh-lightbox-thumb\" width=\"953\" data-original=\"https://pic1.zhimg.com/v2-c4a6991b58add7864da1b3f68ecb31c8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;953&#39; height=&#39;550&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"953\" data-rawheight=\"550\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"953\" data-original=\"https://pic1.zhimg.com/v2-c4a6991b58add7864da1b3f68ecb31c8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-c4a6991b58add7864da1b3f68ecb31c8_b.jpg\"/></figure><p>Next，定义项目名，module名。注意，module名很重要，我们定义为：test01.parent，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-4205f5cd51981b6f52d993b57f9bfa0d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"950\" data-rawheight=\"474\" class=\"origin_image zh-lightbox-thumb\" width=\"950\" data-original=\"https://pic2.zhimg.com/v2-4205f5cd51981b6f52d993b57f9bfa0d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;950&#39; height=&#39;474&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"950\" data-rawheight=\"474\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"950\" data-original=\"https://pic2.zhimg.com/v2-4205f5cd51981b6f52d993b57f9bfa0d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-4205f5cd51981b6f52d993b57f9bfa0d_b.jpg\"/></figure><p>接下来，可以enable auto-import，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-0d7253e75ace765508e958b123d45002_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1296\" data-rawheight=\"740\" class=\"origin_image zh-lightbox-thumb\" width=\"1296\" data-original=\"https://pic3.zhimg.com/v2-0d7253e75ace765508e958b123d45002_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1296&#39; height=&#39;740&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1296\" data-rawheight=\"740\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1296\" data-original=\"https://pic3.zhimg.com/v2-0d7253e75ace765508e958b123d45002_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-0d7253e75ace765508e958b123d45002_b.jpg\"/></figure><p>Pom文件就是配置文件，是parent中我们唯一需要动的文件，在这个文件中，我们目前要做的就是把项目的JDK版本定义为1.10，如下，</p><p>&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;</p><p>&lt;project xmlns=&#34;<a href=\"https://link.zhihu.com/?target=http%3A//maven.apache.org/POM/4.0.0\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">maven.apache.org/POM/4.</span><span class=\"invisible\">0.0</span><span class=\"ellipsis\"></span></a>&#34;</p><p>         xmlns:xsi=&#34;<a href=\"https://link.zhihu.com/?target=http%3A//www.w3.org/2001/XMLSchema-instance\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">w3.org/2001/XMLSchema-i</span><span class=\"invisible\">nstance</span><span class=\"ellipsis\"></span></a>&#34;</p><p>         xsi:schemaLocation=&#34;<a href=\"https://link.zhihu.com/?target=http%3A//maven.apache.org/POM/4.0.0\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">maven.apache.org/POM/4.</span><span class=\"invisible\">0.0</span><span class=\"ellipsis\"></span></a> <a href=\"https://link.zhihu.com/?target=http%3A//maven.apache.org/xsd/maven-4.0.0.xsd\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">maven.apache.org/xsd/ma</span><span class=\"invisible\">ven-4.0.0.xsd</span><span class=\"ellipsis\"></span></a>&#34;&gt;</p><p>    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</p><p>    &lt;groupId&gt;com.zuikc&lt;/groupId&gt;</p><p>    &lt;artifactId&gt;test01&lt;/artifactId&gt;</p><p>    &lt;packaging&gt;pom&lt;/packaging&gt;</p><p>    &lt;version&gt;1.0.1&lt;/version&gt;</p><p>    &lt;properties&gt;</p><p>        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</p><p>        &lt;maven.compiler.encoding&gt;UTF-8&lt;/maven.compiler.encoding&gt;</p><p>        &lt;java.version&gt;1.10&lt;/java.version&gt;</p><p>        &lt;maven.compiler.source&gt;1.10&lt;/maven.compiler.source&gt;</p><p>        &lt;maven.compiler.target&gt;1.10&lt;/maven.compiler.target&gt;</p><p>    &lt;/properties&gt;</p><p>&lt;/project&gt;</p><p><b>2.创建工具项目</b></p><p>有了parent，让我们创建工具项目吧。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a645d62651c7b99124b43bbd03e71d06_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"949\" data-rawheight=\"476\" class=\"origin_image zh-lightbox-thumb\" width=\"949\" data-original=\"https://pic3.zhimg.com/v2-a645d62651c7b99124b43bbd03e71d06_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;949&#39; height=&#39;476&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"949\" data-rawheight=\"476\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"949\" data-original=\"https://pic3.zhimg.com/v2-a645d62651c7b99124b43bbd03e71d06_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-a645d62651c7b99124b43bbd03e71d06_b.jpg\"/></figure><p>Next。注意，下图红框中的设置是自动带过来的，一般不需要动。Module的标识取名为test01.common。一般这种项目，在实际的工作中，是用来放置各种工具类的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-a8a451c4d3b626004e0a82a34c90245f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1341\" data-rawheight=\"608\" class=\"origin_image zh-lightbox-thumb\" width=\"1341\" data-original=\"https://pic4.zhimg.com/v2-a8a451c4d3b626004e0a82a34c90245f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1341&#39; height=&#39;608&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1341\" data-rawheight=\"608\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1341\" data-original=\"https://pic4.zhimg.com/v2-a8a451c4d3b626004e0a82a34c90245f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-a8a451c4d3b626004e0a82a34c90245f_b.jpg\"/></figure><p>Next，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-4d8049288066614b92b3ac9375da3fcb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1122\" data-rawheight=\"531\" class=\"origin_image zh-lightbox-thumb\" width=\"1122\" data-original=\"https://pic4.zhimg.com/v2-4d8049288066614b92b3ac9375da3fcb_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1122&#39; height=&#39;531&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1122\" data-rawheight=\"531\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1122\" data-original=\"https://pic4.zhimg.com/v2-4d8049288066614b92b3ac9375da3fcb_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-4d8049288066614b92b3ac9375da3fcb_b.jpg\"/></figure><p>Finish之后，可以看到当前module的pom文件中，指定了parent。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-556bda945144368f53b03c9299511e02_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1262\" data-rawheight=\"470\" class=\"origin_image zh-lightbox-thumb\" width=\"1262\" data-original=\"https://pic3.zhimg.com/v2-556bda945144368f53b03c9299511e02_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1262&#39; height=&#39;470&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1262\" data-rawheight=\"470\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1262\" data-original=\"https://pic3.zhimg.com/v2-556bda945144368f53b03c9299511e02_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-556bda945144368f53b03c9299511e02_b.jpg\"/></figure><p>为了演示期间，让我们随便创建一个很简单的工具类吧，这个工具类中，只有一个加法方法。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-6d7ed0f27b01e9aad146c00abab16e91_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"863\" data-rawheight=\"453\" class=\"origin_image zh-lightbox-thumb\" width=\"863\" data-original=\"https://pic2.zhimg.com/v2-6d7ed0f27b01e9aad146c00abab16e91_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;863&#39; height=&#39;453&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"863\" data-rawheight=\"453\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"863\" data-original=\"https://pic2.zhimg.com/v2-6d7ed0f27b01e9aad146c00abab16e91_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-6d7ed0f27b01e9aad146c00abab16e91_b.jpg\"/></figure><p>如下，</p><p>package com.zuikc.test01.common;</p><p>public class Mather {</p><p>    public static final int add(int a, int b){</p><p>        return a+b;</p><p>    }</p><p>}</p><p><b>3.创建UI层项目</b></p><p>接下来，让我们创建UI层。当然，实际工作中，可能你的设计是标准的三层架构，那无非也就是多创建几个module。另外，UI层可能是一个web project，也有可能是像本例一样是个console。那都无所谓，MAVEN项目的一个优点是，你甚至可以随意将一个console项目变成一个web project。</p><p>让我们继续创建UI层，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a7aff1d2ddaf1b95237e748370200256_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"948\" data-rawheight=\"474\" class=\"origin_image zh-lightbox-thumb\" width=\"948\" data-original=\"https://pic3.zhimg.com/v2-a7aff1d2ddaf1b95237e748370200256_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;948&#39; height=&#39;474&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"948\" data-rawheight=\"474\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"948\" data-original=\"https://pic3.zhimg.com/v2-a7aff1d2ddaf1b95237e748370200256_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-a7aff1d2ddaf1b95237e748370200256_b.jpg\"/></figure><p>Next，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-9840cf692db38bccd9ebebe4960c0e91_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"949\" data-rawheight=\"475\" class=\"origin_image zh-lightbox-thumb\" width=\"949\" data-original=\"https://pic2.zhimg.com/v2-9840cf692db38bccd9ebebe4960c0e91_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;949&#39; height=&#39;475&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"949\" data-rawheight=\"475\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"949\" data-original=\"https://pic2.zhimg.com/v2-9840cf692db38bccd9ebebe4960c0e91_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-9840cf692db38bccd9ebebe4960c0e91_b.jpg\"/></figure><p>Next，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-1ab63bebee50fa583e4c0e0239226516_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"956\" data-rawheight=\"476\" class=\"origin_image zh-lightbox-thumb\" width=\"956\" data-original=\"https://pic3.zhimg.com/v2-1ab63bebee50fa583e4c0e0239226516_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;956&#39; height=&#39;476&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"956\" data-rawheight=\"476\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"956\" data-original=\"https://pic3.zhimg.com/v2-1ab63bebee50fa583e4c0e0239226516_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-1ab63bebee50fa583e4c0e0239226516_b.jpg\"/></figure><p>Finish。</p><p>在本项目的pom文件中，我们要设置自己依赖了common，所以，我们要配置下图红框中的内容。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-fe9a727f6d5053fa492964abc2ae2b49_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1014\" data-rawheight=\"636\" class=\"origin_image zh-lightbox-thumb\" width=\"1014\" data-original=\"https://pic2.zhimg.com/v2-fe9a727f6d5053fa492964abc2ae2b49_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1014&#39; height=&#39;636&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1014\" data-rawheight=\"636\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1014\" data-original=\"https://pic2.zhimg.com/v2-fe9a727f6d5053fa492964abc2ae2b49_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-fe9a727f6d5053fa492964abc2ae2b49_b.jpg\"/></figure><p>现在，为了测试期间，让我们创建一个main类，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-3a5d79f221eb06a37f6b1e18528e4f77_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"485\" data-rawheight=\"199\" class=\"origin_image zh-lightbox-thumb\" width=\"485\" data-original=\"https://pic4.zhimg.com/v2-3a5d79f221eb06a37f6b1e18528e4f77_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;485&#39; height=&#39;199&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"485\" data-rawheight=\"199\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"485\" data-original=\"https://pic4.zhimg.com/v2-3a5d79f221eb06a37f6b1e18528e4f77_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-3a5d79f221eb06a37f6b1e18528e4f77_b.jpg\"/></figure><p>代码如下，</p><p>package com.zuikc.test01.ui;</p><p>import com.zuikc.test01.common.Mather;</p><p>public class Sample01 {</p><p>    public static void main(String[] args) {</p><p>        int re = Mather.add(1,2);</p><p>        System.out.println(re);</p><p>    }</p><p>}</p><p><b>4.exec-maven-plugin插件</b></p><p>要以MAVEN的形式来运行console项目，我们需要添加exec-maven-plugin插件。怎么添加呢？</p><p> 很简单的，只要在UI项目的pom中增加如下，</p><p>    &lt;build&gt;</p><p>        &lt;plugins&gt;</p><p>            &lt;plugin&gt;</p><p>                &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;</p><p>                &lt;artifactId&gt;exec-maven-plugin&lt;/artifactId&gt;</p><p>                &lt;version&gt;1.6.0&lt;/version&gt;</p><p>                &lt;executions&gt;</p><p>                    &lt;execution&gt;</p><p>                        &lt;goals&gt;</p><p>                            &lt;goal&gt;exec&lt;/goal&gt;</p><p>                        &lt;/goals&gt;</p><p>                    &lt;/execution&gt;</p><p>                &lt;/executions&gt;</p><p>            &lt;/plugin&gt;</p><p>        &lt;/plugins&gt;</p><p>    &lt;/build&gt;</p><p>看图，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-1f59fa1c1de2e70e496f9ab806464769_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1293\" data-rawheight=\"719\" class=\"origin_image zh-lightbox-thumb\" width=\"1293\" data-original=\"https://pic2.zhimg.com/v2-1f59fa1c1de2e70e496f9ab806464769_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1293&#39; height=&#39;719&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1293\" data-rawheight=\"719\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1293\" data-original=\"https://pic2.zhimg.com/v2-1f59fa1c1de2e70e496f9ab806464769_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-1f59fa1c1de2e70e496f9ab806464769_b.jpg\"/></figure><p>当保存之后，maven就会从中央仓储（<a href=\"https://link.zhihu.com/?target=http%3A//mvnrepository.com\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">mvnrepository.com</span><span class=\"invisible\"></span></a>）中去下载这个插件（其实主要就是一些jar包）到本地。</p><p><b>5.配置运行console</b></p><p>打开配置，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-f46235bf094d48cb6cab631a06918f60_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"994\" data-rawheight=\"310\" class=\"origin_image zh-lightbox-thumb\" width=\"994\" data-original=\"https://pic1.zhimg.com/v2-f46235bf094d48cb6cab631a06918f60_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;994&#39; height=&#39;310&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"994\" data-rawheight=\"310\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"994\" data-original=\"https://pic1.zhimg.com/v2-f46235bf094d48cb6cab631a06918f60_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-f46235bf094d48cb6cab631a06918f60_b.jpg\"/></figure><p>点击+号，增加一个maven配置，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-3cc4fb6ab1c0a3a70e5f85345cd1ceab_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1199\" data-rawheight=\"559\" class=\"origin_image zh-lightbox-thumb\" width=\"1199\" data-original=\"https://pic4.zhimg.com/v2-3cc4fb6ab1c0a3a70e5f85345cd1ceab_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1199&#39; height=&#39;559&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1199\" data-rawheight=\"559\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1199\" data-original=\"https://pic4.zhimg.com/v2-3cc4fb6ab1c0a3a70e5f85345cd1ceab_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-3cc4fb6ab1c0a3a70e5f85345cd1ceab_b.jpg\"/></figure><p>像如下进行配置，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-80637bb5c126cc55acacefd7c9322ca9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1193\" data-rawheight=\"743\" class=\"origin_image zh-lightbox-thumb\" width=\"1193\" data-original=\"https://pic2.zhimg.com/v2-80637bb5c126cc55acacefd7c9322ca9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1193&#39; height=&#39;743&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1193\" data-rawheight=\"743\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1193\" data-original=\"https://pic2.zhimg.com/v2-80637bb5c126cc55acacefd7c9322ca9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-80637bb5c126cc55acacefd7c9322ca9_b.jpg\"/></figure><p>保存后进行run，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-6f05628ea1fdf569a88c1e0e1f72adac_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1343\" data-rawheight=\"542\" class=\"origin_image zh-lightbox-thumb\" width=\"1343\" data-original=\"https://pic1.zhimg.com/v2-6f05628ea1fdf569a88c1e0e1f72adac_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1343&#39; height=&#39;542&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1343\" data-rawheight=\"542\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1343\" data-original=\"https://pic1.zhimg.com/v2-6f05628ea1fdf569a88c1e0e1f72adac_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-6f05628ea1fdf569a88c1e0e1f72adac_b.jpg\"/></figure><p>第一次执行，会出现download，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-071f3a3714f805da2290d10a81ae264e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1343\" data-rawheight=\"248\" class=\"origin_image zh-lightbox-thumb\" width=\"1343\" data-original=\"https://pic3.zhimg.com/v2-071f3a3714f805da2290d10a81ae264e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1343&#39; height=&#39;248&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1343\" data-rawheight=\"248\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1343\" data-original=\"https://pic3.zhimg.com/v2-071f3a3714f805da2290d10a81ae264e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-071f3a3714f805da2290d10a81ae264e_b.jpg\"/></figure><p>这些down下来的文件是在哪呢？是在一个叫做maven本地仓储的地方，它默认就是idea安装目录的plugs下，如下所示：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-61bd631d7e1ed257258be8a73afa3ab9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1407\" data-rawheight=\"620\" class=\"origin_image zh-lightbox-thumb\" width=\"1407\" data-original=\"https://pic2.zhimg.com/v2-61bd631d7e1ed257258be8a73afa3ab9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1407&#39; height=&#39;620&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1407\" data-rawheight=\"620\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1407\" data-original=\"https://pic2.zhimg.com/v2-61bd631d7e1ed257258be8a73afa3ab9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-61bd631d7e1ed257258be8a73afa3ab9_b.jpg\"/></figure><p>Ok，回过头来说，如果执行成功就会出现下面的输出。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-7af8c44d76623404e2018cb81766fcbb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1387\" data-rawheight=\"843\" class=\"origin_image zh-lightbox-thumb\" width=\"1387\" data-original=\"https://pic4.zhimg.com/v2-7af8c44d76623404e2018cb81766fcbb_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1387&#39; height=&#39;843&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1387\" data-rawheight=\"843\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1387\" data-original=\"https://pic4.zhimg.com/v2-7af8c44d76623404e2018cb81766fcbb_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-7af8c44d76623404e2018cb81766fcbb_b.jpg\"/></figure><p><b>6.Maven clean和install</b></p><p>如果我们run的时候找不到common。就说明我们的common项目还没安装到maven的本地仓储中。那该怎么办呢？当然是install了。</p><p>有两种方式，可以打开maven的操作工作台，如下，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-0657209d347635082f2f427822e757ef_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"798\" class=\"origin_image zh-lightbox-thumb\" width=\"1336\" data-original=\"https://pic4.zhimg.com/v2-0657209d347635082f2f427822e757ef_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1336&#39; height=&#39;798&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"798\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1336\" data-original=\"https://pic4.zhimg.com/v2-0657209d347635082f2f427822e757ef_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-0657209d347635082f2f427822e757ef_b.jpg\"/></figure><p>如图，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-2819508b056712df85f84025c0cccead_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1327\" data-rawheight=\"657\" class=\"origin_image zh-lightbox-thumb\" width=\"1327\" data-original=\"https://pic2.zhimg.com/v2-2819508b056712df85f84025c0cccead_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1327&#39; height=&#39;657&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1327\" data-rawheight=\"657\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1327\" data-original=\"https://pic2.zhimg.com/v2-2819508b056712df85f84025c0cccead_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-2819508b056712df85f84025c0cccead_b.jpg\"/></figure><p>每个项目都有自己的lifecycle，可以在这个工作台中进行clean、编译或者install等。依次，我们install parent、common、ui。成功之后，我们就可以在本地仓储中看到自己编写的项目咯。</p><p>感谢关注“码农星球”。本文版权属于“码农星球”。我们提供咨询和培训服务，关于本文有任何困惑，请关注并联系我们。</p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/57933110", 
            "userName": "撸码J", 
            "userLink": "https://www.zhihu.com/people/38630bb8d3ce44008ae0fef2fc4342bd", 
            "upvote": 0, 
            "title": "Java全栈程序员之05：Ubuntu下安装TOMCAT、集成到IDEA", 
            "content": "<p>使用idea绝不是开发一个Hello World这么简单，现在我们要使用idea进行企业级开发（也就是JavaEE）的准备了，那么首先，我们就得有一个web应用服务器。选什么呢？当然首选是大名鼎鼎的TOMCAT了。</p><p>今天我们要完成JSP+Servlet+MYSQL开发环境的搭建完成。</p><p><b>1.TOMCAT的安装</b></p><p>首先，让我们去官网下载tomcat的安装包，<a href=\"https://link.zhihu.com/?target=http%3A//tomcat.apache.org/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">tomcat.apache.org/</span><span class=\"invisible\"></span></a></p><p>然后，我们选择core下的tar.gz，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-f14ecc56e0e2d5724c174d91c40d2828_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"504\" class=\"origin_image zh-lightbox-thumb\" width=\"550\" data-original=\"https://pic1.zhimg.com/v2-f14ecc56e0e2d5724c174d91c40d2828_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;550&#39; height=&#39;504&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"504\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"550\" data-original=\"https://pic1.zhimg.com/v2-f14ecc56e0e2d5724c174d91c40d2828_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-f14ecc56e0e2d5724c174d91c40d2828_b.jpg\"/></figure><p>下载完毕，继而copy到opt下，解压之，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-428dd8c25de825d371f79624a055a4fc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"933\" data-rawheight=\"676\" class=\"origin_image zh-lightbox-thumb\" width=\"933\" data-original=\"https://pic1.zhimg.com/v2-428dd8c25de825d371f79624a055a4fc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;933&#39; height=&#39;676&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"933\" data-rawheight=\"676\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"933\" data-original=\"https://pic1.zhimg.com/v2-428dd8c25de825d371f79624a055a4fc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-428dd8c25de825d371f79624a055a4fc_b.jpg\"/></figure><p><b>2.环境变量配置</b></p><p>在之前的文档中，我们说过了，java环境变量最好是在/etc/profile中配置，那tomcat也是一样。如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-1271f77461eaaca4d20c3a03651bf0f7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1076\" data-rawheight=\"868\" class=\"origin_image zh-lightbox-thumb\" width=\"1076\" data-original=\"https://pic4.zhimg.com/v2-1271f77461eaaca4d20c3a03651bf0f7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1076&#39; height=&#39;868&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1076\" data-rawheight=\"868\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1076\" data-original=\"https://pic4.zhimg.com/v2-1271f77461eaaca4d20c3a03651bf0f7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-1271f77461eaaca4d20c3a03651bf0f7_b.jpg\"/></figure><p>使用命令source /etc/profile重新加载配置。</p><p><b>3.启动、测试</b></p><p>使用su命令切换到root模式下。进入tomcat安装目录的bin，运行命令：</p><p>./startup.sh</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-d506c9d2d11701de8057f31bdd8c53f0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"734\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"734\" data-original=\"https://pic1.zhimg.com/v2-d506c9d2d11701de8057f31bdd8c53f0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;734&#39; height=&#39;500&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"734\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"734\" data-original=\"https://pic1.zhimg.com/v2-d506c9d2d11701de8057f31bdd8c53f0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-d506c9d2d11701de8057f31bdd8c53f0_b.jpg\"/></figure><p>继而在浏览器中输入localhost:8080，如果看到小猫咪，就说明tomcat安装成功了。如下，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c27ae1dd169dcca4a1cc7786f86106c7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1331\" data-rawheight=\"577\" class=\"origin_image zh-lightbox-thumb\" width=\"1331\" data-original=\"https://pic4.zhimg.com/v2-c27ae1dd169dcca4a1cc7786f86106c7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1331&#39; height=&#39;577&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1331\" data-rawheight=\"577\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1331\" data-original=\"https://pic4.zhimg.com/v2-c27ae1dd169dcca4a1cc7786f86106c7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-c27ae1dd169dcca4a1cc7786f86106c7_b.jpg\"/></figure><p><b>4.Idea集成tomcat</b></p><p>打开setting，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f300f7fbb2040386675397188f3adc0d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"970\" data-rawheight=\"712\" class=\"origin_image zh-lightbox-thumb\" width=\"970\" data-original=\"https://pic2.zhimg.com/v2-f300f7fbb2040386675397188f3adc0d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;970&#39; height=&#39;712&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"970\" data-rawheight=\"712\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"970\" data-original=\"https://pic2.zhimg.com/v2-f300f7fbb2040386675397188f3adc0d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f300f7fbb2040386675397188f3adc0d_b.jpg\"/></figure><p>接下来，如果我们看到的界面是有warning的，多半是因为tomcat目录权限不够的原因，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c53d275ea86b1bb5d4b9bdddb184e953_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"521\" data-rawheight=\"213\" class=\"origin_image zh-lightbox-thumb\" width=\"521\" data-original=\"https://pic4.zhimg.com/v2-c53d275ea86b1bb5d4b9bdddb184e953_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;521&#39; height=&#39;213&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"521\" data-rawheight=\"213\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"521\" data-original=\"https://pic4.zhimg.com/v2-c53d275ea86b1bb5d4b9bdddb184e953_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-c53d275ea86b1bb5d4b9bdddb184e953_b.jpg\"/></figure><p>我们使用ls -l看到的权限如下，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b12fa8f093a9bfbf0c4afe3aee4e07a0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"709\" data-rawheight=\"181\" class=\"origin_image zh-lightbox-thumb\" width=\"709\" data-original=\"https://pic1.zhimg.com/v2-b12fa8f093a9bfbf0c4afe3aee4e07a0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;709&#39; height=&#39;181&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"709\" data-rawheight=\"181\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"709\" data-original=\"https://pic1.zhimg.com/v2-b12fa8f093a9bfbf0c4afe3aee4e07a0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b12fa8f093a9bfbf0c4afe3aee4e07a0_b.jpg\"/></figure><p>使用sudo chmod 777 -R apache-tomcat-9.0.13 修改后，如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-7f5cef3fd5cce798ae043d99109da9aa_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"736\" data-rawheight=\"170\" class=\"origin_image zh-lightbox-thumb\" width=\"736\" data-original=\"https://pic3.zhimg.com/v2-7f5cef3fd5cce798ae043d99109da9aa_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;736&#39; height=&#39;170&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"736\" data-rawheight=\"170\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"736\" data-original=\"https://pic3.zhimg.com/v2-7f5cef3fd5cce798ae043d99109da9aa_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-7f5cef3fd5cce798ae043d99109da9aa_b.jpg\"/></figure><p>这个时候再次添加tomcat就ok了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b002859f92a9544483a4c1d5c90fff40_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"517\" data-rawheight=\"217\" class=\"origin_image zh-lightbox-thumb\" width=\"517\" data-original=\"https://pic1.zhimg.com/v2-b002859f92a9544483a4c1d5c90fff40_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;517&#39; height=&#39;217&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"517\" data-rawheight=\"217\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"517\" data-original=\"https://pic1.zhimg.com/v2-b002859f92a9544483a4c1d5c90fff40_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b002859f92a9544483a4c1d5c90fff40_b.jpg\"/></figure><p>以上即是整合完毕了。那怎么验证是否整合成功呢？当时新建一个JavaWeb项目咯。</p><p><b>5.创建JavaWeb</b></p><p>选择file-&gt;new，选择Java Enterprise，如下图选中Web Application，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-5000d406794bcdcadba9fba34b04e818_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1399\" data-rawheight=\"857\" class=\"origin_image zh-lightbox-thumb\" width=\"1399\" data-original=\"https://pic1.zhimg.com/v2-5000d406794bcdcadba9fba34b04e818_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1399&#39; height=&#39;857&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1399\" data-rawheight=\"857\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1399\" data-original=\"https://pic1.zhimg.com/v2-5000d406794bcdcadba9fba34b04e818_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-5000d406794bcdcadba9fba34b04e818_b.jpg\"/></figure><p>Next，输入工程名，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-02c756ecf5f4b11408a74cc8384c2547_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"948\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"948\" data-original=\"https://pic4.zhimg.com/v2-02c756ecf5f4b11408a74cc8384c2547_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;948&#39; height=&#39;552&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"948\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"948\" data-original=\"https://pic4.zhimg.com/v2-02c756ecf5f4b11408a74cc8384c2547_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-02c756ecf5f4b11408a74cc8384c2547_b.jpg\"/></figure><p>然后，在index.jsp上直接右键run就能在idea中启动tomcat了，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-babe5039288d8767412eefa30d241938_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1299\" data-rawheight=\"742\" class=\"origin_image zh-lightbox-thumb\" width=\"1299\" data-original=\"https://pic1.zhimg.com/v2-babe5039288d8767412eefa30d241938_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1299&#39; height=&#39;742&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1299\" data-rawheight=\"742\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1299\" data-original=\"https://pic1.zhimg.com/v2-babe5039288d8767412eefa30d241938_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-babe5039288d8767412eefa30d241938_b.jpg\"/></figure><p>可以看到，在idea的工作台中，会出现tomcat的启动信息，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-66987bec18c3a5dbcc874a859b4e911e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1292\" data-rawheight=\"744\" class=\"origin_image zh-lightbox-thumb\" width=\"1292\" data-original=\"https://pic3.zhimg.com/v2-66987bec18c3a5dbcc874a859b4e911e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1292&#39; height=&#39;744&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1292\" data-rawheight=\"744\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1292\" data-original=\"https://pic3.zhimg.com/v2-66987bec18c3a5dbcc874a859b4e911e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-66987bec18c3a5dbcc874a859b4e911e_b.jpg\"/></figure><p>这个时候http://localhost:8080/index.jsp就已经可以访问了。</p><p><b>6.创建servlet</b></p><p>首先，让我们停止tomcat，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-2373c8cfd1617c715f67b0a163baf42e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"519\" data-rawheight=\"273\" class=\"origin_image zh-lightbox-thumb\" width=\"519\" data-original=\"https://pic3.zhimg.com/v2-2373c8cfd1617c715f67b0a163baf42e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;519&#39; height=&#39;273&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"519\" data-rawheight=\"273\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"519\" data-original=\"https://pic3.zhimg.com/v2-2373c8cfd1617c715f67b0a163baf42e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-2373c8cfd1617c715f67b0a163baf42e_b.jpg\"/></figure><p>在src上右键new-&gt;servlet，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-0f4a5336a2e087e2b8f0bac1d9f62b87_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"396\" data-rawheight=\"275\" class=\"content_image\" width=\"396\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;396&#39; height=&#39;275&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"396\" data-rawheight=\"275\" class=\"content_image lazy\" width=\"396\" data-actualsrc=\"https://pic4.zhimg.com/v2-0f4a5336a2e087e2b8f0bac1d9f62b87_b.jpg\"/></figure><p>输入一句简单的代码，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-267a0993702218d7eafec71c3042cffe_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1333\" data-rawheight=\"841\" class=\"origin_image zh-lightbox-thumb\" width=\"1333\" data-original=\"https://pic3.zhimg.com/v2-267a0993702218d7eafec71c3042cffe_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1333&#39; height=&#39;841&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1333\" data-rawheight=\"841\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1333\" data-original=\"https://pic3.zhimg.com/v2-267a0993702218d7eafec71c3042cffe_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-267a0993702218d7eafec71c3042cffe_b.jpg\"/></figure><p>然后，地址http://localhost:8080/ServletHello，就能看到结果了。注意一定要urlPattern哦。</p><p><b>7.out结构</b></p><p>如果我们仅仅是开发一个站点，实际上web的配置这样就够了。Servlet编译后的输出是在这里，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-c21632c787e2ee31a2cd3a20e01c82c9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1111\" data-rawheight=\"339\" class=\"origin_image zh-lightbox-thumb\" width=\"1111\" data-original=\"https://pic2.zhimg.com/v2-c21632c787e2ee31a2cd3a20e01c82c9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1111&#39; height=&#39;339&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1111\" data-rawheight=\"339\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1111\" data-original=\"https://pic2.zhimg.com/v2-c21632c787e2ee31a2cd3a20e01c82c9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-c21632c787e2ee31a2cd3a20e01c82c9_b.jpg\"/></figure><p>这个out目录是idea为我们创建javaweb项目的时候自动创建，同时，idea在启动tomcat的时候，会自动到该目录下去找编译过后的站点。</p><p>这个结构当时可以修改的，使用open module settings就可以进行修改。但作为初学者，实在暂时没有必要去动这个配置。</p><p><b>8.使用JDBC连接MySQL</b></p><p>接下来，让我们连接数据库。</p><p>首先我们得有驱动包mysql-connector-java-5.0.8-bin.jar，并将其包含进项目中。</p><p>在web-inf下创建lib文件夹，然后将该jar包copy进去，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-a6cbef18d4e8a8a6617ad02ca85faf88_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"434\" data-rawheight=\"416\" class=\"origin_image zh-lightbox-thumb\" width=\"434\" data-original=\"https://pic1.zhimg.com/v2-a6cbef18d4e8a8a6617ad02ca85faf88_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;434&#39; height=&#39;416&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"434\" data-rawheight=\"416\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"434\" data-original=\"https://pic1.zhimg.com/v2-a6cbef18d4e8a8a6617ad02ca85faf88_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-a6cbef18d4e8a8a6617ad02ca85faf88_b.jpg\"/></figure><p>Open module settings，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-039f64b8b9088869132584b30a3f5bdb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1291\" data-rawheight=\"557\" class=\"origin_image zh-lightbox-thumb\" width=\"1291\" data-original=\"https://pic4.zhimg.com/v2-039f64b8b9088869132584b30a3f5bdb_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1291&#39; height=&#39;557&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1291\" data-rawheight=\"557\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1291\" data-original=\"https://pic4.zhimg.com/v2-039f64b8b9088869132584b30a3f5bdb_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-039f64b8b9088869132584b30a3f5bdb_b.jpg\"/></figure><p>选择，我们的lib文件夹，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-dc07ebd56067d878a5a73f755e21fac0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"901\" data-rawheight=\"516\" class=\"origin_image zh-lightbox-thumb\" width=\"901\" data-original=\"https://pic1.zhimg.com/v2-dc07ebd56067d878a5a73f755e21fac0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;901&#39; height=&#39;516&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"901\" data-rawheight=\"516\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"901\" data-original=\"https://pic1.zhimg.com/v2-dc07ebd56067d878a5a73f755e21fac0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-dc07ebd56067d878a5a73f755e21fac0_b.jpg\"/></figure><p>这样就已经把JDBC的包给包含进来了。</p><p>接下来让我们创建一个新的Servlet，如下：</p><p>package com.zuikc.servlet;</p><p>import javax.servlet.ServletException;</p><p>import javax.servlet.annotation.WebServlet;</p><p>import javax.servlet.http.HttpServlet;</p><p>import javax.servlet.http.HttpServletRequest;</p><p>import javax.servlet.http.HttpServletResponse;</p><p>import java.io.IOException;</p><p>import java.sql.*;</p><p>@WebServlet(name = &#34;ServletSampleJDBC&#34;, urlPatterns = &#34;/ServletSampleJDBC&#34;)</p><p>public class ServletSampleJDBC extends HttpServlet {</p><p>    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {</p><p>        doGet(request,response);</p><p>    }</p><p>    //mysql驱动包名</p><p>    private static final String DRIVER_NAME = &#34;com.mysql.jdbc.Driver&#34;;</p><p>    //数据库连接地址</p><p>    private static final String URL = &#34;jdbc:mysql://localhost:3306/test01&#34;;</p><p>    //用户名</p><p>    private static final String USER_NAME = &#34;root&#34;;</p><p>    //密码</p><p>    private static final String PASSWORD = &#34;root&#34;;</p><p>    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {</p><p>        Connection connection = null;</p><p>        try {</p><p>            //加载mysql的驱动类</p><p>            Class.forName(DRIVER_NAME);</p><p>            //获取数据库连接</p><p>            connection = DriverManager.getConnection(URL, USER_NAME, PASSWORD);</p><p>            //mysql查询语句</p><p>            String sql = &#34;SELECT * FROM tbl_user&#34;;</p><p>            PreparedStatement prst = connection.prepareStatement(sql);</p><p>            //结果集</p><p>            ResultSet rs = prst.executeQuery();</p><p>            while (rs.next()) {</p><p>                response.getWriter().append(&#34;  username:&#34; + rs.getString(&#34;username&#34;));</p><p>            }</p><p>            rs.close();</p><p>            prst.close();</p><p>        } catch (Exception e) {</p><p>            e.printStackTrace();</p><p>        }finally {</p><p>            if (connection != null) {</p><p>                try {</p><p>                    connection.close();</p><p>                } catch (SQLException e) {</p><p>                    e.printStackTrace();</p><p>                }</p><p>            }</p><p>        }</p><p>    }</p><p>}</p><p>启动tomcat，看看结果是否已经出来了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-de54405a8465e4482d9c21544f8e70e6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"967\" data-rawheight=\"348\" class=\"origin_image zh-lightbox-thumb\" width=\"967\" data-original=\"https://pic3.zhimg.com/v2-de54405a8465e4482d9c21544f8e70e6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;967&#39; height=&#39;348&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"967\" data-rawheight=\"348\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"967\" data-original=\"https://pic3.zhimg.com/v2-de54405a8465e4482d9c21544f8e70e6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-de54405a8465e4482d9c21544f8e70e6_b.jpg\"/></figure><p>注意了，这段代码的运行，我们假设数据库中已经存在相应的数据库和表了。这个步骤由于过于简单，我们就不再赘述了。</p><p>感谢关注“码农星球”。本文版权属于“码农星球”。我们提供咨询和培训服务，关于本文有任何困惑，请关注并联系我们。</p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/57927284", 
            "userName": "撸码J", 
            "userLink": "https://www.zhihu.com/people/38630bb8d3ce44008ae0fef2fc4342bd", 
            "upvote": 1, 
            "title": "Java全栈程序员之04：Ubuntu下安装MySQL、注册服务及Navcat", 
            "content": "<p>在安装MySQL之前，我们先来介绍一下Ubuntu下软件的安装方式。首先回顾下，我们安装JDK，使用的是后缀名为tar.gz的安装包。安装idea，使用的是tar.gz；那有没有别的安装方式呢？</p><p><b>1.安装方式介绍</b></p><p>Linux系的软件包格式主要有：rpm、deb、tar.gz；</p><p>rpm：主要在红帽LINUX、SUSE、Fedora下安装，在Ubuntu中无法识别；</p><p>deb：主要应用于Debian系列，包括Ubuntu等发行版上，在Ubuntu中双击deb包就可以进入自动安装进程；</p><p>tar.gz：在所有的Linux版本中都能使用，纯手工配置，最酸爽的一种，但是也是让我们最深知安装过程中做了什么的方式，所以这也是我最喜欢的一种方式。这也是我们今天安装MySQL的方式。</p><p>有同学可能会讲，不对，我还见过一种安装形式，就是apt和yum安装！</p><p>注意了，apt和yum可不是安装包的格式，而是安装的方式，比如apt，是指使用网络在线安装。我们会在服务器上准备好deb包，然后通过apt命令就可以下载deb包并进行安装。apt适用于Ubuntu， yum则适用于redhat和centos下。</p><p>关于apt和yum，先tip一下，后面安装mysql过程中的某个小依赖包，我打算使用apt的方式来安装，给大家演示下apt，顺便下午也会跟大家讲一下什么是安装源。Tip：</p><p>apt-get可以用于安装deb包：</p><p>安装：apt-get install &lt;package_name&gt; </p><p>卸载：apt-get remove &lt;package_name&gt; </p><p>更新：apt-get update &lt;package_name&gt;</p><p>yum可以用于安装rpm包：</p><p>安装：yum install &lt;package_name&gt; </p><p>卸载：yum remove &lt;package_name&gt; </p><p>更新：yum update &lt;package_name&gt;</p><p><b>2.MySQL下载</b></p><p>去官网download。在MySQL的官方站点，如果我们选择操作系统为Ubuntu，默认只会出现deb的安装包。所以操作系统我们要选择generic，如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-e50b29fcce902ff43b82b29f44943f66_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1403\" data-rawheight=\"818\" class=\"origin_image zh-lightbox-thumb\" width=\"1403\" data-original=\"https://pic3.zhimg.com/v2-e50b29fcce902ff43b82b29f44943f66_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1403&#39; height=&#39;818&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1403\" data-rawheight=\"818\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1403\" data-original=\"https://pic3.zhimg.com/v2-e50b29fcce902ff43b82b29f44943f66_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-e50b29fcce902ff43b82b29f44943f66_b.jpg\"/></figure><p>官方提供了安装文档：<a href=\"https://link.zhihu.com/?target=https%3A//dev.mysql.com/doc/refman/5.7/en/binary-installation.html%25EF%25BC%258C%25E4%25B8%258D%25E8%25BF%2587%25E8%25BF%2599%25E9%2592%2588%25E5%25AF%25B9%25E6%259C%2589%25E4%25B8%2580%25E5%25AE%259Alinux%25E5%259F%25BA%25E7%25A1%2580%25E7%259A%2584%25E5%2590%258C%25E5%25AD%25A6%25E3%2580%2582%25E5%25A6%2582%25E6%259E%259C%25E4%25BD%25A0%25E6%2598%25AF%25E5%2588%259D%25E5%25AD%25A6%25E8%2580%2585%25EF%25BC%258C%25E5%25B0%25BD%25E9%2587%258F%25E8%25B7%259F%25E7%259D%2580%25E6%2588%2591%25E6%259D%25A5%25E3%2580%2582\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">https://dev.mysql.com/doc/refman/5.7/en/binary-installation.html，不过这针对有一定linux基础的同学。如果你是初学者，尽量跟着我来。</a></p><p><b>3.安装libaio的apt安装方式</b></p><p>官网提到了安装MySQL，要使用libaio框架，按照介绍，简单，在线安装之：</p><p>apt-get install libaio1</p><p>然后，呵呵呵，一串错误出现了。大概的样子长这样：</p><p>……</p><p>错误:1 <a href=\"https://link.zhihu.com/?target=http%3A//cn.archive.ubuntu.com/ubuntu\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Index of /ubuntu</a> bionic/main amd64 libaio1 amd64 0.3.110-5</p><p>403  Forbidden [IP: 111.11.80.233 80]</p><p>E: 无法下载 <a href=\"https://link.zhihu.com/?target=http%3A//cn.archive.ubuntu.com/ubuntu/pool/main/liba/libaio/libaio1_0.3.110-5_amd64.deb\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">cn.archive.ubuntu.com/u</span><span class=\"invisible\">buntu/pool/main/liba/libaio/libaio1_0.3.110-5_amd64.deb</span><span class=\"ellipsis\"></span></a>  403  Forbidden [IP: 111.11.80.233 80]</p><p>E: 有几个软件包无法下载，要不运行 apt-get update 或者加上 --fix-missing 的选项再试试？</p><p>luminji@luminji-virtual-machine:/$ sudo apt-get update</p><p>错误:1 <a href=\"https://link.zhihu.com/?target=http%3A//cn.archive.ubuntu.com/ubuntu\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Index of /ubuntu</a> bionic InRelease</p><p>403  Forbidden [IP: 111.11.80.233 80]</p><p>正在读取软件包列表... 完成</p><p>E: 无法下载 <a href=\"https://link.zhihu.com/?target=http%3A//cn.archive.ubuntu.com/ubuntu/dists/bionic/InRelease\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">cn.archive.ubuntu.com/u</span><span class=\"invisible\">buntu/dists/bionic/InRelease</span><span class=\"ellipsis\"></span></a>  403  Forbidden [IP: 111.11.80.233 80]</p><p>E: 仓库 “<a href=\"https://link.zhihu.com/?target=http%3A//cn.archive.ubuntu.com/ubuntu\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Index of /ubuntu</a> bionic InRelease” 的签名不再生效。</p><p>N: 无法安全地用该源进行更新，所以默认禁用该源。</p><p>N: 参见 apt-secure(8) 手册以了解仓库创建和用户配置方面的细节。</p><p>luminji@luminji-virtual-machine:/$</p><p>这是为什么呐？</p><p>apt是在线安装，但是刚才我们看的命令只有一个apt-get install，没有告诉我们去哪里下载啊！这个下载地址隐藏在：/etc/apt/sources-list文件中。而Ubuntu默认的下载源因为各种原因默认是不可能用的哦。那怎么办？最好的办法，当然是换一个能用的apt源。</p><p><b>4.更新系统源</b></p><p>在更新系统源之前，为了保险，首先备份/etc/apt/sources-list，接着，修改内容为：</p><p>deb <a href=\"https://link.zhihu.com/?target=http%3A//mirrors.tuna.tsinghua.edu.cn/ubuntu/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tsinghua Open Source Mirror</a> xenial main multiverse restricted universe</p><p>deb <a href=\"https://link.zhihu.com/?target=http%3A//mirrors.tuna.tsinghua.edu.cn/ubuntu/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tsinghua Open Source Mirror</a> xenial-backports main multiverse restricted universe</p><p>deb <a href=\"https://link.zhihu.com/?target=http%3A//mirrors.tuna.tsinghua.edu.cn/ubuntu/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tsinghua Open Source Mirror</a> xenial-proposed main multiverse restricted universe</p><p>deb <a href=\"https://link.zhihu.com/?target=http%3A//mirrors.tuna.tsinghua.edu.cn/ubuntu/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tsinghua Open Source Mirror</a> xenial-security main multiverse restricted universe</p><p>deb <a href=\"https://link.zhihu.com/?target=http%3A//mirrors.tuna.tsinghua.edu.cn/ubuntu/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tsinghua Open Source Mirror</a> xenial-updates main multiverse restricted universe</p><p>deb-src <a href=\"https://link.zhihu.com/?target=http%3A//mirrors.tuna.tsinghua.edu.cn/ubuntu/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tsinghua Open Source Mirror</a> xenial main multiverse restricted universe</p><p>deb-src <a href=\"https://link.zhihu.com/?target=http%3A//mirrors.tuna.tsinghua.edu.cn/ubuntu/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tsinghua Open Source Mirror</a> xenial-backports main multiverse restricted universe</p><p>deb-src <a href=\"https://link.zhihu.com/?target=http%3A//mirrors.tuna.tsinghua.edu.cn/ubuntu/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tsinghua Open Source Mirror</a> xenial-proposed main multiverse restricted universe</p><p>deb-src <a href=\"https://link.zhihu.com/?target=http%3A//mirrors.tuna.tsinghua.edu.cn/ubuntu/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tsinghua Open Source Mirror</a> xenial-security main multiverse restricted universe</p><p>deb-src <a href=\"https://link.zhihu.com/?target=http%3A//mirrors.tuna.tsinghua.edu.cn/ubuntu/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tsinghua Open Source Mirror</a> xenial-updates main multiverse restricted universe</p><p>这个清华的apt源，可用。我们也可以找到其它的一些源。</p><p>然后，更新之：</p><p>sudo apt-get update</p><p>再然后，让我们install吧。</p><p><b>5.Libaio的离线安装方式</b></p><p>既然能在线安装，那就一定也能离线安装。libaio是有deb安装包的。我们可以下载回来以deb的方式安装，如下：</p><p>sudo dpkg -i libaio1_0.3.110-2_amd64.deb</p><p>结果如下，就代表成功了，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-9e118705b9ab0d6bb9de0ce044b45741_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"582\" data-rawheight=\"138\" class=\"origin_image zh-lightbox-thumb\" width=\"582\" data-original=\"https://pic2.zhimg.com/v2-9e118705b9ab0d6bb9de0ce044b45741_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;582&#39; height=&#39;138&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"582\" data-rawheight=\"138\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"582\" data-original=\"https://pic2.zhimg.com/v2-9e118705b9ab0d6bb9de0ce044b45741_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-9e118705b9ab0d6bb9de0ce044b45741_b.jpg\"/></figure><p><b>6.安装MySQL</b></p><p>解压：</p><p>tar -zxvf mysql-5.7.23-linux-glibc2.12-x86_64.tar.gz</p><p>Move到/usr/local下：</p><p>mv mysql-5.7.23-linux-glibc2.12-x86_64 /usr/local</p><p>使用ln创建软连接：</p><p>ln -s /usr/local/ mysql-5.7.23-linux-glibc2.12-x86_64 /usr/local/mysql</p><p>注意，上面这两步的路径不要改，包括创建软连接也这么创建，因为mysql的默认配置参数中，这两个地址都是默认地址。如果安装到别处，要修改不少地方。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-e0135a6a3f2afa502fc516ddfabe67a4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"732\" data-rawheight=\"153\" class=\"origin_image zh-lightbox-thumb\" width=\"732\" data-original=\"https://pic1.zhimg.com/v2-e0135a6a3f2afa502fc516ddfabe67a4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;732&#39; height=&#39;153&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"732\" data-rawheight=\"153\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"732\" data-original=\"https://pic1.zhimg.com/v2-e0135a6a3f2afa502fc516ddfabe67a4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e0135a6a3f2afa502fc516ddfabe67a4_b.jpg\"/></figure><p>添加用户组</p><p>sudo groupadd mysql</p><p>添加用户</p><p>sudo useradd -r -g mysql -s /bin/false mysql</p><p>手动创建mysql-files文件夹，然后修改权限，</p><p>sudo chmod 750 mysql-files</p><p>sudo chown -R mysql .</p><p>sudo chgrp -R mysql .</p><p>然后手动初始化data文件夹，如下：</p><p>sudo bin/mysqld --initialize --user=mysql</p><p>注意，敲完这个命令后，在最后一行会出现mysql的默认登录用户root的默认密码，加下图，这个密码是我们在第一次登录MySQL的时候要用到的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-a7474302cd487d3a8d844febf2906d43_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"350\" class=\"origin_image zh-lightbox-thumb\" width=\"728\" data-original=\"https://pic4.zhimg.com/v2-a7474302cd487d3a8d844febf2906d43_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;728&#39; height=&#39;350&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"350\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"728\" data-original=\"https://pic4.zhimg.com/v2-a7474302cd487d3a8d844febf2906d43_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-a7474302cd487d3a8d844febf2906d43_b.jpg\"/></figure><p>到了这一步，基本就是大功告成了~~</p><p><b>7.测试MySQL</b></p><p>启动MySQL,</p><p>sudo bin/mysqld_safe --user=mysql &amp;</p><p>登录MySQL，我们首先要新开一个客户端，然后到mysql安装目录的bin目录下，敲入命令：</p><p>mysql -uroot -p</p><p>输入上图中的密码，登录成功之后，让我们第一件事情就是修改初始密码，如下：</p><p>mysql&gt; SET PASSWORD = PASSWORD(&#39;新密码&#39;);</p><p>mysql&gt; ALTER USER &#39;root&#39;@&#39;localhost&#39; PASSWORD EXPIRE NEVER;</p><p>mysql&gt; flush privileges;</p><p>然后，顺便查一下mysql默认的数据库吧：</p><p>show databases;</p><p>注意哦，每一条sql语句后面都带英文的;号。</p><p>以上步骤见图如下，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f8bd8a2bf188eb65079e19e88a5d5c49_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"730\" data-rawheight=\"503\" class=\"origin_image zh-lightbox-thumb\" width=\"730\" data-original=\"https://pic2.zhimg.com/v2-f8bd8a2bf188eb65079e19e88a5d5c49_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;730&#39; height=&#39;503&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"730\" data-rawheight=\"503\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"730\" data-original=\"https://pic2.zhimg.com/v2-f8bd8a2bf188eb65079e19e88a5d5c49_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f8bd8a2bf188eb65079e19e88a5d5c49_b.jpg\"/></figure><p><b>8.看看MySQL占了哪个端口号</b></p><p>在5.7.20以后的版本之后，都不自带默认的配置文件了，那作为强迫症的你怎么查看mysql用了哪个端口呢？当然是使用netstat命令了。</p><p>咳咳，默认Ubuntu没有这个命令，我们还需要安装net-tools工具。</p><p><b>9.安装net-tools</b></p><p>敲命令吧：</p><p>sudo apt-get install net-tools</p><p>安装完毕，继而命令，</p><p>netstat -ntlp</p><p>看到3306了没有，bingo。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-24433c144dc3cb023bd9d5ebc3b6139c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"257\" class=\"origin_image zh-lightbox-thumb\" width=\"728\" data-original=\"https://pic1.zhimg.com/v2-24433c144dc3cb023bd9d5ebc3b6139c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;728&#39; height=&#39;257&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"257\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"728\" data-original=\"https://pic1.zhimg.com/v2-24433c144dc3cb023bd9d5ebc3b6139c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-24433c144dc3cb023bd9d5ebc3b6139c_b.jpg\"/></figure><p><b>10.Mysql的配置文件</b></p><p>默认的3306端口号当然仍旧是可以更改的。上面我们也说过了，在5.7.20版本之后的安装包里默认是没有配置文件的，但是我们可以手动添加一个，在mysql根目录下，创建my.cnf，内容如下：</p><p>[mysql]</p><p>#客户端默认字符集</p><p>default-character-set=utf8</p><p>[mysqld]</p><p>#设置端口</p><p>port = 3306</p><p>#安装目录</p><p>basedir=/usr/local/mysql</p><p>#数据的存放目录</p><p>datadir=/usr/local/mysql/data</p><p>#最大连接数</p><p>max_connections=200</p><p># 默认字符集</p><p>character-set-server=utf8</p><p>#默认存储引擎</p><p>default-storage-engine=INNODB</p><p><b>11.配置服务自动启动</b></p><p>然后，为了不要每次重启系统，我们都要手动启动mysql，我们还要将mysql丢到系统服务中。</p><p>将两个配置文件copy到系统文件夹中，如下：</p><p>sudo cp /usr/local/mysql/my.cnf /etc/my.cnf</p><p>sudo cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysql.server</p><p>继而，添加服务自启动</p><p>update-rc.d mysql.server defaults</p><p>update-rc.d mysql.server enable</p><p>继而，在全局配置文件/etc/profile的最后加上，</p><p>export PATH=$PATH:/usr/local/mysql/bin</p><p>现在，重启我们的Ubuntu，直接进入命令行：</p><p>mysql -uroot -p</p><p>试试看能不能进入哦。</p><p>顺便，关于服务的三个命令大家牢记一下：</p><p>#查看服务状态</p><p>sudo service mysql.server status</p><p>#服务启动</p><p>sudo service mysql.server start</p><p>#服务停止</p><p>sudo service mysql.server stop</p><p><b>12.Navicat安装</b></p><p>去官网下载正版：<a href=\"https://link.zhihu.com/?target=https%3A//www.navicat.com/en/download/navicat-for-mysql%25EF%25BC%258C\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Error | Navicat</a></p><p>下载回来还是tar.gz，navicat121_mysql_en_x64.tar.gz，</p><p>解压到opt下，然后./start_navicat启动，这个时候会提示我们安装wine_gecko 和 wine-mono 软件包。它们分别用于运行依赖于 Internet Explorer 和 .NET 的程序，分两步，</p><p>如下1：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-645f0fa6862611c94292e47043e88416_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"905\" data-rawheight=\"540\" class=\"origin_image zh-lightbox-thumb\" width=\"905\" data-original=\"https://pic3.zhimg.com/v2-645f0fa6862611c94292e47043e88416_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;905&#39; height=&#39;540&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"905\" data-rawheight=\"540\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"905\" data-original=\"https://pic3.zhimg.com/v2-645f0fa6862611c94292e47043e88416_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-645f0fa6862611c94292e47043e88416_b.jpg\"/></figure><p>如下2：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-6c9f02da0a0becc5711e39a0dab73ef9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"882\" data-rawheight=\"541\" class=\"origin_image zh-lightbox-thumb\" width=\"882\" data-original=\"https://pic2.zhimg.com/v2-6c9f02da0a0becc5711e39a0dab73ef9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;882&#39; height=&#39;541&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"882\" data-rawheight=\"541\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"882\" data-original=\"https://pic2.zhimg.com/v2-6c9f02da0a0becc5711e39a0dab73ef9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-6c9f02da0a0becc5711e39a0dab73ef9_b.jpg\"/></figure><p>然后才能进入Navicat，如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-20418c11281fe8d8e9372140507945da_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1184\" data-rawheight=\"754\" class=\"origin_image zh-lightbox-thumb\" width=\"1184\" data-original=\"https://pic3.zhimg.com/v2-20418c11281fe8d8e9372140507945da_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1184&#39; height=&#39;754&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1184\" data-rawheight=\"754\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1184\" data-original=\"https://pic3.zhimg.com/v2-20418c11281fe8d8e9372140507945da_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-20418c11281fe8d8e9372140507945da_b.jpg\"/></figure><p>至于有人说不行啊，只有半个月的试用期。这个，对于现在的你来说，早就已经是个小问题了：）。</p><p>感谢关注“码农星球”。本文版权属于“码农星球”。我们提供咨询和培训服务，关于本文有任何困惑，请关注并联系我们。</p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/57911806", 
            "userName": "撸码J", 
            "userLink": "https://www.zhihu.com/people/38630bb8d3ce44008ae0fef2fc4342bd", 
            "upvote": 3, 
            "title": "Java全栈程序员之03：Ubuntu下安装idea", 
            "content": "<p>JetBrains的产品我曾经用过很长一段时间，它们是resharper和dotcover。VS号称宇宙最强IDE，直到它遇到了resharper，我们才知道，原来vs可以更好。DotCover是一个计算代码覆盖率的工具，过去，我们为了应付QA的检查，与DotCover成了最好的朋友。</p><p>我有一段时间（其实也包括现在），特别的精分，白天Java，晚上C#，隔几天可能还要弄一下PHP，其中最痛苦的莫过于就是IDE的切换，常常对着VS敲着Eclipse的快捷键，心里骂着怎么智能感知还没出现。后来IntelliJ IDEA渐成主流，我发现很多快捷键在reshaper中和idea中是一致的，毕竟是一个爹嘛，心中对于idea的喜欢与日俱增。Idea就像梦中情人的形象，突然出现在你面前，虽然它其实是jetbrains的第一个产品。</p><p>用了IntelliJ IDEA的人，基本不想回到eclipse；</p><p>用了resharper的人，没人想要卸载这个插件，为了它宁可去多加一块内存；</p><p>作为Java的全栈程序员，不好意思不自称在linux下编码。作为全栈程序员，也不好意思只会用Eclipse，今天我们就开始迈出使用IntelliJ IDEA的第一步。</p><p><b>1.安装</b></p><p>来到官网，进入IntelliJ IDEA二级页面，选择linux下的ultimate下载。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-d1e898aa900e9ce7d63a03adc432ba33_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1241\" data-rawheight=\"771\" class=\"origin_image zh-lightbox-thumb\" width=\"1241\" data-original=\"https://pic4.zhimg.com/v2-d1e898aa900e9ce7d63a03adc432ba33_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1241&#39; height=&#39;771&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1241\" data-rawheight=\"771\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1241\" data-original=\"https://pic4.zhimg.com/v2-d1e898aa900e9ce7d63a03adc432ba33_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-d1e898aa900e9ce7d63a03adc432ba33_b.jpg\"/></figure><p>下载完毕，如下，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-93557f3d662bbf82ca5ee2a7a39db713_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"819\" data-rawheight=\"413\" class=\"origin_image zh-lightbox-thumb\" width=\"819\" data-original=\"https://pic4.zhimg.com/v2-93557f3d662bbf82ca5ee2a7a39db713_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;819&#39; height=&#39;413&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"819\" data-rawheight=\"413\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"819\" data-original=\"https://pic4.zhimg.com/v2-93557f3d662bbf82ca5ee2a7a39db713_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-93557f3d662bbf82ca5ee2a7a39db713_b.jpg\"/></figure><p>在上一篇中，我们安装JDK几乎全程用图形化界面，这很不linux，这次我们命令行操作。</p><p><b>切换到下载目录</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-51d078952751ccbebfff006ccf1837b9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"734\" data-rawheight=\"495\" class=\"origin_image zh-lightbox-thumb\" width=\"734\" data-original=\"https://pic2.zhimg.com/v2-51d078952751ccbebfff006ccf1837b9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;734&#39; height=&#39;495&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"734\" data-rawheight=\"495\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"734\" data-original=\"https://pic2.zhimg.com/v2-51d078952751ccbebfff006ccf1837b9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-51d078952751ccbebfff006ccf1837b9_b.jpg\"/></figure><p><b>解压到opt目录</b></p><p>关于opt目录约定俗成是做什么用的，我们在上一篇中已经说明过了）：</p><p>sudo tar -zxvf ideaIU-2018.2.2cd.tar.gz -C /opt</p><p><b>切换到idea的bin目录</b></p><p>cd /opt /idea-IU-182.4129.33/bin</p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//%25E8%25BF%2590%25E8%25A1%258Cidea.sh\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">运行idea.sh</a></b></p><p>./idea.sh</p><p>./表示当前目录。 linux默认搜索目录中没有包含当前目录，所以我们要执行当前目录的命令，就要加上前缀./，当然用全路径代替也是可以的。Windows就没有这个毛病，但是Windows下有个工具叫做powershell，沿袭了这个毛病（传统）。</p><p><b>2.测试</b></p><p><a href=\"https://link.zhihu.com/?target=http%3A//%25E8%25BF%2590%25E8%25A1%258C%25E5%25AE%258C%25E6%25AF%2595idea.sh\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">运行完毕idea.sh</a>，就会发现在左边的工具栏中增加了一个IntelliJ IDEA，这代表当前idea正在运行中，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-f078dbd12d8e56fb229f607fc13f6bb0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1102\" data-rawheight=\"728\" class=\"origin_image zh-lightbox-thumb\" width=\"1102\" data-original=\"https://pic1.zhimg.com/v2-f078dbd12d8e56fb229f607fc13f6bb0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1102&#39; height=&#39;728&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1102\" data-rawheight=\"728\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1102\" data-original=\"https://pic1.zhimg.com/v2-f078dbd12d8e56fb229f607fc13f6bb0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-f078dbd12d8e56fb229f607fc13f6bb0_b.jpg\"/></figure><p>让我们create new project。这个时候出现的第二个界面，就会让我们选择jdk，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-7208591060559d51de04bc2f3b10d622_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"787\" data-rawheight=\"803\" class=\"origin_image zh-lightbox-thumb\" width=\"787\" data-original=\"https://pic3.zhimg.com/v2-7208591060559d51de04bc2f3b10d622_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;787&#39; height=&#39;803&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"787\" data-rawheight=\"803\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"787\" data-original=\"https://pic3.zhimg.com/v2-7208591060559d51de04bc2f3b10d622_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-7208591060559d51de04bc2f3b10d622_b.jpg\"/></figure><p>我们去选择上一篇已经配置好的jdk的路径，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-775f60388ea8e486a916450bb7c65fb3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"790\" data-rawheight=\"797\" class=\"origin_image zh-lightbox-thumb\" width=\"790\" data-original=\"https://pic4.zhimg.com/v2-775f60388ea8e486a916450bb7c65fb3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;790&#39; height=&#39;797&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"790\" data-rawheight=\"797\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"790\" data-original=\"https://pic4.zhimg.com/v2-775f60388ea8e486a916450bb7c65fb3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-775f60388ea8e486a916450bb7c65fb3_b.jpg\"/></figure><p>下一步，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-fe51cb5e329312d750d135616bf7b0f7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"784\" data-rawheight=\"794\" class=\"origin_image zh-lightbox-thumb\" width=\"784\" data-original=\"https://pic4.zhimg.com/v2-fe51cb5e329312d750d135616bf7b0f7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;784&#39; height=&#39;794&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"784\" data-rawheight=\"794\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"784\" data-original=\"https://pic4.zhimg.com/v2-fe51cb5e329312d750d135616bf7b0f7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-fe51cb5e329312d750d135616bf7b0f7_b.jpg\"/></figure><p>可以选择默认创建HelloWorld，如下，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-f229c4515cb20083638671f1ff53637c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"789\" data-rawheight=\"803\" class=\"origin_image zh-lightbox-thumb\" width=\"789\" data-original=\"https://pic1.zhimg.com/v2-f229c4515cb20083638671f1ff53637c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;789&#39; height=&#39;803&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"789\" data-rawheight=\"803\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"789\" data-original=\"https://pic1.zhimg.com/v2-f229c4515cb20083638671f1ff53637c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-f229c4515cb20083638671f1ff53637c_b.jpg\"/></figure><p>也可以不选择，这里其实我们没有选择。如果不选择，那么进入到的界面，如下。这个界面大家很熟悉了，跟Eclipse也差不了多少。左边是project的结构，右边是主工作区间，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-d22ee9e52a85b8cf638a58d3a1cca29d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1312\" data-rawheight=\"802\" class=\"origin_image zh-lightbox-thumb\" width=\"1312\" data-original=\"https://pic2.zhimg.com/v2-d22ee9e52a85b8cf638a58d3a1cca29d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1312&#39; height=&#39;802&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1312\" data-rawheight=\"802\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1312\" data-original=\"https://pic2.zhimg.com/v2-d22ee9e52a85b8cf638a58d3a1cca29d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-d22ee9e52a85b8cf638a58d3a1cca29d_b.jpg\"/></figure><p>接着，手动创建HelloWorld类，如下，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-c2bd2069554c3fdc99d5cc0a7a4e7314_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"861\" data-rawheight=\"401\" class=\"origin_image zh-lightbox-thumb\" width=\"861\" data-original=\"https://pic1.zhimg.com/v2-c2bd2069554c3fdc99d5cc0a7a4e7314_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;861&#39; height=&#39;401&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"861\" data-rawheight=\"401\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"861\" data-original=\"https://pic1.zhimg.com/v2-c2bd2069554c3fdc99d5cc0a7a4e7314_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-c2bd2069554c3fdc99d5cc0a7a4e7314_b.jpg\"/></figure><p>敲入代码，右键run，底部就会出现console信息，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-97d466c9f50b2386904048f245aeeb97_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1318\" data-rawheight=\"803\" class=\"origin_image zh-lightbox-thumb\" width=\"1318\" data-original=\"https://pic4.zhimg.com/v2-97d466c9f50b2386904048f245aeeb97_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1318&#39; height=&#39;803&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1318\" data-rawheight=\"803\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1318\" data-original=\"https://pic4.zhimg.com/v2-97d466c9f50b2386904048f245aeeb97_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-97d466c9f50b2386904048f245aeeb97_b.jpg\"/></figure><p>一个简单的测试完成了：）。</p><p><b>3.BUT</b></p><p>但是，初恋情人般的存在虽然好，不给钱没人跟你谈恋爱。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-4f82d3f0d1eee9823bbde769d29edff3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"961\" data-rawheight=\"541\" class=\"origin_image zh-lightbox-thumb\" width=\"961\" data-original=\"https://pic4.zhimg.com/v2-4f82d3f0d1eee9823bbde769d29edff3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;961&#39; height=&#39;541&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"961\" data-rawheight=\"541\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"961\" data-original=\"https://pic4.zhimg.com/v2-4f82d3f0d1eee9823bbde769d29edff3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-4f82d3f0d1eee9823bbde769d29edff3_b.jpg\"/></figure><p>被你嫌弃的Eclipse，你用了它十来年。现在的你不喜欢了，当年的你，第一次见到它的时候，还不是照样心动，还不是照样觉得它才是你这辈子的真爱。最主要的，它还不花你一分钱。这么多年来，它陪你娶妻生子，让你撸码买房买车，你就这么说抛弃就抛弃了？</p><p>没错~~</p><p>回到idea，它要你的钱，要的还很不便宜。但是它爱你的钱的同时，它也爱你的年轻。如果你是一个学生，你可以凭借学生证明免费使用ultimate版本。如果你既不年轻，也没钱，那就只有crack一条路了。</p><p><a href=\"https://link.zhihu.com/?target=http%3A//idea.lanyus.com/%25EF%25BC%258C%25E5%25B0%25B1%25E6%2598%25AF%25E8%25BF%2599%25E4%25B9%2588%25E4%25B8%2580%25E4%25B8%25AA%25E4%25BE%259B%25E4%25BD%25A0crack%25E7%259A%2584%25E7%25AB%2599%25E7%2582%25B9%25E3%2580%2582%25E4%25BB%25A5%25E4%25B8%258B%25E6%2588%2591%25E5%258F%25AA%25E6%2598%25AF%25E5%2590%25AC%25E8%25AF%25B4%25EF%25BC%258C%25E4%25BB%258E%25E6%259D%25A5%25E6%25B2%25A1%25E6%259C%2589%25E8%25AF%2595%25E8%25BF%2587%25E3%2580%2582\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">http://idea.lanyus.com/，就是这么一个供你crack的站点。以下我只是听说，从来没有试过。</a></p><p>首先，下载JetbrainsCrack-3.1-release-enc.jar，</p><p>其次，编辑bin目录下的idea64.vmoptions和idea.vmoptions文件。在最后一行插入：</p><p>-javaagent:/opt/idea-IU-182.4129.33/bin/JetbrainsCrack-3.1-release-enc.jar</p><p>然后，重启idea。进入help的reigster，在下面的窗口，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-33b9a889c33d251df3e9afd9ced42be3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"739\" data-rawheight=\"545\" class=\"origin_image zh-lightbox-thumb\" width=\"739\" data-original=\"https://pic4.zhimg.com/v2-33b9a889c33d251df3e9afd9ced42be3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;739&#39; height=&#39;545&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"739\" data-rawheight=\"545\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"739\" data-original=\"https://pic4.zhimg.com/v2-33b9a889c33d251df3e9afd9ced42be3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-33b9a889c33d251df3e9afd9ced42be3_b.jpg\"/></figure><p>输入：</p><p>ThisCrackLicenseId-{ </p><p>&#34;licenseId&#34;:&#34;ThisCrackLicenseId&#34;, </p><p>&#34;licenseeName&#34;:&#34;idea&#34;, </p><p>&#34;assigneeName&#34;:&#34;&#34;, </p><p><a href=\"mailto:%22assigneeEmail%22:%22idea@163.com\">&#34;assigneeEmail&#34;:&#34;idea@163.com</a>&#34;, </p><p>&#34;licenseRestriction&#34;:&#34;For This Crack, Only Test! Please support genuine!!!&#34;, </p><p>&#34;checkConcurrentUse&#34;:false, </p><p>&#34;products&#34;:[ </p><p>{&#34;code&#34;:&#34;II&#34;,&#34;paidUpTo&#34;:&#34;2099-12-31&#34;}, </p><p>{&#34;code&#34;:&#34;DM&#34;,&#34;paidUpTo&#34;:&#34;2099-12-31&#34;}, </p><p>{&#34;code&#34;:&#34;AC&#34;,&#34;paidUpTo&#34;:&#34;2099-12-31&#34;}, </p><p>{&#34;code&#34;:&#34;RS0&#34;,&#34;paidUpTo&#34;:&#34;2099-12-31&#34;}, </p><p>{&#34;code&#34;:&#34;WS&#34;,&#34;paidUpTo&#34;:&#34;2099-12-31&#34;}, </p><p>{&#34;code&#34;:&#34;DPN&#34;,&#34;paidUpTo&#34;:&#34;2099-12-31&#34;}, </p><p>{&#34;code&#34;:&#34;RC&#34;,&#34;paidUpTo&#34;:&#34;2099-12-31&#34;}, </p><p>{&#34;code&#34;:&#34;PS&#34;,&#34;paidUpTo&#34;:&#34;2099-12-31&#34;}, </p><p>{&#34;code&#34;:&#34;DC&#34;,&#34;paidUpTo&#34;:&#34;2099-12-31&#34;}, </p><p>{&#34;code&#34;:&#34;RM&#34;,&#34;paidUpTo&#34;:&#34;2099-12-31&#34;}, </p><p>{&#34;code&#34;:&#34;CL&#34;,&#34;paidUpTo&#34;:&#34;2099-12-31&#34;}, </p><p>{&#34;code&#34;:&#34;PC&#34;,&#34;paidUpTo&#34;:&#34;2099-12-31&#34;} </p><p>], </p><p>&#34;hash&#34;:&#34;2911276/0&#34;, </p><p>&#34;gracePeriodDays&#34;:7, </p><p>&#34;autoProlongated&#34;:false}</p><p>确定后发现，今后90年，idea都是你的了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-5f6a7fe9109269fd73949f521d53a325_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"936\" data-rawheight=\"528\" class=\"origin_image zh-lightbox-thumb\" width=\"936\" data-original=\"https://pic2.zhimg.com/v2-5f6a7fe9109269fd73949f521d53a325_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;936&#39; height=&#39;528&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"936\" data-rawheight=\"528\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"936\" data-original=\"https://pic2.zhimg.com/v2-5f6a7fe9109269fd73949f521d53a325_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-5f6a7fe9109269fd73949f521d53a325_b.jpg\"/></figure><p>大家愉快撸码吧。</p><p>感谢关注“码农星球”。本文版权属于“码农星球”。我们提供咨询和培训服务，关于本文有任何困惑，请关注并联系我们。</p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/57794097", 
            "userName": "撸码J", 
            "userLink": "https://www.zhihu.com/people/38630bb8d3ce44008ae0fef2fc4342bd", 
            "upvote": 1, 
            "title": "Java全栈程序员之02：Ubuntu下Java环境安装、配置、测试", 
            "content": "<p>在上文讲完之后，我们手里的ubuntu只能算是一个上网机，什么也干不了，本篇我们将折腾它为开发机。</p><p>这里，我们这里假定你对linux体系是初级选手，所以本篇会讲的啰嗦一点，高手就出门左转吧。</p><p><b>1.安装</b></p><p>首先我们确定下我们安装的Ubuntu系统是否已经安装了java环境。</p><p>进入终端，敲入命令su，进入root模式（当然也可以省掉这一步），敲入命令java -version。如果看到这个界面，说明尚未安装Java环境，</p><p>Ps：我们的课程中曾经讲过如何删除一个老的jdk，这里就略过不讲了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-703a70b1567b4d5e165462e95cfc288d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"733\" data-rawheight=\"501\" class=\"origin_image zh-lightbox-thumb\" width=\"733\" data-original=\"https://pic2.zhimg.com/v2-703a70b1567b4d5e165462e95cfc288d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;733&#39; height=&#39;501&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"733\" data-rawheight=\"501\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"733\" data-original=\"https://pic2.zhimg.com/v2-703a70b1567b4d5e165462e95cfc288d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-703a70b1567b4d5e165462e95cfc288d_b.jpg\"/></figure><p>继而，让我们到oracle的网站，去下载jdk，<a href=\"https://link.zhihu.com/?target=https%3A//www.oracle.com/technetwork/java/javase/downloads/index.html%25E3%2580%2582\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">https://www.oracle.com/technetwork/java/javase/downloads/index.html。</a></p><p>为了避免别人说我太保守，这次我回到十年前的激进状态，下载最新版的jdk10。如果我们要配置的这台机器，是用来开发生产代码，我建议你回退至少一个主版本。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-155be41044cfe7bfb3711e10fa52eacf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1235\" data-rawheight=\"757\" class=\"origin_image zh-lightbox-thumb\" width=\"1235\" data-original=\"https://pic4.zhimg.com/v2-155be41044cfe7bfb3711e10fa52eacf_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1235&#39; height=&#39;757&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1235\" data-rawheight=\"757\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1235\" data-original=\"https://pic4.zhimg.com/v2-155be41044cfe7bfb3711e10fa52eacf_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-155be41044cfe7bfb3711e10fa52eacf_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-4f0e516a57d6b123f0f3749e95689de6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"679\" data-rawheight=\"238\" class=\"origin_image zh-lightbox-thumb\" width=\"679\" data-original=\"https://pic3.zhimg.com/v2-4f0e516a57d6b123f0f3749e95689de6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;679&#39; height=&#39;238&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"679\" data-rawheight=\"238\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"679\" data-original=\"https://pic3.zhimg.com/v2-4f0e516a57d6b123f0f3749e95689de6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-4f0e516a57d6b123f0f3749e95689de6_b.jpg\"/></figure><p>我使用fireforx默认下载的，下载完毕后，我们可以在归档管理器中找到它。当然，对于新手来说，一定很好奇它在整个Ubuntu文件系统中的位置。</p><p>我们打开文件管理器（对照为windows下的“我的电脑”），默认的是进入当前账户的主目录（这有点像大家习惯用的windows的user目录）。而这个当前账户，一般又不是root用户，所以我们看到的界面大概是下面这个样子的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-994e2c021ddddb34252d72da096205e4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"721\" data-rawheight=\"440\" class=\"origin_image zh-lightbox-thumb\" width=\"721\" data-original=\"https://pic1.zhimg.com/v2-994e2c021ddddb34252d72da096205e4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;721&#39; height=&#39;440&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"721\" data-rawheight=\"440\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"721\" data-original=\"https://pic1.zhimg.com/v2-994e2c021ddddb34252d72da096205e4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-994e2c021ddddb34252d72da096205e4_b.jpg\"/></figure><p>但，firefox的默认下载路径是在root根目录的tmp目录下。那么疑问来了，你会发现在上面的界面中，我们不太容易找到root的tmp。</p><p><b>进入root目录</b></p><p>那怎么找到它呢？</p><p>一种方式是在上面的界面中，依次如下操作，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-1a1b3eb88caa57ae8a575f043c7b415e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"835\" data-rawheight=\"604\" class=\"origin_image zh-lightbox-thumb\" width=\"835\" data-original=\"https://pic3.zhimg.com/v2-1a1b3eb88caa57ae8a575f043c7b415e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;835&#39; height=&#39;604&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"835\" data-rawheight=\"604\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"835\" data-original=\"https://pic3.zhimg.com/v2-1a1b3eb88caa57ae8a575f043c7b415e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-1a1b3eb88caa57ae8a575f043c7b415e_b.jpg\"/></figure><p>通过这种方式来进入到root根目录，我们只有浏览权限。</p><p>另一种方式是在终端中敲入命令：sudo nautilus，然后输入密码，在弹出的文件系统中点击“文件系统根目录”。然后，我们终于到了根目录，同时发现了tmp文件夹。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-a7110c8d044ad91f55eb0959c97711b1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1368\" data-rawheight=\"404\" class=\"origin_image zh-lightbox-thumb\" width=\"1368\" data-original=\"https://pic2.zhimg.com/v2-a7110c8d044ad91f55eb0959c97711b1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1368&#39; height=&#39;404&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1368\" data-rawheight=\"404\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1368\" data-original=\"https://pic2.zhimg.com/v2-a7110c8d044ad91f55eb0959c97711b1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-a7110c8d044ad91f55eb0959c97711b1_b.jpg\"/></figure><p>在tmp目录下，有一个叫做mozilla_yourname0的文件夹，点进去，就是我们刚才下载的jdk文件包了。</p><p>接下来，我们要把jdk安装到哪？</p><p>如果是windows，我们随便创建一个文件夹，或者是安装包的话，我们一路默认安装到program files下就行。但正常情况下，我们会规整一下自己的文件夹，那么，在Ubuntu下也一样，我们也需要大致了解下各个目录还是干什么的，以及按照约定俗成，我们应该在哪里放置我们即将要安装的jdk。</p><p><b>Linux目录介绍</b></p><p>在解药linux目录，我们还是得从介绍root根目录讲起。为什么root目录对我们如此重要，我们乖乖的在当前用户的主目录待着不是很好嘛？</p><p>好是好，但是我们是开发人员，我们需要折腾，就比如我装完windows系统，第一件事情是激活administrator，然后切换到该用户登录状态下一样。</p><p>在root目录，有这样一些主要的目录：</p><p>1：bin，系统的二进制可执行文件</p><p>2：sbin，只有root才能访问的可执行文件</p><p>3：etc，系统配置文件</p><p>4：usr（不是user哦，是unix shared resources），很重要哦，可以理解为C:/Windows/，</p><p>/usr/lib理解为C:/Windows/System32，</p><p>/usr/local：用户级的程序目录，可以理解为C:/Progrem Files/。用户自己编译的软件默认会安装到这个目录下。</p><p>/usr/src：系统级的源码目录。</p><p>/usr/local/src：用户级的源码目录。</p><p>当然，上面只是给出一般的建议，并不一定非要照此很教条的放置文件。</p><p>5：dev（不是develop，是device），存放设备文件，驱动等</p><p>6：root，root用户的用户主目录（区别于根目录）</p><p>7：boot，系统启动时需要用到的文件</p><p>8：mnt（mount），root安装临时文件的安装点</p><p>9：lib，放置系统运行和第三方程序运行所依赖的lib库</p><p>10：tmp，放置各种临时文件</p><p>11：var，放置运行时需要改变数据的文件</p><p>12：opt：opt有可选的意思，也是用户级的程序目录，可以理解为D:/Software。比如，我们在下一篇要安装的idea，我们就打算放在这个目录下。</p><p>经过上面的了解，我们知道了安装软件最好放置到usr下，于是，我们 该目录下创建一个java1002文件夹。</p><p>不过，如果我们是直接通过桌面系统进入到root根目录的，则会发现“新建文件夹”是灰显的。这个时候，我们就要通过sudo nautilus进入的桌面系统才能有权限去创建文件夹。</p><p>创建完毕，把jdk包剪切到新目录下，然后提取它。</p><p>如果使用命令来提取的话，是：</p><p>tar –xvf jdk-10.0.2-linux-x64.tar.gz –C /usr/local/java1002</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-0efdf37f6dd2933e93ce5e4890c378ca_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1091\" data-rawheight=\"239\" class=\"origin_image zh-lightbox-thumb\" width=\"1091\" data-original=\"https://pic3.zhimg.com/v2-0efdf37f6dd2933e93ce5e4890c378ca_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1091&#39; height=&#39;239&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1091\" data-rawheight=\"239\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1091\" data-original=\"https://pic3.zhimg.com/v2-0efdf37f6dd2933e93ce5e4890c378ca_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-0efdf37f6dd2933e93ce5e4890c378ca_b.jpg\"/></figure><p>在Ubuntu下，解压即安装。现在，我们需要配置java的几个环境变量。</p><p><b>2.配置</b></p><p>习惯了使用windows的学员一定遇到过这种问题，就是我们安装软件的时候往往会问是否只允许当前用户使用。在Ubuntu下其实也有类似的问题。一般来说，Ubuntu的配置我们可以在两个地方配置，</p><p>全局配置文件：</p><p>/etc/profile</p><p>/etc/bashrc</p><p>当前用户配置文件：</p><p>~/.bash_profile </p><p>~/.bashrc</p><p>这4个地方到底有什么区别？</p><p><b>profile和bashrc文件的区别</b></p><p>/etc/profile：主要用来设置系统环境变量，比如$PATH，对所有用户有效。</p><p>/etc/bashrc：设置系统-bash shell相关的参数，对所有用户生效。用户运行bash命令，使用的参数就在这里。</p><p>~/.bash_profile：设置环境变量，功能同/etc/profile 类似，对当前用户有效。</p><p>~/.bashrc: 作用类似于/etc/bashrc, 对当前用户有效。</p><p>注意，~指的是当前用户的主目录。如果当前用户是root，那么~就是/root/，否则就是/home/yourname/。</p><p>还有一点需要注意，</p><p>~/.bash_profile 是只有用户登录时才会生效，而~/.bashrc 是non-login 方式运行的，即只要以该用户身份运行命令行就会读取该文件。</p><p><b>Java环境变量配置</b></p><p>通过上面的描述，我们知道，java环境变量最好是在/etc/profile中配置。同样，我们要sudo nautilus下找到该文件，然后在末尾加上，</p><p>#JAVA</p><p>export JAVA_HOME=/usr/java1002/jdk-10.0.2_linux-x64_bin/jdk-10.0.2</p><p>export PATH=${JAVA_HOME}/bin:$PATH</p><p>export CLASSPATH=${JAVA_HOME/lib}:.</p><p>注意，这里是给有经验的同学说的。在jdk10中，已经没有了jre目录，所以在配置中，我们也不需要配置jre的相关信息。</p><p>保存，关闭。</p><p>Ps：也可以在终端通过命令：sudo vim /etc/profile打开文本编辑器，按&lt;Insert&gt;键进入编辑模式，填入内容，按&lt;Esc&gt;键退出编辑模式，接着按&#34;:&#34;再输入”wq!“保存并退出。 </p><p>在终端中敲入命令，</p><p>source profile</p><p>或者，我们也可以重启Ubuntu，让配置生效。</p><p>此刻，再让我们敲入命令 java -version，当你看到这个界面的时候，就说明我们成功了，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-8141605f2be3b73a095b144dc3fdb9eb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"888\" data-rawheight=\"611\" class=\"origin_image zh-lightbox-thumb\" width=\"888\" data-original=\"https://pic4.zhimg.com/v2-8141605f2be3b73a095b144dc3fdb9eb_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;888&#39; height=&#39;611&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"888\" data-rawheight=\"611\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"888\" data-original=\"https://pic4.zhimg.com/v2-8141605f2be3b73a095b144dc3fdb9eb_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-8141605f2be3b73a095b144dc3fdb9eb_b.jpg\"/></figure><p><b>3.测试</b></p><p>接下来，让我们回到当前用户的主目录，我们去创建一个javacode的目录，这个目录下，我们将要去放置第一个java程序了。</p><p>首先，打开文本编辑器，然后输入代码：</p><p>public class HelloZuikc{</p><p>  public static void main(String args[]){</p><p>    System.out.println(&#34;Hello <a href=\"https://link.zhihu.com/?target=http%3A//zuikc.com\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Java培训 | 大数据培训 | .NET培训 | 宏福教育旗下IT实训机构</a>&#34;);\t</p><p>  }</p><p>}</p><p>紧接着，到终端中，去到文件所在目录，</p><p>javac <a href=\"https://link.zhihu.com/?target=http%3A//HelloZuikc.java\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">HelloZuikc.java</a></p><p>如果命令执行成功，则会发现多了一个HelloZuikc.class文件，继而执行：</p><p>java HelloZuikc</p><p>一切大功告成，如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-5b2c1c320107797af00d035dce1fc1ca_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1270\" data-rawheight=\"731\" class=\"origin_image zh-lightbox-thumb\" width=\"1270\" data-original=\"https://pic3.zhimg.com/v2-5b2c1c320107797af00d035dce1fc1ca_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1270&#39; height=&#39;731&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1270\" data-rawheight=\"731\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1270\" data-original=\"https://pic3.zhimg.com/v2-5b2c1c320107797af00d035dce1fc1ca_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-5b2c1c320107797af00d035dce1fc1ca_b.jpg\"/></figure><p>感谢关注“码农星球”。本文版权属于“码农星球”。我们提供咨询和培训服务，关于本文有任何困惑，请关注并联系我们。</p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/57736468", 
            "userName": "撸码J", 
            "userLink": "https://www.zhihu.com/people/38630bb8d3ce44008ae0fef2fc4342bd", 
            "upvote": 0, 
            "title": "零基础培训出来的人工资是多少？", 
            "content": "<p>我们所知道的想要学习IT的人，99%最关心的就是：我是零基础，我培训出来能拿多少工资？这也是各大社区平台提问率最高的问题。今天，码农星球君就花了一点时间，统计了一下我们所掌握的Java专业的数据。我们将从大专学历、大专及以上学历两个维度来给出结论。</p><p><b>一：大专</b></p><p>首先，让我们把工资（月薪）档位分为大家最关心的三个档位：8K以下、8K-12K、12K以上。先看统计结果：</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-8325d144e311c6fb693c5ab6e5bcc782_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"481\" data-rawheight=\"289\" class=\"origin_image zh-lightbox-thumb\" width=\"481\" data-original=\"https://pic3.zhimg.com/v2-8325d144e311c6fb693c5ab6e5bcc782_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;481&#39; height=&#39;289&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"481\" data-rawheight=\"289\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"481\" data-original=\"https://pic3.zhimg.com/v2-8325d144e311c6fb693c5ab6e5bcc782_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-8325d144e311c6fb693c5ab6e5bcc782_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>8K以下，指月薪8K以下，占了32%比率。这个档位属于很多出来培训的同学心理预期以下。但码农星球君跟一些大公司的HR聊过，他们对于大专应届生能给到的最高薪水在7K左右，所以对于应届毕业的大专生，大家不要期望过高，如一味追求月薪10K以上，那只能简历造假，将来被查出来也是职业生涯中的污点。并且，码农星球君也认为，对于应届生而言，第一份工具以锻炼技能，积累社会经验为主，不需过分追求高薪水。只要耐得住寂寞，在开发领域，工资两年翻番是很容易实现的。</p><p>在已经毕业的大专学员当中，拿到8K-12K，在56%。这个薪水范围，是大家比较舒服的范围，作为刚入行的程序员来说，也满足了心理预期。基本上，这部分学员以非应届为主，他们虽然没有开发方面的工作经验，但是具备一定的社会阅历，与人沟通也比较老道，所以只要技术过关，这些学员就会得到心仪的offer。</p><p>我们还注意到上图中12%的人拿到了12K以上的薪水。经常有人问：是不是大专毕业的将来就找不到工作或者得不到高工资？那么，这部分学员的数据已经告诉我们了，只要你能够努力学习，吃的了苦，你跟本科生也不差！这部分学员，整个学习阶段都是比较刻苦的，同时逻辑思维能力也比较强，他们的历次考试都会名列前茅，所以在培训结束后拿到高工资也是理所当然的。</p><p><b>二：本科及以上学历</b></p><p>看统计图：</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f164678def3214288ddd2e44b6c4ed21_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"481\" data-rawheight=\"289\" class=\"origin_image zh-lightbox-thumb\" width=\"481\" data-original=\"https://pic2.zhimg.com/v2-f164678def3214288ddd2e44b6c4ed21_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;481&#39; height=&#39;289&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"481\" data-rawheight=\"289\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"481\" data-original=\"https://pic2.zhimg.com/v2-f164678def3214288ddd2e44b6c4ed21_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f164678def3214288ddd2e44b6c4ed21_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>对于本科生应届生，大部分企业能给到最高月薪是在8K左右。所以8K以下的比例明显比大专生要少。</p><p>8K-12K的则占据了大部分。这个可以说完全不意外。</p><p>非常意外的是12K以上的比率只有9%，比大专生的比率还要低。在尊重事实的基础上，码农星球君去思考这底下的深层原因。可能对于大专生或者本科生而言，大专生的危机意识要强一点。对于大专生来说，去培训机构学习真的就是背水一战，人生的唯一一条路了，要么逆袭拿高工资，要么只能回家待业混日子。所以，对于部分大专生来说，他们在培训期间的学习真的是非常刻苦，于是反而12K以上的比率还高一点。 </p><p>好了，以上数据统计完毕。以上数据全部来自码农星球君内部数据。如果大家有兴趣，请底下留言或者给我发私信，我们就基础给出应届生和非应届生的薪资统计数据。</p><p>感谢关注“码农星球”。本文版权属于“码农星球”。关于本文有任何困惑，请关注并联系我们。</p><a href=\"https://www.zhihu.com/question/49741048\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">为什么零基础培训出来的人工资敢要的特别高？</a><p></p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/57719550", 
            "userName": "撸码J", 
            "userLink": "https://www.zhihu.com/people/38630bb8d3ce44008ae0fef2fc4342bd", 
            "upvote": 1, 
            "title": "Java全栈程序员之01：做个Linux下的程序猿", 
            "content": "<p>Windows10正在成为史上口碑最差的Windows系统，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-14fb171c43f7de1b5d441cfacf437426_b.jpg\" data-size=\"normal\" data-rawwidth=\"272\" data-rawheight=\"767\" class=\"content_image\" width=\"272\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;272&#39; height=&#39;767&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"272\" data-rawheight=\"767\" class=\"content_image lazy\" width=\"272\" data-actualsrc=\"https://pic3.zhimg.com/v2-14fb171c43f7de1b5d441cfacf437426_b.jpg\"/><figcaption>（图侵删）</figcaption></figure><p>我曾经花了数次1小时去寻找解决方案去关闭自动更新，包括停掉服务、修改注册表等等。但是都没有成功。</p><p>微软自身是知道这个问题的，但就跟过去几年的很多微软的技术框架一样，我就是一意孤行，你能把我怎么的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-b007c743d003fe9713fb18fc12552bfb_b.jpg\" data-size=\"normal\" data-rawwidth=\"774\" data-rawheight=\"760\" class=\"origin_image zh-lightbox-thumb\" width=\"774\" data-original=\"https://pic4.zhimg.com/v2-b007c743d003fe9713fb18fc12552bfb_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;774&#39; height=&#39;760&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"774\" data-rawheight=\"760\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"774\" data-original=\"https://pic4.zhimg.com/v2-b007c743d003fe9713fb18fc12552bfb_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-b007c743d003fe9713fb18fc12552bfb_b.jpg\"/><figcaption>（贴在微软总部食堂的一张图片）</figcaption></figure><p>很多跟我一样的朋友现在使用widnows10的唯一理由是：我不得不用。但是，我们用它的时间正在越来越少。简言之就是：能不用，就不用。Windows系统正在成为我的一个游戏机，即便这样，它也不够合格：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-14be4ef1e10a48a29b5c807cb90da164_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"480\" data-rawheight=\"270\" data-thumbnail=\"https://pic1.zhimg.com/v2-14be4ef1e10a48a29b5c807cb90da164_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"480\" data-original=\"https://pic1.zhimg.com/v2-14be4ef1e10a48a29b5c807cb90da164_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;480&#39; height=&#39;270&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"480\" data-rawheight=\"270\" data-thumbnail=\"https://pic1.zhimg.com/v2-14be4ef1e10a48a29b5c807cb90da164_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"480\" data-original=\"https://pic1.zhimg.com/v2-14be4ef1e10a48a29b5c807cb90da164_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-14be4ef1e10a48a29b5c807cb90da164_b.gif\"/></figure><p>Windows之所以成功，是因为它本来的理念是设计的让傻瓜也能用。但是现在，它正在把我们当成傻瓜。</p><p>那么，作为程序员的你，哪些工作是可以远离Windows的呢？如果你是一个Java程序员，那么恭喜你，对于Windows，眼不见心不烦。</p><p>当然，即便不用Windows，我们还可以有多种选择，比如mac os。但是，如果你手头没有mac本，或者跟我一样，虽然是个土豪，同时拥有3台mac本，但是还没有豪到给公司每个研发都配置一台mac本的话，那我们就用linux系统吧。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-f1ab474221f9090b09d16c52e1d9a334_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"345\" data-rawheight=\"347\" class=\"content_image\" width=\"345\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;345&#39; height=&#39;347&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"345\" data-rawheight=\"347\" class=\"content_image lazy\" width=\"345\" data-actualsrc=\"https://pic1.zhimg.com/v2-f1ab474221f9090b09d16c52e1d9a334_b.jpg\"/></figure><p>But，用哪个版本？以下都是linux的发行版本哦：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-4d4b87b2aa24903da56b277d83b15f35_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"549\" data-rawheight=\"275\" class=\"origin_image zh-lightbox-thumb\" width=\"549\" data-original=\"https://pic2.zhimg.com/v2-4d4b87b2aa24903da56b277d83b15f35_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;549&#39; height=&#39;275&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"549\" data-rawheight=\"275\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"549\" data-original=\"https://pic2.zhimg.com/v2-4d4b87b2aa24903da56b277d83b15f35_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-4d4b87b2aa24903da56b277d83b15f35_b.jpg\"/></figure><p>一般来说，在服务器上，我们使用centos。我自己的阿里云服务器也在用centos。而日常开发用，就要使用一个图形化界面比较好的linux系统了。当然，我需要免费的。于是，Ubuntu就成了最好的选择。抄一段来自百科的介绍：Ubuntu（乌班图）是一个以桌面应用为主的开源GNU/Linux操作系统，Ubuntu 是基于Debian GNU/Linux，支持x86、amd64（即x64）和ppc架构，由全球化的专业开发团队（Canonical Ltd）打造的。</p><p><b>一：下载Ubuntu</b></p><p>Ubuntu既然是免费开源的，那我们直接就去官网下载吧：<a href=\"https://link.zhihu.com/?target=http%3A//www.ubuntu.com\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">The leading operating system for PCs, IoT devices, servers and the cloud</a>。</p><p>由于我们只在个人pc端用，所以我们选择ubuntu的desktop版本用。注意，ubuntu有中文版的系统Ubuntu kylin，名为：优麒麟。我不是要刻意崇洋媚外，但是优麒麟现在争议的问题还比较多，所以，直接下载官方网站的destop版本就行了，毕竟即便是英文版本，安装的时候也可以选择中文显示。</p><p>截至当前，我下载的版本是：</p><p>ubuntu-18.04-desktop-amd64</p><p>下载回来的文件为：</p><p>ubuntu-18.04-desktop-amd64.iso</p><p><b>二：安装Ubuntu之准备</b></p><p>有意思的是，虽然之前抨击了一遍Windows，但是我们的安装仍旧要在Windows上进行。因为我知道大多数人还是在windows上工作，手头也只有一台电脑，所以在虚拟机上安装ubuntu就是一种最好的选择了。当然，脱离虚拟机独立安装也是一样的。</p><p>虚拟机我们使用的是VmWare，如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-4be6da5bba36b2a468a7de110e6e2072_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb\" width=\"1372\" data-original=\"https://pic3.zhimg.com/v2-4be6da5bba36b2a468a7de110e6e2072_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1372&#39; height=&#39;919&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1372\" data-original=\"https://pic3.zhimg.com/v2-4be6da5bba36b2a468a7de110e6e2072_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-4be6da5bba36b2a468a7de110e6e2072_b.jpg\"/></figure><p>新建虚拟机，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b44978c1f8e283b8f1ddd2a691ec2478_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"570\" data-original=\"https://pic1.zhimg.com/v2-b44978c1f8e283b8f1ddd2a691ec2478_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;570&#39; height=&#39;552&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"570\" data-original=\"https://pic1.zhimg.com/v2-b44978c1f8e283b8f1ddd2a691ec2478_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b44978c1f8e283b8f1ddd2a691ec2478_b.jpg\"/></figure><p>选择自定义，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-2c1c415028406f4492c09fe2adcd5e7f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"570\" data-original=\"https://pic4.zhimg.com/v2-2c1c415028406f4492c09fe2adcd5e7f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;570&#39; height=&#39;552&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"570\" data-original=\"https://pic4.zhimg.com/v2-2c1c415028406f4492c09fe2adcd5e7f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-2c1c415028406f4492c09fe2adcd5e7f_b.jpg\"/></figure><p>如上选择，下一步，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-4972279f212cb3a57ba19a7030d03c76_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"570\" data-original=\"https://pic3.zhimg.com/v2-4972279f212cb3a57ba19a7030d03c76_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;570&#39; height=&#39;552&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"570\" data-original=\"https://pic3.zhimg.com/v2-4972279f212cb3a57ba19a7030d03c76_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-4972279f212cb3a57ba19a7030d03c76_b.jpg\"/></figure><p>选择稍后安装操作系统，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-3a63a9ac3f996b8d0ec1e349aa96a52d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"570\" data-original=\"https://pic2.zhimg.com/v2-3a63a9ac3f996b8d0ec1e349aa96a52d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;570&#39; height=&#39;552&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"570\" data-original=\"https://pic2.zhimg.com/v2-3a63a9ac3f996b8d0ec1e349aa96a52d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-3a63a9ac3f996b8d0ec1e349aa96a52d_b.jpg\"/></figure><p>做如上选择，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-2e4ed34a4b54c23a89dcc2c219f8a147_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"570\" data-original=\"https://pic4.zhimg.com/v2-2e4ed34a4b54c23a89dcc2c219f8a147_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;570&#39; height=&#39;552&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"570\" data-original=\"https://pic4.zhimg.com/v2-2e4ed34a4b54c23a89dcc2c219f8a147_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-2e4ed34a4b54c23a89dcc2c219f8a147_b.jpg\"/></figure><p>取名，选择安装路径，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-46e3ed3e2f4421c042502400a745dc7f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"570\" data-original=\"https://pic4.zhimg.com/v2-46e3ed3e2f4421c042502400a745dc7f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;570&#39; height=&#39;552&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"570\" data-original=\"https://pic4.zhimg.com/v2-46e3ed3e2f4421c042502400a745dc7f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-46e3ed3e2f4421c042502400a745dc7f_b.jpg\"/></figure><p>处理器和内核数量，按照自己电脑的实际水平来选，一般取50%即可。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-28af16a72e0aebe9812c133c74283334_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"570\" data-original=\"https://pic1.zhimg.com/v2-28af16a72e0aebe9812c133c74283334_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;570&#39; height=&#39;552&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"570\" data-original=\"https://pic1.zhimg.com/v2-28af16a72e0aebe9812c133c74283334_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-28af16a72e0aebe9812c133c74283334_b.jpg\"/></figure><p>调整内存大小，也可取实际内存大小的50%即可，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-9b837a35ede12cd206dfefb78bb7b7f2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"570\" data-original=\"https://pic3.zhimg.com/v2-9b837a35ede12cd206dfefb78bb7b7f2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;570&#39; height=&#39;552&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"570\" data-original=\"https://pic3.zhimg.com/v2-9b837a35ede12cd206dfefb78bb7b7f2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-9b837a35ede12cd206dfefb78bb7b7f2_b.jpg\"/></figure><p>上面选择NAT。为什么要选择NAT呢？为了我们一安装完毕Ubuntu直接就能脸上互联网（如果宿主Windows本身已经连上网络了的话）。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-231865b8cdef3e3d64eb77ae1ebc2372_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"570\" data-original=\"https://pic3.zhimg.com/v2-231865b8cdef3e3d64eb77ae1ebc2372_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;570&#39; height=&#39;552&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"570\" data-original=\"https://pic3.zhimg.com/v2-231865b8cdef3e3d64eb77ae1ebc2372_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-231865b8cdef3e3d64eb77ae1ebc2372_b.jpg\"/></figure><p>默认选择，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-f8bf6b8490d6dde116b06f3e3d5e4f27_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"570\" data-original=\"https://pic4.zhimg.com/v2-f8bf6b8490d6dde116b06f3e3d5e4f27_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;570&#39; height=&#39;552&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"570\" data-original=\"https://pic4.zhimg.com/v2-f8bf6b8490d6dde116b06f3e3d5e4f27_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-f8bf6b8490d6dde116b06f3e3d5e4f27_b.jpg\"/></figure><p>默认选择，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-199136917c4a4c133d48827f6c575fcb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"570\" data-original=\"https://pic4.zhimg.com/v2-199136917c4a4c133d48827f6c575fcb_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;570&#39; height=&#39;552&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"570\" data-original=\"https://pic4.zhimg.com/v2-199136917c4a4c133d48827f6c575fcb_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-199136917c4a4c133d48827f6c575fcb_b.jpg\"/></figure><p>选择创建新虚拟磁盘，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-b6d0fe02621f92aafbb1ac9b40920da7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"570\" data-original=\"https://pic4.zhimg.com/v2-b6d0fe02621f92aafbb1ac9b40920da7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;570&#39; height=&#39;552&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"570\" data-original=\"https://pic4.zhimg.com/v2-b6d0fe02621f92aafbb1ac9b40920da7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-b6d0fe02621f92aafbb1ac9b40920da7_b.jpg\"/></figure><p>磁盘大小为40G对我来说就差不多了，文件选择为单个文件。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-aaef6594a455ec49bbbb63be9c3dd76f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"570\" data-original=\"https://pic4.zhimg.com/v2-aaef6594a455ec49bbbb63be9c3dd76f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;570&#39; height=&#39;552&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"570\" data-original=\"https://pic4.zhimg.com/v2-aaef6594a455ec49bbbb63be9c3dd76f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-aaef6594a455ec49bbbb63be9c3dd76f_b.jpg\"/></figure><p>为文件名取名。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-5458a8abc920480356817c479cfd0908_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"570\" data-original=\"https://pic1.zhimg.com/v2-5458a8abc920480356817c479cfd0908_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;570&#39; height=&#39;552&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"570\" data-original=\"https://pic1.zhimg.com/v2-5458a8abc920480356817c479cfd0908_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-5458a8abc920480356817c479cfd0908_b.jpg\"/></figure><p>完成。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-c91c8f11f40fb0e9451c97550b324901_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb\" width=\"1372\" data-original=\"https://pic2.zhimg.com/v2-c91c8f11f40fb0e9451c97550b324901_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1372&#39; height=&#39;919&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1372\" data-original=\"https://pic2.zhimg.com/v2-c91c8f11f40fb0e9451c97550b324901_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-c91c8f11f40fb0e9451c97550b324901_b.jpg\"/></figure><p>选择编辑虚拟机设置。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-39140b581f2de0bbd230539281574ac7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"860\" data-rawheight=\"902\" class=\"origin_image zh-lightbox-thumb\" width=\"860\" data-original=\"https://pic4.zhimg.com/v2-39140b581f2de0bbd230539281574ac7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;860&#39; height=&#39;902&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"860\" data-rawheight=\"902\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"860\" data-original=\"https://pic4.zhimg.com/v2-39140b581f2de0bbd230539281574ac7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-39140b581f2de0bbd230539281574ac7_b.jpg\"/></figure><p>选择iso文件路径。</p><p>以上虚拟机就配置完成了，直接启动。</p><p><b>三：安装Ubuntu</b></p><p>直接启动ubuntu，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-c41a1849b9653867f02e1dcfcde4c6ee_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb\" width=\"1372\" data-original=\"https://pic3.zhimg.com/v2-c41a1849b9653867f02e1dcfcde4c6ee_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1372&#39; height=&#39;919&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1372\" data-original=\"https://pic3.zhimg.com/v2-c41a1849b9653867f02e1dcfcde4c6ee_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-c41a1849b9653867f02e1dcfcde4c6ee_b.jpg\"/></figure><p>对E文没有特殊爱好的，选择中文就行了，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-4b530c3d3b0681aee1d4e6e07f02697a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb\" width=\"1372\" data-original=\"https://pic3.zhimg.com/v2-4b530c3d3b0681aee1d4e6e07f02697a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1372&#39; height=&#39;919&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1372\" data-original=\"https://pic3.zhimg.com/v2-4b530c3d3b0681aee1d4e6e07f02697a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-4b530c3d3b0681aee1d4e6e07f02697a_b.jpg\"/></figure><p>键盘布局也一样。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-23f4269de9d892282b9a64cedfc47832_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb\" width=\"1372\" data-original=\"https://pic3.zhimg.com/v2-23f4269de9d892282b9a64cedfc47832_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1372&#39; height=&#39;919&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1372\" data-original=\"https://pic3.zhimg.com/v2-23f4269de9d892282b9a64cedfc47832_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-23f4269de9d892282b9a64cedfc47832_b.jpg\"/></figure><p>默认选择，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-d5305eecef45400344d3e3da31e060ad_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb\" width=\"1372\" data-original=\"https://pic2.zhimg.com/v2-d5305eecef45400344d3e3da31e060ad_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1372&#39; height=&#39;919&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1372\" data-original=\"https://pic2.zhimg.com/v2-d5305eecef45400344d3e3da31e060ad_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-d5305eecef45400344d3e3da31e060ad_b.jpg\"/></figure><p>默认选择，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-cb974707b25f0ae0152fde2f134eb27e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb\" width=\"1372\" data-original=\"https://pic3.zhimg.com/v2-cb974707b25f0ae0152fde2f134eb27e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1372&#39; height=&#39;919&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1372\" data-original=\"https://pic3.zhimg.com/v2-cb974707b25f0ae0152fde2f134eb27e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-cb974707b25f0ae0152fde2f134eb27e_b.jpg\"/></figure><p>这里选择“清楚整个磁盘并安装Ubuntu”，点继续，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-be2d78cfd129a76e78ff6e77ae218774_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb\" width=\"1372\" data-original=\"https://pic1.zhimg.com/v2-be2d78cfd129a76e78ff6e77ae218774_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1372&#39; height=&#39;919&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1372\" data-original=\"https://pic1.zhimg.com/v2-be2d78cfd129a76e78ff6e77ae218774_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-be2d78cfd129a76e78ff6e77ae218774_b.jpg\"/></figure><p>时区选择，注意，没有beijing哦，只有shanghai，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-b1e4a5d5113195b719d78c879b3cb8df_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb\" width=\"1372\" data-original=\"https://pic4.zhimg.com/v2-b1e4a5d5113195b719d78c879b3cb8df_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1372&#39; height=&#39;919&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1372\" data-original=\"https://pic4.zhimg.com/v2-b1e4a5d5113195b719d78c879b3cb8df_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-b1e4a5d5113195b719d78c879b3cb8df_b.jpg\"/></figure><p>按需设置自己的姓名、用户名、密码，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-fb686bbb0541177d8bdd6632e2afd265_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb\" width=\"1372\" data-original=\"https://pic2.zhimg.com/v2-fb686bbb0541177d8bdd6632e2afd265_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1372&#39; height=&#39;919&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1372\" data-original=\"https://pic2.zhimg.com/v2-fb686bbb0541177d8bdd6632e2afd265_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-fb686bbb0541177d8bdd6632e2afd265_b.jpg\"/></figure><p>等待安装过程吧，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-1bc92d5fd108870c24eceed152659704_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb\" width=\"1372\" data-original=\"https://pic1.zhimg.com/v2-1bc92d5fd108870c24eceed152659704_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1372&#39; height=&#39;919&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1372\" data-original=\"https://pic1.zhimg.com/v2-1bc92d5fd108870c24eceed152659704_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-1bc92d5fd108870c24eceed152659704_b.jpg\"/></figure><p>安装完毕提示重启。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-09dfe25ff93b74b4ae9fb53a1ff84bdf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb\" width=\"1372\" data-original=\"https://pic4.zhimg.com/v2-09dfe25ff93b74b4ae9fb53a1ff84bdf_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1372&#39; height=&#39;919&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1372\" data-rawheight=\"919\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1372\" data-original=\"https://pic4.zhimg.com/v2-09dfe25ff93b74b4ae9fb53a1ff84bdf_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-09dfe25ff93b74b4ae9fb53a1ff84bdf_b.jpg\"/></figure><p>重启后，要求我们移除安装盘（其实就是那个iso了），于是，让我们回到vmware的设置界面，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-dbb07a42bf8f356aa9d440acefb7ad5f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"860\" data-rawheight=\"902\" class=\"origin_image zh-lightbox-thumb\" width=\"860\" data-original=\"https://pic4.zhimg.com/v2-dbb07a42bf8f356aa9d440acefb7ad5f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;860&#39; height=&#39;902&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"860\" data-rawheight=\"902\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"860\" data-original=\"https://pic4.zhimg.com/v2-dbb07a42bf8f356aa9d440acefb7ad5f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-dbb07a42bf8f356aa9d440acefb7ad5f_b.jpg\"/></figure><p>如上选择，再重启，是不是开心的看到了ubuntu的界面了？</p><p><b>四：设置root密码</b></p><p>Ubuntu默认都是普通用户，没有root权限。</p><p>要切换到root用户，就要给root设置初始密码，输入命令：</p><p>sudo passwd</p><p>输入初始密码并设置root密码。</p><p>设定root密码成功后，输入 su 命令，并输入刚才设定的root密码，就可以切换成root了。</p><p>可以尝试重新进入客户端工具，然后输入su，试着切换一些目录，如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-dfa6b2f9cf230a8edd8ae65ac43b3dd8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1071\" data-rawheight=\"771\" class=\"origin_image zh-lightbox-thumb\" width=\"1071\" data-original=\"https://pic1.zhimg.com/v2-dfa6b2f9cf230a8edd8ae65ac43b3dd8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1071&#39; height=&#39;771&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1071\" data-rawheight=\"771\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1071\" data-original=\"https://pic1.zhimg.com/v2-dfa6b2f9cf230a8edd8ae65ac43b3dd8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-dfa6b2f9cf230a8edd8ae65ac43b3dd8_b.jpg\"/></figure><p>至此，Ubuntu的安装和准备工作已经完成了，下一篇，我们将尝试经典的HelloWorld了~~</p><p>感谢关注“码农星球”。本文版权属于“码农星球”。我们提供咨询和培训服务，关于本文有任何困惑，请关注并联系我们。</p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/57636756", 
            "userName": "撸码J", 
            "userLink": "https://www.zhihu.com/people/38630bb8d3ce44008ae0fef2fc4342bd", 
            "upvote": 0, 
            "title": "Java代码质量改进之：使用ThreadLocal维护线程内部变量", 
            "content": "<p>在上文中，《Java代码质量改进之：同步对象的选择》，我们提出了一个场景：火车站有3个售票窗口，同时在售一趟列车的100个座位。我们通过锁定一个靠谱的同步对象，完成了上面的功能。</p><p>现在，让我们反过来，每个窗口负责一趟车。比如一号窗口就卖1号列车的票，二号窗口就卖2号列车的票。不过它们需要同时开始卖票。</p><p><b>一：ThreadLocal的最简应用</b></p><p>首先，既然是各卖各的火车了，那么，就不需要同步了。于是代码又回归到：</p><p>package com.zuikc.thread;</p><p>public class SynchronizedSample01 {</p><p>\tpublic static void main(String[] args) {</p><p>\t\t// 创建</p><p>\t\tTicketWindow window1 = new TicketWindow(&#34;售票窗口1&#34;);</p><p>\t\tTicketWindow window2 = new TicketWindow(&#34;售票窗口2&#34;);</p><p>\t\tTicketWindow window3 = new TicketWindow(&#34;售票窗口3&#34;);</p><p>\t\twindow1.start();</p><p>\t\twindow2.start();</p><p>\t\twindow3.start();</p><p>\t}</p><p>}</p><p>class TicketWindow extends Thread {</p><p>\t// 共100个座位</p><p>\tstatic int ticket = 100;</p><p>\tpublic TicketWindow(String name) {</p><p>\t\tsuper(name);</p><p>\t}</p><p>\t@Override</p><p>\tpublic void run() {</p><p>\t\t// 模拟卖票</p><p>\t\twhile (ticket &gt; 0) {</p><p>\t\t\tSystem.out.println(this.getName() + &#34;卖出了座位号:&#34; + ticket);</p><p>\t\t\tticket--;</p><p>\t\t\ttry {</p><p>\t\t\t\tThread.sleep(10);</p><p>\t\t\t} catch (InterruptedException e) {</p><p>\t\t\t\te.printStackTrace();</p><p>\t\t\t}</p><p>\t\t}</p><p>\t}</p><p>}</p><p>但是当前的代码肯定是不对的，每个线程访问的都是同一个火车的ticket，并且还会出现超售现象。要保证每new一个窗口出来，就有一趟自己的列车，我们就可以用到ThreadLocal对象了。</p><p>让我们首先替换掉ticket变量，改为：</p><p>\t// 共100个座位</p><p>\t//static int ticket = 100;</p><p>\tstatic ThreadLocal&lt;Integer&gt; ticket = new ThreadLocal(){</p><p>\t\t@Override</p><p>\t\tprotected Object initialValue() {</p><p>\t\t\treturn new Integer(100);</p><p>\t\t}</p><p>\t};</p><p>\t然后，售票的代码改为：</p><p>\t@Override</p><p>\tpublic void run() {</p><p>\t\tint currentNum = ticket.get().intValue();</p><p>\t\twhile (currentNum &gt; 0) {</p><p>\t\t\tSystem.out.println(this.getName() + &#34;卖出了座位号:&#34; + currentNum);</p><p>\t\t\tcurrentNum = currentNum - 1;</p><p>\t\t\tticket.set(currentNum);</p><p>\t\t\ttry {</p><p>\t\t\t\tThread.sleep(100);</p><p>\t\t\t} catch (InterruptedException e) {</p><p>\t\t\t\te.printStackTrace();</p><p>\t\t\t}</p><p>\t\t}</p><p>\t}</p><p>虽然ticket依然是一个static变量，但是，运行程序你会发现，新起一个线程，不同的线程还是会拥有自己的ticket，不会互相干扰。也就是实现了每个窗口卖自己那趟车的目标。</p><p><b>二：ThreadLocal VS 实例变量</b></p><p>每一个程序员都应该是杠精。为什么，因为回过神来的我们发现，只要回到第一段代码中，把ticket中的static去掉，就能达到同样的目的哈：</p><p>class TicketWindow extends Thread {</p><p>\t// 共100个座位</p><p>\tint ticket = 100;</p><p>\tpublic TicketWindow(String name) {</p><p>\t\tsuper(name);</p><p>\t}</p><p>\t@Override</p><p>\tpublic void run() {</p><p>\t\t// 模拟卖票</p><p>\t\twhile (ticket &gt; 0) {</p><p>\t\t\tSystem.out.println(this.getName() + &#34;卖出了座位号:&#34; + ticket);</p><p>\t\t\tticket--;</p><p>\t\t\ttry {</p><p>\t\t\t\tThread.sleep(10);</p><p>\t\t\t} catch (InterruptedException e) {</p><p>\t\t\t\te.printStackTrace();</p><p>\t\t\t}</p><p>\t\t}</p><p>\t}</p><p>}</p><p>试下上面的代码，是不是也能达到各卖各的目的？</p><p>我们是脑袋被门板挤了，才想出来一个TheadLocal这样的复杂方案吗？</p><p>如果单纯说上面的这段代码，是的。但是，还有很多的场合，是ThreadLocal的用武之处。比如，我们并不永远使用extends Thead的方式来写多线程，我们还可能用implements Runnable的方式来写多线程（ps：还有更多的写法哦），如下：</p><p>package com.zuikc.thread;</p><p>public class SynchronizedSample02 {</p><p>\tpublic static void main(String[] args) {</p><p>\t\t// 创建</p><p>\t\tSelling sell = new Selling();</p><p>\t\tThread t1 = new Thread(sell);</p><p>\t\tt1.setName(&#34;售票窗口1&#34;);</p><p>\t\tThread t2 = new Thread(sell);</p><p>\t\tt2.setName(&#34;售票窗口2&#34;);</p><p>\t\tThread t3 = new Thread(sell);</p><p>\t\tt3.setName(&#34;售票窗口3&#34;);</p><p>\t\tt1.start();</p><p>\t\tt2.start();</p><p>\t\tt3.start();</p><p>\t}</p><p>}</p><p>class Selling implements Runnable{</p><p>\t// 共100个座位</p><p>\tint ticket = 100;</p><p>\t@Override</p><p>\tpublic void run() {</p><p>\t\t// 模拟卖票</p><p>\t\twhile (ticket &gt; 0) {</p><p>\t\t\tSystem.out.println(Thread.currentThread().getName() + &#34;卖出了座位号:&#34; + ticket);</p><p>\t\t\tticket--;</p><p>\t\t\ttry {</p><p>\t\t\t\tThread.sleep(100);</p><p>\t\t\t} catch (InterruptedException e) {</p><p>\t\t\t\te.printStackTrace();</p><p>\t\t\t}</p><p>\t\t}</p><p>\t}</p><p>}</p><p>而在这种情况下，我们就不得不使用TheadLocal了，这里就不放出代码了，大家可以试一下。</p><p>甚至，更进一步的，我们是不是能够把ticket这个变量放进方法内部呢，如果放入方法内部的话，我们同样也是必须要使用ThreadLocal才能达到实现目的，如下：</p><p>class Selling implements Runnable{</p><p>\t@Override</p><p>\tpublic void run() {</p><p>\t\t// 共100个座位</p><p>\t\tThreadLocal&lt;Integer&gt; ticket = new ThreadLocal() {</p><p>\t\t\t@Override</p><p>\t\t\tprotected Object initialValue() {</p><p>\t\t\t\treturn new Integer(100);</p><p>\t\t\t}</p><p>\t\t};</p><p>\t\t// 模拟卖票</p><p>\t\tint currentNum = ticket.get().intValue();</p><p>\t\twhile (currentNum &gt; 0) {</p><p>\t\t\tSystem.out.println(Thread.currentThread().getName() + &#34;卖出了座位号:&#34; + currentNum);</p><p>\t\t\tcurrentNum = currentNum - 1;</p><p>\t\t\tticket.set(currentNum);</p><p>\t\t\ttry {</p><p>\t\t\t\tThread.sleep(10);</p><p>\t\t\t} catch (InterruptedException e) {</p><p>\t\t\t\te.printStackTrace();</p><p>\t\t\t}</p><p>\t\t}</p><p>\t}</p><p>}</p><p>\t总之，简单来说：当要运行的代码本身不是很方便访问当前的线程实例的时候，就是ThreadLocal的用武之地。</p><p><b>三：ThreadLocal的应用场景</b></p><p>ThreadLocal有这样一些应用场景，比如连接池管理、会话管理等等。</p><p>在连接池的管理中，当我们需要获取一个连接，就应该为每一次获取给出不同的连接。在web应用中，请求是被线程池管理的，也就是说获取连接这个行为不是单线程行为，所以我们最好就要设计成不同的线程不能获取同一个连接，要保证能做到这样，就应该使用ThreadLocal了。</p><p>可能有人会表示，那不能设计成实例变量吗？答案是：不能。因为，在web应用中，线程都不是被我们自己管理的，所以，最佳的做法就是使用ThreadLocal。一个标准的做法如下：</p><p>class DbUtil implements Runnable{</p><p>    private static ThreadLocal&lt;Connection&gt; connectionHolder = new ThreadLocal&lt;Connection&gt;() {</p><p>        public Connection initialValue() {</p><p>                return DriverManager.getConnection(DB_URL);</p><p>        }</p><p>    };</p><p>    public static Connection getConnection() {</p><p>           return connectionHolder.get();</p><p>    }</p><p>}</p><p>最后作为补充，我们再来看看hibernate中ThreadLocal的应用：</p><p>\tprivate static final ThreadLocal&lt;Session&gt; threadSession = new ThreadLocal&lt;Session&gt;();  </p><p>    public static Session getSession() throws InfrastructureException {  </p><p>        Session s = threadSession.get();  </p><p>        try {  </p><p>            if (s == null) {  </p><p>                s = getSessionFactory().openSession();  </p><p>                threadSession.set(s);  </p><p>            }  </p><p>        } catch (HibernateException ex) {  </p><p>            throw new InfrastructureException(ex);  </p><p>        }  </p><p>        return s;  </p><p>    }</p><p>感谢关注“码农星球”。本文版权属于“码农星球”。我们提供咨询和培训服务，关于本文有任何困惑，请关注并联系我们。</p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/57635150", 
            "userName": "撸码J", 
            "userLink": "https://www.zhihu.com/people/38630bb8d3ce44008ae0fef2fc4342bd", 
            "upvote": 0, 
            "title": "开发入门，学Java还是学大数据？", 
            "content": "<p>经常有人问，我想学习开发，到底是学Java好还是学大数据好？或者是，学习大数据还有必要学Java吗？</p><p>依我说，这个提问的标准答案是：两者都学。</p><p>先来甩两张图。</p><p>一张是腾讯的大数据开发工程师的JD，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-74d3c721f8721cdb1c7b41a7367b356c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"848\" data-rawheight=\"667\" class=\"origin_image zh-lightbox-thumb\" width=\"848\" data-original=\"https://pic1.zhimg.com/v2-74d3c721f8721cdb1c7b41a7367b356c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;848&#39; height=&#39;667&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"848\" data-rawheight=\"667\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"848\" data-original=\"https://pic1.zhimg.com/v2-74d3c721f8721cdb1c7b41a7367b356c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-74d3c721f8721cdb1c7b41a7367b356c_b.jpg\"/></figure><p>还有一张是我随意找的某个猎头职位，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-dc9107b5645b883444ab159a8089b884_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"851\" data-rawheight=\"624\" class=\"origin_image zh-lightbox-thumb\" width=\"851\" data-original=\"https://pic1.zhimg.com/v2-dc9107b5645b883444ab159a8089b884_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;851&#39; height=&#39;624&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"851\" data-rawheight=\"624\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"851\" data-original=\"https://pic1.zhimg.com/v2-dc9107b5645b883444ab159a8089b884_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-dc9107b5645b883444ab159a8089b884_b.jpg\"/></figure><p>可以看到，无论是哪个职位，都要求了Java的开发经验，并且，腾讯的大数据职位明显要求了需要有Java后台开发三年经验。</p><p>所以，我说一个武断点的结论：一个不会写Java程序的大数据工程师，不是一个好的老司机~~</p><p><b>1：Java与大数据的关系</b></p><p>从事大数据工作，必须要掌握一门编程语言。我们所知道的，大数据开发中的一个重要工具Hadoop，就是使用Java开发的。当然，这并不是说只有Java才能做大数据，其它语言也能做。c#、scala、python，都可以，但是，学习Java的性价比更高。Java在当前环境中，一直稳坐编程语言头把交椅。</p><p>还有一点要提的是，企业用人当中，做数据分析，都希望是有一定工作经验的人来做，比如上文腾讯的职位中就可以看到，它希望招聘一个具有3年后台开发经验的大数据工程师。那什么是后台开发语言，跟scala和python比起来，Java几乎是那个唯一可能做了3年开发的工程师会用的语言。</p><p>同时，让我们反过来说，学了Java，我们可以去做大数据开发，但是，只学了python的大数据库开发，只能做这个。所以，想要做好大数据开发，就首先得熟练开发传统企业级或互联网平台。</p><p><b>2：“钱”途</b></p><p>看看职友集的数据，</p><p>Java工程师</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-4d733975af8e9651118552fb1e0119f1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1053\" data-rawheight=\"767\" class=\"origin_image zh-lightbox-thumb\" width=\"1053\" data-original=\"https://pic2.zhimg.com/v2-4d733975af8e9651118552fb1e0119f1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1053&#39; height=&#39;767&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1053\" data-rawheight=\"767\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1053\" data-original=\"https://pic2.zhimg.com/v2-4d733975af8e9651118552fb1e0119f1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-4d733975af8e9651118552fb1e0119f1_b.jpg\"/></figure><p>大数据分析工程师，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-e4a4bd231e18778516afe40555f9c3e0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1054\" data-rawheight=\"755\" class=\"origin_image zh-lightbox-thumb\" width=\"1054\" data-original=\"https://pic1.zhimg.com/v2-e4a4bd231e18778516afe40555f9c3e0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1054&#39; height=&#39;755&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1054\" data-rawheight=\"755\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1054\" data-original=\"https://pic1.zhimg.com/v2-e4a4bd231e18778516afe40555f9c3e0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e4a4bd231e18778516afe40555f9c3e0_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>可以看到30K以上的比率，大数据开发比Java工程师要高。</p><p>但是我们也注意到一个问题，大数据的样本远远低于Java工程师。这一方面说明Java工程师的群体要大于大数据工程师，但从另外一方面来说，大数据工程师的供求比要低于Java工程师，所以现在入行，能快速进入到一个公司的核心。</p><p>另一个值得注意的地方是，入行3-5年，大数据的薪水已经冲破25K，上探30K，但是Java工程师还停留在20K左右。所以，大数据的薪水上升将会更快。</p><p><b>3：行业趋势</b></p><p>如果一个企业还停留在传统互联网开发阶段，未来的发展将会越来越窄。举个不好听的例子，现在一搜索就是“大数据杀熟”的例子，这个大数据杀熟，说白了，就是一个企业利用大数据分析，在原来的客户基数没有增大的基础上，增加利润点。企业失去利润增长点是很可怕的，当利用传统模式不可能再给自己体量增大的基础上，谁能用好大数据，谁就能走到最后。</p><p>再从国家的层面上来讲，2015年,是中国“大数据开发”发展、落地之年。中国一线的云计算巨头，如阿里云、腾讯云等，在2015年数据中心的服务器数量纷纷超过50万台。在2016年，数据中心建设将进入高峰期，有云计算厂商的服务器数量将会突破100万台。</p><p>经李克强总理签批，2017年国务院、工业和信息化部发文《推动大数据产业发展》，系统部署“大数据”发展工作。党的十九大报告指出，“加快建设制造强国，加快发展先进制造业，推动互联网、大数据、人工智能和实体经济深度融合”。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-8627324afe1eb354a856de313364f68a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"664\" data-rawheight=\"429\" class=\"origin_image zh-lightbox-thumb\" width=\"664\" data-original=\"https://pic3.zhimg.com/v2-8627324afe1eb354a856de313364f68a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;664&#39; height=&#39;429&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"664\" data-rawheight=\"429\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"664\" data-original=\"https://pic3.zhimg.com/v2-8627324afe1eb354a856de313364f68a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-8627324afe1eb354a856de313364f68a_b.jpg\"/></figure><p>所以说，大数据的行业趋势当然没问题了。但是要看到，所谓趋势，就是未来大概率会火，但是目前体量并没有那么大。这一点，我们从职友集的样本中就可以看到，Java的样本有4万多，而大数据样本是800多一点。</p><p><b>4：零基础的你该怎么选择？</b></p><p>从上面的阐述来看，聪明的你一定已经知道该怎么选择了。那就是立足Java，学好大数据，这样，就能在保证你目前吃饱（有海量offer）的基础上，有可能在不久的将来吃好（未来大数据职位可能井喷）。</p><p>感谢关注“码农星球”。本文版权属于“码农星球”。我们提供咨询和IT培训服务，关于本文有任何困惑，请关注并联系我们。</p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }
            ], 
            "comments": [
                {
                    "userName": "李曦晨", 
                    "userLink": "https://www.zhihu.com/people/1294becc8949feeed689ea1e82f59256", 
                    "content": "你好，那请问对于选择去培训机构的人来说，(本科是计算机专业的)，是选择Java好于大数据是吗？", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/57416895", 
            "userName": "撸码J", 
            "userLink": "https://www.zhihu.com/people/38630bb8d3ce44008ae0fef2fc4342bd", 
            "upvote": 2, 
            "title": "为什么大多公司不要培训班出来的JAVA程序员？", 
            "content": "<p>       经常听到这样的观点：很多公司不招聘培训班出来的学生。甚至于让人感觉，如果你参加过培训，那简直就是你程序员职业生涯中的一大污点。</p><p>       撸码J总结了这些公司不要培训班学生的理由：</p><p><b>一：简历造假</b></p><p>       网上有大量的帖子揭露了培训机构指导学员简历造假的情况。这在目前更多的是一个行业自律的问题。说白了就是说，这是一个道德问题。当机构鼓励你造假，当你们一个班里大部分的同学都在造假，且成功拿到offer的时候，你的心理防线是可能会崩溃的。</p><p>       并且现在这种情况陷入了一个恶性循环。如下：</p><p>       1：大部分的公司宣传不要培训出来的学生；</p><p>       2：于是老实说培训出来的人找不到面试机会；</p><p>       3：于是只有简历造假才能有面试机会；</p><p>       在这里用人单位其实是有一定责任的。当你的薪酬体系是建立在能力基础上，不是论资排辈看过去职业生涯的时候，这种情况也许会好一点。</p><p><b>二：水平太烂</b></p><p>       那么，既然说到能力问题，第二个问题就来了。</p><p>       培训出来的学员，第二个被喷的原因就是：能力太差，不会做东西。简而言之就是：在培训机构学习了几个月出来之后，还是完全不能写代码。传统IT培训机构在宣传自己的时候，都突出宣称：纯面授，全天上课。但须知道，这往往可能就是作为学员的你，迈入的第一个坑。</p><p>       我们必须认清一个事实：软件开发从来都是一件很辛苦的事情，不是某个、某几个老师谈笑风生在课堂上给你讲个几个月就能学会的！</p><p>       举个例子：你在课堂里跟着同学们听着老师用阿猫阿狗Animal来讲OOP可能觉得很舒服，但是那毫无用处。因为代码从来就应该是抽象的、晦涩的，那些具体的比喻对于写代码毫无帮助。面向对象一开始就要就要类似去讲解流、讲解集合、讲解Spring的架构体系，讲解它们为什么要这样来设计继承体系，有什么好处。讲解JavaWeb的几个核心类，就得将为什么它们都设计为Wrap，用了什么设计模式，Wrap的目的是为了什么？并且，所有这些知识，都需要自己实现和重写一遍骨干代码。</p><p>       很多人可能会讲，你让一个小白从开始就接触这些东西，他/她能学的会吗？依我说，如果这些东西都理解不了，那培训机构就有义务告诉你，开发这个行业不太适合你，咱们主动办理退费，互相给对方留一点尊严。我曾经听到的最无耻的话，就是某个同行跟我说：“不给他们教的简单点，让他们感觉自己都学会了，我们怎么把钱收上来……”。</p><p>       软件开发的本质就是要动手，我宁愿你动手写了6个月的代码，而不是听了6个月的课。很多东西，包装简历是包装不出来的。作为去参加培训的人，也需要摆正心态：你不是去走捷径的，而是去吃苦的。</p><p>       所以，如果你一定要挑一个培训机构，一定要去那种实战为主，而不是号称“纯面授”的机构。</p><p>       本文作者“撸码J”，感谢关注“码农星球”。本文版权属于“码农星球”。关于本文有任何困惑，请关注并联系我们。</p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }
            ], 
            "comments": [
                {
                    "userName": "何可可", 
                    "userLink": "https://www.zhihu.com/people/feca913acb5c55c713b1525e6895c541", 
                    "content": "好尴尬，这个陆敏技好像就是开培训班的", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/40239985", 
            "userName": "陆敏技", 
            "userLink": "https://www.zhihu.com/people/eb652569706cbecf6742ba80003bad3f", 
            "upvote": 1, 
            "title": "培训班入行的人，未来前景如何", 
            "content": "<p></p><p>\t经常看到有人问：培训班入行的人，未来前景如何？</p><p>\t然后有人跳出来骂：培训班出来的人能有前途？ </p><p>        是的，看上去非常有道理。为什么？让我们来看一下，计算机专业尤其是软件工程方向，最典型的需要学哪些知识（PS，每个学校根据专业细分又会学不同的专业课）：</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-38d2db36a33dc055fae632dbefb029e1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"646\" data-rawheight=\"606\" class=\"origin_image zh-lightbox-thumb\" width=\"646\" data-original=\"https://pic2.zhimg.com/v2-38d2db36a33dc055fae632dbefb029e1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;646&#39; height=&#39;606&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"646\" data-rawheight=\"606\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"646\" data-original=\"https://pic2.zhimg.com/v2-38d2db36a33dc055fae632dbefb029e1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-38d2db36a33dc055fae632dbefb029e1_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>        怎么样，且不说对于没学历，就是对于不是理工科的同学来说，是不是看着吓坏了？且不说编程课，不说计算机理论课，就高等数学、离散数学、概率论等等就会吓退一拨人。如果有心人士看到这个课程目录再去把高等数学和离散数学拿来看一看，保准得出这样的结论：IT专业也太难了，那些培训机构都是骗人的。</p><p>        是的，高等数学我学了一年。培训机构号称多长时间把你培养为月薪过万？6个月！SO，骗子。</p><p>        但是，这次，我不是来为批判者站台的。</p><p>        有些提问的手法在IT行业很常见：成为软件工程师需要多长时间？没有学历能成为软件工程师吗？</p><p>        这些问题都是小白在问，因为他们不知道如何来描述这个工作。但是如果我们换个行业，即便是小白也不会问出这样的问题来，比如：成为汽车工程师需要多长时间？初中毕业生能成为汽车工程师吗？因为在大家印象中，汽车工程师就是造发动机的那帮人，没有人会把汽修厂里卸个轮胎、贴个膜、装个胎压器的师傅叫做汽车工程师。</p><p>        同理，写Spring、lvs、redis、Mysql那帮人叫软件工程师，写CRUD算修理工，因为在业务系统里面update一条数据，就是换一条轮胎嘛。会用spring来重构系统，无非就相当于拆卸发动机嘛。</p><p>        你说会拆卸发动机（使用spring构建系统）、为了解决爆缸问题打开发动机换零件（为了迎合自己的业务系统，修改某段spring源码，重新编译发布），这样的大师傅有没有前途。</p><p>        当然，小白错就错在不会正确的给自己命名。软件工程师是不能叫的，一辈子都不能叫。连码农、码畜都不能叫，那是软件工程师用来自嘲的。我们只需称自己为IT从业者就行。</p><p>        当然，极端者甚至于连修理工都不会让你做，因为他觉得这有损他的体面。但是，我们且看市场允不允许他这么做。如果每个马路上的每个修理厂都只招收计算机相关专业，还需本科毕业，你且看他还能体面的每天坐着小轿车出来不。</p><p>        信息技术飞速发展，每个传统行业都需要一堆的大师傅来构建或者开发信息系统提升管理水平、提高营销效率，如果这些事情全部要学过离散数学、计算机图形学的人来做，那么大家都回去打铁吧。所以，很多批判者你不要看他学历高，其实更多时候是非蠢即坏。</p><p>        最后再多说几点：</p><p>        1：怕就怕有些人学的是发动机原理，可是却连发动机拆卸都不会。所以，我们一般面试都会让他：来，先换一条轮胎让我看看；</p><p>        2：以拿offer为目的小白参加培训班要慎重，IT行业毕竟不等同于汽修行业，找工作还是需要学历的，大专及以上，否则，HR这关就很难过。当然，作为兴趣，你没有专业背景也可以熟练的进行CRUD，也就是开发业务系统。</p><p>        3：很多人在唱衰培训行业，提出培训班出来的进入所学专业的就业率在30%以下的，我不知道这样的数据来自于哪个机构。我以我们自己为例：往期就业率98%，超过50%学员月薪过万，平均月薪9.2K。</p><p>        4：IT行业，不傻不蠢，从修理工变为发动机制造者，比真的在汽车行业，要简单的多。</p><p>以上。</p>", 
            "topic": [
                {
                    "tag": "软件培训", 
                    "tagLink": "https://api.zhihu.com/topics/19773733"
                }, 
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/31078741", 
            "userName": "陆敏技", 
            "userLink": "https://www.zhihu.com/people/eb652569706cbecf6742ba80003bad3f", 
            "upvote": 0, 
            "title": "人工智能抢80万工人的饭碗，却增加了350万个新岗位？！", 
            "content": "<blockquote>比尔盖茨力挺人工智能：AI的好处远大于危险</blockquote><p>近几年的发展，使得人工智能的热度在不断的上升，越来越多的程序员加入AI领域，将来技术成熟的话，越来越多的“机器人”将会出现在我们的工作中，而我们应该持什么态度对待这些“新同事”呢？</p><p>有人欢喜有人愁，机器人的实现，表明我们的社会在进步，但是也会替代一部分人工作。新科技的产生难免会淘汰一些岗位，但同时也会创造新的就业机会。</p><p>就像当初的通信员被淘汰之后，快递员的数量在剧增。</p><p>那事实真的是人工智能的衍生导致人类生存不下去吗？</p><p>我们分别从“国家战略方向”、“就业方向”两个方向来分析这件事情。</p><p><b>国家战略方向</b></p><p>我们都知道，一个国家要稳定，要以人为本，只有人民的生活稳定，才不会有动乱，国家的才算稳定，国家才可以发展。所以，国家做的决策都是经过深思熟虑的。</p><p>在2017年7月20日，国务院发布《新一代人工智能发展规划》，将人工智能上升为国家战略，为中国人工智能产业做出战略部署，对重点任务做出明确解析，抢抓重大机遇，构筑我国人工智能发展的先发优势。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-249891d655b1b0e41f236af81ad43f9f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"526\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-249891d655b1b0e41f236af81ad43f9f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;526&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"526\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-249891d655b1b0e41f236af81ad43f9f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-249891d655b1b0e41f236af81ad43f9f_b.jpg\"/></figure><p>国家把人工智能的发展作为国家战略，很显然是对未来发展有利的。</p><p>如果真的像人们所担心的，人工智能时代的到来会导致我们自己失业，从而生存不下去的话，那么不就与国家求稳定的初衷有所违背吗？</p><p>所以，人工智能会抢人类的饭碗这个结论应该是否定的。</p><p>为了进一步证明人工智能给社会带来进步，我们最喜欢用数据说话了，跟小编一起来看看数据吧。</p><p><b>就业方向</b></p><p>据国际机器人联合会的研究数据显示，制造类机器人直接或间接地增加了人类就业岗位的总数。</p><p>到2020年，机器人产业在全球范围内直接或间接创造的岗位总数将从190万增长到350万，每部署一个机器人，将创造出3.6个岗位。</p><p>德勤在英国进行的一项研究发现，随着自动化和人工智能的发展，80多万个低技能工作岗位被淘汰。但与此同时，有350多万个新的工作岗位被创造，而且这些工作的平均年薪比之前高了1.3万美元。</p><p>这组数据显示，并不是说降低就业率了，而是增加就业机会了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-43f8303e26aba8a44b9e02ed561096a7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"333\" class=\"origin_image zh-lightbox-thumb\" width=\"500\" data-original=\"https://pic4.zhimg.com/v2-43f8303e26aba8a44b9e02ed561096a7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;500&#39; height=&#39;333&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"333\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"500\" data-original=\"https://pic4.zhimg.com/v2-43f8303e26aba8a44b9e02ed561096a7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-43f8303e26aba8a44b9e02ed561096a7_b.jpg\"/></figure><p>如果看到这里你仍然有所质疑，那么我们就用两个事例来说话。</p><p>亚马逊在2014年引进机器人，部署机器人时，堆叠塑料箱的人员，通过参加公司的课程，成为了机器人操作员。很多其他的员工转移到接收站，在那里他们手动将大箱的商品整理到塑料箱。</p><p>机器人只是替代了之前人类的重复性工作。</p><p>亚马逊运营负责人表示：在机器人部署期间，没有任何一个员工被裁掉，亚马逊为那些岗位被替代的员工找到了新的角色和工作任务。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-78b961e68fed8b22d6316db3335ee81f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" class=\"origin_image zh-lightbox-thumb\" width=\"1000\" data-original=\"https://pic4.zhimg.com/v2-78b961e68fed8b22d6316db3335ee81f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1000&#39; height=&#39;1000&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1000\" data-original=\"https://pic4.zhimg.com/v2-78b961e68fed8b22d6316db3335ee81f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-78b961e68fed8b22d6316db3335ee81f_b.jpg\"/></figure><p>医疗机器人颇受欢迎，以医疗机器人家族中名气最大的外科手术机器人为例来解读。</p><p>外科手术机器人四大优势：</p><ul><li>自由度高，使得手术更加灵巧；</li><li>能为医生提供放大的三维影像，让手术做得更加精细；</li><li>改变了传统手术的模式，以前医生是站在患者旁边手术，现在是坐在控制台前手术，缓解了长时间手术带来的疲劳；</li><li>可以实现远程手术，机器人可以放在偏远地区，由医生远程操控，使更多患者享受到高科技医疗的福利。</li></ul><p>新科技的产生难免会淘汰一些岗位，但同时也会创造新的就业机会，对于有意愿、有学习能力的劳动者来说，工作机会就在那里，永远不会消失。与其整天担心饭碗被抢走，还不如尽早提升自己的知识储备与技能水平，只有你自己强大了，才能不惧竞争不怕失业。</p>", 
            "topic": [
                {
                    "tag": "人工智能", 
                    "tagLink": "https://api.zhihu.com/topics/19551275"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/30969317", 
            "userName": "陆敏技", 
            "userLink": "https://www.zhihu.com/people/eb652569706cbecf6742ba80003bad3f", 
            "upvote": 21, 
            "title": "三个月成为大数据工程师，你需要具备哪些条件？", 
            "content": "<blockquote>学习大数据没有零基础入门，首先你要成为一名工程师</blockquote><p>在技术论坛中或知乎上，看到近几万的朋友都在疑惑，学习Java应该选择什么发展方向，这个咱们在之前的文章中有提到过，Java发展在领域上有三个选择方向：</p><p>JavaEE，主要应用于企业级应用开发；安卓开发方向；嵌入式应用开发方向。在此建议大家选择JavaEE方向，因为应用非常广泛，岗位设置也比较多。</p><p>Java的职业发展规划之路我们也曾在（一文阐述Java从初级到高级的学习之路）详细列举，这里就不一一列举了。</p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-a7101d709cc5081e0cea54968fd7ecfa_b.jpg\" data-caption=\"\" data-rawwidth=\"619\" data-rawheight=\"394\" class=\"origin_image zh-lightbox-thumb\" width=\"619\" data-original=\"https://pic3.zhimg.com/v2-a7101d709cc5081e0cea54968fd7ecfa_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;619&#39; height=&#39;394&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"619\" data-rawheight=\"394\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"619\" data-original=\"https://pic3.zhimg.com/v2-a7101d709cc5081e0cea54968fd7ecfa_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-a7101d709cc5081e0cea54968fd7ecfa_b.jpg\"/></figure><p>但我们从来没有讨论过学习Java，难道这辈子就只能做Java后端开发吗？只能在这条路上奋斗到底吗？难道中途没有其他的选择吗？</p><p>偶然认识的一个朋友，最开始是从事Java后端开发的，后来他在业余时间自学成功转入大数据行业，现在是一名大数据工程师，待遇也比之前好更多。前提是他是一名Java后端开发。</p><p>大数据是我们如今比较火的一个发展方向，但是很多培训机构有提到几个月速成的，小编觉得不是特别靠谱。</p><p>原因有以下：</p><ol><li>大数据是一个新生行业，还不太成熟。</li><li>Java发展了将近20年，也没有说几个月速成的，最多也就是带你入门，让你对Java的知识结构体系有一个清晰的认知，在后期的工作实践期间成长的速度更快。</li><li>大数据的起点要高，并不是所谓的零基础就可以入门的。</li></ol><figure><noscript><img src=\"https://pic3.zhimg.com/v2-82930be306b78a3edc13635714af451a_b.jpg\" data-caption=\"\" data-rawwidth=\"627\" data-rawheight=\"345\" class=\"origin_image zh-lightbox-thumb\" width=\"627\" data-original=\"https://pic3.zhimg.com/v2-82930be306b78a3edc13635714af451a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;627&#39; height=&#39;345&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"627\" data-rawheight=\"345\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"627\" data-original=\"https://pic3.zhimg.com/v2-82930be306b78a3edc13635714af451a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-82930be306b78a3edc13635714af451a_b.jpg\"/></figure><p>我们接下来讲述的有关大数据的学习是有条件限制的，首先你需要是一名普通的工程师，如果你是Java工程师的话更好，但如果你是小白的话，那就只能成为一名工程师的后再来学习大数据吧。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>一、认识大数据</b></p><p>所谓大数据本质其实也是数据，不过也包括了些新的特征，</p><ul><li>数据来源广；</li><li>数据格式多样化（结构化数据、非结构化数据、Excel文件等）；</li><li>数据量大（最少也是TB级别的、甚至可能是PB级别）；</li><li>数据增长速度快。</li></ul><p>而针对以上新的特征需要考虑很多问题：</p><p>例如，数据来源广，该如何采集汇总？采集汇总之后，又该存储呢？数据存储之后，该如何通过运算转化成自己想要的结果呢？</p><p>对于这些问题，我们需要有相对应的知识解决。<br/></p><p><b>二、大数据所需技能要求</b></p><p>Python语言：编写一些脚本时会用到。</p><p>Scala语言：编写Spark程序的最佳语言，当然也可以选择用Python。</p><p>Ozzie，azkaban：定时任务调度的工具。</p><p>Hue，Zepplin：图形化任务执行管理，结果查看工具。</p><p>Allluxio，Kylin等：通过对存储的数据进行预处理，加快运算速度的工具。</p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-e32f86cf0f77f1110d1240b5d2780a79_b.jpg\" data-caption=\"\" data-rawwidth=\"606\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb\" width=\"606\" data-original=\"https://pic2.zhimg.com/v2-e32f86cf0f77f1110d1240b5d2780a79_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;606&#39; height=&#39;408&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"606\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"606\" data-original=\"https://pic2.zhimg.com/v2-e32f86cf0f77f1110d1240b5d2780a79_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-e32f86cf0f77f1110d1240b5d2780a79_b.jpg\"/></figure><p>必须掌握的技能：</p><p>Java高级(虚拟机、并发)、Linux 基本操作、Hadoop（HDFS+MapReduce+Yarn ）、 HBase（JavaAPI操作+Phoenix ）、Hive(Hql基本操作和原理理解）、 Kafka、Storm/JStorm、Scala、Python、Spark (Core+sparksql+Spark streaming ） 、辅助小工具(Sqoop/Flume/Oozie/Hue等)</p><p>高阶技能：</p><p>机器学习算法以及mahout库加MLlib、 R语言、Lambda 架构、Kappa架构、Kylin、Alluxio</p><p><b>三、学习规划</b></p><p><b>第一阶段（基础阶段） </b></p><p>1.Linux学习</p><p>Linux操作系统介绍与安装、Linux常用命令、Linux常用软件安装、Linux网络、 防火墙、Shell编程等。</p><p>2.Java 高级学习（《深入理解Java虚拟机》、《Java高并发实战》）</p><p>掌握多线程、掌握并发包下的队列、掌握JVM技术、掌握反射和动态代理、了解JMS。</p><p>3.Zookeeper学习</p><p>Zookeeper分布式协调服务介绍、Zookeeper集群的安装部署、Zookeeper数据结构、命令。</p><p><b>第二阶段（攻坚阶段）</b></p><p>Hadoop、Hive、HBase、Scala、Spark、Python</p><p><b>第三阶段（辅助工具工学习阶段）</b></p><p>Sqoop、Flume、Oozie、Hue这些工具的学习主要在CSDN，51CTO以及官网都可以学习。</p><p><b>四、学习资源推荐</b></p><ol><li>Apache 官网（//<a href=\"https://link.zhihu.com/?target=http%3A//apache.org/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">apache.org/</span><span class=\"invisible\"></span></a>）</li><li>Stackoverflow（<a href=\"https://link.zhihu.com/?target=https%3A//stackoverflow.com/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">stackoverflow.com/</span><span class=\"invisible\"></span></a>）</li><li>Github(<a href=\"https://link.zhihu.com/?target=https%3A//github.com/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/</span><span class=\"invisible\"></span></a>)</li><li>About 云 ：//<a href=\"https://link.zhihu.com/?target=http%3A//www.aboutyun.com/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">aboutyun.com/</span><span class=\"invisible\"></span></a></li><li>CSDN（//<a href=\"https://link.zhihu.com/?target=http%3A//www.csdn.net/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">csdn.net/</span><span class=\"invisible\"></span></a>）</li><li>51CTO （//<a href=\"https://link.zhihu.com/?target=http%3A//www.51cto.com/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">51cto.com/</span><span class=\"invisible\"></span></a>）</li></ol><figure><noscript><img src=\"https://pic2.zhimg.com/v2-9c77ccb1b2b9bde73928ed86c574477d_b.jpg\" data-caption=\"\" data-rawwidth=\"535\" data-rawheight=\"358\" class=\"origin_image zh-lightbox-thumb\" width=\"535\" data-original=\"https://pic2.zhimg.com/v2-9c77ccb1b2b9bde73928ed86c574477d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;535&#39; height=&#39;358&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"535\" data-rawheight=\"358\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"535\" data-original=\"https://pic2.zhimg.com/v2-9c77ccb1b2b9bde73928ed86c574477d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-9c77ccb1b2b9bde73928ed86c574477d_b.jpg\"/></figure><p><b>总结</b></p><p>在技术行业里面，每天都会有新的东西出现，需要关注最新技术动态，不断学习。任何一般技术都是先学习理论，然后在实践中不断完善理论的过程。</p><ul><li>如果你觉得自己看书效率太慢，你可以网上搜集一些课程。</li><li>快速学习的能力、解决问题的能力、沟通能力在这个行业是真的非常重要的指标。</li><li>要善于使用StackOverFlow和Google来帮助你学习过程遇到的问题。</li><li>视频课程推荐：可以去万能的淘宝购买一些视频课程，你输入“大数据视频课程”，会出现很多，多购买几份（100块以内可以搞定），然后选择一个适合自己的。</li></ul><p>以上是我们对大数据学习的总结，当然我们也提到了，并不是说零基础的就可以直接学习，想要学会大数据，首先必须有一定的编程基础，要掌握扎实的编程基础。</p><p>在此建议学习Java，成为一名工程师的时候，有一定编程经验，自学起来也相对比开始要简单一点，然后对大数据有兴趣或者想要进入这个行业的就可以去学习了。</p>", 
            "topic": [
                {
                    "tag": "大数据", 
                    "tagLink": "https://api.zhihu.com/topics/19740929"
                }
            ], 
            "comments": [
                {
                    "userName": "哈哈哈", 
                    "userLink": "https://www.zhihu.com/people/5bd2ca886cdb2e7e06d681e2426976a3", 
                    "content": "小白感觉好难", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/30877141", 
            "userName": "陆敏技", 
            "userLink": "https://www.zhihu.com/people/eb652569706cbecf6742ba80003bad3f", 
            "upvote": 5, 
            "title": "多维度分析2017年最热门的编程语言", 
            "content": "<p>IEEE Spectrum网站发布了一年一度的编程语言排行榜，这也是他们发布的第四届编程语言排行榜。</p><p>据了解，IEEE Spectrum 的排序是来自 10 个重要线上数据源的综合，例如 Stack Overflow、Twitter、Reddit、IEEE Xplore、GitHub等，对 48 种语言进行排行。</p><p>与其他网站调查的排行榜不同之处在于，IEEE Spectrum 可以让读者自己选择参数组合时的权重，得到不同的排序结果。考虑到典型的Spectrum 读者需求，他们提供了几个预设的权重 —— 如新兴的语言、雇主需求的语言、开源的热门语言等。大家可以定义自己的排行榜：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-91364e554fbd331cffcaa3ae8d1357fd_b.jpg\" data-size=\"normal\" data-rawwidth=\"431\" data-rawheight=\"77\" class=\"origin_image zh-lightbox-thumb\" width=\"431\" data-original=\"https://pic2.zhimg.com/v2-91364e554fbd331cffcaa3ae8d1357fd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;431&#39; height=&#39;77&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"431\" data-rawheight=\"77\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"431\" data-original=\"https://pic2.zhimg.com/v2-91364e554fbd331cffcaa3ae8d1357fd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-91364e554fbd331cffcaa3ae8d1357fd_b.jpg\"/><figcaption>选择一种排名方法</figcaption></figure><p><b>有五种不同的语言排名方法，如下：</b></p><ul><li>IEEE Spectrum：全面的排名</li><li>Trending：迅速增长的语言；</li><li>Jobs：雇主要求的语言；</li><li>Open：在开放源代码集线器上流行的语言；</li><li>Custom：您自己设计的排名。</li></ul><p><b>按照趋势的发展得出的排行榜如下：</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a6be97ebdcd49fbdc201b4ddbb0bc72e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"679\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-a6be97ebdcd49fbdc201b4ddbb0bc72e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;679&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"679\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-a6be97ebdcd49fbdc201b4ddbb0bc72e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-a6be97ebdcd49fbdc201b4ddbb0bc72e_b.jpg\"/></figure><p><b>按照雇主要求的语言排行：</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-0263fdf88dc6d8b92a53e509226a4dad_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"631\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-0263fdf88dc6d8b92a53e509226a4dad_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;631&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"631\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-0263fdf88dc6d8b92a53e509226a4dad_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-0263fdf88dc6d8b92a53e509226a4dad_b.jpg\"/></figure><p>下图是参与者可以自行调整权重的图示：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-f25c2c3e3cea92b7e75d468c25cc5046_b.jpg\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"544\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-f25c2c3e3cea92b7e75d468c25cc5046_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;544&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"544\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-f25c2c3e3cea92b7e75d468c25cc5046_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-f25c2c3e3cea92b7e75d468c25cc5046_b.jpg\"/><figcaption>读者可以自行调整权重</figcaption></figure><p><b>IEEE Spectrum 给出的编程语言排行榜如下：</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-f89f71bf3015dda03988d76b790ebfe6_b.jpg\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"587\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-f89f71bf3015dda03988d76b790ebfe6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;587&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"587\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-f89f71bf3015dda03988d76b790ebfe6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-f89f71bf3015dda03988d76b790ebfe6_b.jpg\"/><figcaption>IEEE Spectrum全面排行</figcaption></figure><p><b>从以上的数据排名，我们可以得出以下结论：</b></p><ol><li>Python 的排名从去年开始就借助人工智能的热潮持续上升，现在它已经成为了第一名，而且也比较稳定。</li><li>排在前四名的语言 Python、C、Java 和 C++都拥有广大的用户群体，并且他们的用户总量也十分相近。</li><li>排名显示Python在C之前，但实际上，在对公司招聘所要求的基本语言分析中，C 语言的需求甚至还要在 Python 之前。</li><li>如果我们从语言用户增速的角度来看的话，Python 仍然是最快的。紧接下来就是 C、C++、Java。</li><li>C# 已经重新进入前五名。不过今年有一个新的发现，没有新语言进入排名，似乎现有语言开始进入巩固代码的阶段，开发者需要时间消化那些为云服务、移动端和大数据应用等创造的新工具。</li></ol><p><b>用人单位更需要什么语言的工程师？</b></p><p>我们可以根据数据得出Java 和 C 是招聘上最受欢迎语言，它们都超过了 Python。</p><p>很大的原因是 Java 能应用于多平台，并且在企业级网页应用和移动端应用开发中占据了极其重要的地位，同时各种互联网公司的产品都需要使用 Java 来实现。</p><p>下面的排名是按照设计自由度排列的，我们可以对这些语言进行定制化的程度越高，排名越靠前。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-bbd0cbf0d8ed3aca10de66047ca0db54_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"667\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-bbd0cbf0d8ed3aca10de66047ca0db54_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;667&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"667\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-bbd0cbf0d8ed3aca10de66047ca0db54_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-bbd0cbf0d8ed3aca10de66047ca0db54_b.jpg\"/></figure><p><b>总结</b></p><p>无论从哪个维度的排序来看，排名前四的语言是Python、Java、C、C++，第五的语言，在不同的情况下有所改变。</p><p>我们可以根据这个灵活的排名榜，来选择自己的入门语言，优先推荐Java，于初学者而言，C\\C++相对来讲是难度要大些、Python专业背景和工作经验更看重一些。</p>", 
            "topic": [
                {
                    "tag": "编程语言", 
                    "tagLink": "https://api.zhihu.com/topics/19552826"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/30529006", 
            "userName": "陆敏技", 
            "userLink": "https://www.zhihu.com/people/eb652569706cbecf6742ba80003bad3f", 
            "upvote": 68, 
            "title": "干货 | 想要成为一个优秀的Java工程师，你应该要走过的技术路线", 
            "content": "<p>大多数人选择Java可能只是因为听说Java前景好、Java比较好找工作、Java语言在TIOBE排行榜上一直位于前三等等之类的原因，那如果你想成为一名合格的优秀的Java工程师的话，究竟该怎样循序渐进的学习，如何系统的学习呢？</p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-d44303db75d322b1ee99b2fcd7ef2c58_b.jpg\" data-caption=\"\" data-rawwidth=\"475\" data-rawheight=\"285\" class=\"origin_image zh-lightbox-thumb\" width=\"475\" data-original=\"https://pic1.zhimg.com/v2-d44303db75d322b1ee99b2fcd7ef2c58_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;475&#39; height=&#39;285&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"475\" data-rawheight=\"285\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"475\" data-original=\"https://pic1.zhimg.com/v2-d44303db75d322b1ee99b2fcd7ef2c58_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-d44303db75d322b1ee99b2fcd7ef2c58_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><h2>入门篇</h2><p>俗话说“师傅领进门，修行在个人”，带你入门，只是程序之路的开始，基础越扎实，后面学习起来相对容易，如果不扎实，很快就会遇到学习的瓶颈，无法前进。那么学习Java究竟应该如何入门呢？</p><p>（1） 首先要深刻理解面向对象的概念，这个非常重要，它贯穿整个Java开发。</p><p>但也并不是说必须完全理解概念才可以去学Java。而是先接触Java的基础知识，如类、属性、方法等。然后在学习的过程中去理解面向对象的概念。</p><p>（2） 在大概理解面向对象的概念后，这时你应该更深入的学一些Java的语法和一些API的使用。</p><p>同时要养成自己良好的编码习惯，如Java语言有对包名、类名、方法名等的命名规范。这个时候要尝试按照规范写代码，同时改掉以前写代码时养成的不良习惯。</p><p>（3） 在熟悉了常用的API及语法后，要去学习I/O和流（Stream）以及多线程编程和网络编程。</p><p>I/O和输入输出流，要熟练掌握。而在这个阶段暂时不需要深入了解多线程编程和网络编程。</p><p>（4） 在系列基础完成之后就需要去接触下数据库和JDBC，对于数据库暂时不需要深入了解，能够创建表、查询表数据即可。然后尝试使用JDBC连接数据库，并对数据库中的数据做CURD操作。</p><p>（5） 在学习Java初期，我建议大家使用文本编辑器来写代码，一是有助于记忆Java中的一些关键字和常用类及方法，二是可以熟悉Java的常用命令。在使用了一段时间的文本编辑器后就可以使用IDE来开发了，使用IDE将使你写代码写得更快，也不容易出错。</p><p>基础是很重要的，虽然简单，但不容忽视。</p><p>基础阶段只推荐一本《Thinking in Java》，</p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-bc547a8cb212869443ec49a80b02f804_b.jpg\" data-caption=\"\" data-rawwidth=\"460\" data-rawheight=\"649\" class=\"origin_image zh-lightbox-thumb\" width=\"460\" data-original=\"https://pic1.zhimg.com/v2-bc547a8cb212869443ec49a80b02f804_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;460&#39; height=&#39;649&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"460\" data-rawheight=\"649\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"460\" data-original=\"https://pic1.zhimg.com/v2-bc547a8cb212869443ec49a80b02f804_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-bc547a8cb212869443ec49a80b02f804_b.jpg\"/></figure><p>如果看到这里，恭喜你，你已经打败了50%的人。接下来我们将讲述进阶需要学习的知识有哪些。</p><h2>中级篇</h2><p>入门后就可以选择主攻方向了，有三个进阶方向可以选择，分别是Web开发（以下简称Web）、Android移动端开发（以下简称Android）和服务器端开发。</p><p>这三个方向都需要有扎实的Java基础。</p><p>（1）Web开发方向，主要有B/S应用开发、微信开发、支付宝服务号等。</p><p>（2）Android开发，主攻移动端应用的开发。移动端包括搭载Android系统的手机、平板、电视盒子等设备。</p><p>（3）服务器端开发，主要是通讯服务器的开发，如游戏服务器、腾讯的QQ服务器等。Web和服务器端开发，加起来也叫做企业级开发，即JavaEE开发。<br/><br/></p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-335d5c0e200ef8784e7326413423d73f_b.jpg\" data-caption=\"\" data-rawwidth=\"554\" data-rawheight=\"368\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic4.zhimg.com/v2-335d5c0e200ef8784e7326413423d73f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;554&#39; height=&#39;368&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"554\" data-rawheight=\"368\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic4.zhimg.com/v2-335d5c0e200ef8784e7326413423d73f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-335d5c0e200ef8784e7326413423d73f_b.jpg\"/></figure><p>入门以后，就可以在服务器端开发方向发展，但是还是建议学习下Java中级的内容，这些内容也有助于你今后在通讯开发的路上走得相对轻松一些。</p><p>接下来我们主要讨论Web方向，所以这里我们只讨论Web方向。</p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-6abb7f09fe92aca8ce049e54dcb4af7c_b.jpg\" data-caption=\"\" data-rawwidth=\"492\" data-rawheight=\"443\" class=\"origin_image zh-lightbox-thumb\" width=\"492\" data-original=\"https://pic1.zhimg.com/v2-6abb7f09fe92aca8ce049e54dcb4af7c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;492&#39; height=&#39;443&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"492\" data-rawheight=\"443\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"492\" data-original=\"https://pic1.zhimg.com/v2-6abb7f09fe92aca8ce049e54dcb4af7c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-6abb7f09fe92aca8ce049e54dcb4af7c_b.jpg\"/></figure><p>在中级阶段你接触的知识面将更广，下面是要继续掌握的知识。</p><p>（1） 先需要学习HTML和CSS，然后再学习JS以及jQuery。</p><p>（2） 在有一定基础之后就可以开始学习JSP和Servlet了，重点学习下JSP的内置对象及EL表达式，并试着去做一些页面。</p><p>（3） 然后学习下Ajax，要能够熟练的使用JSON和XML来做数据交互。</p><p>以上内容学习完之后Java的基础部分就算是基本掌握了，下面就该学习一些框架了。</p><p>（1） 建议先从Spring学起，Spring将成为你今后开发项目的核心框架。</p><p>Spring也是现在项目中最常用的框架。可以深入的学习，试着去理解Spring的一些实现原理，这将有助于你更好的使用Spring。</p><p>（2） 学完Spring之后可以学习下ORM框架，比如hibernate和MyBatis，这些相对于Spring来说要简单的多。主要学习与Spring的整合和Spring中的事务管理。一定要深入的了解数据库事务，这将对你今后的项目开发非常有帮助。</p><p>（3） 最后我们来说控制层的学习，这里我建议大家重点学习SpringMVC。因为SpringMVC是目前使用最为广泛的控制层，而且简单易学，已经有了要替代Struts的趋势了。但是Struts还是要学习下，毕竟还有一些公司在用，这将为你找工作增加一点筹码。</p><p>在学习这些内容的过程中一定要学习下代码管理工具SVN和Git，目前SVN在企业中用的较多，而开源社区一般都是用的Git。</p><p>有了JSP基础和掌握了框架的使用后就可以出去找工作了，在工作的实践过程中你将对这些知识运用，从而掌握的更加牢固。</p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-79b8d94ff48c2c2534c2c4b28023456d_b.jpg\" data-caption=\"\" data-rawwidth=\"429\" data-rawheight=\"264\" class=\"origin_image zh-lightbox-thumb\" width=\"429\" data-original=\"https://pic2.zhimg.com/v2-79b8d94ff48c2c2534c2c4b28023456d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;429&#39; height=&#39;264&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-rawwidth=\"429\" data-rawheight=\"264\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"429\" data-original=\"https://pic2.zhimg.com/v2-79b8d94ff48c2c2534c2c4b28023456d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-79b8d94ff48c2c2534c2c4b28023456d_b.jpg\"/></figure><p>也可能在工作过程中会遇到你没有学过的技术，不要怕，有了之前的基础你将很快掌握这些新的技术，加入工作的第一年将是你进步最快的一年。</p><p>而加入工作之后你可能也不会有太多系统的时间来学习，这时候一定要约束好自己。不能忘记学习，学习是最好的进步方式。</p><p>技术性的文章比较枯燥，如果你看到这里了恭喜你，你已经打败了70%的人。</p><p>接下来我们来讲述高级篇的学习</p><h2>高级篇</h2><p>当我们参加了工作之后，会逐渐接触更多的技术。如果有机会的话，就多学习些技术，不求精通，但求会用，并且知道这项技术能够解决什么问题。</p><p>在项目中参与设计文档的编写，能够为自己的项目选择合适的框架，并且能用自己学到的技术去解决项目中遇到的难题。这时候根据项目和公司的差异多应用的技术也不尽相同，但是日志框架、项目构建、单元测试、缓存、集群、负责均衡、SOAP等是一定要掌握的。这些是在大型项目中比较常用的技术。然后可以根据自己的兴趣及业余时间去学习自己感兴趣的技术。</p><p><b>架构师之路</b></p><p>要成为一名优秀的架构师首先一定是一名卓越的程序员，架构设计不仅仅是理论，它是在实践中产生的经验和结果。</p><p>架构师要有灵敏的嗅觉，能够看清未来技术的发展方向，应当避免在项目中使用已过时的技术或没有社区支持的技术。</p><p><b>作为一名架构师要掌握以下技能：</b></p><p>SOA：在微服务横行的年代，这项本领是必不可少的。</p><p>设计模式：这将有助于你设计出更加优雅的程序。</p><p>架构模式：如果说设计模式是让我们更优雅的编码，架构模式就是让我们更优雅的组织模块。</p><p>分布式架构：追求高并发、可扩展、高可用的软件平台；</p><p>数据与传输安全：互联网是邪恶的，请保护好你的数据和网络平台；</p><p>至此大概就是程序员的所要走的整条路，如果你是想成为优秀程序员的人，看到了这里，那你已经打败了99%的人，剩下的就是实践，马上开始去找寻学习的资料一步一步开始从小白到架构的成长之路。</p><h2>推荐书目</h2><p>作为补充，我们给出各个阶段那些经典的著作。</p><p>基础阶段：《Thinking in Java》，别说看不懂，难。如果这都看不懂，那就根本还没算入行啊。</p><p>Java升级：《Effective Java》、《深入理解Java 虚拟机》、《Java性能优化权威指南》</p><p>WEB阶段：《http权威指南》、《Java Web 高级编程》</p><p>开发框架：《Spring揭秘》、其余框架的知识，直接看在线文档或者API</p><p>数据库：《MySQL 必知必会》</p><p>架构设计：《企业应用架构模式 》和《重构 改善既有代码的设计重构》、《领域驱动设计：软件核心复杂性应对之道》、</p><p>方法论：《单元测试之道》、《敏捷开发-敏捷软件开发：原则、模式与实践》、《测试驱动开发的艺术》、《编程珠玑》</p><p>设计模式：《设计模式：可复用面向对象软件的基础》</p><p>WEB安全：《白帽子讲Web安全》</p><p>WEB架构：《大型网站技术架构：核心原理与案例分析》</p><h2>知识点树</h2><p>最后，我们花了点时间整理了一份我们最课程的JavaEE的知识点树，按照这份知识点进行学习，那么，成为中高级Java程序员已经完全没有问题了。注意，其中每个Chapter大概需要一天左右学习消化完毕。</p><p>如下：</p><p><b>第一阶段JavaSE核心技术</b></p><p> Chapter01</p><p>Java概述</p><p> 开学典礼与计算机基础、Java编程语言概述、Java编程语言发展简史、Java编程语言主要特征、Java技术体系平台、Java核心机制与JVM运行原理、搭建 Java开发环境与JDK 的安装与配置、Java程序分类、第一个 Java 应用程序HelloWorld、Java 程序文件、编译和执行、Java代码的风格与注释</p><p> Chapter02</p><p>Java程序基本语法</p><p> Java标识符与关键字、变量的声明与使用、变量内存空间分配与原理、进制与位运算、变量的数据类型、数据类型之间的转换、变量的运算与作用域</p><p> Chapter03</p><p>流程控制之选择结构</p><p> 顺序结构概述、分支结构之if 分支结构、分支结构之switch 选择结构与相关规则</p><p> Chapter04</p><p>流程控制之循环结构（一）</p><p> 循环结构之for 循环、循环结构之while 循环、do-while 循环语句</p><p> Chapter05</p><p>跳转语句与流程控制语句的综合应用</p><p> 跳转语句的使用、流程控制语句场景的选择、流程控制语句的综合练习</p><p> Chapter06</p><p>Java中方法的声明与调用</p><p> 方法的声明与使用、方法调用的过程分析、调用其它类的方法、参数的值传递、方法的重载、可变个数参数的方法以及命令行参数、阶段案例：猜拳游戏与万年历或其他</p><p> Chapter07</p><p>Java数组</p><p> 数组概述、数组语法定义、数组元素操作、数组元素排序、数组元素查找、数组的默认初始化与内存分析、数组综合应用数独与布局算法、数组作为方法参数和返回值类型</p><p> Chapter08</p><p>面向对象编程概述</p><p> 面向对象编程思想概述、类和对象概念及关系、类的语法定义、对象的属性和方法、类的实例化</p><p> Chapter09</p><p>面向对象编程进阶</p><p> 构造方法、this关键字、类的封装性、static关键字、动态块与静态块、Java对象的内存管理与垃圾回收、单例模式</p><p> Chapter10</p><p>类的继承与多态</p><p> 对象的关联关系、继承的基本概念、类继承的语法实现、final关键字与super关键字、继承的优缺点、继承中类中各个成员特点、方法重写、继承的综合案例</p><p> Chapter11</p><p>多态性</p><p> 多态概述、多态实现、对象类型的转换、instanceof 运算符、抽象类、面向对象综合案例</p><p> Chapter12</p><p>内部类、接口和包</p><p> 接口、包 (package) 的管理与作用、类成员访问权限的讨论、内部类、Factory Method 设计模式、阶段测试（安排在自习时间进行）</p><p> Chapter13</p><p>异常处理</p><p> 异常的概念与原理、异常的结构体系、运行时异常与非运行时异常、异常的处理、try-catch 示例、使用finally回收资源、throw与throws关键字、自定义异常、实战中自定义异常的应用解析、异常链与异常信息的访问</p><p> Chapter14</p><p>内部类与Java API（一）</p><p> 字符串类概述、String 类的使用与内存原理、String 类的算法分析、StringBuffer 与 StringBuilder</p><p> Chapter15</p><p>Java API（二）</p><p> Object类详解</p><p>2基本数据类型包装类、装箱与拆箱、System类、Date类、SimpleDateFormat类、Calendar类、Math类、BigInteger类与BigDecimal类</p><p> Chapter16</p><p>集合与泛型（一）</p><p> 集合框架概述、Collection<br/>  系列集合层次结构、Map集合的层次结构、Iterator 与 ListIterator、List 系列集合与Set系列集合</p><p> Chapter17</p><p>集合与泛型（二）</p><p> Map 系列集合与数据结构分析、HashMap与Hashtable、TreeMap、Properties、Collections 工具类、Arrays工具类</p><p> Chapter18</p><p>集合与泛型（三）</p><p> 集合中使用泛型、自定义泛型类、泛型接口、泛型方法、泛型中使用通配符</p><p> Chapter19</p><p>Java IO流（一）</p><p> 流的概念、IO流结构体系、IO流原理分析、File类详解</p><p> Chapter20</p><p>Java IO流（二）</p><p> IO流的分类、字节IO流操作、字节IO流的装饰模式与缓冲流、文件的复制与性能对比、对象流实现对象的序列化与反序列化</p><p> Chapter21</p><p>Java IO流（三）</p><p> 控制台IO的标准输入流与标准输出流、字符IO流操作、桥接器与流的转换、RandomAccessFile 类、IO流综合案例：学生管理系统</p><p> Chapter22</p><p>Java多线程（一）</p><p> 线程与进程概述、继承 Thread<br/>  类与实现 Runnable 接口创建线程、线程的启动、线程的生命周期、用户线程与守护线程、线程的调度、线程的优先级、线程通信</p><p> Chapter23</p><p>Java多线程（二）</p><p> 多线程的安全问题与解决办法、线程的同步、线程同步案例——票务业务实现、互斥锁、线程的死锁问题、生产者与消费者案例、TheadLocal与线程间数据共享、线程池</p><p> Chapter24</p><p>网络编程</p><p> 网络编程基础知识、网络编程的主要问题、如何实现网络中主机的相互通讯、网络通讯要素、网络通信协议、TCP/IP参考模型(或TCP/IP协议)、数据的封装与拆封、InetAddress 类解析、TCP 协议与UDP协议、Socket<br/>  的TCP编程、了解UDP协议的网络编程、URL与URI详解、URL编程针对HTTP协议的URLConnection、URLDecoder与URLEncoder类、5、项目案例：简易版的网络聊天室</p><p> Chapter25</p><p>Java 反射与代理（一）</p><p> Java 反射机制的研究与应用、反射的原理分析、JVM 与类、类的加载、初始化、类初始化的时机、类加载器 ClassLoader简介、类加载机制、创建并使用自定义的类加载器、Class类详解、获取 Class 实例的方式、从 Class 中获取信息</p><p> Chapter26</p><p>Java 反射与代理（二）</p><p> Proxy 和<br/>  InvocationHandler 创建动态代理、动态代理和AOP(Aspect Oriented<br/>  Programming)、泛型和Class类、使用反射来获取泛型信息</p><p> Chapter27</p><p>Java注解</p><p> JAVA 注解概述、元数据的作用 、元注解 、基本内置注解 、自定义注解 、注解的高级应用<br/>  、限制注解的使用范围 、注解保持性策略 、文档化功能 、标注继承 、读取注解信息的方法</p><p> Chapter28</p><p>Java8 新特性</p><p> Lambda 表达式与Lambda表达式的参数传递、类型推断、Java8核心函数式接口、方法引用与构造器引用、Streams与Streams操作的核心步骤、Optional、Date/Time API (JSR 310)、JavaScript引擎Nashorn、并行（parallel）数组、并发（Concurrency）</p><p> Chapter29</p><p>Java核心技术总复习</p><p> 知识点归纳串讲、重点难点面试题串讲</p><p> Chapter30</p><p>项目和结业考试</p><p> JAVASE综合项目实训：基于文件版的ATM实现、JavaSE阶段结业考试</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>第二阶段：数据库技术</b></p><p> Chapter01</p><p>Mysql 基础</p><p> Mysql的安装和使用、图解Mysql程序结构、Mysql服务器的配置、Mysql 客户端使用、用户权限管理、Mysql数据库的使用</p><p> Chapter02</p><p>SQL基础</p><p> SQL概述与应用、创建和管理表、约束、数据查询与分页</p><p> Chapter03</p><p>数据操作与事务</p><p> 数据添加、数据修改、数据删除、事务与事务管理</p><p> Chapter04</p><p>Mysql存储过程、函数与触发器</p><p> 存储过程、系统函数与自定义函数、触发器</p><p> Chapter05</p><p>JDBC</p><p> JDBC概述、获取数据库连接、数据库连接池C3P0<br/>  与 DBCP、使用JDBC 完成数据库CRUD操作、批量处理与元数据</p><p> Chapter06</p><p>DBUtils</p><p> 使用QueryRunner、可插拔式结果集处理、批量处理、大数据结果集处理、自定义结果集处理、利用DBUtils编写通用 DAO</p><p> Chapter07</p><p>JDBC综合案例图书管理系统</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>第三阶段：JavaWeb开发</b></p><p> Chapter01</p><p>HTML</p><p> B/S架构、HTML标记详解、HTML DOM</p><p> Chapter02</p><p>CSS</p><p> CSS选择器、常用样式、盒子模型与布局</p><p> Chapter03</p><p>HTML5与CSS3</p><p> HTML5新特性、CSS3新特性</p><p> Chapter04</p><p>JavaScript基础</p><p> JavaScript基本语法、JavaScript流程控制、数组、函数、JavaScript内置对象的使用与面向对象</p><p> Chapter05</p><p>JavaScript事件与事件处理</p><p> JavaScript事件机制（绑定/触发）、JavaScript事件冒泡、JavaScript DOM模型与BOM模型、表单的JavaScript验证</p><p> Chapter06</p><p>XML概述</p><p> XML用途、XML文档结构、XML基本语法、格式良好的XML、格式有效的XML、DOM与SAX解析、DOM4j文档操作</p><p> Chapter07</p><p>Web服务器基础</p><p> TCP/IP网络协议简介、HTTP协议、Tomcat服务器搭建、Tomcat目录结构解析、Tomcat端口配置、Tomcat启动与停止、Tomcat与Eclipse整合、Web工程创建与部署、Servlet概念与作用、Servlet创建、配置与访问</p><p> Chapter08</p><p>Servlet详解</p><p> Servlet生命周期、HttpServletRequest与HttpServletResponse、中文乱码解决方案、ServletConfig与ServletContext、重定向与转发、项目路径问题</p><p> Chapter09</p><p>Cookie与Session</p><p> Cookie机制、Cookie创建与使用、Session原理、Session失效、URL重写、Token令牌应用</p><p> Chapter10</p><p>JSP基本语法</p><p> JSP语法、JSP原理、JSP脚本片段与表达式、JSP声明与指令、JSP九大内置对象、域对象使用、JSP指令与动作标签</p><p> Chapter11</p><p>EL</p><p> EL表达式简介、EL使用、EL取值原理、EL的11大隐含对象、EL2.2与3.0规范、EL逻辑运算、函数库深入</p><p> Chapter12</p><p>JSTL</p><p> JSTL简介、JSTL-核心标签库、JSTL-函数标签库、JSTL-fmt标签库、自定义标签库使用、自定义标签库原理、JSP两种开发模式</p><p> Chapter13~Chapter15</p><p>HR管理系统</p><p> Chapter16</p><p>Filter与Listener</p><p> Filter原理、Filter声明周期、Filter链、Filter登录验证、Filter事务控制、Listener原理、八大监听器使用、Listener监听在线用户</p><p> Chapter17</p><p>Servlet3.0与文件上传下载</p><p> Servlet3.0新特性、文件上传原理、commons-io与commons-fileupload、文件上传参数控制、文件上传路径浏览器兼容性解决、文件下载原理、文件下载响应头、文件下载中文乱码与浏览器兼容性</p><p> Chapter18</p><p>AJAX与JSON</p><p> AJAX技术概述、Ajax原理与XMLHttpRequest使用、Get请求与Post请求、JSON语法、Java<br/>  JSON转换、JavaScript JSON转换</p><p> Chapter19</p><p>JQuery基础</p><p> jQuery快速入门、jQuery语法详解、jQuery对象/JavaScript对象转换、jQuery选择器、jQuery事件与事件冒泡、事件合成</p><p> Chapter20</p><p>Jquery高级</p><p> jQuery与CSS、jQuery动画特效、jQuery操作数组、jQuery 基本AJAX方法、底层$.ajax使用</p><p> Chapter21</p><p>Bootstrap</p><p> bootstrap快速使用、栅格系统、表单、表格、按钮、图片、下拉菜单、按钮组使用、导航条、分页、进度条</p><p> Chapter22~Chapter26</p><p>电商项目实战</p><p> Chapter27</p><p>项目验收阶段测试</p><p> Chapter28</p><p>数据库概述与Oracle数据库的安装和卸载</p><p> 数据库概述、概念数据模型与物理数据模型、关系型数据库的三范式、Oracle数据库的安装、Oracle数据库的卸载</p><p> Chapter29</p><p>Oracle数据库的管理与开发基础</p><p> 用户与权限、Oracle网络配置、Oracle客户端工具的使用、Oracle基本类型、Oracle表与约束</p><p> Chapter30</p><p>Oracle数据库的查询</p><p> SQL概述、基本查询、条件查询与排序查询、查询过程中使用Oracle单行函数、Oracle分组查询</p><p> Chapter31</p><p>Oracle多表查询与子查询</p><p> 内连接等值连接查询、内连接不等值连接查询、内连接自连接与自然连接查询、左外连接查询与右外连接查询、交叉连接查询、单行子查询与多行子查询、相关子查询、Oracle分页查询</p><p> Chapter32</p><p>Oracle数据增删改与事务</p><p> 数据添加、数据修改、数据删除、事务与事务控制、其它常用数据库对象</p><p> Chapter33</p><p>PL/SQL编程</p><p> PL/SQL编程概述、数据类型、匿名块、变量常量的声明与初始化、流程控制、游标、存储过程与函数、程序包与触发器</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>第四阶段：流行框架与新技术</b></p><p> Chapter01</p><p>Struts2 框架</p><p> MVC与与流行MVC框架概述、Struts2概述、Struts2原理与流程简析、Struts2框架搭建、Struts2获取参数数据、Struts2范围对象与ServletAPI的使用</p><p> Chapter02</p><p>Struts的详细配置</p><p> Struts2合法的配置文件、Struts2 常量配置、Struts2 包配置、Struts2 Action配置、Struts2 Result配置、Struts2 异常处理</p><p> Chapter03</p><p>Struts的OGNL与值栈</p><p> OGNL概述与使用、值栈与OGNL与常用标签</p><p> Chapter04</p><p>Struts2深入</p><p> Struts2拦截器概述、拦截器创建与拦截器配置、Struts2与Ajax、文件上传与下载、Struts2类型转换与自定义类型转换</p><p> Chapter05</p><p>Hibernate入门</p><p> Hibernate环境搭建与配置、hibernate.cfg.xml与主键生成策略、Session实现CRUD核心方法与事务、Hibernate对象的三种状态</p><p> Chapter06</p><p>Hibernate进阶</p><p> ORM映射：外键一对一、外键关联一对多单向/双向映射、ORM映射：外键多对多单向/双向映射</p><p> Chapter07</p><p>Hibernate查询与缓存</p><p> HQL查询、QBC查询、标准SQL查询、Hibernate缓存机制</p><p> Chapter08</p><p>Spring框架入门</p><p> Spring框架概述、SpringIOC与DI机制、Spring配置式组件管理、Spring注解式自动装配</p><p> Chapter09</p><p>SpringAOP</p><p> SpringAOP与动态代理、SpringJDBC使用、Spring声明式事务、Spring单元测试</p><p> Chapter10~Chapter15</p><p>SSH整合与项目实战：IT公司项目管理系统</p><p> Spring、Struts2、Hibernate整合、软件公司项目管理平台实现</p><p> Chapter16</p><p>SpringMVC</p><p> SpringMVC配置与运行流程、SpringMVC数据绑定与数据转换、模型处理与@ModelAttribute、表单标签与静态资源处理</p><p> Chapter17</p><p>SpringMVC进阶</p><p> 基于RestFul风格的CRUD原理与实现、拦截器与异常、Ajax与文件上传下载、数据格式化与JSR303数据校验、整合与父子容器</p><p> Chapter18</p><p>MyBatis入门</p><p> MyBatis配置与Mybatis的运行原理、MyBatis全局配置文件、MyBatis映射文件、Mybatis数据CRUD</p><p> Chapter19</p><p>MyBatis进阶</p><p> 关联查询，动态sql、分页插件与存储过程调用、MyBatis缓存机制与整合ehcache、MyBatis逆向工程、MyBatis、Spring、SpringMVC整合</p><p> Chapter20</p><p>Maven</p><p> Maven环境搭建、Maven构建与自动化构建、本地仓库与中央仓库、maven创建web工程、pom.xml、依赖管理、坐标、依赖、生命周期等、eclipse下的maven使用、继承与聚合、maven构建SSH/SSM应用、自动部署与持续集成与持续部署</p><p> Chapter21</p><p>SVN</p><p> SVN简介、SVN服务器搭建、SVN创建版本库、Eclipse整合svn插件、使用SVN更新提交、SVN仓库分析、SVN协同修改与冲突解决、SVN权限管理、TortoiseSVN</p><p> Chapter22</p><p>JPA技术（了解）</p><p> JPA技术体系、JPA注解、JPA相关API、JPA映射、JPQL、Spring整合JPA</p><p> Chapter23</p><p>SpringData技术（了解）</p><p> SpringData快速入门、SpringData_Repository接口、Repository查询规范、@Query与@Modifying、CrudRepository、PagingAndSortingRepository、JpaRepository、JpaSpecificationExecutor、自定义Repository</p><p> Chapter24</p><p>WebService</p><p> WebService简介、WebService主流框架、cxf的使用、SOAP协议、WSDL讲解、JAX-WS、WebService与Spring整合、支付接口原理</p><p> Chapter25</p><p>Linux基础</p><p> Linux系统-基础、Linux在VMware下的安装、Linux网络基础、Linux基本命令详解</p><p> Chapter26</p><p>Linux按照其它软件</p><p> Linux下Java环境的搭建、Linux下Tomcat安装和配置、Linux下 Oracle/MySQL 安装与配置</p><p> Chapter27</p><p>反向代理与负载均衡</p><p> 代理与负载均衡概述、Nginx概述、Windows下Nginx的安装与配置、Linux下Nginx的安装与配置</p><p> Chapter28</p><p>Redis入门</p><p> NoSQL与Redis入门、Redis/memcache/MongDB对比、Redis安装与启动、Redis五大数据类型和基本操作命令、Jedis、Redis事务控制</p><p> Chapter29</p><p>Redis进阶</p><p> Redis总体配置Redis.conf、Redis持久化（RDB和AOF）、Redis发布和订阅、Redis集群与Redis（Master/Slave）主从复制、Redis与Spring整合、Redis与数据缓存</p><p> Chapter30</p><p>Git与Git Hub</p><p> Git安装配置、Git本地库搭建、Git常用操作命令、Github注册与配置、Github与Git协同办公、TortoiseGit安装配置、Egit操作push/pull，、Git工作流、集中式与GitFlow与Forking</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>第五阶段：互联网新技术与项目实战“商用车金融超市系统”的实现</b></p><p> Chapter01</p><p>架构搭建</p><p> 项目的背景介绍、金融超市的系统架构功能与架构演变、使用maven搭建工程并且启用Tomcat插件、Svn的使用。</p><p> Chapter02</p><p>服务中间件Dubbo与资源管理Zookeeper</p><p> 分布式服务框架简介、Dubbo主要核心部件、Dubbo-RPC基本功能、Dubbo-高级功能、Linux 上 Dubbo 的部署、Zookeeper简介及组件、Zookeeper的工作流程，leader select过程、搭建Zookeeper为分布搭建、集群搭建、Zookeeper Cli、Zookeeper实现netty分布式架构的高可用</p><p> Chapter03</p><p>分布式架构与SSM整合</p><p> SSM框架整合与测试、SSM分布式架构、金融产品列表查询功能实现</p><p> Chapter04</p><p>金融产品维护模块实现</p><p> 金融产品类目选择、图片服务器FastDFS与图片上传功能实现、富文本编辑器的使用KindEditor、金融产品添加功能完成</p><p> Chapter05</p><p>缓存功能的实现</p><p> Redis服务器搭建、向业务逻辑中添加缓存。、使用redis做缓存、缓存同步、Solr服务器安装</p><p> Chapter06</p><p>搜索功能实现</p><p> Solrj使用测试、把数据库中的数据导入索引库、搜索功能的实现</p><p> Chapter07</p><p>消息队列实现商品信息同步</p><p> 什么是MQ、MQ的应用场景、ActiveMQ的使用方法、使用消息队列实现商品同步</p><p> Chapter08</p><p>页面静态化实现</p><p> 金融产品详情页面展示，动态展示<br/>  jsp + redis、使用freemarker实现网页静态化、ActiveMq同步生成静态网页</p><p> Chapter09</p><p>SSO单点登录实现</p><p> Nginx回顾、SSO系统工程搭建、SSO注册与登录功能实现、通过token获得用户信息、Ajax跨域请求（jsonp）</p><p> Chapter10</p><p>金融产品购物车实现</p><p> 金融产品购物车实现、订单确认页面展示、订单系统完成</p><p> Chapter11</p><p>系统部署与项目总结</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>第六阶段：项目实战：项目启动</b></p><p>第一阶段（1-2天）</p><p>开发制度制定、项目组成立、需求讲解</p><p>第二阶段（7到15天）：开发</p><p>核心模块开发、单元测试</p><p>第三阶段（1到2天）</p><p>测试验收：结项</p><p></p><p></p><p></p>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }, 
                {
                    "tag": "IT 培训", 
                    "tagLink": "https://api.zhihu.com/topics/19593700"
                }
            ], 
            "comments": [
                {
                    "userName": "RHINE", 
                    "userLink": "https://www.zhihu.com/people/20e6797ca178fa56cac81c663daeef53", 
                    "content": "深入浅出，耐心细致。陆老师加油。(´･ω･`)", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "Bob Yang", 
                    "userLink": "https://www.zhihu.com/people/c6a35f1a94233cf6fb40fe0823b690ef", 
                    "content": "哎呀，看得我就想到培训班疯狂学习4个月", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "白衣如故", 
                    "userLink": "https://www.zhihu.com/people/81539d5ea7af316575dd8b2dfd5a00b6", 
                    "content": "陆老师加油", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "知乎用户", 
                    "userLink": "https://www.zhihu.com/people/0", 
                    "content": "<p>干货，收藏了</p>", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "沙河河草", 
                    "userLink": "https://www.zhihu.com/people/e752b2fd6d8bf29e326c15c4fdbf131b", 
                    "content": "感谢感谢~", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "幸郁羌", 
                    "userLink": "https://www.zhihu.com/people/7e82e2246c920831c0df166b1c38090b", 
                    "content": "然后可视化框架开发效率高，代码量少，结果敲代码能力下降了，悲惨啊", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "wangtianhao", 
                    "userLink": "https://www.zhihu.com/people/f0193d8163b0db53c90736157da08ef9", 
                    "content": "感谢", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "玉成", 
                    "userLink": "https://www.zhihu.com/people/370310345c25f5798075f0fcfdcef5d6", 
                    "content": "<p>路线很详细受教了！</p>", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/28949974", 
            "userName": "陆敏技", 
            "userLink": "https://www.zhihu.com/people/eb652569706cbecf6742ba80003bad3f", 
            "upvote": 3, 
            "title": "阿里巴巴笔试题（基础版），你做对了吗？", 
            "content": "<p>我们以阿里巴巴招聘为例，大家可以作为学习的参考，尽早提升自己的能力。</p><p>阿里巴巴每年会结合业务及组织发展需求设定校招招聘岗位，在招聘上对不同的职位类别的具体要求各不相同，每年技术类职位招聘量是最大的，主要包括Java开发工程师、测试开发工程师、算法工程师、数据研发工程师、系统工程师等等。阿里巴巴公司大量使用Java这种编程语言。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-f1d14a4bad61d8b1e063b900fd8ab369_b.jpg\" data-rawwidth=\"640\" data-rawheight=\"453\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-f1d14a4bad61d8b1e063b900fd8ab369_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;453&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"640\" data-rawheight=\"453\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-f1d14a4bad61d8b1e063b900fd8ab369_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f1d14a4bad61d8b1e063b900fd8ab369_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p><b>今天主要是计算机科学的部分内容的考核。</b></p><p>其中计算机科学包含较多分支领域学科，但在商业公司鄙视考核阶段，主要还是关注公共基础部分，概要分类如下：</p><p>以软件工程师为目标角度进行考核。软件工程师需要有较强的实践应用能力，所以对这些基础知识的考核更多的是采用虚拟或实际的应用背景进行场景化命题。</p><p>对计算机科学基础知识的考核，目的是甄别候选人对计算机基础知识的掌握程度与应用能力。</p><p><b>将按照5各方面组织试题分析：</b></p><ul><li>计算机网络（安全）；</li><li>计算机组成原理；</li><li>操作系统和分布式（并行、并发）；</li><li>算法和数据结构；</li><li>编程语言。</li></ul><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-c8f9e3bfc29e94bd1aae6a07fa19f8ef_b.jpg\" data-rawwidth=\"640\" data-rawheight=\"426\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-c8f9e3bfc29e94bd1aae6a07fa19f8ef_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;426&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"640\" data-rawheight=\"426\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-c8f9e3bfc29e94bd1aae6a07fa19f8ef_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-c8f9e3bfc29e94bd1aae6a07fa19f8ef_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>下面都是难度较低的练习题，练练手吧，同学们~~</p><p><b>计算机网络</b></p><p>1、使用一辆卡车运输n块装满数据的1TB硬盘，以80km/h速度行驶1000km将数据运送到目的地，卡车至少运送____块硬盘才能使传输速率超过1000Gbit/s。</p><p>A、2000 B、3000 C、4000</p><p>D、5000 E、6000 F、7000</p><p>2、阿里巴巴有两个相距1500km的机房A和B。现有100GB数据需要通过一条FTP连接在100s内从A传输到B。已知FTP连接建立在TCP协议之上，而TCP协议通过ACK来确认每个数据包是否正确传送。网络信号传输速率为2*100000km/s，假设机房间宽带足够高，那么A节点的发送缓冲区最小可以设置为____。</p><p>A、6MB B、12MB C、18MB D、24MB</p><p><b>计算机组成原理</b></p><p>3、十进制数值1.5625的二进制表示是____。</p><p>A、101.1001 B、0.001</p><p>C、101.111 D、1.1001</p><p>4、将下列存储设备按访问速度从低到高排序：内存、磁盘、SSD、寄存器。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-66402ca249bff8d263ee064d7c7a69f3_b.jpg\" data-rawwidth=\"640\" data-rawheight=\"426\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-66402ca249bff8d263ee064d7c7a69f3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;426&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"640\" data-rawheight=\"426\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-66402ca249bff8d263ee064d7c7a69f3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-66402ca249bff8d263ee064d7c7a69f3_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p><b>操作系统和分布式</b></p><p>5、Linux系统中某个可执行文件属于root并且有setuid，当一个普通用户mike运行这个程序时，产生的进程的有效用户和实际用户分别是____。</p><p>A、root mike B、root root C、mike root</p><p>D、mike mike E、deamon mike F、mike deamon</p><p>6、手机号的前7位能唯一确定号码归属地。如果现在有2000万手机号码，需要设计一个应用查询给定手机号码的归属地，那么能满足需求的最高效存储方案是____。</p><p>A、hashtable B、B+树</p><p>C、数组 D、分布式NoSQL数据库</p><p><b>算法和数据结构</b></p><p>7、求n个数中的最大值和最小值，最少的比较次数是____。</p><p>A、4n/3 B、2n-2 C、n-1 D、3n/2</p><p>8、数据表中有1000000个元素，如果仅要求求出其中最大的10个元素，采用____算法比较好。</p><p>A、堆排序 B、希尔排序 C、快速排序 D、直接选择排序</p><p><b>编程语言</b></p><p>9、你认为可以用来编写一个C语言编译器的程序设计语言是____。</p><p>A、汇编语言 B、C语言 C、Visual Basic语言 D、以上皆可</p><p>10、执行一下代码，不可能的输出结果是____。</p><p>Void main()</p><p>{</p><p>pit_t pid;</p><p>pit=fork();</p><p>if(pid&lt;0)</p><p>printf(“-1”);</p><p>else if (pid==0)</p><p>printf(“0”);</p><p>else</p><p>printf(“1”);</p><p>}</p><p>A、0 B、-1 C、0 1 D、1 0</p><p>你做对了几道呢？</p><p></p>", 
            "topic": [
                {
                    "tag": "IT 行业", 
                    "tagLink": "https://api.zhihu.com/topics/19587634"
                }, 
                {
                    "tag": "Java 编程", 
                    "tagLink": "https://api.zhihu.com/topics/19582744"
                }, 
                {
                    "tag": "IT 培训", 
                    "tagLink": "https://api.zhihu.com/topics/19593700"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/28877129", 
            "userName": "陆敏技", 
            "userLink": "https://www.zhihu.com/people/eb652569706cbecf6742ba80003bad3f", 
            "upvote": 0, 
            "title": "历史首位程序员，成功预言150年后的世界，居然还是位女士", 
            "content": "<p>当今互联网技术快速发展，但我们甚少听到女性在科技圈的发声，却越来越多听到对女性的负面评价：抗压能力差、很难独当一面、代码水平一般等。</p><p>更甚者有企业在招聘时暗文规定：不招女程序员，或者给她们开出低的薪资。难道女性在技术界真的不如男性吗？然而翻开科技界的历史，会惊奇地发现女性在其中的地位和能力从来不亚于男性。</p><p>今天小编带你们翻开历史，去领略一下世界上首位程序员的风采。</p><p><b>你知道阿达·洛芙莱斯（Ada Lovelace）是谁吗？</b></p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-3fd529c1b24abd866acfec104b55c246_b.jpg\" data-rawwidth=\"160\" data-rawheight=\"252\" class=\"content_image\" width=\"160\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;160&#39; height=&#39;252&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"160\" data-rawheight=\"252\" class=\"content_image lazy\" width=\"160\" data-actualsrc=\"https://pic3.zhimg.com/v2-3fd529c1b24abd866acfec104b55c246_b.jpg\"/></figure><p>或许在国内你根本没有听说过这个人，在科技界也从没见过关于这个人的任何信息，你从不曾听说过的她，不仅仅是世界上首位女程序员，还是世界上首位程序员。这位伟大的女性为计算程序拟定“算法”，写作的第一份“程序设计流程图”，被珍视为“第一位给计算机写程序的人”。</p><p>在国外，有为纪念她而专门建立的网站，纪念日存在的意义在于鼓励更多的女性投身数学和计算机编程领域。</p><p><b>一、“程序员鼻祖简介”</b></p><p>奥古斯塔·阿达·金，勒芙蕾丝伯爵夫人（Augusta Ada King, Countess of Lovelace，1815年12月10日－1852年11月27日），原名奥古斯塔·阿达·拜伦（Augusta Ada Byron），通称阿达·洛芙莱斯（Ada Lovelace），是著名英国诗人拜伦之女，数学家。计算机程序创始人，建立了循环和子程序概念。</p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-c38ac465eeeac3393441cf995f1f122e_b.jpg\" data-rawwidth=\"397\" data-rawheight=\"336\" class=\"content_image\" width=\"397\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;397&#39; height=&#39;336&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"397\" data-rawheight=\"336\" class=\"content_image lazy\" width=\"397\" data-actualsrc=\"https://pic3.zhimg.com/v2-c38ac465eeeac3393441cf995f1f122e_b.jpg\"/></figure><p>在1834年，阿达的朋友——英国数学家、发明家兼机械工程师查尔斯·巴贝其（Charles Babbage）——发明了一台分析机；阿达则致力于为该分析机编写算法。</p><p>在1842年，人称“数字女王”的阿达·洛芙莱斯（Ada Lovelace）编写了历史上首款电脑程序。并于1843 年公布了世界上第一套算法。</p><p>注释：巴贝其分析机后来被认为是最早期的计算机雏形，而阿达的算法则被认为是最早的计算机程序和软件。</p><p>在1842年与1843年其间，阿达花了9个月的时间翻译意大利数学家路易吉·米那比亚对巴贝奇最新的计算机设计书（即分析机概论）所留下的备忘录。在这部译文里，她附加许多注记，内容详细说明用计算机进行伯努利数的运算方式，而被认为是世界上第一个电脑程式；因此，阿达也被认为是世界上第一位程式设计师。</p><p>阿达的文章创造出许多巴贝奇也未曾提到的新构想，比如阿达曾经预言道：“这个机器未来可以用来排版、编曲或是各种更复杂的用途。”</p><p><b>二、数字女王—阿达对后世的影响</b></p><p>她去世后一百年，于1953年，阿达之前所留下的笔记被重新公布，并被公认对现代计算机与软件工程造成了重大影响。</p><p>在微软的Wins产品里也可以找到阿达的全息图标签。</p><p>英国计算机公会每年都颁发以阿达命名的软件工程创新大奖。</p><p>在1980年12月10日，美国国防部制作了一个新的高级计算机编程语言——Ada，以纪念阿达•洛芙莱斯。</p><p>PS：Ada是一种表现能力很强的通用程序设计语言，它是美国国防部为克服软件开发危机，耗费巨资，历时近20年研制成功的。</p><p>它被誉为第四代计算机语言的最成功代表。</p><p>与其他流行的程序设计语言不同，它不仅体现了许多现代软件的开发原理，而且将这些原理付诸实现。因此，Ada语言的使用可大大改善软件系统的清晰性，可靠性，有效性，可维护性。</p><p>Ada的出现，标志着软件工程成功地进入了国家和国际的规模。</p><p>在一定意义上说，Ada还打破了“冯.偌依曼思维模式” (Von Newman Mind-set) 的桎梏，连同Ada的支持环境(APSE)一起，形成了新一派的Ada文化。它是迄今为止最复杂，最完备的软件工具。</p><p>虽然在历史的长河中，女性在科技界的贡献并不亚于男士。但从现如今数据来看，无论是女程序员最集中的前端，还是从事的Java，企业给女程序员开出的平均offer年薪，均低于男程序员5万至6万。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-1a30eb10c862f8fa63284d93e9db7757_b.jpg\" data-rawwidth=\"640\" data-rawheight=\"351\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-1a30eb10c862f8fa63284d93e9db7757_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;351&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"640\" data-rawheight=\"351\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-1a30eb10c862f8fa63284d93e9db7757_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-1a30eb10c862f8fa63284d93e9db7757_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>现在不能否认的是女性在码农圈依旧是稀有人群，在生理结构和心理素质、思维模式上与男性的差异依然使她们在职场中遭受了某些偏见。</p><p>希望女程序员们能够充分认识到自己在职场中的优势和劣势，扬长避短，既不妄自菲薄也不自卑退让。男程序员们，不骄傲自大，不戴有色眼镜审视她们，在工作中与其充分沟通，征求其意见。而企业，在招聘时更应该以个人能力为考核标准，而不是性别年龄作为考核的标准。</p><p>也许，这对女程序员来说才是最好的女权与平等。</p>", 
            "topic": [
                {
                    "tag": "Java 编程", 
                    "tagLink": "https://api.zhihu.com/topics/19582744"
                }, 
                {
                    "tag": "Java 程序员", 
                    "tagLink": "https://api.zhihu.com/topics/19629329"
                }, 
                {
                    "tag": "IT 工程师", 
                    "tagLink": "https://api.zhihu.com/topics/19550910"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/28665807", 
            "userName": "陆敏技", 
            "userLink": "https://www.zhihu.com/people/eb652569706cbecf6742ba80003bad3f", 
            "upvote": 22, 
            "title": "软件测试工程师的职责和10大城市薪资对比", 
            "content": "<p>之前跟大家分享了软件测试是什么，那么，如果作为小白来说，为什么要进入这个行业呢？当然是广阔的职业的发展方向以及人见人爱的毛爷爷喽~</p><p>今天，跟大家分享一下关于软件测试岗位发展路线以及薪资状况。</p><p><b>一、软件测试工程师的发展路线</b></p><p>关于软件测试职业的发展，大致可以分为两个方向，分别是“管理”和“技术”两个方向。虽说是有管理技术之分，但是两个方向都需要技术作为支撑才能顺利开展工作。 软件测试岗位大概可以分为以下三个阶段：</p><p><b>1.    初级软件测试阶段：（测试专员、实习测试工程师、测试组长）</b></p><p><b>2.    中级软件测试阶段：（测试主管、测试组长、测试经理、中级软件测试工程师）</b></p><p><b>3.    高级软件测试阶段：（测试总监、资深测试工程师、测试架构师、专项测试专家）</b></p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>下面我们挑选四个具有代表性企业对软件测试岗位招聘要求来说明工作所需掌握的知识技能。</b></p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>1.中科软—初级软件测试工程师</b></p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-3fb8063b29ec6f84541060723ff84450_b.png\" data-rawwidth=\"894\" data-rawheight=\"550\" class=\"origin_image zh-lightbox-thumb\" width=\"894\" data-original=\"https://pic1.zhimg.com/v2-3fb8063b29ec6f84541060723ff84450_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;894&#39; height=&#39;550&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"894\" data-rawheight=\"550\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"894\" data-original=\"https://pic1.zhimg.com/v2-3fb8063b29ec6f84541060723ff84450_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-3fb8063b29ec6f84541060723ff84450_b.png\"/></figure><p><b>技能要求：</b></p><p>（1）掌握Linux系统操作能力，能够独立编写测试用例；</p><p>（2）拥有SQL编写能力，掌握软件测试理论知识，测试流程和测试方法；</p><p>（3）掌握1-2中编程语言（Java/php/c++等）；</p><p>（4）掌握单元测试、算法基础、数据结构等扎实的基础；</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>2.美团点评-测试主管</b></p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-cc63c9da12d61487687e714134cef39d_b.png\" data-rawwidth=\"914\" data-rawheight=\"608\" class=\"origin_image zh-lightbox-thumb\" width=\"914\" data-original=\"https://pic2.zhimg.com/v2-cc63c9da12d61487687e714134cef39d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;914&#39; height=&#39;608&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"914\" data-rawheight=\"608\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"914\" data-original=\"https://pic2.zhimg.com/v2-cc63c9da12d61487687e714134cef39d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-cc63c9da12d61487687e714134cef39d_b.png\"/></figure><p><b>技能的要求：</b></p><p>（1）熟练使用Linux或Unix系统，并熟悉测试工具Jmeter以及测试用例的方法。</p><p>（2）熟悉HTTP协议，Web架构。</p><p>（3）熟悉1-2种编程语言，例如，Java，Python，C语言等。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>3.网易-测试总监</b></p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-57f801923b8583b010c9196ae5f845b5_b.png\" data-rawwidth=\"976\" data-rawheight=\"597\" class=\"origin_image zh-lightbox-thumb\" width=\"976\" data-original=\"https://pic2.zhimg.com/v2-57f801923b8583b010c9196ae5f845b5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;976&#39; height=&#39;597&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"976\" data-rawheight=\"597\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"976\" data-original=\"https://pic2.zhimg.com/v2-57f801923b8583b010c9196ae5f845b5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-57f801923b8583b010c9196ae5f845b5_b.png\"/></figure><p><b>技能的要求：</b></p><p>（1）丰富的测试开发技术经验，对系统架构、软件运行、测试框架、自动化测试（Selenium功能自动化测试）、性能测试有深刻理解；</p><p>（2）能够撰写自动化测试工具搭建自动化测试框架。</p><p><b>除了技能上的要求，作为软件测试的高级管理者还需要：</b></p><p>（1）理解产品的商业目标，直接对产品成功负责；</p><p>（2）对测试团队的发展负责，进行人员招聘和培养，留住关键人才，提高或更新不合格人员，提升团队的胜任力和职业能力；</p><p>（3）负责项目财务管理（预算和控制）；</p><p>（4）负责资源的计划与分配；持续改进测试能力，提升效率和产品质量，从测试的角度对交付产品的成本、周期和质量负责。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>4.滴滴出行—软件测试架构师</b></p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-5f02c9ac326db38e07cfc640d337219c_b.png\" data-rawwidth=\"831\" data-rawheight=\"549\" class=\"origin_image zh-lightbox-thumb\" width=\"831\" data-original=\"https://pic1.zhimg.com/v2-5f02c9ac326db38e07cfc640d337219c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;831&#39; height=&#39;549&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"831\" data-rawheight=\"549\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"831\" data-original=\"https://pic1.zhimg.com/v2-5f02c9ac326db38e07cfc640d337219c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-5f02c9ac326db38e07cfc640d337219c_b.png\"/></figure><p><b>软件测试架构师技能要求：</b></p><p>（1）精通至少1-2种编程语言（Java/php/python/C），熟悉软件开发和测试流程；</p><p>（2）产品测试的整体架构设计；</p><p>（3）对产品测试中的测试重点和难点进行研究与攻关，为测试组织提供最优的测试方法；</p><p>（3）协助测试经理制订测试项目计划和控制测试项目进度；</p><p>（4）组织测试团队内部的技术培训工作。</p><p>软件测试架构师还需要有一定的战略规划能力、业务建模能力、数据分析处理能力、面向产品生命周期的质量保证和持续改进能力。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>接下来让我们再看看2017新出炉的关于软件测试工程师的薪资分布。（数据来自职友集）</b></p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>二 、10大城市软件测试月薪分析</b></p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>坐标：北京</b></p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-3ec0154302dc7535433b1ae93cccdd69_b.png\" data-rawwidth=\"851\" data-rawheight=\"345\" class=\"origin_image zh-lightbox-thumb\" width=\"851\" data-original=\"https://pic2.zhimg.com/v2-3ec0154302dc7535433b1ae93cccdd69_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;851&#39; height=&#39;345&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"851\" data-rawheight=\"345\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"851\" data-original=\"https://pic2.zhimg.com/v2-3ec0154302dc7535433b1ae93cccdd69_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-3ec0154302dc7535433b1ae93cccdd69_b.png\"/></figure><p>北京平均薪资分布 </p><p>北京软件测试工程师平均工资：¥ 8370/月，取自 6948 份样本，较 2016 年，增长 6.2%。</p><p>月薪在10K以上的占比为34.1%，月薪处于6K-8K间占比最高,达到34%。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>坐标：上海</b></p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-ab2f5c7542b8788f85e405a40d6cb82d_b.png\" data-rawwidth=\"838\" data-rawheight=\"338\" class=\"origin_image zh-lightbox-thumb\" width=\"838\" data-original=\"https://pic2.zhimg.com/v2-ab2f5c7542b8788f85e405a40d6cb82d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;838&#39; height=&#39;338&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"838\" data-rawheight=\"338\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"838\" data-original=\"https://pic2.zhimg.com/v2-ab2f5c7542b8788f85e405a40d6cb82d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-ab2f5c7542b8788f85e405a40d6cb82d_b.png\"/></figure><p>上海平均薪资分布</p><p>上海软件测试平均工资：¥ 8480/月，取自 14663 份样本，较 2016 年，增长 7.3%</p><p>月薪在10K以上的占比为33.8%，月薪处于6K-8K间占比最高,达到26.8%。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>坐标：广州</b></p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-c359d1ef03ae9fef2c55e447cd63f76e_b.png\" data-rawwidth=\"847\" data-rawheight=\"349\" class=\"origin_image zh-lightbox-thumb\" width=\"847\" data-original=\"https://pic3.zhimg.com/v2-c359d1ef03ae9fef2c55e447cd63f76e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;847&#39; height=&#39;349&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"847\" data-rawheight=\"349\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"847\" data-original=\"https://pic3.zhimg.com/v2-c359d1ef03ae9fef2c55e447cd63f76e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-c359d1ef03ae9fef2c55e447cd63f76e_b.png\"/></figure><p>广州平均薪资分布</p><p>广州软件测试工程师平均工资：¥ 7010/月，取自 4100 份样本，较 2016 年，减少 1.6%。</p><p>月薪在10K以上的占比为22.6%，月薪处于6K-8K间占比最高,达到30.8%。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>坐标：深圳</b></p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-5264fb95ddb858b896bcd8edd791396b_b.png\" data-rawwidth=\"845\" data-rawheight=\"342\" class=\"origin_image zh-lightbox-thumb\" width=\"845\" data-original=\"https://pic4.zhimg.com/v2-5264fb95ddb858b896bcd8edd791396b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;845&#39; height=&#39;342&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"845\" data-rawheight=\"342\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"845\" data-original=\"https://pic4.zhimg.com/v2-5264fb95ddb858b896bcd8edd791396b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-5264fb95ddb858b896bcd8edd791396b_b.png\"/></figure><p>深圳平均薪资分布</p><p>深圳软件测试平均工资：¥ 6940/月，取自 16708 份样本，较 2016 年，减少 0.4%。</p><p>月薪在10K以上的占比为20.5%，月薪处于6K-8K之间的次之，占比达到27.6%，处于4.5K-6K间占比最高,达30.3%。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>坐标：杭州</b></p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-0bbe5476e9a168ceee81dcf50c74c8d4_b.png\" data-rawwidth=\"847\" data-rawheight=\"344\" class=\"origin_image zh-lightbox-thumb\" width=\"847\" data-original=\"https://pic1.zhimg.com/v2-0bbe5476e9a168ceee81dcf50c74c8d4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;847&#39; height=&#39;344&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"847\" data-rawheight=\"344\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"847\" data-original=\"https://pic1.zhimg.com/v2-0bbe5476e9a168ceee81dcf50c74c8d4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-0bbe5476e9a168ceee81dcf50c74c8d4_b.png\"/></figure><p>杭州平均薪资分布</p><p>杭州软件测试平均工资：¥ 7370/月，取自 6796 份样本，较 2016 年，增长 2.7%。</p><p>其中月薪在10K以上的占比为24.5%，月薪处于6K-8K间占比最高,达到28.8%。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>坐标：成都</b></p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-5100a6f1861effec484cf2f54f1e3a1d_b.png\" data-rawwidth=\"843\" data-rawheight=\"348\" class=\"origin_image zh-lightbox-thumb\" width=\"843\" data-original=\"https://pic2.zhimg.com/v2-5100a6f1861effec484cf2f54f1e3a1d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;843&#39; height=&#39;348&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"843\" data-rawheight=\"348\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"843\" data-original=\"https://pic2.zhimg.com/v2-5100a6f1861effec484cf2f54f1e3a1d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-5100a6f1861effec484cf2f54f1e3a1d_b.png\"/></figure><p>成都平均薪资分布 </p><p>成都软件测试工程师平均工资：¥ 6320/月，取自 2940 份样本，较 2016 年，增长 1.2%。</p><p>月薪在10K以上的占比为14%，月薪处于6K-8K间占比最高,达到32.8%。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>坐标：武汉</b></p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-16f1d043abf5d1f1cebb465ad468184f_b.png\" data-rawwidth=\"836\" data-rawheight=\"340\" class=\"origin_image zh-lightbox-thumb\" width=\"836\" data-original=\"https://pic4.zhimg.com/v2-16f1d043abf5d1f1cebb465ad468184f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;836&#39; height=&#39;340&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"836\" data-rawheight=\"340\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"836\" data-original=\"https://pic4.zhimg.com/v2-16f1d043abf5d1f1cebb465ad468184f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-16f1d043abf5d1f1cebb465ad468184f_b.png\"/></figure><p>武汉平均薪资分布</p><p>武汉软件测试工程师平均工资：¥ 5890/月，取自 2498 份样本，较 2016 年，增长 1.5%。</p><p>月薪在10K以上的占比为10.2%，月薪处于6K-8K间占比次之,达到30.8%；处于4.5K-6K间占比最高，达到37.9。 </p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>坐标：大连</b></p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-c83c6ad4919cd0f4ece8f44a1d7e8a29_b.png\" data-rawwidth=\"844\" data-rawheight=\"341\" class=\"origin_image zh-lightbox-thumb\" width=\"844\" data-original=\"https://pic2.zhimg.com/v2-c83c6ad4919cd0f4ece8f44a1d7e8a29_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;844&#39; height=&#39;341&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"844\" data-rawheight=\"341\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"844\" data-original=\"https://pic2.zhimg.com/v2-c83c6ad4919cd0f4ece8f44a1d7e8a29_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-c83c6ad4919cd0f4ece8f44a1d7e8a29_b.png\"/></figure><p>大连平均薪资分布</p><p>大连软件测试平均工资：¥ 5050/月，取自 1315 份样本，较 2016 年，增长 3.1%。</p><p>月薪在10K以上的占比为5.7%，月薪处于4.5K-6K间占比最高,达到47.6%。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>坐标：南京</b></p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-829ce1c7ae1b2fe958337fa5f60406d1_b.png\" data-rawwidth=\"835\" data-rawheight=\"343\" class=\"origin_image zh-lightbox-thumb\" width=\"835\" data-original=\"https://pic2.zhimg.com/v2-829ce1c7ae1b2fe958337fa5f60406d1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;835&#39; height=&#39;343&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"835\" data-rawheight=\"343\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"835\" data-original=\"https://pic2.zhimg.com/v2-829ce1c7ae1b2fe958337fa5f60406d1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-829ce1c7ae1b2fe958337fa5f60406d1_b.png\"/></figure><p>南京平均薪资分布</p><p>南京软件测试工程师平均工资：¥ 6460/月，取自 3479 份样本，较 2016 年，增长 4.7%.</p><p>月薪在10K以上的占比为15%，月薪处于6K-8K间占比次之,达到30.8%；处于4..5K-6占比最高，达到36.6%，。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>坐标：郑州</b></p><figure><noscript><img src=\"https://pic3.zhimg.com/v2-dca269f093859c38115c0171a4c53e8e_b.png\" data-rawwidth=\"834\" data-rawheight=\"341\" class=\"origin_image zh-lightbox-thumb\" width=\"834\" data-original=\"https://pic3.zhimg.com/v2-dca269f093859c38115c0171a4c53e8e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;834&#39; height=&#39;341&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"834\" data-rawheight=\"341\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"834\" data-original=\"https://pic3.zhimg.com/v2-dca269f093859c38115c0171a4c53e8e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-dca269f093859c38115c0171a4c53e8e_b.png\"/></figure><p>郑州平均薪资分布</p><p>郑州软件测试工程师平均工资：¥ 5580/月，取自 972 份样本，较 2016 年，增长 0.3%。</p><p>月薪在10K以上的占比为4.2%，月薪处于6K-8K间占比次之,达到31.9%；处于4.5K-6占比最高，达到40.1%；。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>通过以上数据分析，我们可以得出：</b></p><p>（1）平均薪资在8000元以上的城市有北京和上海，7000元~8000元的城市有杭州和广州；6000元~7000元的城市有南京、成都、深圳；6000元以下的有武汉、大连、郑州；</p><p>（2）上海以8480元取得第一，北京以8370元 居第二；</p><p>（3）十大城市中平均薪资最低的是大连，仅5050元；</p><p>（4）北京在10K以上的占比中达到了34.1%，位居第一；</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>从以上统计结果我们可以得出以下结论：</b></p><p>北京、上海、广州、杭州在薪资上给得比较大方，在反映出了这几个城市对软件测试人才的渴求更加迫切，大家就业的时候可以首先考虑这几个城市。</p>", 
            "topic": [
                {
                    "tag": "软件测试工程师", 
                    "tagLink": "https://api.zhihu.com/topics/19728426"
                }, 
                {
                    "tag": "软件测试", 
                    "tagLink": "https://api.zhihu.com/topics/19562409"
                }, 
                {
                    "tag": "软件测试培训", 
                    "tagLink": "https://api.zhihu.com/topics/19873847"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/28408181", 
            "userName": "陆敏技", 
            "userLink": "https://www.zhihu.com/people/eb652569706cbecf6742ba80003bad3f", 
            "upvote": 4, 
            "title": "Comparable与Comparator，java中的排序与比较", 
            "content": "<p><strong>1：比较和排序的概念</strong></p>\n<p>    比较：两个实体类之间按&gt;，=，&lt;进行比较。</p>\n<p>    排序：在集合类中，对集合类中的实体进行排序。排序基于的算法基于实体类提供的比较函数。</p>\n<p>    基本型别都提供了默认的比较算法，如string提供了按字母进行比较，int提供了按整数大小进行比较。</p>\n\n<p><strong>2：Comparable与Comparator</strong></p>\n<p>but，在软件开发的世界中，任何没有代码的堆概念都是耍流氓。所以，无论我们解释的多么完美，必须show me the code；</p>\n<p>我们首先看这样一段代码：</p>\n<blockquote><p>public class CollectorTest { <br/>    public static void main(String[] args) { \n</p>\n<p>        ArrayList&lt;Student&gt; students = new ArrayList&lt;&gt;(); \n<br/>        students.add(new Student(&#34;a&#34;, 3)); <br/>        students.add(new \nStudent(&#34;c&#34;, 2)); <br/>        students.add(new Student(&#34;b&#34;, 1)); <br/>        \nstudents.add(new Student(&#34;d&#34;, 4)); <br/>        for (Student student : students) \n{ <br/>            System.out.printf(&#34;name:%s, age: %d \\n&#34;, student.name, \nstudent.age); <br/>        } <br/>    } <br/>} </p>\n<p>class Student { <br/>    public String name; <br/>    public int age; <br/>    \npublic Student(String name, int age){ <br/>        this.name = name; <br/>        \nthis.age = age; <br/>    } <br/>}</p>\n</blockquote>\n<p>但是现在我们需要按年龄大小进行遍历，怎么办？这个时候排序接口就发挥作用了。可以为Student提供排序的接口Comparable，如下，</p>\n<blockquote><p>public class CollectorTest { <br/>    public static void main(String[] args) { \n</p>\n<p>        ArrayList&lt;Student&gt; students = new ArrayList&lt;&gt;(); \n<br/>        students.add(new Student(&#34;a&#34;, 3)); <br/>        students.add(new \nStudent(&#34;c&#34;, 2)); <br/>        students.add(new Student(&#34;b&#34;, 1)); <br/>        \nstudents.add(new Student(&#34;d&#34;, 4)); <br/>        Collections.sort(students); \n<br/>        for (Student student : students) { <br/>            \nSystem.out.printf(&#34;name:%s, age: %d \\n&#34;, student.name, student.age); <br/>        \n} <br/>    } <br/>} </p>\n<p>class Student implements Comparable{ <br/>    public String name; <br/>    \npublic int age; <br/>    public Student(String name, int age){ <br/>        \nthis.name = name; <br/>        this.age = age; <br/>    } </p>\n<p>    @Override <br/>    public int compareTo(Object o) { <br/>        Student \nstudent = (Student)o; <br/>        if (age&gt; student.age) <br/>        { \n<br/>            return 1; <br/>        } <br/>        else if (age == student.age) \n<br/>        { <br/>            return 0; <br/>        } <br/>        else \n<br/>        { <br/>            return -1; <br/>        } <br/>        //return \nInteger.valueOf(age).compareTo(Integer.valueOf(student.age)); <br/>    } \n<br/>}</p></blockquote>\n<p>输出的结果为：</p>\n<blockquote><p>name:b, age: 1 <br/>name:c, age: 2 <br/>name:a, age: 3 <br/>name:d, age: 4 \n</p></blockquote>\n<p>很棒。PS：注意排序方法中最后被注释掉的一行，排序方法中的逻辑可以被这一行代替，只不过为了给大家演示期间，我还原了这个Integer的compareTo方法。</p>\n<p>现在问题来了，我不想用年龄进行排序了，我想用姓名进行排序，该怎么办？要知道我们只能实现一个排序接口，排序接口只有一个方法。这个时候，比较器就派上用场了！</p>\n<p>我们实现一个name的比较器，如下：</p>\n<blockquote><p>public class CollectorTest { <br/>    public static void main(String[] args) { \n</p>\n<p>        ArrayList&lt;Student&gt; students = new ArrayList&lt;&gt;(); \n<br/>        students.add(new Student(&#34;a&#34;, 3)); <br/>        students.add(new \nStudent(&#34;c&#34;, 2)); <br/>        students.add(new Student(&#34;b&#34;, 1)); <br/>        \nstudents.add(new Student(&#34;d&#34;, 4)); <br/>        //Collections.sort(students); \n<br/>        students.sort(new NameSorter()); <br/>        for (Student student : \nstudents) { <br/>            System.out.printf(&#34;name:%s, age: %d \\n&#34;, \nstudent.name, student.age); <br/>        } <br/>    } <br/>} </p>\n<p>class Student implements Comparable{ <br/>    public String name; <br/>    \npublic int age; <br/>    public Student(String name, int age){ <br/>        \nthis.name = name; <br/>        this.age = age; <br/>    } </p>\n<p>    @Override <br/>    public int compareTo(Object o) { <br/>        Student \nstudent = (Student)o; <br/>        if (age&gt; student.age) <br/>        { \n<br/>            return 1; <br/>        } <br/>        else if (age == student.age) \n<br/>        { <br/>            return 0; <br/>        } <br/>        else \n<br/>        { <br/>            return -1; <br/>        } <br/>        //return \nInteger.valueOf(age).compareTo(Integer.valueOf(student.age)); <br/>    } <br/>} \n</p>\n<p>class NameSorter implements Comparator{ </p>\n<p>    @Override <br/>    public int compare(Object o1, Object o2) { <br/>        \nStudent s1 =(Student) o1; <br/>        Student s2 =(Student) o2; <br/>        \nreturn s1.name.compareTo(s2.name); <br/>    } <br/>}</p></blockquote>\n<p>现在的结果：</p>\n<blockquote><p>name:a, age: 3 <br/>name:b, age: 1 <br/>name:c, age: 2 <br/>name:d, age: 4 \n</p></blockquote>\n<p>将来我们要按照性别，按照学生成绩排序，可能还会有更多更多的排序的要求，那就去实现更多的比较器就行了。</p>\n\n<p><strong>3：Comparable与Comparator的泛型版本Comparable&lt;T&gt;与Comparator&lt;T&gt;</strong></p>\n<p>如果我们稍有经验，我们就会发现上面的代码的接口Comparable与Comparator都是已经不建议使用了。当泛型出来后，所有非泛型集合类和接口都已经建议尽量不使用了。至于原因，从上面的代码中我们也可以看出一点端倪。</p>\n<p>注意查看compare函数，如：</p>\n<blockquote><p>Student s1 =(Student) o1; <br/>Student s2 =(Student) o2; <br/></p></blockquote>\n<p>我们发现这个函数进行了装箱和拆箱。而这是会影响性能的。如果我们的集合中有成千上万个复杂的实体对象，则在排序的时候所耗费掉的性能就是客观的。而泛型的出现，就可以避免掉拆箱和装箱。</p>\n<p>故，我们就该实现Comparable&lt;T&gt;与Comparator&lt;T&gt;。最终的代码如下：</p>\n<blockquote><p>package com.zuikc.se.collectors; </p>\n<p>/** <br/>* 排序和比较器的用法，Comparable与Comparator，java中的排序与比较 <br/>* \nauthor:最课程（<a href=\"https://link.zhihu.com/?target=http%3A//zuikc.com\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">zuikc.com</span><span class=\"invisible\"></span></a>） <br/>*/ <br/>import java.util.ArrayList; <br/>import \njava.util.Collection; <br/>import java.util.Collections; <br/>import \njava.util.Comparator; <br/>import java.util.List; </p>\n<p>public class CollectorTest { <br/>    public static void main(String[] args) { \n</p>\n<p>        ArrayList&lt;Student&gt; students = new ArrayList&lt;&gt;(); \n<br/>        students.add(new Student(&#34;a&#34;, 3)); <br/>        students.add(new \nStudent(&#34;c&#34;, 2)); <br/>        students.add(new Student(&#34;b&#34;, 1)); <br/>        \nstudents.add(new Student(&#34;d&#34;, 4)); <br/>        //Collections.sort(students); \n<br/>        students.sort(new NameSorter()); <br/>        for (Student student : \nstudents) { <br/>            System.out.printf(&#34;name:%s, age: %d \\n&#34;, \nstudent.name, student.age); <br/>        } <br/>    } <br/>} </p>\n<p>class Student implements Comparable&lt;Student&gt;{ <br/>    public String \nname; <br/>    public int age; <br/>    public Student(String name, int age){ \n<br/>        this.name = name; <br/>        this.age = age; <br/>    } </p>\n<p>    @Override <br/>    public int compareTo(Student student) { <br/>        if \n(age&gt; student.age) <br/>        { <br/>            return 1; <br/>        } \n<br/>        else if (age == student.age) <br/>        { <br/>            return 0; \n<br/>        } <br/>        else <br/>        { <br/>            return -1; \n<br/>        } <br/>        //return \nInteger.valueOf(age).compareTo(Integer.valueOf(student.age)); <br/>    } <br/>} \n</p>\n<p>class NameSorter implements Comparator&lt;Student&gt;{ </p>\n<p>    @Override <br/>    public int compare(Student s1, Student s2) { \n<br/>        return s1.name.compareTo(s2.name); <br/>    } <br/>}</p>\n\n</blockquote>", 
            "topic": [
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }, 
                {
                    "tag": "Java 编程", 
                    "tagLink": "https://api.zhihu.com/topics/19582744"
                }, 
                {
                    "tag": "软件培训", 
                    "tagLink": "https://api.zhihu.com/topics/19773733"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/27294617", 
            "userName": "陆敏技", 
            "userLink": "https://www.zhihu.com/people/eb652569706cbecf6742ba80003bad3f", 
            "upvote": 2, 
            "title": "从零开始理解JAVA事件处理机制（3）", 
            "content": "<p>我们连续写了两小节的教师-学生的例子，必然觉得无聊死了，这样的例子我们就是玩上100遍，还是不知道该怎么写真实的代码。那从本节开始，我们开始往真实代码上面去靠拢。</p>\n<p>事件最容易理解的例子是鼠标事件：我们点击鼠标，鼠标发送指令，执行代码。</p>\n\n<p><strong>一：鼠标点击事件处理模型基础版</strong></p>\n<p>这个时候，我们必须去查看下JDK中相关类型。对照着上一节《<a href=\"https://zhuanlan.zhihu.com/p/27273286\" class=\"internal\">从零开始理解JAVA事件处理机制（2）</a>》中的UML图，我们很快发现，对应HomeworkListener，JDK中有MouseListener，其实我们靠分析也能得知，MouseListener继承自EventListener。现在既然有了接口MouseListener了，那我们必定会有一个实现类，这个类假设叫做：ConcreteMouseListener。不妨先实现之：</p>\n<blockquote><p>package com.zuikc.events;</p>\n<p>import java.awt.event.MouseEvent; <br/>import \njava.awt.event.MouseListener;</p>\n<p>public class ConcreteMouseListener implements MouseListener {</p>\n<p>    public ConcreteMouseListener(){</p>\n<p>    } <br/>    @Override <br/>    public void mouseClicked(MouseEvent e) { \n<br/>        System.out.printf(&#34;我被{%s}点了一下，MD痒死了~~&#34;, e.getSource().toString()); \n<br/>    }</p>\n<p>    @Override <br/>    public void mousePressed(MouseEvent e) { <br/>        // \nTODO Auto-generated method stub <br/>    }</p>\n<p>    @Override <br/>    public void mouseReleased(MouseEvent e) { <br/>        \n// TODO Auto-generated method stub <br/>    }</p>\n<p>    @Override <br/>    public void mouseEntered(MouseEvent e) { <br/>        // \nTODO Auto-generated method stub <br/>    }</p>\n<p>    @Override <br/>    public void mouseExited(MouseEvent e) { <br/>        // \nTODO Auto-generated method stub <br/>    }</p>\n<p>}</p></blockquote>\n<p>我们为单击的事件处理器添加业务代码。</p>\n<blockquote><p>事件处理器：监听器的具体实现类的实现方法，就叫事件处理器。</p></blockquote>\n<p>接下来要看什么，当然是MouseEvent。MouseEvent，这个JDK中的类相对来说，就稍微有点大了，起构造方法的参数有点多，不过没有关系呀，我们慢慢看，我先说这个类要怎么用，即怎么new出来。</p>\n<blockquote><p>/* <br/>* 这里的new Component() {} 就是 event.getSource() 得到的事件源 source <br/>*/ \n<br/>MouseEvent event = new MouseEvent(new Component() {}, 1, 1, \n1,2,3,4,false);</p></blockquote>\n<p>在实际且正常的情况下，MouseEvent是没有必要自己new的，JAVA运行时会捕获硬件鼠标的点击动作，由虚拟机底层为我们生成该实例对象（下文会为我们分析这一点），但是我们此时此刻我们是先模拟呀，所以不妨碍我们自己胡乱new一个出来。注意，new不是问题，问题的关键我们必须知道其构造器参数的意义，而其中核心关键参数就是第一个参数，new \nComponent()，这是什么？这就是那个事件源！回头看看我们的教师学生版本是在哪里生产事件的：</p>\n<blockquote><p>    public void setHomework(String homework) { <br/>        \nSystem.out.printf(&#34;%s布置了作业%s \\n&#34;, this.name, homework); <br/>        \nhomeworks.add(homework); <br/>        HomeworkEventObject event = new \nHomeworkEventObject(this); <br/>        /* <br/>         * \n在观察者模式中，我们直接调用Observable的notifyObservers来通知被观察者 <br/>         * 现在我们只能自己通知了~~ \n<br/>         */ <br/>        for (HomeworkListener listener : \nhomeworkListenerList) { <br/>            listener.update(event, homework); \n<br/>        }</p>\n<p>    }</p></blockquote>\n<p>是在Teacher的业务代码setHomework中。所以，在当前的我们要写的这个例子中，new \nMouseEvent要在哪里呢？我们在Button的业务代码中，Button是谁，Button就类似Teacher，但又不完全等同Teacher，在Teacher中，Teacher本身就是事件源，所以它这个this作为参数传入进了HomeworkEventObject，而Button不能作为参数传入进MouseEvent，因为我不打算让Button继承自Component，所以我们先new了一个临时的Component。OK，分析到了这里，我们自己的Button代码大概就出来了，是这个样子的：</p>\n<blockquote><p>package com.zuikc.events;</p>\n<p>import java.awt.AWTEvent; <br/>import java.awt.AWTEventMulticaster; <br/>import \njava.awt.Component; <br/>import java.awt.event.MouseEvent; <br/>import \njava.awt.event.MouseListener; <br/>import java.awt.peer.LightweightPeer;</p>\n<p>public class Button { <br/>    private MouseListener mouseListener; <br/>    \npublic void addMouseListener(MouseListener l) { <br/>        mouseListener = l; \n<br/>    } <br/>    public void doClick(){ <br/>        /* <br/>         * 这里的new \nComponent() {} 就是 event.getSource() 得到的事件源 source <br/>         */ <br/>        \nMouseEvent event = new MouseEvent(new Component() {}, 1, 1, 1,2,3,4,false); \n<br/>        //event.getSource(); <br/>        \nthis.mouseListener.mouseClicked(event); <br/>    } <br/>}</p></blockquote>\n<p>至此，我们可以画出清晰的类图了，来看：</p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-4f347701be1d8872b31b92cd22cf15d8_b.png\" data-rawwidth=\"590\" data-rawheight=\"480\" class=\"origin_image zh-lightbox-thumb\" width=\"590\" data-original=\"https://pic1.zhimg.com/v2-4f347701be1d8872b31b92cd22cf15d8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;590&#39; height=&#39;480&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"590\" data-rawheight=\"480\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"590\" data-original=\"https://pic1.zhimg.com/v2-4f347701be1d8872b31b92cd22cf15d8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-4f347701be1d8872b31b92cd22cf15d8_b.png\"/></figure><br/><p>顺便我们看一下Client端的代码：</p>\n<blockquote><p>public static void main(String[] args) { <br/>    ConcreteMouseListener \nlistener = new ConcreteMouseListener(); <br/>    Button button = new Button(); \n<br/>    button.addMouseListener(listener); <br/>    button.doClick(); \n<br/>}</p></blockquote>\n<p>运行一下吧，你应该得到一句类似这样的输出：</p>\n<p>我被{com.zuikc.events.Button$1[,0,0,0x0,invalid]}点了一下，MD痒死了~~</p>\n\n<p><strong>二，一个正常的窗体程序的样子</strong></p>\n<p>上面，我们尽量偏向于教师学生的例子，写出了鼠标事件的基础版本，但是说好的程序本来的样子呢？来，我们接下来写个正常的程序，99.9%在人在写窗体程序的时候就是如下这么写的。我知道你们又会有人上来骂了，什么，java，窗体程序？我TMD学JAVA是为了EE开发的，企业开发的。现在，我们先说好不好互相伤害，要知道，即便是NB如JAVA，最先也是先从窗体发迹的，并且，JAVA的窗体框架推倒重写了还不止一次。所以，窗体的事件你明白了，EE中那些框架的事件碰到了简直跟切白菜一样。</p>\n<p>言归正传，看代码：</p>\n<blockquote><p>package com.zuikc.events;</p>\n<p>import java.awt.event.MouseEvent; <br/>import java.awt.event.MouseListener; \n<br/>import javax.swing.JButton; <br/>import javax.swing.JFrame;</p>\n<p>public class Client { <br/>    public static void main(String[] args) { \n<br/>        new DemoFrame(); <br/>    } <br/>}</p>\n<p>class DemoFrame extends JFrame implements MouseListener {</p>\n<p>    public DemoFrame() { <br/>        super(&#34;demo&#34;); <br/>        \nthis.setSize(500, 400); <br/>        this.setLocationRelativeTo(null); \n<br/>        this.getContentPane().setLayout(null); <br/>        \nthis.setVisible(true);</p>\n<p>        JButton button1 = new JButton(&#34;ok&#34;); <br/>        button1.setBounds(8, \n8, 80, 80); <br/>        button1.addMouseListener(this); <br/>        \nthis.getContentPane().add(button1); <br/>    }</p>\n<p>    @Override <br/>    public void mouseClicked(MouseEvent e) { <br/>        \nSystem.out.printf(&#34;我被{%s}点了一下，MD痒死了~~&#34;, e.getSource().toString()); <br/>    }</p>\n<p>    @Override <br/>    public void mousePressed(MouseEvent e) { <br/>    }</p>\n<p>    @Override <br/>    public void mouseReleased(MouseEvent e) { <br/>    }</p>\n<p>    @Override <br/>    public void mouseEntered(MouseEvent e) { <br/>    }</p>\n<p>    @Override <br/>    public void mouseExited(MouseEvent e) { <br/>    } \n<br/>}</p></blockquote>\n<p>这段代码什么意思？最简单了，就是创建了一个窗体，窗体上放置了一个按钮，点击了之后，执行了一行代码。这简简单单的一个文件，没多少行代码，实际上就实现了我们上文中一堆类中实现的功能。来吧，我们分析吧，把监听器、事件处理器、事件、事件源都指出来。</p>\n<blockquote><p>监听器：DemoFrame就是监听器，对应ConcreteMouseListener；</p>\n<p>事件处理器：MouseClicked方法就是监听器，ConcreteMouseListener里面也有这个方法；</p>\n<p>事件：看不到了，怎么办？</p>\n<p>事件源：看不到了，怎么办？</p></blockquote>\n<p>注意，窗体本身就监听器，所以上文代码中为button添加监听器怎么做？button1.addMouseListener(this);没错，就是把自身添加进去。</p>\n<p>然后，事件和事件源都看不到了，这个时候怎么办？我们如果看输出的话，上文代码的输出为：</p>\n<p>我被{javax.swing.JButton[,8,8,80x80,invalid,alignmentX=0.0,alignmentY=0.5,border=javax.swing.plaf.BorderUIResource$CompoundBorderUIResource@7fda7dfe,flags=296,maximumSize=,minimumSize=,preferredSize=,defaultIcon=,disabledIcon=,disabledSelectedIcon=,margin=javax.swing.plaf.InsetsUIResource[top=2,left=14,bottom=2,right=14],paintBorder=true,paintFocus=true,pressedIcon=,rolloverEnabled=true,rolloverIcon=,rolloverSelectedIcon=,selectedIcon=,text=ok,defaultCapable=true]}点了一下，MD痒死了~~</p>\n<p>看上去，类似我们上文第一部分代码的输出，也是JButton业务代码运行过程中生成的一个变量，但它是在哪里生成的，在哪里产生的，我们并不知道。不过没关系，我们看调试堆栈！</p>\n<p>一步步的往上追，我们终于追到了这里： </p>\n<figure><noscript><img src=\"https://pic3.zhimg.com/v2-4757c66c216346b59ce81d2572e62642_b.png\" data-rawwidth=\"630\" data-rawheight=\"480\" class=\"origin_image zh-lightbox-thumb\" width=\"630\" data-original=\"https://pic3.zhimg.com/v2-4757c66c216346b59ce81d2572e62642_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;630&#39; height=&#39;480&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"630\" data-rawheight=\"480\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"630\" data-original=\"https://pic3.zhimg.com/v2-4757c66c216346b59ce81d2572e62642_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-4757c66c216346b59ce81d2572e62642_b.png\"/></figure><p>由此可见，MouseEvent也是在业务代码里new出来了，大家可能要为，那这个重要的第一个参数target呢？target可是事件源也很重要，道理很简单，往上继续追，限于篇幅，这里不在展开，它在某个你愿意看到它的地方被new出来了。</p>\n<p>现在我们补齐回答，</p>\n<blockquote><p>事件：JAVA运行时捕获到硬件鼠标触发，从而调用了事件处理器，在事件处理器内部生成的这个MouseEvent，就是事件；</p>\n<p>事件源：JAVA运行时捕获到硬件鼠标触发，从而调用了事件处理器，在事件处理器内部生成的这个target，就是事件源；</p></blockquote>\n\n<p>三：正常版的上文第一部分的代码</p>\n<p>按照二中的代码来写，我们第一部分的代码应该是什么样子的呢？</p>\n<p>一和二放在一起比较，其实只要改两个地方，一中的代码就和二中完全一致了，</p>\n<blockquote><p>1：将ConcreteMouseListener命名为DemoFrame；</p>\n<p>2：将Button实例由客户端放置到ConcreteMouseListener内部；</p></blockquote>\n<p>OK，事件就是这么简单。</p>\n<p>该系列的第一部分和第二部分分别在：</p>\n<p>1：<a href=\"https://zhuanlan.zhihu.com/p/27185877\" class=\"internal\">从零开始理解JAVA事件处理机制（1）</a></p>\n<p>2：<a href=\"https://zhuanlan.zhihu.com/p/27273286\" class=\"internal\">从零开始理解JAVA事件处理机制（2）</a></p>", 
            "topic": [
                {
                    "tag": "IT 培训", 
                    "tagLink": "https://api.zhihu.com/topics/19593700"
                }, 
                {
                    "tag": "培训", 
                    "tagLink": "https://api.zhihu.com/topics/19568266"
                }, 
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }
            ], 
            "comments": [
                {
                    "userName": "ruozhiertong", 
                    "userLink": "https://www.zhihu.com/people/c2772c0de86ebffd799e1980db001ca8", 
                    "content": "<p>请教作者，在事件机制中，为什么要将事件和事件源分开？ 还有系统是怎么感知到按钮被点击了（即文中主动的doClick），底层是怎样的？</p>", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/27273286", 
            "userName": "陆敏技", 
            "userLink": "https://www.zhihu.com/people/eb652569706cbecf6742ba80003bad3f", 
            "upvote": 3, 
            "title": "从零开始理解JAVA事件处理机制（2）", 
            "content": "<p>第一节中的示例过于简单《<a class=\"internal\" href=\"https://zhuanlan.zhihu.com/p/27185877\">从零开始理解JAVA事件处理机制（1）</a>》，简单到让大家觉得这样的代码简直毫无用处。但是没办法，我们要继续写这毫无用处的代码，然后引出下一阶段真正有益的代码。</p><p>一：事件驱动模型初窥</p><p>我们要说事件驱动模型是观察者模式的升级版本，那我们就要说说其中的对应关系：</p><blockquote><p>观察者对应监听器（学生）</p><p>被观察者对应事件源（教师）</p></blockquote><p>事件源产生事件，事件带有事件源，监听器监听事件。爱钻牛角尖的朋友可能会说，我擦，什么叫产生事件，监听事件，事件事件到底什么？</p><p>莫慌，如果我们用代码来说事，事件它就是个类，事件源也是个类。这里面一共牵扯到四个类，事件源（即教师、即被观察者）、事件（是一个类，见下文，一般我们以Event或者EventObject命名结尾）、监听器接口、具体的监听器（即学生、即观察者）。</p><p>就像我们上一篇文章中的第一节提到的一样，JDK中当然有现成的事件模型类，我们不妨来一个一个的查看一下吧。</p><p>首先看监听器（即学生、即观察者，大家不要嫌我烦，不停滴括号提醒，这是为了不停滴给大家加深印象），</p><blockquote><p>package java.util;</p><p>/**<br/>* A tagging interface that all event listener interfaces must extend.<br/>* @since JDK1.1<br/>*/<br/>public interface EventListener {<br/>}</p></blockquote><p>简单到不能再简单了，对吧，甚至连一个声明的方法都没有，那它存在的意义在哪？还记得面向对象中的上溯造型吗，所以它的意义就在于告诉所有的调用者，我是一个监听器。</p><p>再来看看事件，即Event或EventObject结尾的那个类，里面含有getSource方法，返回的就是事件源（即教师、即被观察者），</p><blockquote><p>package java.util;</p><p>/**<br/>* &lt;p&gt;<br/>* The root class from which all event state objects shall be derived.<br/>* &lt;p&gt;<br/>* All Events are constructed with a reference to the object, the &#34;source&#34;,<br/>* that is logically deemed to be the object upon which the Event in question<br/>* initially occurred upon.<br/>*<br/>* @since JDK1.1<br/>*/</p><p>public class EventObject implements java.io.Serializable {</p><p>private static final long serialVersionUID = 5516075349620653480L;</p><p>/**<br/>* The object on which the Event initially occurred.<br/>*/<br/>protected transient Object source;</p><p>/**<br/>* Constructs a prototypical Event.<br/>*<br/>* @param source The object on which the Event initially occurred.<br/>* @exception IllegalArgumentException if source is null.<br/>*/<br/>public EventObject(Object source) {<br/>if (source == null)<br/>throw new IllegalArgumentException(&#34;null source&#34;);</p><p>this.source = source;<br/>}</p><p>public Object getSource() {<br/>return source;<br/>}</p><p>public String toString() {<br/>return getClass().getName() + &#34;[source=&#34; + source + &#34;]&#34;;<br/>}<br/>}</p></blockquote><p>这个类也很简单，如果说观察者模式中的上层类和结果还带了不少逻辑不少方法的话，那么事件驱动模型中的上层类和接口简直看不到任何东西。没错，</p><blockquote><p>事件驱动模型中，JDK的设计者们进行了最高级的抽象，就是让上层类只是代表了：我是一个事件（含有事件源），或，我是一个监听者！</p></blockquote><p>二：老师布置作业的事件驱动模型版本</p><p>老规矩，接下来让我们给出类图：</p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-5bcecc4f7be03812ae70eb947988106b_b.png\" data-rawwidth=\"688\" data-rawheight=\"360\" class=\"origin_image zh-lightbox-thumb\" width=\"688\" data-original=\"https://pic4.zhimg.com/v2-5bcecc4f7be03812ae70eb947988106b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;688&#39; height=&#39;360&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"688\" data-rawheight=\"360\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"688\" data-original=\"https://pic4.zhimg.com/v2-5bcecc4f7be03812ae70eb947988106b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-5bcecc4f7be03812ae70eb947988106b_b.png\"/></figure><p>然后，代码实现之：</p><p>观察者接口（学生）。由于在事件驱动模型中，只有一个没有任何方法的接口，EventListener，所以，我们可以先实现一个自己的接口。为了跟上一篇的代码保持一致，在该接口中我们声明的方法的名字也叫update。注意，我们当然也可以不取这个名字，甚至还可以增加其它的方法声明，全看我们的业务需要。</p><blockquote><p>package com.zuikc.events;</p><p>import java.util.Observable;</p><p>public interface HomeworkListener extends java.util.EventListener {</p><p>public void update(HomeworkEventObject o, Object arg);<br/>}</p></blockquote><p>继而实现观察者类（学生），如下：</p><blockquote><p>package com.zuikc.events;</p><p>public class Student implements HomeworkListener{<br/>private String name;<br/>public Student(String name){<br/>this.name = name;<br/>}<br/>@Override<br/>public void update(HomeworkEventObject o, Object arg) {<br/>Teacher teacher = o.getTeacher();<br/>System.out.printf(&#34;学生%s观察到（实际是被通知）%s布置了作业《%s》 \\n&#34;, this.name, teacher.getName(), arg);<br/>}</p><p>}</p></blockquote><p>对比一下上篇，有变动没？</p><p>继而实现事件子类，如下：</p><blockquote><p>package com.zuikc.events;</p><p>public class HomeworkEventObject extends java.util.EventObject {</p><p>public HomeworkEventObject(Object source) {<br/>super(source);<br/>}<br/>public HomeworkEventObject(Teacher teacher) {<br/>super(teacher);<br/>}<br/>public Teacher getTeacher(){<br/>return (Teacher) super.getSource();<br/>}</p><p>}</p></blockquote><p>在这个类中，指的关注的就是这个getTeacher方法，它封装了父类EventObject的getSource方法，得到的就是事件源。理论上，我们使用父类的getSource方法也可行，但是重新在子类封装一下，可读性更强一点。</p><p>然后呢，然后就是我们的教师类，教师类就是事件源，如下：</p><blockquote><p>package com.zuikc.events;</p><p>import java.util.*;</p><p>public class Teacher {<br/>private String name;<br/>private List&lt;String&gt; homeworks;<br/>/* <br/>* 教师类要维护一个自己监听器（学生）的列表，为什么？<br/>* 在观察者模式中，教师是被观察者，继承自java.util.Observable，Observable中含了这个列表<br/>* 现在我们没有这个列表了，所以要自己创建一个<br/>*/<br/>private Set&lt;HomeworkListener&gt; homeworkListenerList;</p><p>public String getName() {<br/>return this.name;<br/>}</p><p>public Teacher(String name) {<br/>this.name = name;<br/>this.homeworks = new ArrayList&lt;String&gt;();<br/>this.homeworkListenerList = new HashSet&lt;HomeworkListener&gt;();<br/>}</p><p>public void setHomework(String homework) {<br/>System.out.printf(&#34;%s布置了作业%s \\n&#34;, this.name, homework);<br/>homeworks.add(homework);<br/>HomeworkEventObject event = new HomeworkEventObject(this);<br/>/*<br/>* 在观察者模式中，我们直接调用Observable的notifyObservers来通知被观察者<br/>* 现在我们只能自己通知了~~<br/>*/<br/>for (HomeworkListener listener : homeworkListenerList) {<br/>listener.update(event, homework);<br/>}</p><p>}<br/>public void addObserver(HomeworkListener homeworkListener){<br/>homeworkListenerList.add(homeworkListener);<br/>}</p><p>}</p></blockquote><p>这个类稍微长了那么一点点，有几个地方值得注意：</p><blockquote><p>第一处地方，Teacher没有父类了，Teacher作为事件中的事件源Source被封装到HomeworkEventObject中了。这没有什么不好的，业务对象和框架代码隔离开来，解耦的非常好，但是正因为如此，我们需要在Teacher中自己维护一个Student的列表，于是，我们看到了homeworkListenerList这个变量。</p><p>第二处，在观察者模式中，我们直接调用Observable的notifyObservers来通知被观察者，现在我们只能靠自己了，于是我们看到了这段代码，</p><p>for (HomeworkListener listener : homeworkListenerList) {<br/>listener.update(event, homework);<br/>}</p></blockquote><p>这一点问题也没有，我们继续来看客户端代码吧：</p><blockquote><p>package com.zuikc.events;</p><p>import java.util.EventListener;</p><p>public class Client {</p><p>public static void main(String[] args) {<br/>Student student1= new Student(&#34;张三&#34;);<br/>Student student2 = new Student(&#34;李四&#34;);<br/>Teacher teacher1 = new Teacher(&#34;zuikc&#34;);<br/>teacher1.addObserver(student1);<br/>teacher1.addObserver(student2);<br/>teacher1.setHomework(&#34;事件机制第二天作业&#34;);<br/>}</p><p>}</p></blockquote><p>结果如下：</p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-bb4df2f1b1e708139712a762ebaab43d_b.png\" data-rawwidth=\"556\" data-rawheight=\"124\" class=\"origin_image zh-lightbox-thumb\" width=\"556\" data-original=\"https://pic2.zhimg.com/v2-bb4df2f1b1e708139712a762ebaab43d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;556&#39; height=&#39;124&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"556\" data-rawheight=\"124\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"556\" data-original=\"https://pic2.zhimg.com/v2-bb4df2f1b1e708139712a762ebaab43d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-bb4df2f1b1e708139712a762ebaab43d_b.png\"/></figure><p>从客户端的角度来说，我们几乎完全没有更改任何地方，跟观察者模式的客户端代码一模一样，但是内部的实现机制上，我们却使用了事件机制。</p><p>现在我们来总结下，观察者模式和事件驱动模型的几个不同点：</p><p>1：事件源不再继承任何模式或者模型本身的父类，彻底将业务代码解耦出来；</p><p>2：在事件模型中，每个监听者（观察者）都需要实现一个自己的接口。没错，看看我们的鼠标事件，分表就有单击、双击、移动等等的事件，这分别就是增加了代码的灵活性；</p><p>不管怎么说，我们用一堆小白代码实现了一个事件驱动模型的样例，虽然没什么实际用处，但也解释了原理，接下来的一节，我们就要看看那些稍微复杂且看上去很有用的代码了！</p>", 
            "topic": [
                {
                    "tag": "IT 培训", 
                    "tagLink": "https://api.zhihu.com/topics/19593700"
                }, 
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }, 
                {
                    "tag": "软件培训", 
                    "tagLink": "https://api.zhihu.com/topics/19773733"
                }
            ], 
            "comments": [
                {
                    "userName": "drYu", 
                    "userLink": "https://www.zhihu.com/people/e57ebb0a18afc352745d51253d092708", 
                    "content": "我觉得你直接定义一个支持泛型Event&lt;Source,ChangedData&gt;类对事件进行抽象表示更好，而不需要定义一大堆具体的事件。<br>期待您的下篇文章。", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "陆敏技", 
                            "userLink": "https://www.zhihu.com/people/eb652569706cbecf6742ba80003bad3f", 
                            "content": "<p>是的。不过我这一主题主要是面向小白系列，很多人可能连泛型是什么都还不知道，所以尽量从简了：-）</p>", 
                            "likes": 0, 
                            "replyToAuthor": "drYu"
                        }
                    ]
                }, 
                {
                    "userName": "知乎用户", 
                    "userLink": "https://www.zhihu.com/people/0", 
                    "content": "<p>太棒了，一直思考，观察者模式，事件监听，发布订阅，他们之间到底有啥区别？作者说了观察者模式和事件监听模型的区别。那么发布订阅呢？请问有文章比较吗？</p>", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/27185877", 
            "userName": "陆敏技", 
            "userLink": "https://www.zhihu.com/people/eb652569706cbecf6742ba80003bad3f", 
            "upvote": 27, 
            "title": "从零开始理解JAVA事件处理机制（1）", 
            "content": "<p>“事件”这个词已经被滥用了。正因为“事件”的被滥用，很多人在用到事件的时候不求甚解，依样画葫芦，导致学习工作了很多年，还是不清楚什么是事件处理器、什么是事件持有者。所以，如果你对于Event这个词还是心存恐惧，那么本文正是你需要的。让我们从易到难，从具体到抽象，一步一步来解释java事件处理机制。</p><p><strong>一：观察者模式</strong></p><p>要了解事件和监听，我们首先来必须要了解观察者模式。</p><p>什么是观察者模式，我们先来看一个熟悉的场景：</p><blockquote><p>1：教师布置作业，<strong>通知</strong>学生；</p><p>2：学生观察到老师布置了作业，开始做作业；</p></blockquote><p>首先我明确下，我历来是十分反对以阿猫阿狗、老师学生这样的场景来阐述代码问题的，所以该主题的最后肯定会回到实际代码中来。言归正传，在这个场景中，学生就是观察者，教师就是被观察者，但是大家一定要注意：</p><blockquote><p>教师作为被观察者，实际上是掌握着主动的，且看上文中我加粗的“通知”二字，因为这貌似看上去简简单单的通知，事实上却要做很多事情（写很多代码）。</p></blockquote><p>好了，我们先来实现上面的场景：</p><figure><noscript><img src=\"https://pic4.zhimg.com/v2-8d6726829e25797ba881cef61ebf84d7_b.png\" data-rawwidth=\"640\" data-rawheight=\"340\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-8d6726829e25797ba881cef61ebf84d7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;340&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"640\" data-rawheight=\"340\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-8d6726829e25797ba881cef61ebf84d7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-8d6726829e25797ba881cef61ebf84d7_b.png\"/></figure>代码：<p>观察者，学生</p><blockquote><p>package com.zuikc.events;</p><p>import java.util.Observable;</p><p>public class Student implements java.util.Observer {</p><p>    private String name;<br/>    public Student(String name){<br/>        this.name = name;<br/>    }<br/>    @Override<br/>    public void update(Observable o, Object arg) {<br/>        Teacher teacher = (Teacher) o;<br/>        System.out.printf(&#34;学生%s观察到（实际是被通知）%s布置了作业《%s》 \\n&#34;, this.name, teacher.getName(), arg);<br/>    }</p><p>}</p></blockquote><p>被观察者，教师</p><blockquote><p>package com.zuikc.events;</p><p>import java.util.*;</p><p>public class Teacher extends java.util.Observable {</p><p>    private String name;<br/>    private List&lt;String&gt; books;</p><p>    public String getName() {<br/>        return this.name;<br/>    }</p><p>    public Teacher(String name) {<br/>        this.name = name;<br/>        books = new ArrayList&lt;String&gt;();<br/>    }</p><p>    public void setHomework(String homework) {<br/>        System.out.printf(&#34;%s布置了作业%s \\n&#34;, this.name, homework);<br/>        books.add(homework);<br/>        setChanged();<br/>        notifyObservers(homework);</p><p>    }<br/>}</p></blockquote><p>客户端：</p><blockquote><p>package com.zuikc.events;</p><p>public class Client {</p><p>    public static void main(String[] args) {<br/>        Student student1= new Student(&#34;张三&#34;);<br/>        Student student2 = new Student(&#34;李四&#34;);<br/>        Teacher teacher1 = new Teacher(&#34;zuikc&#34;);<br/>        teacher1.addObserver(student1);<br/>        teacher1.addObserver(student2);<br/>        teacher1.setHomework(&#34;事件机制第一天作业&#34;);<br/>    }</p><p>}</p></blockquote><p>很多初学者有个错觉，考虑“观察”这个动作是主动的，所以就认为在代码实现上，Reader是主动调用自己的update，但是很遗憾，当然不是，在代码实现上，update是“被观察者”Teacher主动调用的。有人说，我只在Teacher中看到了</p><blockquote><p>        setChanged();<br/>        notifyObservers(homework);</p></blockquote><p>没有看到它调用update呀，那么请查看它的父类Observable，在notifyObservers方法中有，</p><blockquote><p>for (int i = arrLocal.length-1; i&gt;=0; i--)<br/>    ((Observer)arrLocal[i]).update(this, arg);</p></blockquote><p>看看结果吧：</p><figure><noscript><img src=\"https://pic2.zhimg.com/v2-b4b68d18dc6fbcf813d0ac9061524941_b.png\" data-rawwidth=\"640\" data-rawheight=\"103\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-b4b68d18dc6fbcf813d0ac9061524941_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;103&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"640\" data-rawheight=\"103\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-b4b68d18dc6fbcf813d0ac9061524941_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-b4b68d18dc6fbcf813d0ac9061524941_b.png\"/></figure><p>注意，以上代码中，我直接使用了java.util包中的类Observable和接口Observer，我们当然也可以自己写这两个东东。</p><p><strong>二：基础版观察者模式</strong></p><p>初学者对于一上来就使用java.util中的api不习惯，可能觉得看不到摸不着，那我们就自己来写一个基础版的观察者模式，大家感受下，在写的过程中，一定要对照上节中的UML图和代码，然后心中默念：它们没有区别，它们没有区别！</p><p>上图：</p><figure><noscript><img src=\"https://pic1.zhimg.com/v2-1341acfcc9fb71ccdf0ecb98a68b3768_b.png\" data-rawwidth=\"640\" data-rawheight=\"341\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-1341acfcc9fb71ccdf0ecb98a68b3768_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;640&#39; height=&#39;341&#39;&gt;&lt;/svg&gt;\" data-rawwidth=\"640\" data-rawheight=\"341\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-1341acfcc9fb71ccdf0ecb98a68b3768_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-1341acfcc9fb71ccdf0ecb98a68b3768_b.png\"/></figure><p>上代码：</p><p>观察者，接口</p><blockquote><p>package com.zuikc;</p><p>public interface Observer {</p><p>    void update(Observable o);<br/>}</p></blockquote><p>具体观察者，我写了两个：</p><blockquote><p>class ConcreteObserver1 implements Observer {</p><p>    public void update(Observable o) {<br/>        System.out.println(&#34;观察者1观察到&#34; + o.getClass().getSimpleName() + &#34;发生变化&#34;);<br/>        System.out.println(&#34;观察者1做出响应&#34;);<br/>    }<br/>}</p><p>class ConcreteObserver2 implements Observer {</p><p>    public void update(Observable o) {<br/>        System.out.println(&#34;观察者2观察到&#34; + o.getClass().getSimpleName() + &#34;发生变化&#34;);<br/>        System.out.println(&#34;观察者2做出响应&#34;);<br/>    }<br/>}</p></blockquote><p>观察者</p><blockquote><p>package com.zuikc;</p><p>import java.util.ArrayList;<br/>import java.util.List;</p><p>public class Observable {</p><p>    List&lt;Observer&gt; observers = new ArrayList&lt;Observer&gt;();</p><p>    public void addObserver(Observer o) {<br/>        observers.add(o);<br/>    }</p><p>    public void doSomething() {<br/>        System.out.println(&#34;我是被观察者，我发生变化了&#34;);<br/>        // 主动去通知所有的观察者<br/>        notifyObservers();<br/>    }</p><p>    public void notifyObservers() {<br/>        for (Observer observer : observers) {<br/>            observer.update(this);<br/>        }<br/>    }<br/>}</p></blockquote><p>客户端：</p><blockquote><p>package com.zuikc;</p><p>public class Client {</p><p>    public static void main(String[] args) {<br/>        Observable observable = new Observable();<br/>        observable.addObserver(new ConcreteObserver1());<br/>        observable.addObserver(new ConcreteObserver2());<br/>        observable.doSomething();<br/>    }</p><p>}</p></blockquote><p>大家可以自己运行下代码，看看发生了什么。</p><p>在上面代码中，我们自己了一个接口，一个被观察者类，虽然简单了一点，但是却达到了演示的效果。当然，我们也可以原封不动的把JDK中的源码拷贝出来作为我们这两个文件的代码。</p><p>如果对于上面的代码已经相当之熟悉，你还可以研究下update方法，在第一小节中我们是带了arg参数的，但是这个基础版本中没带。无所谓，你想带就带，不想带就不想带，代码即自由，只要你实现了功能。</p><p><strong>三：观察者模式的用意</strong></p><p>基础版的观察者模式毕竟太简单，在我们第一节中的代码中，我们可以总结出：</p><p>1：教师类和学生类无关，他只依赖观察者接口，如果有一天，他的作业不仅仅布置给学生，作为优秀讲师，还要发送给全校的老师作为参考，那么只要老师这个类也实现观察者接口，我们同样可以将老师添加到这个教师的观察者列表中；</p><p>2：观察者模式分离了观察者和被观察者自身的责任，让类各自维护自己的功能，提高了系统的可重用性；</p><p>3：观察看上去是一个主动的行为，但是其实观察者不是主动调用自己的业务代码的，相反，是被观察者调用的。所以，观察者模式还有另一个名字，叫发布-订阅模式，我认为，后者更贴切；</p><p>观察者模式还有另外一种形态，就是事件驱动模型，这两种方式在实现机制上是非常接近的，在理解了观察者模式的基础上，理解事件驱动，就非常简单了。</p>", 
            "topic": [
                {
                    "tag": "IT 培训", 
                    "tagLink": "https://api.zhihu.com/topics/19593700"
                }, 
                {
                    "tag": "培训", 
                    "tagLink": "https://api.zhihu.com/topics/19568266"
                }, 
                {
                    "tag": "Java", 
                    "tagLink": "https://api.zhihu.com/topics/19561132"
                }
            ], 
            "comments": [
                {
                    "userName": "知乎用户", 
                    "userLink": "https://www.zhihu.com/people/0", 
                    "content": "<p>Java9之后不推荐使用Observer啦呀？</p><a class=\"comment_sticker\" href=\"https://pic3.zhimg.com/v2-744accde1bb3117fc74e1af0e0ac496e.gif\" data-width=\"\" data-height=\"\">[小建议]</a>", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }
    ], 
    "url": "https://zhuanlan.zhihu.com/zuikc"
}

{
    "title": "「玩转树莓派」", 
    "description": "", 
    "followers": [
        "https://www.zhihu.com/people/milo-68", 
        "https://www.zhihu.com/people/bo-jun-yi-xiao-37-47", 
        "https://www.zhihu.com/people/ye-hang-chuan-84-40", 
        "https://www.zhihu.com/people/ce-guo-jing", 
        "https://www.zhihu.com/people/jing-zhe-wu-yan-yi-dui-de-shi-ke-41", 
        "https://www.zhihu.com/people/double-liu-64", 
        "https://www.zhihu.com/people/li-zeng-guo-99", 
        "https://www.zhihu.com/people/dong-shuai-39-18", 
        "https://www.zhihu.com/people/gu-xiao-hua-96", 
        "https://www.zhihu.com/people/tsunghan-1", 
        "https://www.zhihu.com/people/asyom", 
        "https://www.zhihu.com/people/explerora", 
        "https://www.zhihu.com/people/liao-jin-yun", 
        "https://www.zhihu.com/people/bei-chuan-2-75", 
        "https://www.zhihu.com/people/pecker-lu", 
        "https://www.zhihu.com/people/li-wei-92-15", 
        "https://www.zhihu.com/people/xiu-wu-70-78", 
        "https://www.zhihu.com/people/wang-hao-80-16-50", 
        "https://www.zhihu.com/people/cdevil", 
        "https://www.zhihu.com/people/wang-zhen-tao-75", 
        "https://www.zhihu.com/people/leon-zhou-86", 
        "https://www.zhihu.com/people/ma-ge-88-66", 
        "https://www.zhihu.com/people/tsly8898", 
        "https://www.zhihu.com/people/chen-pei-60-40", 
        "https://www.zhihu.com/people/huang-qing-33-58", 
        "https://www.zhihu.com/people/reed-84-49", 
        "https://www.zhihu.com/people/icewis", 
        "https://www.zhihu.com/people/qu-zhe-chong", 
        "https://www.zhihu.com/people/xiao-mao-lu-65", 
        "https://www.zhihu.com/people/yun-qing-10-99", 
        "https://www.zhihu.com/people/tan-yi-ji-80", 
        "https://www.zhihu.com/people/alahlll", 
        "https://www.zhihu.com/people/dumin-57", 
        "https://www.zhihu.com/people/she-liang", 
        "https://www.zhihu.com/people/ke-ke-23-12", 
        "https://www.zhihu.com/people/qian-qiu-xue-16", 
        "https://www.zhihu.com/people/wang-jing-bo-27-88", 
        "https://www.zhihu.com/people/qin-yan-zhi-10-53", 
        "https://www.zhihu.com/people/qi-zhu-qu-kan-hai-31", 
        "https://www.zhihu.com/people/ki1381", 
        "https://www.zhihu.com/people/zhu-63-19", 
        "https://www.zhihu.com/people/mr-fs-49", 
        "https://www.zhihu.com/people/watson-jay", 
        "https://www.zhihu.com/people/xiang-shou-86", 
        "https://www.zhihu.com/people/zhu-qing-ting-76-27", 
        "https://www.zhihu.com/people/guting-wu", 
        "https://www.zhihu.com/people/maverick43", 
        "https://www.zhihu.com/people/shu-du-you-xi-84", 
        "https://www.zhihu.com/people/xing-123456-56", 
        "https://www.zhihu.com/people/yhy-98-99", 
        "https://www.zhihu.com/people/hao-qi-de-mao-hao-qi-de-mao", 
        "https://www.zhihu.com/people/shi-san-shu-63-94", 
        "https://www.zhihu.com/people/xiu-qi-che-de-shu-ke"
    ], 
    "article": [
        {
            "url": "https://zhuanlan.zhihu.com/p/71708030", 
            "userName": "小柒", 
            "userLink": "https://www.zhihu.com/people/9a3f67b93b705f9c34bdb33a595c3450", 
            "upvote": 3, 
            "title": "「玩转树莓派」树莓派 3B+ 配置无线WiFi", 
            "content": "<h2>前言</h2><p>网线不方便还花钱，有自带的无线 WiFi 模块为啥不用，未来是属于5G的。</p><h2>网络模式</h2><p>这里我们先介绍两种网络模式，WPA-Personal 与 WPA-Enterprise。</p><h3>WPA-Personal</h3><p>大多数家庭网络属于这种模式，当在无线路由器或接入点（AP）上设置密码时，用户在连接到Wi-Fi网络时必须输入密码。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c46b989c41133dac8a63accfca3e85c3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"499\" data-rawheight=\"165\" class=\"origin_image zh-lightbox-thumb\" width=\"499\" data-original=\"https://pic4.zhimg.com/v2-c46b989c41133dac8a63accfca3e85c3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;499&#39; height=&#39;165&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"499\" data-rawheight=\"165\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"499\" data-original=\"https://pic4.zhimg.com/v2-c46b989c41133dac8a63accfca3e85c3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-c46b989c41133dac8a63accfca3e85c3_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>在PSK模式下，无法单独或集中管理无线访问。一个密码适用于所有用户，一旦在原始无线路由器或AP上手动修改，它将在所有无线客户端上手动更改。</p><p>密码存储在无线客户端上。因此，计算机上的任何人都可以连接到网络，也可以看到密码。</p><h3>WPA-Enterprise</h3><p>此模式提供了业务环境中无线网络所需的安全性。设置起来比较复杂，它可以对访问Wi-Fi网络进行个性化和集中的控制。当用户尝试连接到网络时，他们需要显示他们的登录凭据。</p><p>此模式支持802.1x RADIUS认证，适用于部署RADIUS服务器的情况。只有连接RADIUS服务器进行客户端认证时，才应使用WPA-Enterprise。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-5ce89362cce4f3e7ce7db7fe5547adc0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"493\" data-rawheight=\"224\" class=\"origin_image zh-lightbox-thumb\" width=\"493\" data-original=\"https://pic1.zhimg.com/v2-5ce89362cce4f3e7ce7db7fe5547adc0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;493&#39; height=&#39;224&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"493\" data-rawheight=\"224\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"493\" data-original=\"https://pic1.zhimg.com/v2-5ce89362cce4f3e7ce7db7fe5547adc0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-5ce89362cce4f3e7ce7db7fe5547adc0_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>用户从未处理实际的加密密钥。在用户呈现他们的登录凭据后，它们在后台被安全地创建并分配给每个用户会话。这样可以防止人们从计算机获取网络密钥。</p><h2>配置</h2><h3>家庭网络配置</h3><p>使用命令：sudo raspi-config进行树莓派配置，进入如下界面，选择 2. Network Options。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-0fe26c703333fa6492a509872e3e6be4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1256\" data-rawheight=\"330\" class=\"origin_image zh-lightbox-thumb\" width=\"1256\" data-original=\"https://pic1.zhimg.com/v2-0fe26c703333fa6492a509872e3e6be4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1256&#39; height=&#39;330&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1256\" data-rawheight=\"330\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1256\" data-original=\"https://pic1.zhimg.com/v2-0fe26c703333fa6492a509872e3e6be4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-0fe26c703333fa6492a509872e3e6be4_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>选择 N2 wi-fi。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-dfbd266bd8d3e7b79e5c442b24a86be7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1290\" data-rawheight=\"330\" class=\"origin_image zh-lightbox-thumb\" width=\"1290\" data-original=\"https://pic4.zhimg.com/v2-dfbd266bd8d3e7b79e5c442b24a86be7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1290&#39; height=&#39;330&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1290\" data-rawheight=\"330\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1290\" data-original=\"https://pic4.zhimg.com/v2-dfbd266bd8d3e7b79e5c442b24a86be7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-dfbd266bd8d3e7b79e5c442b24a86be7_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>输入SSID和密码即可，SSID即为Wifi名称。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-5bf75ec5261ec18f4ff52054f53ead14_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"704\" data-rawheight=\"370\" class=\"origin_image zh-lightbox-thumb\" width=\"704\" data-original=\"https://pic1.zhimg.com/v2-5bf75ec5261ec18f4ff52054f53ead14_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;704&#39; height=&#39;370&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"704\" data-rawheight=\"370\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"704\" data-original=\"https://pic1.zhimg.com/v2-5bf75ec5261ec18f4ff52054f53ead14_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-5bf75ec5261ec18f4ff52054f53ead14_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>当然你也可以通过以下方式连接WiFi，使用如下命令可以扫描附近的无线网：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo iwlist wlan0 scan</code></pre></div><p>添加有密码的WIFI网络，通过配置wpa_supplicant.conf可以设置要连接的无线网。</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo vim /etc/wpa_supplicant/wpa_supplicant.conf</code></pre></div><p>在文件末尾出添加一下代码，并替换掉ssid_name以及password即可。</p><div class=\"highlight\"><pre><code class=\"language-text\">network={\n        ssid=&#34;ssid_name&#34;\n        key_mgmt=WPA-PSK\n        psk=&#34;password&#34;\n}</code></pre></div><p>通过</p><div class=\"highlight\"><pre><code class=\"language-text\">ifconfig wlan0</code></pre></div><p>可以查看IP地址是否分配成功</p><h3>企业认证网络配置</h3><p>企业内部网络需要账号密码。</p><p>编辑无线配置：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo vim /etc/wpa_supplicant/wpa_supplicant.conf</code></pre></div><p>仅供参考：</p><div class=\"highlight\"><pre><code class=\"language-text\">country=GB\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nupdate_config=1\n\nnetwork={\n  ssid=&#34;eduroam&#34;\n  key_mgmt=WPA-EAP\n  pairwise=CCMP TKIP\n  group=CCMP TKIP\n  eap=PEAP TTLS\n  # 账号\n  identity=&#34;user_sample&#34;\n  # 密码\n  password=&#34;password_sample&#34;\n  #认证证书，如果没有注释掉即可\n  ca_cert=&#34;/etc/certs/cacert.pem&#34;\n  phase1=&#34;peapver=0&#34;\n  phase2=&#34;MSCHAPV2&#34;\n  scan_ssid=1\n  mode=0\n  auth_alg=OPEN\n  proto=WPA RSN\n  proactive_key_caching=1\n  }</code></pre></div><p>配置完成以后执行命令：</p><div class=\"highlight\"><pre><code class=\"language-text\">wpa_supplicant -i wlan0 -c /etc/wpa_supplicant/wpa_supplicant.conf  -B\n# 出现以下提示说明配置成功\nSuccessfully initialized wpa_supplicant</code></pre></div><p>kill掉正在执行的wpa_supplicant程序</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo killall -q wpa_supplicant</code></pre></div><h2>小结</h2><p>由于安装的 Linux 系统没有图形界面，可能会比有图形的稍微麻烦一下下。</p><h2>参考</h2><a href=\"https://link.zhihu.com/?target=https%3A//wiki.archlinux.org/index.php/WPA_supplicant\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">WPA supplicant - ArchWiki</a><a href=\"https://link.zhihu.com/?target=https%3A//service.tp-link.com.cn/detail_article_2307.html\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">校园无线覆盖解决方案 - TP-LINK 服务支持</a><a href=\"https://link.zhihu.com/?target=http%3A//www.luyouren.com/2/4039.html\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-63756896035d371bd8e3981947464ab3_180x120.jpg\" data-image-width=\"499\" data-image-height=\"165\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">WPA-Personal与WPA-Enterprise之间的区别 - 无线路由器设置 - 路由人</a><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-2a95f4c5e26498dbde6097c73cf84785_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"258\" class=\"content_image\" width=\"258\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;258&#39; height=&#39;258&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"258\" class=\"content_image lazy\" width=\"258\" data-actualsrc=\"https://pic2.zhimg.com/v2-2a95f4c5e26498dbde6097c73cf84785_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"60\" data-thumbnail=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"620\" data-original=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;620&#39; height=&#39;60&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"60\" data-thumbnail=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"620\" data-original=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.gif\"/></figure><p>作者： <a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/about.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">小柒</a><br/>出处： <a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">https://blog.52itstyle.vip</a></p>", 
            "topic": [
                {
                    "tag": "树莓派（Raspberry Pi）", 
                    "tagLink": "https://api.zhihu.com/topics/19737690"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/70309119", 
            "userName": "小柒", 
            "userLink": "https://www.zhihu.com/people/9a3f67b93b705f9c34bdb33a595c3450", 
            "upvote": 0, 
            "title": "「玩转树莓派」树莓派 3B+ 配置静态IP", 
            "content": "<h2>前言</h2><p>特殊场景，树莓派盒子需要一个固定的内网IP。</p><h2>方法</h2><p>Linux下输入以下命令，查询路由以及网关：</p><div class=\"highlight\"><pre><code class=\"language-text\">ip route show</code></pre></div><p>输出：</p><div class=\"highlight\"><pre><code class=\"language-text\">pi@raspberrypi:/ $ ip route show\ndefault via 10.136.168.1 dev eth0 src 10.136.168.60 metric 202 \n10.136.168.0/24 dev eth0 proto kernel scope link src 10.136.168.60 metric 202</code></pre></div><p>然后编辑文件/etc/dhcpcd.conf</p><div class=\"highlight\"><pre><code class=\"language-text\">root@raspberrypi:~# vim /etc/dhcpcd.conf</code></pre></div><p>修改以下参数配置，如果没有就在文件底部添加。</p><p>有线配置：</p><div class=\"highlight\"><pre><code class=\"language-text\"># 指定接口 eth0\ninterface eth0\n# 指定静态IP，/24表示子网掩码为 255.255.255.0\nstatic ip_address=10.136.168.60/24\n# 路由器/网关IP地址\nstatic routers=10.136.168.1\n# 自定义DNS服务器\nstatic domian_name_servers=114.114.114.114</code></pre></div><p>无线配置：</p><div class=\"highlight\"><pre><code class=\"language-text\">interface wlan0\nstatic ip_address=10.136.168.60/24\nstatic routers=10.136.168.1\nstatic domian_name_servers=114.114.114.114</code></pre></div><p>修改完成后，按esc键后输入 :wq 保存，重启树莓派就生效了</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo reboot</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-2a95f4c5e26498dbde6097c73cf84785_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"258\" class=\"content_image\" width=\"258\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;258&#39; height=&#39;258&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"258\" class=\"content_image lazy\" width=\"258\" data-actualsrc=\"https://pic2.zhimg.com/v2-2a95f4c5e26498dbde6097c73cf84785_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"60\" data-thumbnail=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"620\" data-original=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;620&#39; height=&#39;60&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"60\" data-thumbnail=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"620\" data-original=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.gif\"/></figure><p>作者： <a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/about.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">小柒</a><br/>出处： <a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">https://blog.52itstyle.vip</a><br/>分享是快乐的，也见证了个人成长历程，文章大多都是工作经验总结以及平时学习积累，基于自身认知不足之处在所难免，也请大家指正，共同进步。</p>", 
            "topic": [
                {
                    "tag": "树莓派（Raspberry Pi）", 
                    "tagLink": "https://api.zhihu.com/topics/19737690"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/66938457", 
            "userName": "小柒", 
            "userLink": "https://www.zhihu.com/people/9a3f67b93b705f9c34bdb33a595c3450", 
            "upvote": 0, 
            "title": "「玩转树莓派」树莓派 3B+ 查询本机IP", 
            "content": "<h2>前言</h2><p>虽然很简单还是记录一下吧，因为有球友提问，这里就说下最简单的两种方法。</p><h2>方法</h2><p>1）如果你有路由器的权限，可以直接登录后台查询，一般在DHCP地址分配信息中就可以查询到。但是也有特殊情况，我的就是有时候死活出不来，多插拔几次网线可能就好了。</p><p>2）直接使用 SSH 工具连接，主机 raspberrypi 端口 22 用户名 pi 密码 raspberry，登录进去使用 ifconfig 命令查看本机Ip。</p><p>这里推荐使用第二种方法。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-2a95f4c5e26498dbde6097c73cf84785_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"258\" class=\"content_image\" width=\"258\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;258&#39; height=&#39;258&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"258\" class=\"content_image lazy\" width=\"258\" data-actualsrc=\"https://pic2.zhimg.com/v2-2a95f4c5e26498dbde6097c73cf84785_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"60\" data-thumbnail=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"620\" data-original=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;620&#39; height=&#39;60&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"60\" data-thumbnail=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"620\" data-original=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.gif\"/></figure><p>作者： <a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/about.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">小柒</a><br/>出处： <a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">https://blog.52itstyle.vip</a><br/>分享是快乐的，也见证了个人成长历程，文章大多都是工作经验总结以及平时学习积累，基于自身认知不足之处在所难免，也请大家指正，共同进步。</p>", 
            "topic": [
                {
                    "tag": "树莓派（Raspberry Pi）", 
                    "tagLink": "https://api.zhihu.com/topics/19737690"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/65240157", 
            "userName": "小柒", 
            "userLink": "https://www.zhihu.com/people/9a3f67b93b705f9c34bdb33a595c3450", 
            "upvote": 14, 
            "title": "「玩转树莓派」树莓派 3B+ 安装 OpenCv", 
            "content": "<p></p><h2>前言</h2><p>据说，网上有人安装了 7 个月才在树莓派上把 OpenCv 安装成功，然后我就想挑战以下，能不能在七分钟内搞定。</p><h2>开始</h2><p>安装基础组件：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo apt-get update\nsudo apt-get install libjpeg-dev libatlas-base-dev libjpeg-dev libtiff5-dev libpng12-dev libqtgui4 libqt4-test libjasper-dev</code></pre></div><p>然后：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo pip3 install opencv-python</code></pre></div><p>一般情况，你是不可能安装成功的，99.999% 会出现以下错误：</p><div class=\"highlight\"><pre><code class=\"language-text\">Collecting opencv-python\n  Downloading https://www.piwheels.org/simple/opencv-python/opencv_python-3.4.4.19-cp35-cp35m-linux_armv7l.whl (7.4MB)\n    45% |██████████████▍                 | 3.3MB 15kB/s eta 0:04:20\nTHESE PACKAGES DO NOT MATCH THE HASHES FROM THE REQUIREMENTS FILE. If you have updated the package versions, please update the hashes. Otherwise, examine the package contents carefully; someone may have tampered with them.\n    opencv-python from https://www.piwheels.org/simple/opencv-python/opencv_python-3.4.4.19-cp35-cp35m-linux_armv7l.whl#sha256=329d9d9fdd62b93d44a485aeaab4602c6f5b8555ea8bcc7dbcdc62c90cfe2c3f:\n        Expected sha256 329d9d9fdd62b93d44a485aeaab4602c6f5b8555ea8bcc7dbcdc62c90cfe2c3f\n             Got        869c7994c40b84ac09f244f768db9269d52d3265d376441e8516a47f24711ef2</code></pre></div><p>这可能是由于网速太慢了，没有下载完整的文件，所以不完整的文件的md5和期望的不一样。</p><p>我们首先下载 whl 文件到本地：</p><div class=\"highlight\"><pre><code class=\"language-text\"># 浏览器直接访问就可以\nhttps://www.piwheels.org/simple/opencv-python/opencv_python-3.4.4.19-cp35-cp35m-linux_armv7l.whl</code></pre></div><p>然后上传到树莓派，使用以下命令安装：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo pip3 install opencv_python-3.4.4.19-cp35-cp35m-linux_armv7l.whl</code></pre></div><p>如果出现以下代码，说明安装成功：</p><div class=\"highlight\"><pre><code class=\"language-text\">Processing ./opencv_python-3.4.4.19-cp35-cp35m-linux_armv7l.whl\nRequirement already satisfied: numpy&gt;=1.12.1 in /usr/lib/python3/dist-packages (from opencv-python==3.4.4.19)\nInstalling collected packages: opencv-python\nSuccessfully installed opencv-python-3.4.4.19</code></pre></div><h2>小结</h2><p>不想说话，静静的再等五分钟。</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-2a95f4c5e26498dbde6097c73cf84785_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"258\" class=\"content_image\" width=\"258\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;258&#39; height=&#39;258&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"258\" class=\"content_image lazy\" width=\"258\" data-actualsrc=\"https://pic2.zhimg.com/v2-2a95f4c5e26498dbde6097c73cf84785_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"60\" data-thumbnail=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"620\" data-original=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;620&#39; height=&#39;60&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"60\" data-thumbnail=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"620\" data-original=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.gif\"/></figure><p>作者： <a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/about.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">小柒</a><br/>出处： <a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">https://blog.52itstyle.vip</a><br/>分享是快乐的，也见证了个人成长历程，文章大多都是工作经验总结以及平时学习积累，基于自身认知不足之处在所难免，也请大家指正，共同进步。</p>", 
            "topic": [
                {
                    "tag": "树莓派（Raspberry Pi）", 
                    "tagLink": "https://api.zhihu.com/topics/19737690"
                }, 
                {
                    "tag": "OpenCV", 
                    "tagLink": "https://api.zhihu.com/topics/19587715"
                }, 
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }
            ], 
            "comments": [
                {
                    "userName": "bobo", 
                    "userLink": "https://www.zhihu.com/people/7007f2cecabadff06c950470f2ff3aa2", 
                    "content": "真的太强了，大佬!", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "大宇", 
                    "userLink": "https://www.zhihu.com/people/7131efe4f75fd1230d1cbcc74b8c14a5", 
                    "content": "<p>看图找组织</p>", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "Enkidu", 
                    "userLink": "https://www.zhihu.com/people/12d3d05d84a67b14cafd2e32ba43acf5", 
                    "content": "要是网速问题为什么不换个pip源，而且如果这种方法也安不上是不是直接换apt安装？", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "小柒", 
                            "userLink": "https://www.zhihu.com/people/9a3f67b93b705f9c34bdb33a595c3450", 
                            "content": "你可以试试 如果有更好的办法 <a href=\"https://pic4.zhimg.com/v2-ba306425d0a7aee2c7260381f1bf7b97.gif\" class=\"comment_sticker\" data-width=\"0\" data-height=\"0\">[欢呼]</a>", 
                            "likes": 0, 
                            "replyToAuthor": "Enkidu"
                        }, 
                        {
                            "userName": "Enkidu", 
                            "userLink": "https://www.zhihu.com/people/12d3d05d84a67b14cafd2e32ba43acf5", 
                            "content": "<a href=\"https://zhuanlan.zhihu.com/p/46032511\" class=\"internal\"><span class=\"invisible\">https://</span><span class=\"visible\">zhuanlan.zhihu.com/p/46</span><span class=\"invisible\">032511</span><span class=\"ellipsis\"></span></a>，很容易就能找到在树莓派上编译opencv 的方法，但是树莓派上Python 3.5.3没办法直接安装opencv ，虽然编译很慢，但没办法", 
                            "likes": 0, 
                            "replyToAuthor": "小柒"
                        }
                    ]
                }, 
                {
                    "userName": "王一啦啦啦啦啦", 
                    "userLink": "https://www.zhihu.com/people/bebec8f3ab5460623c76c1e9c7521c35", 
                    "content": "最简单的办法就是装上别人已经安装好opencv的镜像", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "小柒", 
                            "userLink": "https://www.zhihu.com/people/9a3f67b93b705f9c34bdb33a595c3450", 
                            "content": "优秀😹", 
                            "likes": 0, 
                            "replyToAuthor": "王一啦啦啦啦啦"
                        }
                    ]
                }, 
                {
                    "userName": "森森的木啊", 
                    "userLink": "https://www.zhihu.com/people/ac9211825f6c94c4304ad4ba248ff8ba", 
                    "content": "请问作者，下载之后放在树莓派的哪个文件夹下面呢？", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "小柒", 
                            "userLink": "https://www.zhihu.com/people/9a3f67b93b705f9c34bdb33a595c3450", 
                            "content": "随便放 执行下这个文件就可以了", 
                            "likes": 0, 
                            "replyToAuthor": "森森的木啊"
                        }, 
                        {
                            "userName": "森森的木啊", 
                            "userLink": "https://www.zhihu.com/people/ac9211825f6c94c4304ad4ba248ff8ba", 
                            "content": "谢谢作者~👏", 
                            "likes": 0, 
                            "replyToAuthor": "小柒"
                        }
                    ]
                }, 
                {
                    "userName": "blue", 
                    "userLink": "https://www.zhihu.com/people/ad2c19189747a7f7fc8f2337ec23f413", 
                    "content": "<p>下载文件上传到download文件夹</p><p>运行</p><p>sudo pip3 install opencv_python-3.4.4.19-cp35-cp35m-linux_armv7l.whl</p><p>报错</p><p>opencv_python-3.4.4.19-cp35-cp35m-linux_armv7l.whl is not a supported wheel on this platform.</p><p></p>", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "Raymond", 
                            "userLink": "https://www.zhihu.com/people/0279262f652288a9bfbd279beba85560", 
                            "content": "<p>我也是，我是4B的板子</p><p></p>", 
                            "likes": 0, 
                            "replyToAuthor": "blue"
                        }
                    ]
                }, 
                {
                    "userName": "沐小淼", 
                    "userLink": "https://www.zhihu.com/people/f50f1734eddf5136688ca99ccd01f482", 
                    "content": "<p>这个库需要安装吧：sudo apt-get install libatlas3-base</p>", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "沐小淼", 
                    "userLink": "https://www.zhihu.com/people/f50f1734eddf5136688ca99ccd01f482", 
                    "content": "<p>sudo pip3 install opencv-python 这个我两次也成功了，算是幸运儿，哈哈</p>", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/64987990", 
            "userName": "小柒", 
            "userLink": "https://www.zhihu.com/people/9a3f67b93b705f9c34bdb33a595c3450", 
            "upvote": 8, 
            "title": "「玩转树莓派」搭建智能家居远程监控系统", 
            "content": "<p></p><h2>前言</h2><p>前几天，在食堂吃饭，本来每天中午的新闻三十分换成了视频监控。我们已经习惯了，前十分钟看着领导都很忙，中间十分钟中国人民都很幸福，后十分钟别的国家都生活在水深火热里，顺便跟同事谈谈国家大事。突然主角换成了我们自己，便毫无抬头的欲望。</p><p>恰巧最近也有在接触大屏监控的解决方案，于是乎，就索性拿树莓派实验了一把，做一个智能监控系统。</p><h2>软硬件清单</h2><ul><li>读卡器以及 SD 卡(装系统用)</li><li>摄像头一枚，支持 USB</li><li>SSH连接工具(SecureCRT，Xshell)</li><li>宽带、路由器(家中常备)</li><li>装好系统的树莓派 3B+ 一只(充电器、CPU散热风扇等)</li></ul><p>在开始之前照常先秀一下这半成品的监控系统，是不是丑到爆！？</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-fa3a6fa33acd2df4b2b95e4cc044e714_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"960\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-fa3a6fa33acd2df4b2b95e4cc044e714_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1920&#39; height=&#39;960&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"960\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-fa3a6fa33acd2df4b2b95e4cc044e714_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-fa3a6fa33acd2df4b2b95e4cc044e714_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p><a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/usr/uploads/2019/05/44915379.jpg\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">监控狗</a></p><p class=\"ztext-empty-paragraph\"><br/></p><h2>监控系统</h2><p>市面上有很多开源的摄像头管理软件，比如 motion、mjpg-streamer，当然我们也可以用 Python 自己实现更智能的监控系统。</p><p>下面，我们分别来介绍以上三种方案。</p><h3>motion</h3><p>安装：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo apt-get install motion</code></pre></div><p>打开 motion daemon 守护进程，让他可以一直在后台运行</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo vim /etc/default/motion\n＃no修改成yes:\nstart_motion_daemon=yes</code></pre></div><p>修改 motion 的配置文件：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo vim /etc/motion/motion.conf\n#deamon off 改成 on\ndeamon on\n#设置分辨率\nwidth 800\nheight 600\n#关闭 localhost 的限制\nstream_localhost off</code></pre></div><p>运行 motion：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo motion</code></pre></div><p>停止motion：</p><div class=\"highlight\"><pre><code class=\"language-text\">killall motion 或者 service motion stop</code></pre></div><p>现在我们的摄像头已经变成了一台网络摄像头。在chrome浏览器下访问 <a href=\"https://link.zhihu.com/?target=http%3A//%253C/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">http://&lt;</a>;树莓派IP&gt;:8081 即可看到摄像头当前拍摄的画面。</p><p>不得不说，真的很耗CPU，差不多持续在60%左右，并且有一定的延迟，卡顿特别严重。</p><h3>mjpg-streamer</h3><p>先安装依赖：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo apt-get install libjpeg8-dev cmake</code></pre></div><p>下载 mjpg-streamer-master 软件：</p><div class=\"highlight\"><pre><code class=\"language-text\">wget http://github.com/jacksonliam/mjpg-streamer/archive/master.zip\nunzip master.zip\ncd mjpg-streamer-master/mjpg-streamer-experimental\n# 编辑配置文件\nvim plugins/input_raspicam/input_raspicam.c</code></pre></div><p>进去之后搜索fps，也就是按一下/键，然后输入fps，然后回车将fps、高度、宽度修改，参考下图：</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-216d3c2847421a484f978947e715bf02_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"888\" data-rawheight=\"262\" class=\"origin_image zh-lightbox-thumb\" width=\"888\" data-original=\"https://pic3.zhimg.com/v2-216d3c2847421a484f978947e715bf02_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;888&#39; height=&#39;262&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"888\" data-rawheight=\"262\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"888\" data-original=\"https://pic3.zhimg.com/v2-216d3c2847421a484f978947e715bf02_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-216d3c2847421a484f978947e715bf02_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>然后退出到mjpg-streamer-master/mjpg-streamer-experimental路径，编译：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo make clean all</code></pre></div><p>启动摄像头：</p><div class=\"highlight\"><pre><code class=\"language-text\">//启动普通 USB摄像头\n./mjpg_streamer -i &#34;./input_uvc.so&#34; -o &#34;./output_http.so -w ./www&#34;  \n//启动树莓派专用摄像头\n./mjpg_streamer -i &#34;./input_raspicam.so&#34; -o &#34;./output_http.so -w ./www&#34;\n//openwrt下启动,8090端口\nmjpg_streamer -i &#34;input_uvc.so -f 10 -r 320*240&#34; -o &#34;output_http.so -p 8090 -w www&#34;</code></pre></div><p>如果出现以下错误：</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-2ada5779a07f47c9a10004337cdcdf8b_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1333\" data-rawheight=\"167\" class=\"origin_image zh-lightbox-thumb\" width=\"1333\" data-original=\"https://pic4.zhimg.com/v2-2ada5779a07f47c9a10004337cdcdf8b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1333&#39; height=&#39;167&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1333\" data-rawheight=\"167\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1333\" data-original=\"https://pic4.zhimg.com/v2-2ada5779a07f47c9a10004337cdcdf8b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-2ada5779a07f47c9a10004337cdcdf8b_b.png\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>多插拔几次摄像头兴许就可以了。</p><p>多参数启动：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo mjpg_streamer -i &#34;./input_uvc.so -r 640x480 -f 10 -n&#34; -o &#34;./output_http.so -p 8080 --w ./www&#34;\n# 密码访问 userid:password 改成自己的就可以\nsudo mjpg_streamer -i &#34;./input_uvc.so -r 640x480 -f 10 -n&#34; -o &#34;./output_http.so -p 8080 --w ./www -c userid:password&#34;</code></pre></div><p>在浏览器中打开，外网自备穿透：</p><div class=\"highlight\"><pre><code class=\"language-text\">http://&lt;树莓派IP&gt;:8080\nhttp://&lt;树莓派IP&gt;:8080/?action=stream</code></pre></div><p>最终画面：</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-1a04ede32f0fdb681752b3ea843a6c5d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"997\" data-rawheight=\"722\" class=\"origin_image zh-lightbox-thumb\" width=\"997\" data-original=\"https://pic2.zhimg.com/v2-1a04ede32f0fdb681752b3ea843a6c5d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;997&#39; height=&#39;722&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"997\" data-rawheight=\"722\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"997\" data-original=\"https://pic2.zhimg.com/v2-1a04ede32f0fdb681752b3ea843a6c5d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-1a04ede32f0fdb681752b3ea843a6c5d_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>这个就流畅多了，CPU差不多也占到五六十的样子，不过无碍，毕竟是4核。</p><h3>Python 实现</h3><p>上面两种方式只能做到浏览器监控访问，非局域网还得搭个穿透才能访问，看似华丽，其实并没有实际卵用。</p><p>为了更加智能的实现监控告警，下面我们采用Python +OpenCV+Wechat 实现。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-dc84a02dd2e6ce0a3be86ff13f4d6628_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1003\" data-rawheight=\"279\" class=\"origin_image zh-lightbox-thumb\" width=\"1003\" data-original=\"https://pic1.zhimg.com/v2-dc84a02dd2e6ce0a3be86ff13f4d6628_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1003&#39; height=&#39;279&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1003\" data-rawheight=\"279\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1003\" data-original=\"https://pic1.zhimg.com/v2-dc84a02dd2e6ce0a3be86ff13f4d6628_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-dc84a02dd2e6ce0a3be86ff13f4d6628_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p><a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/usr/uploads/2019/05/762837746.png\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">监控流程</a></p><p class=\"ztext-empty-paragraph\"><br/></p><h3>安装 OpenCV</h3><p>安装基础组件：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo apt-get update\nsudo apt-get install libjpeg-dev libatlas-base-dev libjpeg-dev libtiff5-dev libpng12-dev libqtgui4 libqt4-test libjasper-dev</code></pre></div><p>然后安装 OpenCV：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo pip3 install opencv-python</code></pre></div><p>一般情况，你是不可能安装成功的，99.999% 会出现以下错误：</p><div class=\"highlight\"><pre><code class=\"language-text\">Collecting opencv-python\n  Downloading https://www.piwheels.org/simple/opencv-python/opencv_python-3.4.4.19-cp35-cp35m-linux_armv7l.whl (7.4MB)\n    45% |██████████████▍                 | 3.3MB 15kB/s eta 0:04:20\nTHESE PACKAGES DO NOT MATCH THE HASHES FROM THE REQUIREMENTS FILE. If you have updated the package versions, please update the hashes. Otherwise, examine the package contents carefully; someone may have tampered with them.\n    opencv-python from https://www.piwheels.org/simple/opencv-python/opencv_python-3.4.4.19-cp35-cp35m-linux_armv7l.whl#sha256=329d9d9fdd62b93d44a485aeaab4602c6f5b8555ea8bcc7dbcdc62c90cfe2c3f:\n        Expected sha256 329d9d9fdd62b93d44a485aeaab4602c6f5b8555ea8bcc7dbcdc62c90cfe2c3f\n             Got        869c7994c40b84ac09f244f768db9269d52d3265d376441e8516a47f24711ef2</code></pre></div><p>这可能是由于网速太慢了，没有下载完整的文件，所以不完整的文件的md5和期望的不一样。</p><p>我们首先下载 whl 文件到本地：</p><div class=\"highlight\"><pre><code class=\"language-text\"># 浏览器直接访问就可以\nhttps://www.piwheels.org/simple/opencv-python/opencv_python-3.4.4.19-cp35-cp35m-linux_armv7l.whl</code></pre></div><p>然后上传到树莓派，使用以下命令安装：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo pip3 install opencv_python-3.4.4.19-cp35-cp35m-linux_armv7l.whl</code></pre></div><p>如果出现以下代码，说明安装成功：</p><div class=\"highlight\"><pre><code class=\"language-text\">Processing ./opencv_python-3.4.4.19-cp35-cp35m-linux_armv7l.whl\nRequirement already satisfied: numpy&gt;=1.12.1 in /usr/lib/python3/dist-packages (from opencv-python==3.4.4.19)\nInstalling collected packages: opencv-python\nSuccessfully installed opencv-python-3.4.4.19</code></pre></div><p>智能监控主要代码：</p><div class=\"highlight\"><pre><code class=\"language-text\"># -*- coding: utf-8 -*-\n# import 进openCV的库\nimport cv2\nimport os\nimport time\nfrom wxpy import *\n\n&#34;&#34;&#34;\n树莓派打造智能看门狗\nsudo pip3 install opencv-python\nsudo pip3 install wechat_sender\n&#34;&#34;&#34;\n\n\n# 登录微信\nbot = Bot()\nmy_friend = bot.friends().search(&#39;监控狗&#39;)[0]\n\n\n# 调用摄像头检测人脸并截图\ndef camera(window_name, path_name):\n\n    # Linux 不显示图形界面\n    # cv2.namedWindow(window_name)\n\n    # 视频来源，来自USB摄像头\n    cap = cv2.VideoCapture(0)\n\n    # 告诉OpenCV使用人脸识别分类器\n    classfier = cv2.CascadeClassifier(os.getcwd()+&#34;/haarcascade/haarcascade_frontalface_alt.xml&#34;)\n\n    # 识别出人脸后要画的边框的颜色，RGB格式, color是一个不可增删的数组\n    color = (0, 255, 0)\n\n    num = 0\n    while cap.isOpened():\n        ok, frame = cap.read()  # 读取一帧数据\n        if not ok:\n            break\n\n        # 将当前桢图像转换成灰度图像\n        grey = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n        # 人脸检测，1.2和2分别为图片缩放比例和需要检测的有效点数\n        faceRects = classfier.detectMultiScale(grey, scaleFactor=1.2, minNeighbors=3, minSize=(32, 32))\n        if len(faceRects) &gt; 0:  # 大于0则检测到人脸\n            for faceRect in faceRects:  # 单独框出每一张人脸\n                x, y, w, h = faceRect\n                num = num+1\n                # 将当前帧保存为图片\n                img_name = &#34;%s/%d.jpg&#34; % (path_name, num)\n                image = frame[y - 10: y + h + 10, x - 10: x + w + 10]\n                cv2.imwrite(img_name, image, [int(cv2.IMWRITE_PNG_COMPRESSION), 9])\n                print(&#34;有人来了~~~&#34;)\n                alarm(num)\n                # 延迟 60s，不要太频繁的发送，知道来了就可以了\n                time.sleep(60)\n                # 画出矩形框\n                cv2.rectangle(frame, (x - 10, y - 10), (x + w + 10, y + h + 10), color, 2)\n                # 显示当前捕捉到了多少人脸图片了\n                font = cv2.FONT_HERSHEY_SIMPLEX\n                cv2.putText(frame, &#39;num:%d/1000&#39; % (num), (x + 30, y + 30), font, 1, (255, 0, 255), 4)\n\n        # 显示图像 Linux 下注释掉即可\n        # cv2.imshow(window_name, frame)\n        c = cv2.waitKey(10)\n        if c &amp; 0xFF == ord(&#39;q&#39;):\n            break\n    # 释放摄像头并销毁所有窗口\n    cap.release()\n    cv2.destroyAllWindows()\n\n\ndef alarm(num):\n    my_friend.send(&#39;有人闯进卧室了!&#39;)\n    my_friend.send_image(os.getcwd()+&#34;/dog/&#34;+str(num)+&#34;.jpg&#34;)\n\n\nif __name__ == &#39;__main__&#39;:\n    camera(&#34;watchdog&#34;, os.getcwd()+&#34;/dog&#34;)</code></pre></div><p>运行脚本，系统会自动生成一个二维码，使用微信扫描登录即可：</p><div class=\"highlight\"><pre><code class=\"language-text\">python3 watchdog.py</code></pre></div><p>然后，把你的狗头对准摄像头，神奇的事情就这么发生了。</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-154c1672303a40f06d8226dcfed438e5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1077\" data-rawheight=\"984\" class=\"origin_image zh-lightbox-thumb\" width=\"1077\" data-original=\"https://pic2.zhimg.com/v2-154c1672303a40f06d8226dcfed438e5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1077&#39; height=&#39;984&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1077\" data-rawheight=\"984\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1077\" data-original=\"https://pic2.zhimg.com/v2-154c1672303a40f06d8226dcfed438e5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-154c1672303a40f06d8226dcfed438e5_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>有点小遗憾的是，启动脚本后，Python 进程 CPU 占用率居然高达300+，平均每个 CPU 差不多80+的样子，心疼我的小风扇一秒钟。</p><h2>小结</h2><p>如果你比较追求精致，还是不要这么搞了，这套方案离小米网络监控视摄像头功能差远了，到手价只要189，而一个树莓派的板子就 200+。</p><p>如果你喜欢瞎折腾，还是蛮好的，不仅能学到知识，还能体会到其中的乐趣，最重要的是可以随心所欲的接入可以实现的任何功能。</p><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-2a95f4c5e26498dbde6097c73cf84785_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"258\" class=\"content_image\" width=\"258\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;258&#39; height=&#39;258&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"258\" class=\"content_image lazy\" width=\"258\" data-actualsrc=\"https://pic2.zhimg.com/v2-2a95f4c5e26498dbde6097c73cf84785_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"60\" data-thumbnail=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"620\" data-original=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;620&#39; height=&#39;60&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"60\" data-thumbnail=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"620\" data-original=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.gif\"/></figure><p>作者： <a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/about.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">小柒</a><br/>出处： <a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">https://blog.52itstyle.vip</a><br/>分享是快乐的，也见证了个人成长历程，文章大多都是工作经验总结以及平时学习积累，基于自身认知不足之处在所难免，也请大家指正，共同进步。</p>", 
            "topic": [
                {
                    "tag": "树莓派（Raspberry Pi）", 
                    "tagLink": "https://api.zhihu.com/topics/19737690"
                }, 
                {
                    "tag": "Python", 
                    "tagLink": "https://api.zhihu.com/topics/19552832"
                }, 
                {
                    "tag": "OpenCV", 
                    "tagLink": "https://api.zhihu.com/topics/19587715"
                }
            ], 
            "comments": [
                {
                    "userName": "redwolf33790", 
                    "userLink": "https://www.zhihu.com/people/31cc18ea3d0a1a6d37dec2b94a95262c", 
                    "content": "我一直想用OPENCV来做一个摄像头，看一下家里的厨房半夜有多少蟑螂，最好能在发现蟑螂的时候，调用机器手自动精确 的喷杀虫剂。", 
                    "likes": 2, 
                    "childComments": [
                        {
                            "userName": "小柒", 
                            "userLink": "https://www.zhihu.com/people/9a3f67b93b705f9c34bdb33a595c3450", 
                            "content": "哈哈哈 理论上可以实现🙈", 
                            "likes": 0, 
                            "replyToAuthor": "redwolf33790"
                        }
                    ]
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/64721195", 
            "userName": "小柒", 
            "userLink": "https://www.zhihu.com/people/9a3f67b93b705f9c34bdb33a595c3450", 
            "upvote": 2, 
            "title": "「玩转树莓派」搭建属于自己的云盘服务", 
            "content": "<h2>前言</h2><p>最近在整理硬盘中的一些视频文档，虽然之前进行了分类，但时间一长，还是有点乱，找个东西得翻找半天。于是乎，就有了下面这个小玩意，自建云盘服务。</p><h2>软硬清单</h2><ul><li>外接硬盘一枚(用于挂载)</li><li>宽带、路由器(家中常备)</li><li>SSH连接工具(SecureCRT，Xshell)</li><li>Nginx、PHP、owncloud、ngrok</li><li>装好系统的树莓派 3B+ 一只(充电器、CPU散热风扇等)</li></ul><h2>配置环境</h2><h3>安装 Nginx</h3><div class=\"highlight\"><pre><code class=\"language-text\">sudo apt-get update\nsudo apt-get install nginx\nsudo service nginx start</code></pre></div><h3>安装 PHP</h3><div class=\"highlight\"><pre><code class=\"language-text\"># owncloud 需要的基础库，必须要安装\nsudo apt-get install php7.0-fpm php7.0-cli php7.0-curl php7.0-gd php7.0-mcrypt php7.0-cgi\nsudo apt-get install php7.0-intl  php7.0-mysql php7.0-zip php7.0-dom  php7.0-mbstring\n\nsudo service php7.0-fpm restart</code></pre></div><h3>安装 MySql</h3><div class=\"highlight\"><pre><code class=\"language-text\">sudo apt-get install mysql-server\nsudo apt-get install mysql-client</code></pre></div><p>安装完成以后进入数据库，无需输入密码：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo  mysql -u root -p</code></pre></div><p>修改密码：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo systemctl restart mysql\n\nsudo systemctl status mysql</code></pre></div><h2>云盘安装</h2><p>下载最新资源，国外网站，可能略慢，请耐心等待：</p><div class=\"highlight\"><pre><code class=\"language-text\">wget https://download.owncloud.org/community/owncloud-10.1.1.tar.bz2</code></pre></div><p>下载完成，解压文件：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo tar　-xvf　owncloud-10.1.1.tar.bz2</code></pre></div><p>云盘 owncloud 配置文件：</p><div class=\"highlight\"><pre><code class=\"language-text\">server {\n　　＃ 80端口被占用，这里使用8081\n    listen 8081 default_server;\n    listen [::]:8081 default_server;\n　　＃ 安装目录\n    root /home/pi/owncloud;\n    index index.php　index.htm;\n    client_max_body_size    10G; \n    fastcgi_buffers    64    4K; \n    gzip    off; \n    rewrite    ^/caldav(.*)$    /remote.php/caldav$1 redirect; \n    rewrite    ^/carddav(.*)$    /remote.php/carddav$1 redirect;\n    rewrite    ^/webdav(.*)$    /remote.php/webdav$1 redirect;\n    index    index.php;\n    error_page    403    /core/templates/403.php;\n    error_page    404    /core/templates/404.php;\n    location = /robots.txt {\n        allow all; \n        log_not_found off; \n        access_log off; \n    } \n    location ~ ^/(?:\\.htaccess|data|config|db_structure\\.xml|README){\n        deny all; \n    }\n    location / {\n        # The following 2 rules are only needed with webfinger \n        rewrite ^/.well-known/host-meta /public.php?service=host-meta last; \n        rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last; \n        rewrite ^/.well-known/carddav /remote.php/carddav/ redirect; \n        rewrite ^/.well-known/caldav /remote.php/caldav/ redirect; \n        rewrite ^(/core/doc/[^\\/]+/)$ $1/index.html; \n        try_files $uri $uri/ /index.php; \n    }\n    location ~ \\.php(?:$|/) {\n        fastcgi_pass unix:/run/php/php7.0-fpm.sock;\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$; \n        include fastcgi_params; \n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; \n        fastcgi_param PATH_INFO $fastcgi_path_info; \n        #ifastcgi_pass php-handler; \n    }\n    location ~* \\.(?:jpg|jpeg|gif|bmp|ico|png|css|js|swf)$ {\n          expires 30d; \n          # Optional: Don&#39;t log access to assets \n          access_log off; \n    } \n\n}</code></pre></div><p>配置完成后，进入安装界面，输入管理员账号密码以及数据库相关信息，点击进入下一步即可安装成功：</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-4033635cbb39511642c9e1def29350e0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"572\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic1.zhimg.com/v2-4033635cbb39511642c9e1def29350e0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;800&#39; height=&#39;572&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"572\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"800\" data-original=\"https://pic1.zhimg.com/v2-4033635cbb39511642c9e1def29350e0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-4033635cbb39511642c9e1def29350e0_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>初始页面：</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-e3174a1870027e583b6983e14e69ca04_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"904\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-e3174a1870027e583b6983e14e69ca04_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1920&#39; height=&#39;904&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"904\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-e3174a1870027e583b6983e14e69ca04_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e3174a1870027e583b6983e14e69ca04_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><h2>内网穿透</h2><p>如果你想要在非局域网中访问，就需要加一个穿透，来访问我们内网的服务。</p><p>首先，我们要把之前生成的 ngrok 客户端（linux_arm）上传到树莓派：</p><p>然后，创建一个 ngrok.yml 配置文件：</p><div class=\"highlight\"><pre><code class=\"language-text\">server_addr: &#34;ngrok.52itstyle.vip:4443&#34;\ntrust_host_root_certs: false\ntunnels:\n  owncloud:\n    proto:\n      http: &#34;8081&#34;</code></pre></div><p>启动服务：</p><div class=\"highlight\"><pre><code class=\"language-text\">./ngrok -config=ngrok.yml start owncloud</code></pre></div><p>SSH是要关闭的，所以要使 ngrok 后台运行：</p><div class=\"highlight\"><pre><code class=\"language-text\"># 首先安装screen\nsudo apt-get install screen</code></pre></div><p>之后运行：</p><div class=\"highlight\"><pre><code class=\"language-text\">screen -S 任意名字（例如：keepngork）</code></pre></div><p>然后运行ngrok启动命令：</p><div class=\"highlight\"><pre><code class=\"language-text\">./ngrok -config=ngrok.yml start owncloud</code></pre></div><p>最后按快捷键：</p><div class=\"highlight\"><pre><code class=\"language-text\">ctrl+A+D</code></pre></div><p>如果出现以下，既可以保持ngrok后台运行。</p><div class=\"highlight\"><pre><code class=\"language-text\">[detached from 14930.keepngork]</code></pre></div><p>最后，配置信任域名，否则穿透域名无法访问：</p><div class=\"highlight\"><pre><code class=\"language-text\">sudo vim config/config.php</code></pre></div><p>加入代理域名：</p><div class=\"highlight\"><pre><code class=\"language-text\">array (\n    0 =&gt; &#39;192.168.1.157:8081&#39;,\n    1 =&gt; &#39;owncloud.ngrok.52itstyle.vip&#39;,\n  ),</code></pre></div><p>演示地址：<a href=\"https://link.zhihu.com/?target=http%3A//owncloud.ngrok.52itstyle.vip/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">http://owncloud.ngrok.52itstyle.vip</a></p><p>来张前台：</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-4d89fb3cdf023ced214d27077aeb2a0e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1913\" data-rawheight=\"574\" class=\"origin_image zh-lightbox-thumb\" width=\"1913\" data-original=\"https://pic3.zhimg.com/v2-4d89fb3cdf023ced214d27077aeb2a0e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1913&#39; height=&#39;574&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1913\" data-rawheight=\"574\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1913\" data-original=\"https://pic3.zhimg.com/v2-4d89fb3cdf023ced214d27077aeb2a0e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-4d89fb3cdf023ced214d27077aeb2a0e_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p>来张后台：</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-88f72c761aa68e53fc7d0a9c0d82d192_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"447\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-88f72c761aa68e53fc7d0a9c0d82d192_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1080&#39; height=&#39;447&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"447\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-88f72c761aa68e53fc7d0a9c0d82d192_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-88f72c761aa68e53fc7d0a9c0d82d192_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><h2>小结</h2><p>云盘在内网体验还是蛮好的，搜索、收藏、分享，功能很齐全。只是加了代理穿透以后，上传大文件有点慢。当然了如果想正儿八经的使用，最好挂载一个 T 级别的硬盘。</p><h2>参考</h2><a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/archives/3987/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-87b03831cf1c770d9ff29b445a26eb42_180x120.jpg\" data-image-width=\"720\" data-image-height=\"405\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">「玩转树莓派」搭建属于自己内网穿透服务 - 柒&#39;s Blog</a><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-2a95f4c5e26498dbde6097c73cf84785_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"258\" class=\"content_image\" width=\"258\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;258&#39; height=&#39;258&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"258\" class=\"content_image lazy\" width=\"258\" data-actualsrc=\"https://pic2.zhimg.com/v2-2a95f4c5e26498dbde6097c73cf84785_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"60\" data-thumbnail=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"620\" data-original=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;620&#39; height=&#39;60&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"60\" data-thumbnail=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"620\" data-original=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.gif\"/></figure><p>作者： <a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/about.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">小柒</a><br/>出处： <a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">https://blog.52itstyle.vip</a><br/>分享是快乐的，也见证了个人成长历程，文章大多都是工作经验总结以及平时学习积累，基于自身认知不足之处在所难免，也请大家指正，共同进步。</p>", 
            "topic": [
                {
                    "tag": "树莓派（Raspberry Pi）", 
                    "tagLink": "https://api.zhihu.com/topics/19737690"
                }, 
                {
                    "tag": "网盘", 
                    "tagLink": "https://api.zhihu.com/topics/19571235"
                }
            ], 
            "comments": [
                {
                    "userName": "知乎用户", 
                    "userLink": "https://www.zhihu.com/people/0", 
                    "content": "牛逼(破音)", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "放学别走", 
                    "userLink": "https://www.zhihu.com/people/4af0045485ab3bdab5cdda11bde7d5fd", 
                    "content": "<p>你好 我卡在owncloud配置文件这里了  不知道该怎么配置 求指教</p><p></p>", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/64720982", 
            "userName": "小柒", 
            "userLink": "https://www.zhihu.com/people/9a3f67b93b705f9c34bdb33a595c3450", 
            "upvote": 0, 
            "title": "「玩转树莓派」搭建属于自己内网穿透服务", 
            "content": "<h2>前言</h2><p>好吧，我承认这个跟树莓派没有半毛关系，但是为了以后众多内网应用可以被访问，还是想强行发生一波关系。</p><h2>软硬清单</h2><ul><li>云服务器一枚</li><li>备案域名一枚</li><li>开源 Nginx、Dcoker、Ngrok</li></ul><h2>服务配置</h2><div class=\"highlight\"><pre><code class=\"language-text\">├── build.sh\n├── docker-compose.yml\n├── Dockerfile\n└── server.sh</code></pre></div><p>Dockerfile配置，源码中 git 地址有些问题，导致部分客户端没有生成，这里替换掉了：</p><div class=\"highlight\"><pre><code class=\"language-text\">FROM golang:1.7.1-alpine\nMAINTAINER hteen &lt;i@hteen.cn&gt;\n\nRUN apk add --no-cache git make openssl\n\nRUN git clone https://github.com/inconshreveable/ngrok.git /ngrok\n\nADD *.sh /\n\nENV DOMAIN **None**\nENV MY_FILES /myfiles\nENV TUNNEL_ADDR :4443\nENV HTTP_ADDR :80\nENV HTTPS_ADDR :443\n\nEXPOSE 4443\nEXPOSE 80\nEXPOSE 443\n\nCMD /bin/sh</code></pre></div><p>build.sh 配置：</p><div class=\"highlight\"><pre><code class=\"language-text\">#!/bin/sh\nset -e\n\nif [ &#34;${DOMAIN}&#34; == &#34;**None**&#34; ]; then\n    echo &#34;Please set DOMAIN&#34;\n    exit 1\nfi\n\ncd ${MY_FILES}\nif [ ! -f &#34;${MY_FILES}/base.pem&#34; ]; then\n    openssl genrsa -out base.key 2048\n    openssl req -new -x509 -nodes -key base.key -days 10000 -subj &#34;/CN=${DOMAIN}&#34; -out base.pem\n    openssl genrsa -out device.key 2048\n    openssl req -new -key device.key -subj &#34;/CN=${DOMAIN}&#34; -out device.csr\n    openssl x509 -req -in device.csr -CA base.pem -CAkey base.key -CAcreateserial -days 10000 -out device.crt\nfi\ncp -r base.pem /ngrok/assets/client/tls/ngrokroot.crt\n\ncd /ngrok\nmake release-server\nGOOS=linux GOARCH=386 make release-client\nGOOS=linux GOARCH=amd64 make release-client\nGOOS=windows GOARCH=386 make release-client\nGOOS=windows GOARCH=amd64 make release-client\nGOOS=darwin GOARCH=386 make release-client\nGOOS=darwin GOARCH=amd64 make release-client\nGOOS=linux GOARCH=arm make release-client\n\ncp -r /ngrok/bin ${MY_FILES}/bin\n\necho &#34;build ok !&#34;</code></pre></div><p>server.sh 配置：</p><div class=\"highlight\"><pre><code class=\"language-text\">#!/bin/sh\nset -e\n\nif [ &#34;${DOMAIN}&#34; == &#34;**None**&#34; ]; then\n    echo &#34;Please set DOMAIN&#34;\n    exit 1\nfi\n\nif [ ! -f &#34;${MY_FILES}/bin/ngrokd&#34; ]; then\n    echo &#34;ngrokd is not build,will be build it now...&#34;\n    /bin/sh /build.sh\nfi\n\n\n${MY_FILES}/bin/ngrokd -tlsKey=${MY_FILES}/device.key -tlsCrt=${MY_FILES}/device.crt -domain=&#34;${DOMAIN}&#34; -httpAddr=${HTTP_ADDR} -httpsAddr=${HTTPS_ADDR} -tunnelAddr=${TUNNEL_ADDR}</code></pre></div><p>docker-compose.yml 配置：</p><div class=\"highlight\"><pre><code class=\"language-text\">server:\n  image: hteen/ngrok\n  ports:\n    - &#34;8082:80&#34;\n    - &#34;4432:443&#34;\n    - &#34;4443:4443&#34;\n  volumes:\n    - /data/ngrok:/myfiles\n  environment:\n    - DOMAIN=&#34;tunnel.hteen.cn&#34;\n  command: /bin/sh /server.sh</code></pre></div><p>然后，构建镜像：</p><div class=\"highlight\"><pre><code class=\"language-text\">docker build -t hteen/ngrok .</code></pre></div><h3>启动</h3><ul><li>我们需要挂载宿机目录(E.g /data/ngrok)到容器的/myfiles目录</li><li>第一次运行，它将会在/data/ngrok目录下生成二进制文件和CA证书</li></ul><div class=\"highlight\"><pre><code class=\"language-text\">sudo docker run --rm -it -e DOMAIN=&#34;ngrok.52itstyle.vip&#34; -v /data/ngrok:/myfiles hteen/ngrok /bin/sh  /build.sh</code></pre></div><p>安装成功会出现以下提示(省略中间过程)：</p><div class=\"highlight\"><pre><code class=\"language-text\">Generating RSA private key, 2048 bit long modulus\n.............................+++\n.............................+++\ne is 65537 (0x10001)\nGenerating RSA private key, 2048 bit long modulus\n...............................+++\n...............................+++\ngo get -tags &#39;release&#39; -d -v ngrok/...\ngo install -tags &#39;release&#39; ngrok/main/ngrok\nbuild ok !</code></pre></div><p>客户端和服务端生成在/data/ngrok/bin目录下：</p><div class=\"highlight\"><pre><code class=\"language-text\">├── darwin_386\n│   └── ngrok\n├── darwin_amd64\n│   └── ngrok\n├── go-bindata\n├── linux_386\n│   └── ngrok\n├── linux_arm\n│   └── ngrok\n├── ngrok\n├── ngrokd\n├── windows_386\n│   └── ngrok.exe\n└── windows_amd64\n    └── ngrok.exe</code></pre></div><h3>启动Ngrok server</h3><p>由于ngrok默认使用80和443端口，这里我们使用Nginx服务做转发，通过端口映射的方式访问Docker容器(参考docker-compose.yml配置)。</p><div class=\"highlight\"><pre><code class=\"language-text\">docker run -idt --name ngrok-server \\\n-v /data/ngrok:/myfiles \\\n-p 8082:80 \\\n-p 4432:443 \\\n-p 4443:4443 \\\n-e DOMAIN=&#39;ngrok.52itstyle.com&#39; hteen/ngrok /bin/sh /server.sh</code></pre></div><p>启动之后需要在nginx.conf 添加两条反向代理配置(HTTPS请求自行配置)：</p><div class=\"highlight\"><pre><code class=\"language-text\">server {\n     listen       80;\n     server_name  ngrok.52itstyle.vip *.ngrok.52itstyle.vip;\n     location / {\n             proxy_redirect off;\n             proxy_set_header Host $host;\n             proxy_set_header X-Real-IP $remote_addr;\n             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n             proxy_pass http://127.0.0.1:8082;\n     }\n }</code></pre></div><h3>配置DNS解析</h3><p>服务启动后，要想正常运行，我们还需要添加两条A记录到云服务器(替换成自己的IP地址)：</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-def2dc58504839d1200b9d1d290fecda_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1513\" data-rawheight=\"138\" class=\"origin_image zh-lightbox-thumb\" width=\"1513\" data-original=\"https://pic3.zhimg.com/v2-def2dc58504839d1200b9d1d290fecda_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1513&#39; height=&#39;138&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1513\" data-rawheight=\"138\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1513\" data-original=\"https://pic3.zhimg.com/v2-def2dc58504839d1200b9d1d290fecda_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-def2dc58504839d1200b9d1d290fecda_b.png\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p><a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/usr/uploads/2018/06/1668172897.png\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">DNS.png</a></p><p class=\"ztext-empty-paragraph\"><br/></p><h3>启动Ngrok client</h3><p>首先从data/ngrok/bin目录下载各个环境下的客户端。</p><h3>windows 测试</h3><p>首先创建一个 ngrok.yml 配置文件：</p><div class=\"highlight\"><pre><code class=\"language-text\">server_addr: &#34;ngrok.52itstyle.vip:4443&#34;\ntrust_host_root_certs: false\ntunnels:\n  doc:\n    proto:\n      http: &#34;8080&#34;\n    auth: &#34;admin:admin&#34; # 访问账号密码\n  owncloud:\n    proto:\n      http: &#34;8081&#34;</code></pre></div><p>使用cmd命令切换到对应的目录下，然后执行以下命令：</p><div class=\"highlight\"><pre><code class=\"language-text\">ngrok.exe -config=ngrok.yml start doc # 启动单个服务\nngrok.exe -config=ngrok.yml start-all  #启动所有服务</code></pre></div><p>如果出现以下界面，说明安装成功：</p><div class=\"highlight\"><pre><code class=\"language-text\">Tunnel Status                 online\nVersion                       1.7/1.7\nForwarding                    http://doc.ngrok.52itstyle.vip -&gt; 127.0.0.1:8080\nWeb Interface                 127.0.0.1:4040\n# Conn                        0\nAvg Conn Time                 0.00ms</code></pre></div><h2>注意事项</h2><ul><li>防火墙需要开放4443端口，否则是无法连接成功的</li></ul><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-2a95f4c5e26498dbde6097c73cf84785_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"258\" class=\"content_image\" width=\"258\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;258&#39; height=&#39;258&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"258\" class=\"content_image lazy\" width=\"258\" data-actualsrc=\"https://pic2.zhimg.com/v2-2a95f4c5e26498dbde6097c73cf84785_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"60\" data-thumbnail=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"620\" data-original=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;620&#39; height=&#39;60&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"60\" data-thumbnail=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"620\" data-original=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.gif\"/></figure><p>作者： <a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/about.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">小柒</a><br/>出处： <a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">https://blog.52itstyle.vip</a></p>", 
            "topic": [
                {
                    "tag": "树莓派（Raspberry Pi）", 
                    "tagLink": "https://api.zhihu.com/topics/19737690"
                }, 
                {
                    "tag": "ngrok", 
                    "tagLink": "https://api.zhihu.com/topics/20053204"
                }
            ], 
            "comments": [
                {
                    "userName": "木鱼", 
                    "userLink": "https://www.zhihu.com/people/639c801d1e8b2f1192b98bffa226aafe", 
                    "content": "首赞[爱]", 
                    "likes": 1, 
                    "childComments": [
                        {
                            "userName": "小柒", 
                            "userLink": "https://www.zhihu.com/people/9a3f67b93b705f9c34bdb33a595c3450", 
                            "content": "么么哒", 
                            "likes": 0, 
                            "replyToAuthor": "木鱼"
                        }
                    ]
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/64366216", 
            "userName": "小柒", 
            "userLink": "https://www.zhihu.com/people/9a3f67b93b705f9c34bdb33a595c3450", 
            "upvote": 4, 
            "title": "「玩转树莓派」为女朋友打造一款智能语音闹钟", 
            "content": "<h2>前言</h2><p>最近在做智慧工厂相关的工作，多多少少了解了一点物联网相关的技术。于是心血来潮，寻思自己可以做点什么，恰巧之前听说过一些树莓派的传闻，于是就有了这么一款闹钟。</p><p>需要说明的是，在看这篇文章之前，你至少应该是一个会装操作系统的程序猿，懂点 Linux，会些 Python，最主要的是你得有一个女朋友。当然没有也没关系，相信看完这篇文章，你也尝试做了这么一款闹钟，说不定......</p><h2>软硬件清单</h2><ul><li>读卡器以及 SD 卡(装系统用)</li><li>音箱一枚，最好支持 3.5mm</li><li>SSH连接工具(SecureCRT，Xshell)</li><li>宽带、路由器(这应该是家中常备了)</li><li>装好系统的树莓派 3B+ 一只(充电器、CPU散热风扇等)</li></ul><p>在开始之前先秀一下这半成品的闹钟：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-a43d0b76af17077738d7a159e17b93df_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1007\" data-rawheight=\"867\" class=\"origin_image zh-lightbox-thumb\" width=\"1007\" data-original=\"https://pic4.zhimg.com/v2-a43d0b76af17077738d7a159e17b93df_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1007&#39; height=&#39;867&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1007\" data-rawheight=\"867\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1007\" data-original=\"https://pic4.zhimg.com/v2-a43d0b76af17077738d7a159e17b93df_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-a43d0b76af17077738d7a159e17b93df_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-92701f881a84cb2e7204b0f37b62a28e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1440\" data-original=\"https://pic3.zhimg.com/v2-92701f881a84cb2e7204b0f37b62a28e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1440&#39; height=&#39;1080&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1440\" data-original=\"https://pic3.zhimg.com/v2-92701f881a84cb2e7204b0f37b62a28e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-92701f881a84cb2e7204b0f37b62a28e_b.jpg\"/></figure><h2>编码</h2><p>一个合格的程序员，怎么能不懂点 Python，虽然做 Java这么多年，我还是想用她来开发。</p><p>树莓派 3B+ 的系统默认预装了 Python3 ，我们只需要安装一些第三方依赖就可以，以下便是主要代码：</p><div class=\"highlight\"><pre><code class=\"language-text\">__author__ = &#34;小柒&#34;\n__blog__ = &#34;https://blog.52itstyle.vip/&#34;\nimport time\nimport random\nimport os\nimport pygame\nimport urllib.request\nimport json\nfrom aip import AipSpeech\n\n&#34;&#34;&#34;\n树莓派打造智能闹钟\npip3 install pygame\npip3 install baidu-aip\n&#34;&#34;&#34;\n\n\n# 获取天气\ndef get_weather():\n    # 青岛天气，101120201 是青岛地区的编码，其他地区请自行查找\n    url = &#39;http://www.weather.com.cn/data/cityinfo/101120201.html&#39;\n    obj = urllib.request.urlopen(url)\n    data_b = obj.read()\n    data_s = data_b.decode(&#39;utf-8&#39;)\n    data_dict = json.loads(data_s)\n    rt = data_dict[&#39;weatherinfo&#39;]\n    weather = &#39;亲爱的：该起床了，别睡了，快变小猪了，哈哈哈哈哈，我想你了，你想我吗？青岛的温度是 {} 到 {}，天气 {}&#39;\n    weather = weather.format(rt[&#39;temp1&#39;], rt[&#39;temp2&#39;], rt[&#39;weather&#39;])\n    if &#39;雨&#39; in weather:\n        weather += &#39;今天别忘记带雨伞哦！&#39;\n    du_say(weather)\n\n\n# 文字转语音\ndef du_say(weather):\n    app_id = &#39;****&#39;\n    api_key = &#39;****&#39;\n    secret_key = &#39;****&#39;\n    client = AipSpeech(app_id, api_key, secret_key)\n    # per 3是汉子 4是妹子，spd 是语速，vol 是音量\n    result = client.synthesis(weather, &#39;zh&#39;, 1, {\n        &#39;vol&#39;: 5, &#39;per&#39;: 3, &#39;spd&#39;: 4\n    })\n    # 识别正确返回语音二进制 错误则返回dict 参照下面错误码\n    if not isinstance(result, dict):\n        with open(&#39;weather.mp3&#39;, &#39;wb&#39;) as f:\n            f.write(result)\n    py_game_player(&#39;weather.mp3&#39;)\n\n\n# 播放天气和音乐\ndef py_game_player(file):\n    pygame.mixer.init()\n    print(&#34;播报天气&#34;)\n    pygame.mixer.music.load(file)\n    pygame.mixer.music.play(loops=1, start=0.0)\n    print(&#34;播放音乐&#34;)\n    while True:\n        if pygame.mixer.music.get_busy() == 0:\n            # Linux 配置定时任务要设置绝对路径\n            mp3 = &#34;/home/pi/alarmClock/&#34;+str(random.randint(1, 6)) + &#34;.mp3&#34;\n            # mp3 = str(random.randint(1, 6)) + &#34;.mp3&#34;\n            pygame.mixer.music.load(mp3)\n            pygame.mixer.music.play(loops=1, start=0.0)\n            break\n    while True:\n        if pygame.mixer.music.get_busy() == 0:\n            print(&#34;播报完毕，起床啦&#34;)\n            break\n\n\nif __name__ == &#39;__main__&#39;:\n    get_weather()</code></pre></div><p>代码看不懂，没关系，来一张清晰的流程图：</p><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-7c749260a0786d514b389ace2f784b71_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1006\" data-rawheight=\"485\" class=\"origin_image zh-lightbox-thumb\" width=\"1006\" data-original=\"https://pic2.zhimg.com/v2-7c749260a0786d514b389ace2f784b71_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1006&#39; height=&#39;485&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1006\" data-rawheight=\"485\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1006\" data-original=\"https://pic2.zhimg.com/v2-7c749260a0786d514b389ace2f784b71_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-7c749260a0786d514b389ace2f784b71_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><h2>定时</h2><p>当然了，闹钟可不能自己播放，我们还需要加入定时任务脚本，实现定时播放。</p><p>运行crontab -e 标志来编辑 cron 表</p><div class=\"highlight\"><pre><code class=\"language-text\">no crontab for pi - using an empty one\n\nSelect an editor.  To change later, run &#39;select-editor&#39;.\n  1. /bin/ed\n  2. /bin/nano        &lt;---- easiest\n  3. /usr/bin/vim.tiny\n\nChoose 1-3 [2]: 3</code></pre></div><p>这里我选择最熟悉的 Vim 命令进行编辑。</p><p>cron 条目的布局由六个部分组成：分钟，小时，月份，月份，星期几和要执行的命令。</p><div class=\"highlight\"><pre><code class=\"language-text\"># * * * * *  command to execute （要执行的命令）\n# ┬ ┬ ┬ ┬ ┬\n# │ │ │ │ │\n# │ │ │ │ │\n# │ │ │ │ └───── 星期中的哪一天(0-7)(从0到6代表星期日到星期六,也可以使用名字;7是星期天,等同于0)\n# │ │ │ └────────── 月份 (1 - 12)\n# │ │ └───────────────几号 (1 - 31)\n# │ └──────────────────── 小时 (0 - 23)\n# └───────────────────────── 分钟 (0 - 59)</code></pre></div><p>添加一个计划任务：</p><div class=\"highlight\"><pre><code class=\"language-text\"># 早上七点\n00 07 * *   python3 /home/pi/alarmClock/play.py</code></pre></div><p>配置完成以后一定要检查一下时间，新装系统有可能不是中国时区：</p><div class=\"highlight\"><pre><code class=\"language-text\">date</code></pre></div><p>更正时区：</p><div class=\"highlight\"><pre><code class=\"language-text\"># 根据提示选择 亚洲(Asia)-上海(上海)\nsudo dpkg-reconfigure tzdata</code></pre></div><h2>小结</h2><p>其实，这款闹钟并不智能，并且还有一些昂贵，幸好身边有两个平时不怎么用的音箱，就拿来废物利用了。好处是可以随心所欲的DIY，比如做一款APP，或者后台管理，进行远程控制，给予女朋友无时无刻的关怀。</p><p>当然，她可能不仅仅是一款闹钟，你也可以加入语音唤醒，语音聊天，打造一款全功能的智能机器人。</p><p>源码：<a href=\"https://link.zhihu.com/?target=https%3A//gitee.com/52itstyle/Python\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">gitee.com/52itstyle/Pyt</span><span class=\"invisible\">hon</span><span class=\"ellipsis\"></span></a></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-2a95f4c5e26498dbde6097c73cf84785_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"258\" class=\"content_image\" width=\"258\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;258&#39; height=&#39;258&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"258\" class=\"content_image lazy\" width=\"258\" data-actualsrc=\"https://pic2.zhimg.com/v2-2a95f4c5e26498dbde6097c73cf84785_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"60\" data-thumbnail=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"620\" data-original=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;620&#39; height=&#39;60&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"60\" data-thumbnail=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"620\" data-original=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f8beed0542cc9f483f404af6a203c131_b.gif\"/></figure><p>作者： <a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/about.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">小柒</a><br/>出处： <a href=\"https://link.zhihu.com/?target=https%3A//blog.52itstyle.vip/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">https://blog.52itstyle.vip</a></p>", 
            "topic": [
                {
                    "tag": "树莓派（Raspberry Pi）", 
                    "tagLink": "https://api.zhihu.com/topics/19737690"
                }
            ], 
            "comments": []
        }
    ], 
    "url": "https://zhuanlan.zhihu.com/Rraspberry-Pi"
}

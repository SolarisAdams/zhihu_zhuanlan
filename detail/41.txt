{
    "title": "视觉SLAM十四讲学习笔记", 
    "description": "从小白开始，学习SLAM，学一点，记一点，感谢高博的书和视频。", 
    "followers": [
        "https://www.zhihu.com/people/xiao-xing-yun-de-liang-xing-xing-30", 
        "https://www.zhihu.com/people/carmelocs", 
        "https://www.zhihu.com/people/jiang-lai-99-90", 
        "https://www.zhihu.com/people/lcycjy", 
        "https://www.zhihu.com/people/zhui-feng-zhe-72-23", 
        "https://www.zhihu.com/people/yan-landau", 
        "https://www.zhihu.com/people/chen-zheng-sheng-8", 
        "https://www.zhihu.com/people/hoinam-wong", 
        "https://www.zhihu.com/people/aaaaa-4-45", 
        "https://www.zhihu.com/people/yu-xue-fei-fei-1-50", 
        "https://www.zhihu.com/people/abc-27-34", 
        "https://www.zhihu.com/people/lu-jia-cheng-68-70", 
        "https://www.zhihu.com/people/chen-chao-90-23", 
        "https://www.zhihu.com/people/tspace-fangjw", 
        "https://www.zhihu.com/people/ni-cai-99-74", 
        "https://www.zhihu.com/people/a-zhe-40-12", 
        "https://www.zhihu.com/people/tiffanyg-75", 
        "https://www.zhihu.com/people/zheng-feng-80-24", 
        "https://www.zhihu.com/people/xiao-ke-story", 
        "https://www.zhihu.com/people/tui-tai-yang-xia-shan", 
        "https://www.zhihu.com/people/xu-ze-yang-35", 
        "https://www.zhihu.com/people/lcx-85", 
        "https://www.zhihu.com/people/bobzongrong", 
        "https://www.zhihu.com/people/hongyu-35-89", 
        "https://www.zhihu.com/people/jiqirenno1", 
        "https://www.zhihu.com/people/asura-74", 
        "https://www.zhihu.com/people/yang-jie", 
        "https://www.zhihu.com/people/yuanjianhua-54", 
        "https://www.zhihu.com/people/wonder-65-5", 
        "https://www.zhihu.com/people/wang-fang-zhao", 
        "https://www.zhihu.com/people/xiao-zhong-2-37", 
        "https://www.zhihu.com/people/deng-jian-qiang-29", 
        "https://www.zhihu.com/people/sun-zhu-70", 
        "https://www.zhihu.com/people/hao-ni-99", 
        "https://www.zhihu.com/people/li-zhen-29-69", 
        "https://www.zhihu.com/people/selvia-18", 
        "https://www.zhihu.com/people/geeee-59", 
        "https://www.zhihu.com/people/tian-chang-di-jiu-63-41", 
        "https://www.zhihu.com/people/li-dong-qing-55-68", 
        "https://www.zhihu.com/people/zhang-xian-xian-24-41", 
        "https://www.zhihu.com/people/keplerchen", 
        "https://www.zhihu.com/people/eg_tian", 
        "https://www.zhihu.com/people/qing-tai-you-you", 
        "https://www.zhihu.com/people/zheng-hao-86-4", 
        "https://www.zhihu.com/people/jing-jing-de-yan-ming-hu", 
        "https://www.zhihu.com/people/bian-yuan-dao-cao-ren", 
        "https://www.zhihu.com/people/zi-ran-xin-34", 
        "https://www.zhihu.com/people/sminger", 
        "https://www.zhihu.com/people/hong-yan-dai", 
        "https://www.zhihu.com/people/mang-zhang-fei-da-di", 
        "https://www.zhihu.com/people/lang-li-bai-tiao-42-73", 
        "https://www.zhihu.com/people/li-xin-jing-71", 
        "https://www.zhihu.com/people/shuang-zi-xing-xing", 
        "https://www.zhihu.com/people/phantomrider-13", 
        "https://www.zhihu.com/people/dufei-lee", 
        "https://www.zhihu.com/people/fu-qi-17-55", 
        "https://www.zhihu.com/people/haqart", 
        "https://www.zhihu.com/people/ben-xi-99", 
        "https://www.zhihu.com/people/li-chu-jun-61", 
        "https://www.zhihu.com/people/pain-jason", 
        "https://www.zhihu.com/people/zhangxinnan", 
        "https://www.zhihu.com/people/dxjforyou", 
        "https://www.zhihu.com/people/luoer-81", 
        "https://www.zhihu.com/people/shu-ai-zi-37-7", 
        "https://www.zhihu.com/people/a-yi-27-47", 
        "https://www.zhihu.com/people/stackingrule", 
        "https://www.zhihu.com/people/xian-lai-cai-xia", 
        "https://www.zhihu.com/people/cai-zhen-xing-72", 
        "https://www.zhihu.com/people/xiao-xiao-65-9-84", 
        "https://www.zhihu.com/people/Steven_Jokes", 
        "https://www.zhihu.com/people/zuochongyan", 
        "https://www.zhihu.com/people/dxrainbow", 
        "https://www.zhihu.com/people/liushuan-81", 
        "https://www.zhihu.com/people/zhu-yu-ming-23-25", 
        "https://www.zhihu.com/people/li-ling-12-18-63", 
        "https://www.zhihu.com/people/li-zhi-peng-13-66", 
        "https://www.zhihu.com/people/bu-hui-shuo-hua-de-ao-jian-li-ji", 
        "https://www.zhihu.com/people/xu-zhe-43-19", 
        "https://www.zhihu.com/people/zhang-wei-12-87-10", 
        "https://www.zhihu.com/people/huli2015", 
        "https://www.zhihu.com/people/Yatt", 
        "https://www.zhihu.com/people/xiao-hao-3-44", 
        "https://www.zhihu.com/people/zhong-liang-tao-72", 
        "https://www.zhihu.com/people/yang-yang-7-67-33", 
        "https://www.zhihu.com/people/dawnsx", 
        "https://www.zhihu.com/people/deng-cheng-90", 
        "https://www.zhihu.com/people/kouritsukyou", 
        "https://www.zhihu.com/people/xiao-wan-dou-52-94", 
        "https://www.zhihu.com/people/jyxdzl", 
        "https://www.zhihu.com/people/li-zhi-hao-32-6", 
        "https://www.zhihu.com/people/luo-zhong-wei-31", 
        "https://www.zhihu.com/people/hao-ren-79-93", 
        "https://www.zhihu.com/people/john-wong-35-27", 
        "https://www.zhihu.com/people/zhang-bai-qiao-23", 
        "https://www.zhihu.com/people/ling-wei-19", 
        "https://www.zhihu.com/people/liu-an-fei-yu", 
        "https://www.zhihu.com/people/joker-91-40", 
        "https://www.zhihu.com/people/yao-67-38", 
        "https://www.zhihu.com/people/wen-ke-59-50", 
        "https://www.zhihu.com/people/bu-zhi-liao-96", 
        "https://www.zhihu.com/people/hui.wang", 
        "https://www.zhihu.com/people/mei-you-ren-gei-ta-xie-xin-de-shang-xiao-65", 
        "https://www.zhihu.com/people/bao-xiao-zhang", 
        "https://www.zhihu.com/people/yang-ce-yuan", 
        "https://www.zhihu.com/people/zhou-tony-90", 
        "https://www.zhihu.com/people/qawwali-han", 
        "https://www.zhihu.com/people/JARK006", 
        "https://www.zhihu.com/people/liu-wei-18-76-22", 
        "https://www.zhihu.com/people/wang-sheng-lin-64", 
        "https://www.zhihu.com/people/fanjiale", 
        "https://www.zhihu.com/people/doris-52-69", 
        "https://www.zhihu.com/people/di-hong-jia-4", 
        "https://www.zhihu.com/people/aiolia723", 
        "https://www.zhihu.com/people/yongshuai-42", 
        "https://www.zhihu.com/people/frozenfire", 
        "https://www.zhihu.com/people/guan-yun-chang-31-28", 
        "https://www.zhihu.com/people/a-peng-4-63", 
        "https://www.zhihu.com/people/feng-ling-du-37", 
        "https://www.zhihu.com/people/xiao-mi-10-73-36", 
        "https://www.zhihu.com/people/mapledk", 
        "https://www.zhihu.com/people/smartcat", 
        "https://www.zhihu.com/people/chen-yu-wei-90-77", 
        "https://www.zhihu.com/people/wang-shi-tou-57", 
        "https://www.zhihu.com/people/wiwi-45", 
        "https://www.zhihu.com/people/zhang-yi-73-99-96", 
        "https://www.zhihu.com/people/li-cheng-hui-81", 
        "https://www.zhihu.com/people/lin-men-yi-kou", 
        "https://www.zhihu.com/people/mu-hang-80", 
        "https://www.zhihu.com/people/chen-kui-1-39", 
        "https://www.zhihu.com/people/matthew.he", 
        "https://www.zhihu.com/people/congleetea", 
        "https://www.zhihu.com/people/lu-wei-3-41", 
        "https://www.zhihu.com/people/li-da-pan-52", 
        "https://www.zhihu.com/people/xiao-lang-5-85", 
        "https://www.zhihu.com/people/victor-51-42", 
        "https://www.zhihu.com/people/chen-song-song-82", 
        "https://www.zhihu.com/people/yan-xiao-dong-89", 
        "https://www.zhihu.com/people/venus-63-71", 
        "https://www.zhihu.com/people/ross-li", 
        "https://www.zhihu.com/people/ouyang-michael", 
        "https://www.zhihu.com/people/zhao-wei-11594", 
        "https://www.zhihu.com/people/neil-lee-99", 
        "https://www.zhihu.com/people/li-zhi-long-92-10", 
        "https://www.zhihu.com/people/descartes-18", 
        "https://www.zhihu.com/people/bo-wan-79", 
        "https://www.zhihu.com/people/yu-guo-81-63", 
        "https://www.zhihu.com/people/sunduda", 
        "https://www.zhihu.com/people/xiao-mai-51-10", 
        "https://www.zhihu.com/people/bo-bo-bo-87-28", 
        "https://www.zhihu.com/people/yarnell-69", 
        "https://www.zhihu.com/people/huan-huan-3-83", 
        "https://www.zhihu.com/people/jue-ying-46-23", 
        "https://www.zhihu.com/people/you-xue-zhe-92-89", 
        "https://www.zhihu.com/people/jin-nian-duo-da-liao-ya", 
        "https://www.zhihu.com/people/huluobu-77", 
        "https://www.zhihu.com/people/jiang-han-yue-78", 
        "https://www.zhihu.com/people/xiao-yan-60-76-50", 
        "https://www.zhihu.com/people/mei-xi-31-99", 
        "https://www.zhihu.com/people/nuo-wei-si-ji-kou-qiao-dan", 
        "https://www.zhihu.com/people/qi-yan-92-32", 
        "https://www.zhihu.com/people/dai-de-yang-63", 
        "https://www.zhihu.com/people/hao-hao-39-73", 
        "https://www.zhihu.com/people/jin-zhe-kai", 
        "https://www.zhihu.com/people/cun-mao-mao", 
        "https://www.zhihu.com/people/xiong-ji-22-90", 
        "https://www.zhihu.com/people/ssss-24-23", 
        "https://www.zhihu.com/people/xiang-wang-47-11", 
        "https://www.zhihu.com/people/yu-jin-ke-18", 
        "https://www.zhihu.com/people/wu-dan-dan-dan-dan-dan-dan-99", 
        "https://www.zhihu.com/people/ykwjt", 
        "https://www.zhihu.com/people/tang-long-30-1", 
        "https://www.zhihu.com/people/nan-fang-de-mu-yang-ren", 
        "https://www.zhihu.com/people/zhi-xiao-76-24", 
        "https://www.zhihu.com/people/ricardo-25", 
        "https://www.zhihu.com/people/wine-33-37", 
        "https://www.zhihu.com/people/qia-qia-qia-qia-qia-qia-27", 
        "https://www.zhihu.com/people/calmdog", 
        "https://www.zhihu.com/people/drago-6", 
        "https://www.zhihu.com/people/li-zhao-14-55", 
        "https://www.zhihu.com/people/fei-tian-shu-42", 
        "https://www.zhihu.com/people/sui-yu-er-an-83-39", 
        "https://www.zhihu.com/people/yu-hong-sheng-91", 
        "https://www.zhihu.com/people/tony-53-56-93", 
        "https://www.zhihu.com/people/cou-stu", 
        "https://www.zhihu.com/people/ikara-tasi", 
        "https://www.zhihu.com/people/zhang-yu-41-47", 
        "https://www.zhihu.com/people/bu-zhi-dao-66-13", 
        "https://www.zhihu.com/people/yewen-44", 
        "https://www.zhihu.com/people/zhang-ye-81-9-55", 
        "https://www.zhihu.com/people/you-feng-chui-guo-76-25", 
        "https://www.zhihu.com/people/peng-xian-sheng-5-71", 
        "https://www.zhihu.com/people/chen-gui-comeon", 
        "https://www.zhihu.com/people/liao-jun-jie-73", 
        "https://www.zhihu.com/people/di-jiang-21", 
        "https://www.zhihu.com/people/JJ-UAV", 
        "https://www.zhihu.com/people/wan9009", 
        "https://www.zhihu.com/people/feng-zhong-de-yi-han-83", 
        "https://www.zhihu.com/people/bowyee", 
        "https://www.zhihu.com/people/yang-wen-qin-76-58", 
        "https://www.zhihu.com/people/forrest_z", 
        "https://www.zhihu.com/people/wang-jian-cheng-77", 
        "https://www.zhihu.com/people/reed-84-49", 
        "https://www.zhihu.com/people/ni-yong-hu-97-91", 
        "https://www.zhihu.com/people/anArkitek", 
        "https://www.zhihu.com/people/ma-ming-yang-39", 
        "https://www.zhihu.com/people/eric-3-92", 
        "https://www.zhihu.com/people/xjt-13", 
        "https://www.zhihu.com/people/zangze", 
        "https://www.zhihu.com/people/xu-jun-yang-16", 
        "https://www.zhihu.com/people/ren-zai-lv-tu-83", 
        "https://www.zhihu.com/people/zheng-zai-shui-jue-97", 
        "https://www.zhihu.com/people/roachsinai", 
        "https://www.zhihu.com/people/yan-ye-41-40", 
        "https://www.zhihu.com/people/dong-feng-zao-ji", 
        "https://www.zhihu.com/people/ju-shang-38", 
        "https://www.zhihu.com/people/cheng-yu-52", 
        "https://www.zhihu.com/people/amusi1994", 
        "https://www.zhihu.com/people/xie-qi-7-32", 
        "https://www.zhihu.com/people/ou-yang-ya-dang", 
        "https://www.zhihu.com/people/goodhope", 
        "https://www.zhihu.com/people/nan-lai-bei-wang-62", 
        "https://www.zhihu.com/people/zhang-heng-42-56", 
        "https://www.zhihu.com/people/zhao-rong-89-59", 
        "https://www.zhihu.com/people/wang-xian-sheng-56-37-5", 
        "https://www.zhihu.com/people/dengwenwu", 
        "https://www.zhihu.com/people/sun-long-30-96", 
        "https://www.zhihu.com/people/zhou-peng-21-71", 
        "https://www.zhihu.com/people/shuang-kong-xiao-hun-dun", 
        "https://www.zhihu.com/people/chx-55-13", 
        "https://www.zhihu.com/people/cheng-yu-qi-32", 
        "https://www.zhihu.com/people/gu-jin-ming-57-12", 
        "https://www.zhihu.com/people/sx_AH", 
        "https://www.zhihu.com/people/pi-dan-33-7", 
        "https://www.zhihu.com/people/jerry-42-89", 
        "https://www.zhihu.com/people/wangwenpeng-72", 
        "https://www.zhihu.com/people/geng-dong-dong-80", 
        "https://www.zhihu.com/people/chen-xian-sheng-40-9", 
        "https://www.zhihu.com/people/yang-guang-64-60", 
        "https://www.zhihu.com/people/bing-feng-bian-yuan", 
        "https://www.zhihu.com/people/zhi-xing-lei-lei", 
        "https://www.zhihu.com/people/fwang16", 
        "https://www.zhihu.com/people/tongsky-49", 
        "https://www.zhihu.com/people/okeah", 
        "https://www.zhihu.com/people/jacky-87-43-8", 
        "https://www.zhihu.com/people/ding-zi-78-28", 
        "https://www.zhihu.com/people/she-liang", 
        "https://www.zhihu.com/people/li-zhen-19-32-84", 
        "https://www.zhihu.com/people/wu-bao-shan-29", 
        "https://www.zhihu.com/people/xiao-ai-43-45-82", 
        "https://www.zhihu.com/people/wang-jie-jie-46", 
        "https://www.zhihu.com/people/jax-59", 
        "https://www.zhihu.com/people/qing-ning-ye", 
        "https://www.zhihu.com/people/libin-sui", 
        "https://www.zhihu.com/people/kang-meng-39", 
        "https://www.zhihu.com/people/liu-zhen-35-21-1", 
        "https://www.zhihu.com/people/huanyu-wu", 
        "https://www.zhihu.com/people/mcjun-88", 
        "https://www.zhihu.com/people/bangpangpang", 
        "https://www.zhihu.com/people/daxianglu", 
        "https://www.zhihu.com/people/dvve"
    ], 
    "article": [
        {
            "url": "https://zhuanlan.zhihu.com/p/65863745", 
            "userName": "笨丫头", 
            "userLink": "https://www.zhihu.com/people/1e56511c5bcb79725fdcd0f516b1a3b9", 
            "upvote": 3, 
            "title": "视觉SLAM十四讲|第12讲 回环检测", 
            "content": "<h2>1. 什么是回环检测</h2><p>前面有说过累积误差的问题，前一时刻的误差会积累到后面，导致画不成圈圈，如图12-1所示，而画圈圈（全局一致性）很重要，所以需要有一个步骤来纠正当前的计算偏差。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-ba2fbf7799abc40398ad23e05fe4d354_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1288\" data-rawheight=\"498\" class=\"origin_image zh-lightbox-thumb\" width=\"1288\" data-original=\"https://pic1.zhimg.com/v2-ba2fbf7799abc40398ad23e05fe4d354_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1288&#39; height=&#39;498&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1288\" data-rawheight=\"498\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1288\" data-original=\"https://pic1.zhimg.com/v2-ba2fbf7799abc40398ad23e05fe4d354_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-ba2fbf7799abc40398ad23e05fe4d354_b.jpg\"/></figure><p>回环检测通过判断相机是否经过同一个地方来进行纠正的，本讲介绍的方法是基于外观的，拿到两张图像后，比较两张图像的相似度，越高说明越有可能是同一个地方。在评价时更注重算法的准确率。</p><h2>2.相似度计算</h2><p>在计算相似度之前需要定义一个能够用来描述图像的量，这个量可以表达图像的特征或者属性，我们可以通过这个量来计算图像的相似度。在本节中采用词袋模型。</p><p>词袋模型是用向量来描述图像，比如用向量[0,1,1,0,1]来表达图像a，其中第i个元素表示图像是否拥有特征i，向量的维度也就是总的特征数量由“字典”决定（也可以看成每个特征是字典中的一个单词，字典从a到z有3000个单词，那么向量就有3000维，如果某个图像只具有100个特征，那么除了这100个元素以外，该图像其他位置的元素值都是0）。</p><p>字典生成：前面学习了提取ORB特征来描述图像，在生成字典时，通常会选用一个比较大的图像数据集，用ORB特征描述每一幅图像，然后使用聚类算法，聚成N类，生成N维的ORB字典。</p><p>当字典很大时，O(n)的查找效率会很影响使用，为了提升查找效率可以使用k叉树结构表达字典。先聚成k类，作为k个根结点，在根结点上再对属于当前根结点的所有图像聚成k类，作为第二层，依次向下，最后得到的叶子节点就是词袋模型中的每个特征（也可以说是字典中的每个单词）。</p><p>相似度计算，最简单的方法是使用TF-IDF模型，TF计算的是特征i在图像A中出现的频率（也就是单词i，在句子中出现的频率）， <img src=\"https://www.zhihu.com/equation?tex=%5Cmathrm%7BTF%7D_%7Bi%7D%3D%5Cfrac%7Bn_%7Bi%7D%7D%7Bn%7D\" alt=\"\\mathrm{TF}_{i}=\\frac{n_{i}}{n}\" eeimg=\"1\"/> 。</p><p>IDF是指某个特征在整个字典中出现的频率越低，则这个特征的区分度越高（比如一组100张的人脸图片，提取出来的特征有眼睛、鼻子、嘴巴、苹果，那么对于这100张图片来说几乎每张都有眼睛、鼻子、嘴巴的特征，这些特征出现频率很高，不能够对于这组图片进行很好的区分。然而可能只有20张图片中有苹果，所以苹果这个特征能够很好的将这20张图片区分出来） <img src=\"https://www.zhihu.com/equation?tex=%5Cmathrm%7BIDF%7D_%7Bi%7D%3D%5Clog+%5Cfrac%7Bn%7D%7Bn_%7Bi%7D%7D\" alt=\"\\mathrm{IDF}_{i}=\\log \\frac{n}{n_{i}}\" eeimg=\"1\"/> 。</p><p>假设当前字典中有N个单词，根据词袋模型，图片A就要用N维向量表示，每一维的元素值，是这一维特征的TFIDF值， <img src=\"https://www.zhihu.com/equation?tex=%5Ceta_%7Bi%7D%3D%5Cmathrm%7BT%7D+%5Cmathrm%7BF%7D_%7Bi%7D+%5Ctimes+%5Cmathrm%7BIDF%7D_%7Bi%7D\" alt=\"\\eta_{i}=\\mathrm{T} \\mathrm{F}_{i} \\times \\mathrm{IDF}_{i}\" eeimg=\"1\"/> ，再根据两张图像的向量进行距离计算，得到相似度。</p><h2>3. 后续处理</h2><p>两张图片的相似度数值，并不能直接说明是否同一场景，会存在同一个环境下每个地方都不一样的情况。在实际比较时取先验相似度 <img src=\"https://www.zhihu.com/equation?tex=s%5Cleft%28%5Cboldsymbol%7Bv%7D_%7Bt%7D%2C+%5Cboldsymbol%7Bv%7D_%7Bt_%7Bj%7D%7D%5Cright%29%5E%7B%5Cprime%7D%3Ds%5Cleft%28%5Cboldsymbol%7Bv%7D_%7Bt%7D%2C+%5Cboldsymbol%7Bv%7D_%7Bt_%7Bj%7D%7D%5Cright%29+%2F+s%5Cleft%28%5Cboldsymbol%7Bv%7D_%7Bt%7D%2C+%5Cboldsymbol%7Bv%7D_%7Bt-%5CDelta+t%7D%5Cright%29\" alt=\"s\\left(\\boldsymbol{v}_{t}, \\boldsymbol{v}_{t_{j}}\\right)^{\\prime}=s\\left(\\boldsymbol{v}_{t}, \\boldsymbol{v}_{t_{j}}\\right) / s\\left(\\boldsymbol{v}_{t}, \\boldsymbol{v}_{t-\\Delta t}\\right)\" eeimg=\"1\"/> ，表示此时与上一时刻关键帧的相似性，将其他分值根据这个值进行归一化。认为如果当前帧与之前某关键帧的相似度超过了当前帧与上一帧相似度的3倍，则可能存在回环。</p><p>参考文献</p><p>[1] 《视觉SLAM十四讲从理论到实践》 高翔，张涛</p><p></p><p></p><p></p><p></p><p></p>", 
            "topic": [
                {
                    "tag": "同时定位和地图构建（SLAM）", 
                    "tagLink": "https://api.zhihu.com/topics/20033502"
                }, 
                {
                    "tag": "视觉SLAM十四讲（书籍）", 
                    "tagLink": "https://api.zhihu.com/topics/20127173"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/65859816", 
            "userName": "笨丫头", 
            "userLink": "https://www.zhihu.com/people/1e56511c5bcb79725fdcd0f516b1a3b9", 
            "upvote": 0, 
            "title": "视觉SLAM十四讲|第11讲 后端2", 
            "content": "<p>没看懂，啥时候懂了再写。</p>", 
            "topic": [
                {
                    "tag": "同时定位和地图构建（SLAM）", 
                    "tagLink": "https://api.zhihu.com/topics/20033502"
                }, 
                {
                    "tag": "视觉SLAM十四讲（书籍）", 
                    "tagLink": "https://api.zhihu.com/topics/20127173"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/65666168", 
            "userName": "笨丫头", 
            "userLink": "https://www.zhihu.com/people/1e56511c5bcb79725fdcd0f516b1a3b9", 
            "upvote": 3, 
            "title": "视觉SLAM十四讲|第10讲 后端1", 
            "content": "<p>咸鱼了好久。。。。起来接着学习。</p><p>上来就又被先验后验搞蒙了，重新理解一下：</p><blockquote>先验概率：根据以往经验和分析得到的概率，它往往作为“由因求果”问题中的“因”出现。<br/>后验概率：指在得到“结果”的信息后重新修正的概率，是“执果寻因”问题中的“因”。</blockquote><p>最大的区别就在于结果/当前观测在后验概率中已知，在先验概率中未知。</p><h2>1. 后端要做什么？</h2><p>前端能够根据相邻的两幅图像判断出此时此刻的位姿，是暂时的；那么后端需要对前端测量以及计算的结果进行矫正，不仅用过去的信息，也用未来的信息更新自己，希望能够得到一个长时间的正确状态。</p><p>前面有讲过，在运动方程和观测方程中，如果把位姿和路标看成随机变量，就可以把问题变为已知观测数据和运动数据情况下，如何确定状态量的分布问题，是一个状态估计问题。假设噪声和状态量服从高斯分布，只需要估计它的均值和方差，即可确定状态量的分布。</p><p>完成后端优化可以使用滤波器，也可以使用非线性优化，本讲对两种方法都做了推导。</p><h2>2. 滤波器推导</h2><p>先做一些符号的定义和铺垫：</p><p>把位姿和路标写在一起，记为： <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7Bx%7D_%7Bk%7D+%5Ctriangleq%5Cleft%5C%7B%5Cboldsymbol%7Bx%7D_%7Bk%7D%2C+%5Cboldsymbol%7By%7D_%7B1%7D%2C+%5Cldots%2C+%5Cboldsymbol%7By%7D_%7Bm%7D%5Cright%5C%7D\" alt=\"\\boldsymbol{x}_{k} \\triangleq\\left\\{\\boldsymbol{x}_{k}, \\boldsymbol{y}_{1}, \\ldots, \\boldsymbol{y}_{m}\\right\\}\" eeimg=\"1\"/> ，用新符号写运动方程和观测方程，为： <img src=\"https://www.zhihu.com/equation?tex=%5Cleft%5C%7B%5Cbegin%7Barray%7D%7Bl%7D%7B%5Cboldsymbol%7Bx%7D_%7Bk%7D%3Df%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk-1%7D%2C+%5Cboldsymbol%7Bu%7D_%7Bk%7D%5Cright%29%2B%5Cboldsymbol%7Bw%7D_%7Bk%7D%7D+%5C%5C+%7B%5Cboldsymbol%7Bz%7D_%7Bk%7D%3Dh%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk%7D%5Cright%29%2B%5Cboldsymbol%7Bv%7D_%7Bk%7D%7D%5Cend%7Barray%7D%5Cright.+%5Cquad+k%3D1%2C+%5Cldots%2C+N\" alt=\"\\left\\{\\begin{array}{l}{\\boldsymbol{x}_{k}=f\\left(\\boldsymbol{x}_{k-1}, \\boldsymbol{u}_{k}\\right)+\\boldsymbol{w}_{k}} \\\\ {\\boldsymbol{z}_{k}=h\\left(\\boldsymbol{x}_{k}\\right)+\\boldsymbol{v}_{k}}\\end{array}\\right. \\quad k=1, \\ldots, N\" eeimg=\"1\"/> 。</p><p>需要求解的是后验概率问题，即在已知0时刻的状态、1:k时刻的观测下，k时刻的状态分布，写为 <img src=\"https://www.zhihu.com/equation?tex=P%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk%7D+%7C+%5Cboldsymbol%7Bx%7D_%7B0%7D%2C+%5Cboldsymbol%7Bu%7D_%7B1+%3A+k%7D%2C+%5Cboldsymbol%7Bz%7D_%7B1+%3A+k%7D%5Cright%29\" alt=\"P\\left(\\boldsymbol{x}_{k} | \\boldsymbol{x}_{0}, \\boldsymbol{u}_{1 : k}, \\boldsymbol{z}_{1 : k}\\right)\" eeimg=\"1\"/> ，根据贝叶斯法则，将后验概率展开为似然和先验概率的乘积，写为 <img src=\"https://www.zhihu.com/equation?tex=P%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk%7D+%7C+%5Cboldsymbol%7Bx%7D_%7B0%7D%2C+%5Cboldsymbol%7Bu%7D_%7B1+%3A+k%7D%2C+%5Cboldsymbol%7Bz%7D_%7B1+%3A+k%7D%5Cright%29+%5Cpropto+P%5Cleft%28%5Cboldsymbol%7Bz%7D_%7Bk%7D+%7C+%5Cboldsymbol%7Bx%7D_%7Bk%7D%5Cright%29+P%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk%7D+%7C+%5Cboldsymbol%7Bx%7D_%7B0%7D%2C+%5Cboldsymbol%7Bu%7D_%7B1+%3A+k%7D%2C+%5Cboldsymbol%7Bz%7D_%7B1+%3A+k-1%7D%5Cright%29\" alt=\"P\\left(\\boldsymbol{x}_{k} | \\boldsymbol{x}_{0}, \\boldsymbol{u}_{1 : k}, \\boldsymbol{z}_{1 : k}\\right) \\propto P\\left(\\boldsymbol{z}_{k} | \\boldsymbol{x}_{k}\\right) P\\left(\\boldsymbol{x}_{k} | \\boldsymbol{x}_{0}, \\boldsymbol{u}_{1 : k}, \\boldsymbol{z}_{1 : k-1}\\right)\" eeimg=\"1\"/> 。</p><p>先验概率中k时刻的状态 <img src=\"https://www.zhihu.com/equation?tex=x_k\" alt=\"x_k\" eeimg=\"1\"/> 受到前面0:k-1时刻状态的影响，对先验概率进行展开，可以写为 <img src=\"https://www.zhihu.com/equation?tex=P%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk%7D+%7C+%5Cboldsymbol%7Bx%7D_%7B0%7D%2C+%5Cboldsymbol%7Bu%7D_%7B1+%3A+k%7D%2C+%5Cboldsymbol%7Bz%7D_%7B1+%3A+k-1%7D%5Cright%29%3D%5Cint+P%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk%7D+%7C+%5Cboldsymbol%7Bx%7D_%7Bk-1%7D%2C+%5Cboldsymbol%7Bx%7D_%7B0%7D%2C+%5Cboldsymbol%7Bu%7D_%7B1+%3A+k%7D%2C+%5Cboldsymbol%7Bz%7D_%7B1+%3A+k-1%7D%5Cright%29+P%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk-1%7D+%7C+%5Cboldsymbol%7Bx%7D_%7B0%7D%2C+%5Cboldsymbol%7Bu%7D_%7B1+%3A+k%7D%2C+%5Cboldsymbol%7Bz%7D_%7B1+%3A+k-1%7D%5Cright%29+%5Cmathrm%7Bd%7D+%5Cboldsymbol%7Bx%7D_%7Bk-1%7D\" alt=\"P\\left(\\boldsymbol{x}_{k} | \\boldsymbol{x}_{0}, \\boldsymbol{u}_{1 : k}, \\boldsymbol{z}_{1 : k-1}\\right)=\\int P\\left(\\boldsymbol{x}_{k} | \\boldsymbol{x}_{k-1}, \\boldsymbol{x}_{0}, \\boldsymbol{u}_{1 : k}, \\boldsymbol{z}_{1 : k-1}\\right) P\\left(\\boldsymbol{x}_{k-1} | \\boldsymbol{x}_{0}, \\boldsymbol{u}_{1 : k}, \\boldsymbol{z}_{1 : k-1}\\right) \\mathrm{d} \\boldsymbol{x}_{k-1}\" eeimg=\"1\"/> ，在进行滤波器模型推导时，假设马尔可夫性（k时刻状态只与k-1时刻状态有关，与之前状态无关）。可以根据马尔可夫性对先验概率的展开式进行化简，积分中第一个概率化简为 <img src=\"https://www.zhihu.com/equation?tex=P%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk%7D+%7C+%5Cboldsymbol%7Bx%7D_%7Bk-1%7D%2C+%5Cboldsymbol%7Bx%7D_%7B0%7D%2C+%5Cboldsymbol%7Bu%7D_%7B1+%3A+k%7D%2C+%5Cboldsymbol%7Bz%7D_%7B1+%3A+k-1%7D%5Cright%29%3DP%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk%7D+%7C+%5Cboldsymbol%7Bx%7D_%7Bk-1%7D%2C+%5Cboldsymbol%7Bu%7D_%7Bk%7D%5Cright%29\" alt=\"P\\left(\\boldsymbol{x}_{k} | \\boldsymbol{x}_{k-1}, \\boldsymbol{x}_{0}, \\boldsymbol{u}_{1 : k}, \\boldsymbol{z}_{1 : k-1}\\right)=P\\left(\\boldsymbol{x}_{k} | \\boldsymbol{x}_{k-1}, \\boldsymbol{u}_{k}\\right)\" eeimg=\"1\"/> ，第二个概率化简为 <img src=\"https://www.zhihu.com/equation?tex=P%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk-1%7D+%7C+%5Cboldsymbol%7Bx%7D_%7B0%7D%2C+%5Cboldsymbol%7Bu%7D_%7B1+%3A+k%7D%2C+%5Cboldsymbol%7Bz%7D_%7B1+%3A+k-1%7D%5Cright%29%3DP%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk-1%7D+%7C+%5Cboldsymbol%7Bx%7D_%7B0%7D%2C+%5Cboldsymbol%7Bu%7D_%7B1+%3A+k-1%7D%2C+%5Cboldsymbol%7Bz%7D_%7B1+%3A+k-1%7D%5Cright%29\" alt=\"P\\left(\\boldsymbol{x}_{k-1} | \\boldsymbol{x}_{0}, \\boldsymbol{u}_{1 : k}, \\boldsymbol{z}_{1 : k-1}\\right)=P\\left(\\boldsymbol{x}_{k-1} | \\boldsymbol{x}_{0}, \\boldsymbol{u}_{1 : k-1}, \\boldsymbol{z}_{1 : k-1}\\right)\" eeimg=\"1\"/> （运动方程中k时刻状态只受到k-1时刻的状态和k时刻的运动数据相关）。</p><h3>2.1 卡尔曼滤波器（线性高斯系统）</h3><p>在线性高斯系统中，用线性方程描述运动方程和观测方程，写为 <img src=\"https://www.zhihu.com/equation?tex=%5Cleft%5C%7B%5Cbegin%7Barray%7D%7Bl%7D%7B%5Cboldsymbol%7Bx%7D_%7Bk%7D%3D%5Cboldsymbol%7BA%7D_%7Bk%7D+%5Cboldsymbol%7Bx%7D_%7Bk-1%7D%2B%5Cboldsymbol%7Bu%7D_%7Bk%7D%2B%5Cboldsymbol%7Bw%7D_%7Bk%7D%7D+%5C%5C+%7B%5Cboldsymbol%7Bz%7D_%7Bk%7D%3D%5Cboldsymbol%7BC%7D_%7Bk%7D+%5Cboldsymbol%7Bx%7D_%7Bk%7D%2B%5Cboldsymbol%7Bv%7D_%7Bk%7D%7D%5Cend%7Barray%7D%5Cright.+%5Cquad+k%3D1%2C+%5Cldots%2C+N\" alt=\"\\left\\{\\begin{array}{l}{\\boldsymbol{x}_{k}=\\boldsymbol{A}_{k} \\boldsymbol{x}_{k-1}+\\boldsymbol{u}_{k}+\\boldsymbol{w}_{k}} \\\\ {\\boldsymbol{z}_{k}=\\boldsymbol{C}_{k} \\boldsymbol{x}_{k}+\\boldsymbol{v}_{k}}\\end{array}\\right. \\quad k=1, \\ldots, N\" eeimg=\"1\"/> ，记噪声服从零均值高斯分布： <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7Bw%7D_%7Bk%7D+%5Csim+N%28%5Cmathbf%7B0%7D%2C+%5Cboldsymbol%7BR%7D%29+.+%5Cquad+%5Cboldsymbol%7Bv%7D_%7Bk%7D+%5Csim+N%28%5Cmathbf%7B0%7D%2C+%5Cboldsymbol%7BQ%7D%29\" alt=\"\\boldsymbol{w}_{k} \\sim N(\\mathbf{0}, \\boldsymbol{R}) . \\quad \\boldsymbol{v}_{k} \\sim N(\\mathbf{0}, \\boldsymbol{Q})\" eeimg=\"1\"/> ，令 <img src=\"https://www.zhihu.com/equation?tex=%5Chat%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk%7D\" alt=\"\\hat{\\boldsymbol{x}}_{k}\" eeimg=\"1\"/> 表示后验， <img src=\"https://www.zhihu.com/equation?tex=%5Coverline%7Bx%7D\" alt=\"\\overline{x}\" eeimg=\"1\"/> 表示先验。</p><p>因为各随机变量服从高斯分布，误差服从零均值高斯分布，根据高斯分布的特性（后面解释）和观测方程、运动方程，可以分别写出似然和先验的分布：</p><p><img src=\"https://www.zhihu.com/equation?tex=P%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk%7D+%7C+%5Cboldsymbol%7Bx%7D_%7B0%7D%2C+%5Cboldsymbol%7Bu%7D_%7B1+%3A+k%7D%2C+%5Cboldsymbol%7Bz%7D_%7B1+%3A+k-1%7D%5Cright%29%3DN%5Cleft%28%5Cboldsymbol%7BA%7D_%7Bk%7D+%5Chat%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk-1%7D%2B%5Cboldsymbol%7Bu%7D_%7Bk%7D%2C+%5Cboldsymbol%7BA%7D_%7Bk%7D+%5Chat%7B%5Cboldsymbol%7BP%7D%7D_%7Bk-1%7D+%5Cboldsymbol%7BA%7D_%7Bk%7D%5E%7BT%7D%2B%5Cboldsymbol%7BR%7D%5Cright%29\" alt=\"P\\left(\\boldsymbol{x}_{k} | \\boldsymbol{x}_{0}, \\boldsymbol{u}_{1 : k}, \\boldsymbol{z}_{1 : k-1}\\right)=N\\left(\\boldsymbol{A}_{k} \\hat{\\boldsymbol{x}}_{k-1}+\\boldsymbol{u}_{k}, \\boldsymbol{A}_{k} \\hat{\\boldsymbol{P}}_{k-1} \\boldsymbol{A}_{k}^{T}+\\boldsymbol{R}\\right)\" eeimg=\"1\"/> </p><p><img src=\"https://www.zhihu.com/equation?tex=P%5Cleft%28%5Cboldsymbol%7Bz%7D_%7Bk%7D+%7C+%5Cboldsymbol%7Bx%7D_%7Bk%7D%5Cright%29%3DN%5Cleft%28%5Cboldsymbol%7BC%7D_%7Bk%7D+%5Cboldsymbol%7Bx%7D_%7Bk%7D%2C+%5Cboldsymbol%7BQ%7D%5Cright%29\" alt=\"P\\left(\\boldsymbol{z}_{k} | \\boldsymbol{x}_{k}\\right)=N\\left(\\boldsymbol{C}_{k} \\boldsymbol{x}_{k}, \\boldsymbol{Q}\\right)\" eeimg=\"1\"/> </p><p>把先验均值和方差记为 <img src=\"https://www.zhihu.com/equation?tex=%5Coverline%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk%7D%3D%5Cboldsymbol%7BA%7D_%7Bk%7D+%5Chat%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk-1%7D%2B%5Cboldsymbol%7Bu%7D_%7Bk%7D%2C+%5Cquad+%5Coverline%7B%5Cboldsymbol%7BP%7D%7D_%7Bk%7D%3D%5Cboldsymbol%7BA%7D_%7Bk%7D+%5Chat%7B%5Cboldsymbol%7BP%7D%7D_%7Bk-1%7D+%5Cboldsymbol%7BA%7D_%7Bk%7D%5E%7BT%7D%2B%5Cboldsymbol%7BR%7D\" alt=\"\\overline{\\boldsymbol{x}}_{k}=\\boldsymbol{A}_{k} \\hat{\\boldsymbol{x}}_{k-1}+\\boldsymbol{u}_{k}, \\quad \\overline{\\boldsymbol{P}}_{k}=\\boldsymbol{A}_{k} \\hat{\\boldsymbol{P}}_{k-1} \\boldsymbol{A}_{k}^{T}+\\boldsymbol{R}\" eeimg=\"1\"/> </p><p>根据后验、似然、先验的关系，有： <img src=\"https://www.zhihu.com/equation?tex=N%5Cleft%28%5Chat%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk%7D%2C+%5Chat%7B%5Cboldsymbol%7BP%7D%7D_%7Bk%7D%5Cright%29%3DN%5Cleft%28%5Cboldsymbol%7BC%7D_%7Bk%7D+%5Cboldsymbol%7Bx%7D_%7Bk%7D%2C+%5Cboldsymbol%7BQ%7D%5Cright%29+%5Ccdot+N%5Cleft%28%5Coverline%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk%7D%2C+%5Coverline%7B%5Cboldsymbol%7BP%7D%7D_%7Bk%7D%5Cright%29\" alt=\"N\\left(\\hat{\\boldsymbol{x}}_{k}, \\hat{\\boldsymbol{P}}_{k}\\right)=N\\left(\\boldsymbol{C}_{k} \\boldsymbol{x}_{k}, \\boldsymbol{Q}\\right) \\cdot N\\left(\\overline{\\boldsymbol{x}}_{k}, \\overline{\\boldsymbol{P}}_{k}\\right)\" eeimg=\"1\"/> </p><p>高斯分布底数为e，比较等式两边的指数项（不考虑常数项）有， <img src=\"https://www.zhihu.com/equation?tex=%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk%7D-%5Chat%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk%7D%5Cright%29%5E%7BT%7D+%5Chat%7B%5Cboldsymbol%7BP%7D%7D_%7Bk%7D%5E%7B-1%7D%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk%7D-%5Chat%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk%7D%5Cright%29%3D%5Cleft%28%5Cboldsymbol%7Bz%7D_%7Bk%7D-%5Cboldsymbol%7BC%7D_%7Bk%7D+%5Cboldsymbol%7Bx%7D_%7Bk%7D%5Cright%29%5E%7BT%7D+%5Cboldsymbol%7BQ%7D%5E%7B-1%7D%5Cleft%28%5Cboldsymbol%7Bz%7D_%7Bk%7D-%5Cboldsymbol%7BC%7D_%7Bk%7D+%5Cboldsymbol%7Bx%7D_%7Bk%7D%5Cright%29%2B%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk%7D-%5Coverline%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk%7D%5Cright%29%5E%7BT%7D+%5Coverline%7B%5Cboldsymbol%7BP%7D%7D_%7Bk%7D%5E%7B-1%7D%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk%7D-%5Coverline%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk%7D%5Cright%29\" alt=\"\\left(\\boldsymbol{x}_{k}-\\hat{\\boldsymbol{x}}_{k}\\right)^{T} \\hat{\\boldsymbol{P}}_{k}^{-1}\\left(\\boldsymbol{x}_{k}-\\hat{\\boldsymbol{x}}_{k}\\right)=\\left(\\boldsymbol{z}_{k}-\\boldsymbol{C}_{k} \\boldsymbol{x}_{k}\\right)^{T} \\boldsymbol{Q}^{-1}\\left(\\boldsymbol{z}_{k}-\\boldsymbol{C}_{k} \\boldsymbol{x}_{k}\\right)+\\left(\\boldsymbol{x}_{k}-\\overline{\\boldsymbol{x}}_{k}\\right)^{T} \\overline{\\boldsymbol{P}}_{k}^{-1}\\left(\\boldsymbol{x}_{k}-\\overline{\\boldsymbol{x}}_{k}\\right)\" eeimg=\"1\"/> </p><p>比较两边的系数，经过一系列推导可以得到后验均值和方差的表达式。</p><p>整个卡尔曼滤波的过程为：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-9678485d741f77501ee566162d67b25d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"984\" data-rawheight=\"528\" class=\"origin_image zh-lightbox-thumb\" width=\"984\" data-original=\"https://pic2.zhimg.com/v2-9678485d741f77501ee566162d67b25d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;984&#39; height=&#39;528&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"984\" data-rawheight=\"528\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"984\" data-original=\"https://pic2.zhimg.com/v2-9678485d741f77501ee566162d67b25d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-9678485d741f77501ee566162d67b25d_b.jpg\"/></figure><p>在第一步预测中，使用k-1时刻的后验分布估计k时刻的先验分布，这一步不确定性变大，第二步使用k时刻的先验分布估计k时刻的后验分布，对于结果进行修正，缩小不确定性。</p><h3>2.2 拓展卡尔曼滤波器EKF（非线性系统）</h3><p>将线性系统拓展到非线性系统，通常会在某个点处对方程进行展开，保留一阶项，按照线性系统进行推导。</p><p>对于k时刻的运动方程，展开有： <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7Bx%7D_%7Bk%7D+%5Capprox+f%5Cleft%28%5Chat%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk-1%7D%2C+%5Cboldsymbol%7Bu%7D_%7Bk%7D%5Cright%29%2B%5Cleft.%5Cfrac%7B%5Cpartial+f%7D%7B%5Cpartial+%5Cboldsymbol%7Bx%7D_%7Bk-1%7D%7D%5Cright%7C_%7B%5Chat%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk-1%7D%7D%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk-1%7D-%5Chat%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk-1%7D%5Cright%29%2B%5Cboldsymbol%7Bw%7D_%7Bk%7D\" alt=\"\\boldsymbol{x}_{k} \\approx f\\left(\\hat{\\boldsymbol{x}}_{k-1}, \\boldsymbol{u}_{k}\\right)+\\left.\\frac{\\partial f}{\\partial \\boldsymbol{x}_{k-1}}\\right|_{\\hat{\\boldsymbol{x}}_{k-1}}\\left(\\boldsymbol{x}_{k-1}-\\hat{\\boldsymbol{x}}_{k-1}\\right)+\\boldsymbol{w}_{k}\" eeimg=\"1\"/> ，记偏导数为 <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7BF%7D%3D%5Cleft.%5Cfrac%7B%5Cpartial+f%7D%7B%5Cpartial+%5Cboldsymbol%7Bx%7D_%7Bk-1%7D%7D%5Cright%7C_%7B%5Chat%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk-1%7D%7D\" alt=\"\\boldsymbol{F}=\\left.\\frac{\\partial f}{\\partial \\boldsymbol{x}_{k-1}}\\right|_{\\hat{\\boldsymbol{x}}_{k-1}}\" eeimg=\"1\"/> 。</p><p>对于k时刻的观测方程，展开有： <img src=\"https://www.zhihu.com/equation?tex=z_%7Bk%7D+%5Capprox+h%5Cleft%28%5Coverline%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk%7D%5Cright%29%2B%5Cleft.%5Cfrac%7B%5Cpartial+h%7D%7B%5Cpartial+%5Cboldsymbol%7Bx%7D_%7Bk%7D%7D%5Cright%7C_%7B%5Coverline%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk%7D%7D%5Cleft%28%5Cboldsymbol%7Bx%7D_%7Bk%7D-%5Chat%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk%7D%5Cright%29%2B%5Cboldsymbol%7Bn%7D_%7Bk%7D\" alt=\"z_{k} \\approx h\\left(\\overline{\\boldsymbol{x}}_{k}\\right)+\\left.\\frac{\\partial h}{\\partial \\boldsymbol{x}_{k}}\\right|_{\\overline{\\boldsymbol{x}}_{k}}\\left(\\boldsymbol{x}_{k}-\\hat{\\boldsymbol{x}}_{k}\\right)+\\boldsymbol{n}_{k}\" eeimg=\"1\"/> ，记偏导数为 <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7BH%7D%3D%5Cleft.%5Cfrac%7B%5Cpartial+h%7D%7B%5Cpartial+%5Cboldsymbol%7Bx%7D_%7Bk%7D%7D%5Cright%7C_%7B%5Cwidehat%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk%7D%7D\" alt=\"\\boldsymbol{H}=\\left.\\frac{\\partial h}{\\partial \\boldsymbol{x}_{k}}\\right|_{\\widehat{\\boldsymbol{x}}_{k}}\" eeimg=\"1\"/> 。</p><p>利用和线性系统类似的方法，推导得到预测步骤（没看明白怎么推的，如有大神请帮忙解释一下）： <img src=\"https://www.zhihu.com/equation?tex=%5Coverline%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk%7D%3Df%5Cleft%28%5Chat%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk-1%7D%2C+%5Cboldsymbol%7Bu%7D_%7Bk%7D%5Cright%29%2C+%5Cquad+%5Coverline%7B%5Cboldsymbol%7BP%7D%7D_%7Bk%7D%3D%5Cboldsymbol%7BF%7D+%5Chat%7B%5Cboldsymbol%7BP%7D%7D_%7Bk%7D+%5Cboldsymbol%7BF%7D%5E%7BT%7D%2B%5Cboldsymbol%7BR%7D_%7Bk%7D\" alt=\"\\overline{\\boldsymbol{x}}_{k}=f\\left(\\hat{\\boldsymbol{x}}_{k-1}, \\boldsymbol{u}_{k}\\right), \\quad \\overline{\\boldsymbol{P}}_{k}=\\boldsymbol{F} \\hat{\\boldsymbol{P}}_{k} \\boldsymbol{F}^{T}+\\boldsymbol{R}_{k}\" eeimg=\"1\"/> </p><p>卡尔曼增益： <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7BK%7D_%7Bk%7D%3D%5Coverline%7B%5Cboldsymbol%7BP%7D%7D_%7Bk%7D+%5Cboldsymbol%7BH%7D%5E%7B%5Cmathrm%7BT%7D%7D%5Cleft%28%5Cboldsymbol%7BH%7D+%5Coverline%7B%5Cboldsymbol%7BP%7D%7D_%7Bk%7D+%5Cboldsymbol%7BH%7D%5E%7B%5Cmathrm%7BT%7D%7D%2B%5Cboldsymbol%7BQ%7D_%7Bk%7D%5Cright%29%5E%7B-1%7D\" alt=\"\\boldsymbol{K}_{k}=\\overline{\\boldsymbol{P}}_{k} \\boldsymbol{H}^{\\mathrm{T}}\\left(\\boldsymbol{H} \\overline{\\boldsymbol{P}}_{k} \\boldsymbol{H}^{\\mathrm{T}}+\\boldsymbol{Q}_{k}\\right)^{-1}\" eeimg=\"1\"/> </p><p>更新步骤： <img src=\"https://www.zhihu.com/equation?tex=%5Chat%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk%7D%3D%5Coverline%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk%7D%2B%5Cboldsymbol%7BK%7D_%7Bk%7D%5Cleft%28%5Cboldsymbol%7Bz%7D_%7Bk%7D-h%5Cleft%28%5Coverline%7B%5Cboldsymbol%7Bx%7D%7D_%7Bk%7D%5Cright%29%5Cright%29%2C+%5Chat%7B%5Cboldsymbol%7BP%7D%7D_%7Bk%7D%3D%5Cleft%28%5Cboldsymbol%7BI%7D-%5Cboldsymbol%7BK%7D_%7Bk%7D+%5Cboldsymbol%7BH%7D%5Cright%29+%5Coverline%7B%5Cboldsymbol%7BP%7D%7D_%7Bk%7D\" alt=\"\\hat{\\boldsymbol{x}}_{k}=\\overline{\\boldsymbol{x}}_{k}+\\boldsymbol{K}_{k}\\left(\\boldsymbol{z}_{k}-h\\left(\\overline{\\boldsymbol{x}}_{k}\\right)\\right), \\hat{\\boldsymbol{P}}_{k}=\\left(\\boldsymbol{I}-\\boldsymbol{K}_{k} \\boldsymbol{H}\\right) \\overline{\\boldsymbol{P}}_{k}\" eeimg=\"1\"/> </p><p>EKF的局限性：马尔可夫假设、一次线性化，这两个数学上的处理化简了问题，但是偏离了实际情况。记录均值、方差、路标等信息，存储量大。</p><h2>3. 非线性优化（BA与图优化）</h2><blockquote>Bundle Adjustment，是指从视觉重建中提炼出最优的3D模型和相机参数（内参数和外参数）。</blockquote><h3>3.1 优化目标</h3><p>回顾整个投影过程，假设已知相机的外参数（R，t）和世界坐标系的p点坐标，求解p点的像素坐标过程。</p><p>世界坐标转化为相机坐标： <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7BP%7D%5E%7B%5Cprime%7D%3D%5Cboldsymbol%7BR%7D+%5Cboldsymbol%7Bp%7D%2B%5Cboldsymbol%7Bt%7D%3D%5Cleft%5BX%5E%7B%5Cprime%7D%2C+Y%5E%7B%5Cprime%7D%2C+Z%5E%7B%5Cprime%7D%5Cright%5D%5E%7BT%7D\" alt=\"\\boldsymbol{P}^{\\prime}=\\boldsymbol{R} \\boldsymbol{p}+\\boldsymbol{t}=\\left[X^{\\prime}, Y^{\\prime}, Z^{\\prime}\\right]^{T}\" eeimg=\"1\"/> </p><p>相机坐标投影到归一化平面： <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7BP%7D_%7Bc%7D%3D%5Cleft%5Bu_%7Bc%7D%2C+v_%7Bc%7D%2C+1%5Cright%5D%5E%7BT%7D%3D%5Cleft%5BX%5E%7B%5Cprime%7D+%2F+Z%5E%7B%5Cprime%7D%2C+Y%5E%7B%5Cprime%7D+%2F+Z%5E%7B%5Cprime%7D%2C+1%5Cright%5D%5E%7BT%7D\" alt=\"\\boldsymbol{P}_{c}=\\left[u_{c}, v_{c}, 1\\right]^{T}=\\left[X^{\\prime} / Z^{\\prime}, Y^{\\prime} / Z^{\\prime}, 1\\right]^{T}\" eeimg=\"1\"/> </p><p>去畸变（径向畸变）： <img src=\"https://www.zhihu.com/equation?tex=%5Cleft%5C%7B%5Cbegin%7Barray%7D%7Bl%7D%7Bu_%7Bc%7D%5E%7B%5Cprime%7D%3Du_%7Bc%7D%5Cleft%281%2Bk_%7B1%7D+r_%7Bc%7D%5E%7B2%7D%2Bk_%7B2%7D+r_%7Bc%7D%5E%7B4%7D%5Cright%29%7D+%5C%5C+%7Bv_%7Bc%7D%5E%7B%5Cprime%7D%3Dv_%7Bc%7D%5Cleft%281%2Bk_%7B1%7D+r_%7Bc%7D%5E%7B2%7D%2Bk_%7B2%7D+r_%7Bc%7D%5E%7B4%7D%5Cright%29%7D%5Cend%7Barray%7D%5Cright.\" alt=\"\\left\\{\\begin{array}{l}{u_{c}^{\\prime}=u_{c}\\left(1+k_{1} r_{c}^{2}+k_{2} r_{c}^{4}\\right)} \\\\ {v_{c}^{\\prime}=v_{c}\\left(1+k_{1} r_{c}^{2}+k_{2} r_{c}^{4}\\right)}\\end{array}\\right.\" eeimg=\"1\"/> </p><p>计算像素坐标： <img src=\"https://www.zhihu.com/equation?tex=%5Cleft%5C%7B%5Cbegin%7Barray%7D%7Bl%7D%7Bu_%7Bs%7D%3Df_%7Bx%7D+u_%7Bc%7D%5E%7B%5Cprime%7D%2Bc_%7Bx%7D%7D+%5C%5C+%7Bv_%7Bs%7D%3Df_%7By%7D+v_%7Bc%7D%5E%7B%5Cprime%7D%2Bc_%7By%7D%7D%5Cend%7Barray%7D%5Cright.\" alt=\"\\left\\{\\begin{array}{l}{u_{s}=f_{x} u_{c}^{\\prime}+c_{x}} \\\\ {v_{s}=f_{y} v_{c}^{\\prime}+c_{y}}\\end{array}\\right.\" eeimg=\"1\"/> </p><p>整个过程中，用到了相机的位姿（R，t）和路标p的世界坐标，得到了路标的像素坐标，对应到观测方程z=h(x,y)中，观测z就是像素坐标 <img src=\"https://www.zhihu.com/equation?tex=%5Cleft%5Bu_%7Bs%7D%2C+v_%7Bs%7D%5Cright%5D%5E%7BT%7D\" alt=\"\\left[u_{s}, v_{s}\\right]^{T}\" eeimg=\"1\"/> ，相机位姿x用李代数表示 <img src=\"https://www.zhihu.com/equation?tex=%5Cxi\" alt=\"\\xi\" eeimg=\"1\"/> ，路标y用三维点p的坐标。那么通过降低观测到的像素坐标z和估计到的像素坐标 <img src=\"https://www.zhihu.com/equation?tex=h%28%5Cboldsymbol%7B%5Cxi%7D%2C+%5Cboldsymbol%7Bp%7D%29\" alt=\"h(\\boldsymbol{\\xi}, \\boldsymbol{p})\" eeimg=\"1\"/> 之间的误差，就可以得到最优的x和y的解。用最小二乘表示整体的代价函数为：</p><p><img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7B1%7D%7B2%7D+%5Csum_%7Bi%3D1%7D%5E%7Bm%7D+%5Csum_%7Bj%3D1%7D%5E%7Bn%7D%5Cleft%5C%7Ce_%7Bi+j%7D%5Cright%5C%7C%5E%7B2%7D%3D%5Cfrac%7B1%7D%7B2%7D+%5Csum_%7Bi%3D1%7D%5E%7Bm%7D+%5Csum_%7Bj%3D1%7D%5E%7Bn%7D%5Cleft%5C%7Cz_%7Bi+j%7D-h%5Cleft%28%5Cboldsymbol%7B%5Cxi%7D_%7Bi%7D%2C+%5Cboldsymbol%7Bp%7D_%7Bj%7D%5Cright%29%5Cright%5C%7C%5E%7B2%7D\" alt=\"\\frac{1}{2} \\sum_{i=1}^{m} \\sum_{j=1}^{n}\\left\\|e_{i j}\\right\\|^{2}=\\frac{1}{2} \\sum_{i=1}^{m} \\sum_{j=1}^{n}\\left\\|z_{i j}-h\\left(\\boldsymbol{\\xi}_{i}, \\boldsymbol{p}_{j}\\right)\\right\\|^{2}\" eeimg=\"1\"/> </p><p>采用非线性优化更新增量的方式求解，令 <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7Bx%7D%3D%5Cleft%5B%5Cboldsymbol%7B%5Cxi%7D_%7B1%7D%2C+%5Cldots%2C+%5Cboldsymbol%7B%5Cxi%7D_%7Bm%7D%2C+%5Cboldsymbol%7Bp%7D_%7B1%7D%2C+%5Cldots%2C+%5Cboldsymbol%7Bp%7D_%7Bn%7D%5Cright%5D%5E%7BT%7D\" alt=\"\\boldsymbol{x}=\\left[\\boldsymbol{\\xi}_{1}, \\ldots, \\boldsymbol{\\xi}_{m}, \\boldsymbol{p}_{1}, \\ldots, \\boldsymbol{p}_{n}\\right]^{T}\" eeimg=\"1\"/> ， <img src=\"https://www.zhihu.com/equation?tex=f%28x%29%3D%5Cboldsymbol%7Bz%7D_%7Bi+j%7D-h%5Cleft%28%5Cboldsymbol%7B%5Cxi%7D_%7Bi%7D%2C+%5Cboldsymbol%7Bp%7D_%7Bj%7D%5Cright%29\" alt=\"f(x)=\\boldsymbol{z}_{i j}-h\\left(\\boldsymbol{\\xi}_{i}, \\boldsymbol{p}_{j}\\right)\" eeimg=\"1\"/> 。</p><p>引入增量后，目标函数变为： <img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7B1%7D%7B2%7D%5C%7Cf%28%5Cboldsymbol%7Bx%7D%2B%5CDelta+%5Cboldsymbol%7Bx%7D%29%5C%7C%5E%7B2%7D+%5Capprox+%5Cfrac%7B1%7D%7B2%7D+%5Csum_%7Bi%3D1%7D%5E%7Bm%7D+%5Csum_%7Bj%3D1%7D%5E%7Bn%7D%5Cleft%5C%7C%5Cboldsymbol%7Be%7D_%7Bi+j%7D%2B%5Cboldsymbol%7BF%7D_%7Bi+j%7D+%5CDelta+%5Cboldsymbol%7B%5Cxi%7D_%7Bi%7D%2B%5Cboldsymbol%7BE%7D_%7Bi+j%7D+%5CDelta+%5Cboldsymbol%7Bp%7D_%7Bj%7D%5Cright%5C%7C%5E%7B2%7D\" alt=\"\\frac{1}{2}\\|f(\\boldsymbol{x}+\\Delta \\boldsymbol{x})\\|^{2} \\approx \\frac{1}{2} \\sum_{i=1}^{m} \\sum_{j=1}^{n}\\left\\|\\boldsymbol{e}_{i j}+\\boldsymbol{F}_{i j} \\Delta \\boldsymbol{\\xi}_{i}+\\boldsymbol{E}_{i j} \\Delta \\boldsymbol{p}_{j}\\right\\|^{2}\" eeimg=\"1\"/> </p><p><img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7BF%7D_%7Bi+j%7D\" alt=\"\\boldsymbol{F}_{i j}\" eeimg=\"1\"/> 表示f(x)对于相机位姿的偏导数， <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7BE%7D_%7Bi+j%7D\" alt=\"\\boldsymbol{E}_{i j}\" eeimg=\"1\"/> 表示f(x)对于路标点位置的偏导数。</p><p>接下来使用第六章的非线性优化方法进行求解，在求解时不免要计算 <img src=\"https://www.zhihu.com/equation?tex=H+%5CDelta+x%3Dg\" alt=\"H \\Delta x=g\" eeimg=\"1\"/> ，利用H矩阵的稀疏性能够加速求解。</p><h3>3.2 稀疏性</h3><p>在高斯牛顿法中 <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7BH%7D%3D%5Cboldsymbol%7BJ%7D%5E%7BT%7D+%5Cboldsymbol%7BJ%7D\" alt=\"\\boldsymbol{H}=\\boldsymbol{J}^{T} \\boldsymbol{J}\" eeimg=\"1\"/> ，在列文伯格——马夸尔特方法中 <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7BH%7D%3D%5Cboldsymbol%7BJ%7D%5E%7BT%7D+%5Cboldsymbol%7BJ%7D%2B%5Clambda+%5Cboldsymbol%7BI%7D\" alt=\"\\boldsymbol{H}=\\boldsymbol{J}^{T} \\boldsymbol{J}+\\lambda \\boldsymbol{I}\" eeimg=\"1\"/> ，所以H的稀疏性主要是由J引起的。</p><p>对于代价函数中的 <img src=\"https://www.zhihu.com/equation?tex=e_%7Bi+j%7D\" alt=\"e_{i j}\" eeimg=\"1\"/> ，描述的是在 <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7B%5Cxi%7D_%7Bi%7D\" alt=\"\\boldsymbol{\\xi}_{i}\" eeimg=\"1\"/> 看到 <img src=\"https://www.zhihu.com/equation?tex=p_j\" alt=\"p_j\" eeimg=\"1\"/> ，只与这两个量相关，所以 <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7BJ%7D_%7Bi+j%7D%28%5Cboldsymbol%7Bx%7D%29%3D%5Cleft%28%5Cmathbf%7B0%7D_%7B2+%5Ctimes+6%7D%2C+%5Cldots+%5Cmathbf%7B0%7D_%7B2+%5Ctimes+6%7D%2C+%5Cfrac%7B%5Cpartial+%5Cboldsymbol%7Be%7D_%7Bi+j%7D%7D%7B%5Cpartial+%5Cboldsymbol%7B%5Cxi%7D_%7Bi%7D%7D%2C+%5Cmathbf%7B0%7D_%7B2+%5Ctimes+6%7D%2C+%5Cldots+%5Cmathbf%7B0%7D_%7B2+%5Ctimes+3%7D%2C+%5Cldots+%5Cmathbf%7B0%7D_%7B2+%5Ctimes+3%7D%2C+%5Cfrac%7B%5Cpartial+%5Cboldsymbol%7Be%7D_%7Bi+j%7D%7D%7B%5Cpartial+%5Cboldsymbol%7Bp%7D_%7Bj%7D%7D%2C+%5Cmathbf%7B0%7D_%7B2+%5Ctimes+3%7D%2C+%5Cldots+%5Cmathbf%7B0%7D_%7B2+%5Ctimes+3%7D%5Cright%29\" alt=\"\\boldsymbol{J}_{i j}(\\boldsymbol{x})=\\left(\\mathbf{0}_{2 \\times 6}, \\ldots \\mathbf{0}_{2 \\times 6}, \\frac{\\partial \\boldsymbol{e}_{i j}}{\\partial \\boldsymbol{\\xi}_{i}}, \\mathbf{0}_{2 \\times 6}, \\ldots \\mathbf{0}_{2 \\times 3}, \\ldots \\mathbf{0}_{2 \\times 3}, \\frac{\\partial \\boldsymbol{e}_{i j}}{\\partial \\boldsymbol{p}_{j}}, \\mathbf{0}_{2 \\times 3}, \\ldots \\mathbf{0}_{2 \\times 3}\\right)\" eeimg=\"1\"/> </p><p>由于 <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7BH%7D%3D%5Cboldsymbol%7BJ%7D%5E%7BT%7D+%5Cboldsymbol%7BJ%7D\" alt=\"\\boldsymbol{H}=\\boldsymbol{J}^{T} \\boldsymbol{J}\" eeimg=\"1\"/> ，J只在i和j处有非零块，所以矩阵H中只有(i,i),(i,j),(j,i),(j,j)处有非零块，其中i是相机部分，j是路标部分。</p><p>举例说明，假设有2个相机位姿 <img src=\"https://www.zhihu.com/equation?tex=%5Cleft%28C_%7B1%7D%2C+C_%7B2%7D%5Cright%29\" alt=\"\\left(C_{1}, C_{2}\\right)\" eeimg=\"1\"/> 和6个路标 <img src=\"https://www.zhihu.com/equation?tex=%5Cleft%28P_%7B1%7D%2C+P_%7B2%7D%2C+P_%7B3%7D%2C+P_%7B4%7D%2C+P_%7B5%7D%2C+P_%7B6%7D%5Cright%29\" alt=\"\\left(P_{1}, P_{2}, P_{3}, P_{4}, P_{5}, P_{6}\\right)\" eeimg=\"1\"/> ，那么相机所对应的变量有 <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7B%5Cxi%7D_%7Bi%7D%2C+i%3D1%2C2\" alt=\"\\boldsymbol{\\xi}_{i}, i=1,2\" eeimg=\"1\"/> ，路标对应变量有 <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7Bp%7D_%7Bj%7D%2C+j%3D1%2C+%5Cldots%2C+6\" alt=\"\\boldsymbol{p}_{j}, j=1, \\ldots, 6\" eeimg=\"1\"/> 。如图10-4所示，连线表示相机可以看到路标。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a798749aa461f71d2034b5e2eaf6baa6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1012\" data-rawheight=\"428\" class=\"origin_image zh-lightbox-thumb\" width=\"1012\" data-original=\"https://pic3.zhimg.com/v2-a798749aa461f71d2034b5e2eaf6baa6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1012&#39; height=&#39;428&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1012\" data-rawheight=\"428\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1012\" data-original=\"https://pic3.zhimg.com/v2-a798749aa461f71d2034b5e2eaf6baa6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-a798749aa461f71d2034b5e2eaf6baa6_b.jpg\"/></figure><p>图10-4的场景，用目标函数表示应该是： <img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7B1%7D%7B2%7D%5Cleft%28%5Cleft%5C%7Ce_%7B11%7D%5Cright%5C%7C%5E%7B2%7D%2B%5Cleft%5C%7Ce_%7B12%7D%5Cright%5C%7C%5E%7B2%7D%2B%5Cleft%5C%7Ce_%7B13%7D%5Cright%5C%7C%5E%7B2%7D%2B%5Cleft%5C%7Ce_%7B14%7D%5Cright%5C%7C%5E%7B2%7D%2B%5Cleft%5C%7Ce_%7B23%7D%5Cright%5C%7C%5E%7B2%7D%2B%5Cleft%5C%7Ce_%7B24%7D%5Cright%5C%7C%5E%7B2%7D%2B%5Cleft%5C%7Ce_%7B25%7D%5Cright%5C%7C%5E%7B2%7D%2B%5Cleft%5C%7Ce_%7B26%7D%5Cright%5C%7C%5E%7B2%7D%5Cright%29\" alt=\"\\frac{1}{2}\\left(\\left\\|e_{11}\\right\\|^{2}+\\left\\|e_{12}\\right\\|^{2}+\\left\\|e_{13}\\right\\|^{2}+\\left\\|e_{14}\\right\\|^{2}+\\left\\|e_{23}\\right\\|^{2}+\\left\\|e_{24}\\right\\|^{2}+\\left\\|e_{25}\\right\\|^{2}+\\left\\|e_{26}\\right\\|^{2}\\right)\" eeimg=\"1\"/> </p><p>其中 <img src=\"https://www.zhihu.com/equation?tex=e_%7B11%7D\" alt=\"e_{11}\" eeimg=\"1\"/> 描述的是相机 <img src=\"https://www.zhihu.com/equation?tex=C_1\" alt=\"C_1\" eeimg=\"1\"/> 观测到了 <img src=\"https://www.zhihu.com/equation?tex=p_1\" alt=\"p_1\" eeimg=\"1\"/> ，把所有变量按照 <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7Bx%7D%3D%5Cleft%28%5Cboldsymbol%7B%5Cxi%7D_%7B1%7D%2C+%5Cboldsymbol%7B%5Cxi%7D_%7B2%7D%2C+%5Cboldsymbol%7Bp%7D_%7B1%7D%2C+%5Cdots%2C+%5Cboldsymbol%7Bp%7D_%7B2%7D%5Cright%29%5E%7BT%7D\" alt=\"\\boldsymbol{x}=\\left(\\boldsymbol{\\xi}_{1}, \\boldsymbol{\\xi}_{2}, \\boldsymbol{p}_{1}, \\dots, \\boldsymbol{p}_{2}\\right)^{T}\" eeimg=\"1\"/> 的顺序摆放，则雅各比矩阵为 <img src=\"https://www.zhihu.com/equation?tex=J_%7B11%7D%3D%5Cfrac%7B%5Cpartial+e_%7B11%7D%7D%7B%5Cpartial+%5Cboldsymbol%7B%5Cxi%7D_%7B1%7D%7D%3D%5Cleft%28%5Cfrac%7B%5Cpartial+e_%7B11%7D%7D%7B%5Cpartial+%5Cxi_%7B1%7D%7D%2C+%5Cmathbf%7B0%7D_%7B2+%5Ctimes+6%7D%2C+%5Cfrac%7B%5Cpartial+e_%7B11%7D%7D%7B%5Cpartial+%5Cboldsymbol%7Bp%7D_%7B1%7D%7D%2C+%5Cmathbf%7B0%7D_%7B2+%5Ctimes+3%7D%2C+%5Cmathbf%7B0%7D_%7B2+%5Ctimes+3%7D%2C+%5Cmathbf%7B0%7D_%7B2+%5Ctimes+3%7D%2C+%5Cmathbf%7B0%7D_%7B2+%5Ctimes+3%7D%2C+%5Cmathbf%7B0%7D_%7B2+%5Ctimes+3%7D%5Cright%29\" alt=\"J_{11}=\\frac{\\partial e_{11}}{\\partial \\boldsymbol{\\xi}_{1}}=\\left(\\frac{\\partial e_{11}}{\\partial \\xi_{1}}, \\mathbf{0}_{2 \\times 6}, \\frac{\\partial e_{11}}{\\partial \\boldsymbol{p}_{1}}, \\mathbf{0}_{2 \\times 3}, \\mathbf{0}_{2 \\times 3}, \\mathbf{0}_{2 \\times 3}, \\mathbf{0}_{2 \\times 3}, \\mathbf{0}_{2 \\times 3}\\right)\" eeimg=\"1\"/> ，依次推类可以得到目标函数每一项的雅各比矩阵，叠放在一起，用方块表示非零块，则矩阵J和H的非零值如图10-6所示。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-031611a401ad3f571db96b87832e603b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1040\" data-rawheight=\"396\" class=\"origin_image zh-lightbox-thumb\" width=\"1040\" data-original=\"https://pic4.zhimg.com/v2-031611a401ad3f571db96b87832e603b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1040&#39; height=&#39;396&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1040\" data-rawheight=\"396\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1040\" data-original=\"https://pic4.zhimg.com/v2-031611a401ad3f571db96b87832e603b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-031611a401ad3f571db96b87832e603b_b.jpg\"/></figure><p>每个非零块都对应着相机和路标点的关系，拓展开来，可以把H矩阵划分成四个区域，如图10-9所示。</p><figure data-size=\"small\"><noscript><img src=\"https://pic4.zhimg.com/v2-c0530d07f9756021394dc7af2da4f377_b.jpg\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"660\" data-rawheight=\"538\" class=\"origin_image zh-lightbox-thumb\" width=\"660\" data-original=\"https://pic4.zhimg.com/v2-c0530d07f9756021394dc7af2da4f377_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;660&#39; height=&#39;538&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"660\" data-rawheight=\"538\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"660\" data-original=\"https://pic4.zhimg.com/v2-c0530d07f9756021394dc7af2da4f377_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-c0530d07f9756021394dc7af2da4f377_b.jpg\"/></figure><p>其中BC是对角块矩阵，B的对角块与相机位姿的维度相同，C的对角块与路标维度相同，E的数值和具体的观测相关。</p><h3>3.3 边缘化（Marginalization）</h3><p>把相机位姿变量放到一起，记为 <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7Bx%7D_%7Bc%7D%3D%5Cleft%5B%5Cboldsymbol%7B%5Cxi%7D_%7B1%7D%2C+%5Cboldsymbol%7B%5Cxi%7D_%7B2%7D%2C+%5Cldots%2C+%5Cboldsymbol%7B%5Cxi%7D_%7Bm%7D%5Cright%5D%5E%7BT%7D+%5Cin+%5Cmathbb%7BR%7D%5E%7B6+m%7D\" alt=\"\\boldsymbol{x}_{c}=\\left[\\boldsymbol{\\xi}_{1}, \\boldsymbol{\\xi}_{2}, \\ldots, \\boldsymbol{\\xi}_{m}\\right]^{T} \\in \\mathbb{R}^{6 m}\" eeimg=\"1\"/> ，把空间点的变量放在一起，记为 <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7Bx%7D_%7Bp%7D%3D%5Cleft%5B%5Cboldsymbol%7Bp%7D_%7B1%7D%2C+%5Cboldsymbol%7Bp%7D_%7B2%7D%2C+%5Cldots%2C+%5Cboldsymbol%7Bp%7D_%7Bn%7D%5Cright%5D%5E%7BT%7D+%5Cin+%5Cmathbb%7BR%7D%5E%7B3+n%7D\" alt=\"\\boldsymbol{x}_{p}=\\left[\\boldsymbol{p}_{1}, \\boldsymbol{p}_{2}, \\ldots, \\boldsymbol{p}_{n}\\right]^{T} \\in \\mathbb{R}^{3 n}\" eeimg=\"1\"/> 。</p><p>在非线性优化中，需要根据 <img src=\"https://www.zhihu.com/equation?tex=H+%5CDelta+x%3Dg\" alt=\"H \\Delta x=g\" eeimg=\"1\"/> 求解增量，用分块矩阵表示H后变为： <img src=\"https://www.zhihu.com/equation?tex=%5Cleft%5B+%5Cbegin%7Barray%7D%7Bcc%7D%7B%5Cboldsymbol%7BB%7D%7D+%26+%7B%5Cboldsymbol%7BE%7D%7D+%5C%5C+%7B%5Cboldsymbol%7BE%7D%5E%7BT%7D%7D+%26+%7B%5Cboldsymbol%7BC%7D%7D%5Cend%7Barray%7D%5Cright%5D+%5Cleft%5B+%5Cbegin%7Barray%7D%7Bc%7D%7B%5CDelta+%5Cboldsymbol%7Bx%7D_%7Bc%7D%7D+%5C%5C+%7B%5CDelta+%5Cboldsymbol%7Bx%7D_%7Bp%7D%7D%5Cend%7Barray%7D%5Cright%5D%3D%5Cleft%5B+%5Cbegin%7Barray%7D%7Bc%7D%7B%5Cboldsymbol%7Bv%7D%7D+%5C%5C+%7B%5Cboldsymbol%7Bw%7D%7D%5Cend%7Barray%7D%5Cright%5D\" alt=\"\\left[ \\begin{array}{cc}{\\boldsymbol{B}} &amp; {\\boldsymbol{E}} \\\\ {\\boldsymbol{E}^{T}} &amp; {\\boldsymbol{C}}\\end{array}\\right] \\left[ \\begin{array}{c}{\\Delta \\boldsymbol{x}_{c}} \\\\ {\\Delta \\boldsymbol{x}_{p}}\\end{array}\\right]=\\left[ \\begin{array}{c}{\\boldsymbol{v}} \\\\ {\\boldsymbol{w}}\\end{array}\\right]\" eeimg=\"1\"/> ，需要想办法计算两个增量。</p><p>先消去右上角的E： <img src=\"https://www.zhihu.com/equation?tex=%5Cleft%5B+%5Cbegin%7Barray%7D%7Bcc%7D%7BI%7D+%26+%7B-E+C%5E%7B-1%7D%7D+%5C%5C+%7B0%7D+%26+%7BI%7D%5Cend%7Barray%7D%5Cright%5D+%5Cleft%5B+%5Cbegin%7Barray%7D%7Bcc%7D%7BB%7D+%26+%7BE%7D+%5C%5C+%7BE%5E%7BT%7D%7D+%26+%7BC%7D%5Cend%7Barray%7D%5Cright%5D+%5Cleft%5B+%5Cbegin%7Barray%7D%7Bc%7D%7B%5CDelta+x_%7Bc%7D%7D+%5C%5C+%7B%5CDelta+x_%7Bp%7D%7D%5Cend%7Barray%7D%5Cright%5D%3D%5Cleft%5B+%5Cbegin%7Barray%7D%7Bcc%7D%7BI%7D+%26+%7B-E+C%5E%7B-1%7D%7D+%5C%5C+%7B0%7D+%26+%7BI%7D%5Cend%7Barray%7D%5Cright%5D+%5Cleft%5B+%5Cbegin%7Barray%7D%7Bc%7D%7Bv%7D+%5C%5C+%7Bw%7D%5Cend%7Barray%7D%5Cright%5D\" alt=\"\\left[ \\begin{array}{cc}{I} &amp; {-E C^{-1}} \\\\ {0} &amp; {I}\\end{array}\\right] \\left[ \\begin{array}{cc}{B} &amp; {E} \\\\ {E^{T}} &amp; {C}\\end{array}\\right] \\left[ \\begin{array}{c}{\\Delta x_{c}} \\\\ {\\Delta x_{p}}\\end{array}\\right]=\\left[ \\begin{array}{cc}{I} &amp; {-E C^{-1}} \\\\ {0} &amp; {I}\\end{array}\\right] \\left[ \\begin{array}{c}{v} \\\\ {w}\\end{array}\\right]\" eeimg=\"1\"/> ，</p><p>整理得到 <img src=\"https://www.zhihu.com/equation?tex=%5Cleft%5B+%5Cbegin%7Barray%7D%7Bcc%7D%7B%5Cboldsymbol%7BB%7D-%5Cboldsymbol%7BE%7D+C%5E%7B-1%7D+%5Cboldsymbol%7BE%7D%5E%7BT%7D%7D+%26+%7B%5Cmathbf%7B0%7D%7D+%5C%5C+%7B%5Cboldsymbol%7BE%7D%5E%7BT%7D%7D+%26+%7B%5Cboldsymbol%7BC%7D%7D%5Cend%7Barray%7D%5Cright%5D+%5Cleft%5B+%5Cbegin%7Barray%7D%7Bc%7D%7B%5CDelta+%5Cboldsymbol%7Bx%7D_%7Bc%7D%7D+%5C%5C+%7B%5CDelta+%5Cboldsymbol%7Bx%7D_%7Bp%7D%7D%5Cend%7Barray%7D%5Cright%5D%3D%5Cleft%5B+%5Cbegin%7Barray%7D%7Bc%7D%7B%5Cboldsymbol%7Bv%7D-%5Cboldsymbol%7BE%7D+%5Cboldsymbol%7BC%7D%5E%7B-1%7D+%5Cboldsymbol%7Bw%7D%7D+%5C%5C+%7B%5Cboldsymbol%7Bw%7D%7D%5Cend%7Barray%7D%5Cright%5D\" alt=\"\\left[ \\begin{array}{cc}{\\boldsymbol{B}-\\boldsymbol{E} C^{-1} \\boldsymbol{E}^{T}} &amp; {\\mathbf{0}} \\\\ {\\boldsymbol{E}^{T}} &amp; {\\boldsymbol{C}}\\end{array}\\right] \\left[ \\begin{array}{c}{\\Delta \\boldsymbol{x}_{c}} \\\\ {\\Delta \\boldsymbol{x}_{p}}\\end{array}\\right]=\\left[ \\begin{array}{c}{\\boldsymbol{v}-\\boldsymbol{E} \\boldsymbol{C}^{-1} \\boldsymbol{w}} \\\\ {\\boldsymbol{w}}\\end{array}\\right]\" eeimg=\"1\"/> ，</p><p>用第一行计算出 <img src=\"https://www.zhihu.com/equation?tex=%5CDelta+x_%7Bc%7D\" alt=\"\\Delta x_{c}\" eeimg=\"1\"/> 的值，再带入第二行，求解 <img src=\"https://www.zhihu.com/equation?tex=%5CDelta+%5Cboldsymbol%7Bx%7D_%7Bp%7D\" alt=\"\\Delta \\boldsymbol{x}_{p}\" eeimg=\"1\"/> ，这个过程称为Marginalization。</p><h3>3.4 鲁棒核函数</h3><p>当输入的数据存在无匹配时，误差会很大，在二范式中产生的梯度也会很大，从而导致增量朝着错误的方向变化。选用一个具有光滑性质并且变化较小的函数可以使得系统更稳健，这种函数称为鲁棒核函数，比如Huber核： <img src=\"https://www.zhihu.com/equation?tex=H%28e%29%3D%5Cleft%5C%7B%5Cbegin%7Barray%7D%7Bll%7D%7B%5Cfrac%7B1%7D%7B2%7D+e%5E%7B2%7D%7D+%26+%7B%5Ctext+%7B+if+%7D%7Ce%7C+%5Cleq+%5Cdelta%7D+%5C%5C+%7B%5Cdelta%5Cleft%28%7Ce%7C-%5Cfrac%7B1%7D%7B2%7D+%5Cdelta%5Cright%29%7D+%26+%7B%5Ctext+%7B+otherwise+%7D%7D%5Cend%7Barray%7D%5Cright.\" alt=\"H(e)=\\left\\{\\begin{array}{ll}{\\frac{1}{2} e^{2}} &amp; {\\text { if }|e| \\leq \\delta} \\\\ {\\delta\\left(|e|-\\frac{1}{2} \\delta\\right)} &amp; {\\text { otherwise }}\\end{array}\\right.\" eeimg=\"1\"/> 。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>附录A.3</p><p>高斯函数性质：</p><p>对于随机变量 <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7Bx%7D+%5Csim+N%5Cleft%28%5Cboldsymbol%7B%5Cmu%7D_%7Bx%7D%2C+%5Cboldsymbol%7B%5CSigma%7D_%7Bx+x%7D%5Cright%29\" alt=\"\\boldsymbol{x} \\sim N\\left(\\boldsymbol{\\mu}_{x}, \\boldsymbol{\\Sigma}_{x x}\\right)\" eeimg=\"1\"/> ，若有 <img src=\"https://www.zhihu.com/equation?tex=%5Cboldsymbol%7By%7D%3D%5Cboldsymbol%7BA+x%7D%2B%5Cboldsymbol%7Bb%7D%2B%5Cboldsymbol%7Bw%7D\" alt=\"\\boldsymbol{y}=\\boldsymbol{A x}+\\boldsymbol{b}+\\boldsymbol{w}\" eeimg=\"1\"/> ，其中A，b为线性变量的稀疏矩阵核偏移量，w为噪声项，且 <img src=\"https://www.zhihu.com/equation?tex=w+%5Csim+N%28%5Cmathbf%7B0%7D%2C+%5Cboldsymbol%7BR%7D%29\" alt=\"w \\sim N(\\mathbf{0}, \\boldsymbol{R})\" eeimg=\"1\"/> ，有 <img src=\"https://www.zhihu.com/equation?tex=p%28%5Cboldsymbol%7By%7D%29%3DN%5Cleft%28%5Cboldsymbol%7BA%7D+%5Cboldsymbol%7B%5Cmu%7D_%7Bx%7D%2B%5Cboldsymbol%7Bb%7D%2C+%5Cboldsymbol%7BA%7D+%5Cboldsymbol%7B%5CSigma%7D_%7Bx+x%7D+%5Cboldsymbol%7BA%7D%5E%7B%5Cmathrm%7BT%7D%7D%2B%5Cboldsymbol%7BR%7D%5Cright%29\" alt=\"p(\\boldsymbol{y})=N\\left(\\boldsymbol{A} \\boldsymbol{\\mu}_{x}+\\boldsymbol{b}, \\boldsymbol{A} \\boldsymbol{\\Sigma}_{x x} \\boldsymbol{A}^{\\mathrm{T}}+\\boldsymbol{R}\\right)\" eeimg=\"1\"/> 。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>参考文献</p><p>[1] 《视觉SLAM十四讲从理论到实践》 高翔，张涛</p><p></p><p></p><p></p>", 
            "topic": [
                {
                    "tag": "同时定位和地图构建（SLAM）", 
                    "tagLink": "https://api.zhihu.com/topics/20033502"
                }, 
                {
                    "tag": "视觉SLAM十四讲（书籍）", 
                    "tagLink": "https://api.zhihu.com/topics/20127173"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/61883169", 
            "userName": "笨丫头", 
            "userLink": "https://www.zhihu.com/people/1e56511c5bcb79725fdcd0f516b1a3b9", 
            "upvote": 0, 
            "title": "视觉SLAM十四讲|第8讲 视觉里程计2", 
            "content": "<p>终于来到第8讲了。</p><p>第七讲中的特征点法需要计算特征点，计算量大；如果找不到特征点方法就失效了；忽略了特征点以外的信息。</p><p>第八讲介绍光流法和直接法，避免使用特征点。</p><h2>1. 光流</h2><blockquote>光流是一种描述像素随时间在图像之间运动的方法。</blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-85db5b6ad42cc6224400c559cdc1d78e_b.jpg\" data-size=\"normal\" data-rawwidth=\"1738\" data-rawheight=\"630\" class=\"origin_image zh-lightbox-thumb\" width=\"1738\" data-original=\"https://pic3.zhimg.com/v2-85db5b6ad42cc6224400c559cdc1d78e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1738&#39; height=&#39;630&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1738\" data-rawheight=\"630\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1738\" data-original=\"https://pic3.zhimg.com/v2-85db5b6ad42cc6224400c559cdc1d78e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-85db5b6ad42cc6224400c559cdc1d78e_b.jpg\"/><figcaption>图8-1</figcaption></figure><p>如图8-1所示一个像素会随着时间的流逝进行运动，每一时刻的位置都有所变化，光流法就是去追踪像素每一时刻的位置变化，来还原运动过程。</p><p>光流法中有一条基本假设：</p><blockquote>灰度不变假设：同一个空间点的像素灰度值，在各个图像中是固定不变的。</blockquote><p>意思是说图8-1中红色框框的像素点，在 <img src=\"https://www.zhihu.com/equation?tex=t_1%2Ct_2%2Ct_3\" alt=\"t_1,t_2,t_3\" eeimg=\"1\"/> 时刻的灰度值是一样的，只是每一个时刻在图像中的位置不一样，光流法就是通过这个假设来计算像素点的位置。灰度不变假设很理想，通常都不成立，但仍然有理论贡献。</p><p>计算部分像素运动称为悉数光流，以Lucas-Kanade法为代表；计算所有像素运动的称为稠密光流。下面介绍的是LK光流法。</p><p>根据前面的描述，可以把图像看成是时间的函数，把一个t时刻处于(x,y)位置像素的灰度记为I(x,y,t)，经过dt时间后它运动到(x+dx, y+dy)处。根据灰度不变假设有： <img src=\"https://www.zhihu.com/equation?tex=I%28x%2Bdy%2C+y%2Bdy%2C+t%2Bdt%29%3DI%28x%2Cy%2Ct%29\" alt=\"I(x+dy, y+dy, t+dt)=I(x,y,t)\" eeimg=\"1\"/> 。在这个问题中相当于前后的灰度值已知，求解dx,dy。</p><p>对变化后的灰度值进行一阶泰勒展开，有：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-fd45d5a2d232bfde1e73af28b0d86eb9_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1326\" data-rawheight=\"132\" class=\"origin_image zh-lightbox-thumb\" width=\"1326\" data-original=\"https://pic2.zhimg.com/v2-fd45d5a2d232bfde1e73af28b0d86eb9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1326&#39; height=&#39;132&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1326\" data-rawheight=\"132\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1326\" data-original=\"https://pic2.zhimg.com/v2-fd45d5a2d232bfde1e73af28b0d86eb9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-fd45d5a2d232bfde1e73af28b0d86eb9_b.png\"/></figure><p>根据灰度不变假设可以得到：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-26c1f7950b99f410ffa6cba48648ac96_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1504\" data-rawheight=\"158\" class=\"origin_image zh-lightbox-thumb\" width=\"1504\" data-original=\"https://pic3.zhimg.com/v2-26c1f7950b99f410ffa6cba48648ac96_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1504&#39; height=&#39;158&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1504\" data-rawheight=\"158\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1504\" data-original=\"https://pic3.zhimg.com/v2-26c1f7950b99f410ffa6cba48648ac96_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-26c1f7950b99f410ffa6cba48648ac96_b.png\"/></figure><p>整理得到：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-68303d8a02a313dc053790e339d7708a_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1540\" data-rawheight=\"108\" class=\"origin_image zh-lightbox-thumb\" width=\"1540\" data-original=\"https://pic3.zhimg.com/v2-68303d8a02a313dc053790e339d7708a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1540&#39; height=&#39;108&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1540\" data-rawheight=\"108\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1540\" data-original=\"https://pic3.zhimg.com/v2-68303d8a02a313dc053790e339d7708a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-68303d8a02a313dc053790e339d7708a_b.png\"/></figure><p>其中， <img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Cpartial+I%7D%7B%5Cpartial+x%7D%2C%5Cfrac%7B%5Cpartial+I%7D%7B%5Cpartial+y%7D\" alt=\"\\frac{\\partial I}{\\partial x},\\frac{\\partial I}{\\partial y}\" eeimg=\"1\"/> 分别为图像灰度在该点处x方向和y方向的梯度，记为 <img src=\"https://www.zhihu.com/equation?tex=I_x%2C+I_y\" alt=\"I_x, I_y\" eeimg=\"1\"/> ， <img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Cpartial+I%7D%7B%5Cpartial+t%7D\" alt=\"\\frac{\\partial I}{\\partial t}\" eeimg=\"1\"/> 是图像灰度对时间的变化量，记为 <img src=\"https://www.zhihu.com/equation?tex=I_t\" alt=\"I_t\" eeimg=\"1\"/> ,这三个量已知。 <img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7Bdx%7D%7Bdt%7D%2C%5Cfrac%7Bdy%7D%7Bdt%7D\" alt=\"\\frac{dx}{dt},\\frac{dy}{dt}\" eeimg=\"1\"/> 分别表示像素在x和y轴上的运动速度，记为 <img src=\"https://www.zhihu.com/equation?tex=u%2Cv\" alt=\"u,v\" eeimg=\"1\"/> 未知。对于图像窗口中的每个像素都可以列出这样的一个方程，如果认为窗口内的像素具有相同的运动，那么每个像素的u,v相同，可以写成一个方程组，形如 <img src=\"https://www.zhihu.com/equation?tex=A_%7BN%5Ctimes2%7D+%5Ccdot+%5Cleft%5B+%5Cbegin%7Barray%7D++au+%5C%5Cv%5Cend%7Barray%7D+%5Cright%5D_%7B2%5Ctimes+1%7D%3D-b_%7BN%5Ctimes+1%7D\" alt=\"A_{N\\times2} \\cdot \\left[ \\begin{array}  au \\\\v\\end{array} \\right]_{2\\times 1}=-b_{N\\times 1}\" eeimg=\"1\"/> ，可以通过最小二乘法求解，得到：</p><figure data-size=\"small\"><noscript><img src=\"https://pic1.zhimg.com/v2-7c41d5b9394a4ab3b58df9e527c577ec_b.jpg\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"600\" data-rawheight=\"208\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-7c41d5b9394a4ab3b58df9e527c577ec_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;600&#39; height=&#39;208&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"600\" data-rawheight=\"208\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-7c41d5b9394a4ab3b58df9e527c577ec_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-7c41d5b9394a4ab3b58df9e527c577ec_b.jpg\"/></figure><h2>2. 直接法</h2><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-4cec1e4ddb765daa2a335956efca3de8_b.jpg\" data-size=\"normal\" data-rawwidth=\"1306\" data-rawheight=\"642\" class=\"origin_image zh-lightbox-thumb\" width=\"1306\" data-original=\"https://pic1.zhimg.com/v2-4cec1e4ddb765daa2a335956efca3de8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1306&#39; height=&#39;642&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1306\" data-rawheight=\"642\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1306\" data-original=\"https://pic1.zhimg.com/v2-4cec1e4ddb765daa2a335956efca3de8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-4cec1e4ddb765daa2a335956efca3de8_b.jpg\"/><figcaption>图8-3</figcaption></figure><p>如图8-3所示，已知相机内参K，物体P的3D坐标，分别知道第1帧和第2帧上的投影坐标 <img src=\"https://www.zhihu.com/equation?tex=p_1%2Cp_2\" alt=\"p_1,p_2\" eeimg=\"1\"/> ，但由于没有特征匹配的过程，所以不知道 <img src=\"https://www.zhihu.com/equation?tex=p_1%E5%92%8Cp_2\" alt=\"p_1和p_2\" eeimg=\"1\"/> 是否对应同一个物体P。</p><p>直接法的思路是：根据灰度不变假设，对于第1帧中的 <img src=\"https://www.zhihu.com/equation?tex=p_1\" alt=\"p_1\" eeimg=\"1\"/> 能够在第2帧中摸索到一个点 <img src=\"https://www.zhihu.com/equation?tex=p_2\" alt=\"p_2\" eeimg=\"1\"/> ，使得这个点的灰度和 <img src=\"https://www.zhihu.com/equation?tex=p_1\" alt=\"p_1\" eeimg=\"1\"/> 的灰度误差最小。摸索的过程是：通过相机模型计算出 <img src=\"https://www.zhihu.com/equation?tex=p_2\" alt=\"p_2\" eeimg=\"1\"/> 的坐标，然后通过调整相机位姿最小化光度误差 <img src=\"https://www.zhihu.com/equation?tex=e_1%3DI_1%28p_1%29-I_2%28p_2%29\" alt=\"e_1=I_1(p_1)-I_2(p_2)\" eeimg=\"1\"/> 。</p><p>根据目前的已知量，可以计算第1帧的像素坐标为 <img src=\"https://www.zhihu.com/equation?tex=p_1%3D%5Cfrac%7B1%7D%7BZ_1%7DKP\" alt=\"p_1=\\frac{1}{Z_1}KP\" eeimg=\"1\"/> , 第2帧的像素坐标为 <img src=\"https://www.zhihu.com/equation?tex=p_2%3D%5Cfrac%7B1%7D%7BZ_2%7DK%28RP%2Bt%29%3D%5Cfrac%7B1%7D%7BZ_2%7DK%28exp%28%5Cxi%5E%5Cwedge+%29P%29_%7B1%3A3%7D\" alt=\"p_2=\\frac{1}{Z_2}K(RP+t)=\\frac{1}{Z_2}K(exp(\\xi^\\wedge )P)_{1:3}\" eeimg=\"1\"/> .</p><p>我们的目标函数为：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b36c599e1bdafe19e2cab28fb1a14c5c_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1016\" data-rawheight=\"148\" class=\"origin_image zh-lightbox-thumb\" width=\"1016\" data-original=\"https://pic1.zhimg.com/v2-b36c599e1bdafe19e2cab28fb1a14c5c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1016&#39; height=&#39;148&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1016\" data-rawheight=\"148\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1016\" data-original=\"https://pic1.zhimg.com/v2-b36c599e1bdafe19e2cab28fb1a14c5c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b36c599e1bdafe19e2cab28fb1a14c5c_b.png\"/></figure><p>扰动模型求导：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-eb01bd40f01eced649ef8a2a9d85b797_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1480\" data-rawheight=\"374\" class=\"origin_image zh-lightbox-thumb\" width=\"1480\" data-original=\"https://pic4.zhimg.com/v2-eb01bd40f01eced649ef8a2a9d85b797_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1480&#39; height=&#39;374&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1480\" data-rawheight=\"374\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1480\" data-original=\"https://pic4.zhimg.com/v2-eb01bd40f01eced649ef8a2a9d85b797_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-eb01bd40f01eced649ef8a2a9d85b797_b.jpg\"/></figure><p>定义中间变量： <img src=\"https://www.zhihu.com/equation?tex=q%3D%5Cdelta+%5Cxi%5E%5Cwedge+exp%28+%5Cxi%5E%5Cwedge%29P%2C+u%3D%5Cfrac%7B1%7D%7BZ_2%7DKq\" alt=\"q=\\delta \\xi^\\wedge exp( \\xi^\\wedge)P, u=\\frac{1}{Z_2}Kq\" eeimg=\"1\"/> ，有</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-2fc47b4aa14688ae4f97cbc114dc3456_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1402\" data-rawheight=\"358\" class=\"origin_image zh-lightbox-thumb\" width=\"1402\" data-original=\"https://pic3.zhimg.com/v2-2fc47b4aa14688ae4f97cbc114dc3456_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1402&#39; height=&#39;358&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1402\" data-rawheight=\"358\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1402\" data-original=\"https://pic3.zhimg.com/v2-2fc47b4aa14688ae4f97cbc114dc3456_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-2fc47b4aa14688ae4f97cbc114dc3456_b.jpg\"/></figure><p>其中， <img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Cpartial+I_2%7D%7B%5Cpartial+u%7D\" alt=\"\\frac{\\partial I_2}{\\partial u}\" eeimg=\"1\"/> 是图像的像素梯度，另外两个偏到前面已经求解过：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b683234a5840f3fcfd0b06faf2306a58_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1030\" data-rawheight=\"222\" class=\"origin_image zh-lightbox-thumb\" width=\"1030\" data-original=\"https://pic1.zhimg.com/v2-b683234a5840f3fcfd0b06faf2306a58_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1030&#39; height=&#39;222&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1030\" data-rawheight=\"222\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1030\" data-original=\"https://pic1.zhimg.com/v2-b683234a5840f3fcfd0b06faf2306a58_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b683234a5840f3fcfd0b06faf2306a58_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-4ff30d3c953eb05edff6627b778aca56_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"416\" data-rawheight=\"134\" class=\"content_image\" width=\"416\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;416&#39; height=&#39;134&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"416\" data-rawheight=\"134\" class=\"content_image lazy\" width=\"416\" data-actualsrc=\"https://pic3.zhimg.com/v2-4ff30d3c953eb05edff6627b778aca56_b.jpg\"/></figure><p>由此求出了一阶导数也就是雅各比矩阵，根据雅各比矩阵进行迭代求解。</p><p>关于P，如果来自于稀疏关键点，称为稀疏直接法；如果来自于部分梯度明显的像素，称为半稠密的直接法（如果梯度不明显，雅各比矩阵为0）；如果是所有像素，称为稠密直接法。</p><h2>3. 直接法讨论</h2><p>直接法是根据图像灰度的变化（梯度）来寻找对应点的，比如图8-6，图像1中P1点的灰度值为229，目标是找到图像2中灰度值和p1相近的点。在P1周围沿着梯度方向搜索，第一次找到P2，继续搜索找到P2&#39; 发现很合适，进行更新，如此迭代。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-72d55144830e84d116c7225c42feba54_b.jpg\" data-size=\"normal\" data-rawwidth=\"1736\" data-rawheight=\"850\" class=\"origin_image zh-lightbox-thumb\" width=\"1736\" data-original=\"https://pic1.zhimg.com/v2-72d55144830e84d116c7225c42feba54_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1736&#39; height=&#39;850&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1736\" data-rawheight=\"850\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1736\" data-original=\"https://pic1.zhimg.com/v2-72d55144830e84d116c7225c42feba54_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-72d55144830e84d116c7225c42feba54_b.jpg\"/><figcaption>图8-6</figcaption></figure><p>直接法的问题和梯度下降法类似，可能会陷入局部最优解。如图8-7所示，图像本身通常是一个强烈的非凸函数，可能在搜索最优点时会找到附近的一个局部最优解。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-36c40cd79913ba57cc4b7a107577efbd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1914\" data-rawheight=\"852\" class=\"origin_image zh-lightbox-thumb\" width=\"1914\" data-original=\"https://pic2.zhimg.com/v2-36c40cd79913ba57cc4b7a107577efbd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1914&#39; height=&#39;852&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1914\" data-rawheight=\"852\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1914\" data-original=\"https://pic2.zhimg.com/v2-36c40cd79913ba57cc4b7a107577efbd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-36c40cd79913ba57cc4b7a107577efbd_b.jpg\"/></figure><p>为了避免这个问题，可以缩小范围，采用图像块，使用更复杂的差异度量方式等。</p><p>直接法的优点是：快，只要求像素梯度，能构建半稠密或稠密地图；缺点是：图像具有非凸性，单个像素区分度低需要计算图像块，灰度值不变假设可能不成立。</p><p>[1] 《视觉SLAM十四讲从理论到实践》 高翔，张涛</p>", 
            "topic": [
                {
                    "tag": "视觉SLAM十四讲（书籍）", 
                    "tagLink": "https://api.zhihu.com/topics/20127173"
                }, 
                {
                    "tag": "同时定位和地图构建（SLAM）", 
                    "tagLink": "https://api.zhihu.com/topics/20033502"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/61800481", 
            "userName": "笨丫头", 
            "userLink": "https://www.zhihu.com/people/1e56511c5bcb79725fdcd0f516b1a3b9", 
            "upvote": 0, 
            "title": "视觉SLAM十四讲|第7讲 视觉里程计1之ICP问题", 
            "content": "<p>RGB-D相机可以获得深度信息，对于3D-3D的位姿估计问题可以转变成迭代最近点(Iterative Closest Point, ICP)问题。在RGB-D SLAM中用ICP问题指代匹配好的两组点间的运动估计问题。</p><h2>1. SVD 方法</h2><p>对于两个3D-3D匹配点，用其中一个点 <img src=\"https://www.zhihu.com/equation?tex=p_i%27\" alt=\"p_i&#39;\" eeimg=\"1\"/> 来估算另一个点的坐标，有 <img src=\"https://www.zhihu.com/equation?tex=%5Chat%7Bp_i%7D%3DRp_i%27%2Bt\" alt=\"\\hat{p_i}=Rp_i&#39;+t\" eeimg=\"1\"/> ，而该点的观测坐标为 <img src=\"https://www.zhihu.com/equation?tex=p_i\" alt=\"p_i\" eeimg=\"1\"/> ，定义误差为 <img src=\"https://www.zhihu.com/equation?tex=e_i%3Dp_i-%28Rp_i%27%2Bt%29\" alt=\"e_i=p_i-(Rp_i&#39;+t)\" eeimg=\"1\"/> 。构建最小二乘问题有：</p><figure data-size=\"small\"><noscript><img src=\"https://pic3.zhimg.com/v2-2752f015f9cd89d126ae954f1f1c371a_b.jpg\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"768\" data-rawheight=\"156\" class=\"origin_image zh-lightbox-thumb\" width=\"768\" data-original=\"https://pic3.zhimg.com/v2-2752f015f9cd89d126ae954f1f1c371a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;768&#39; height=&#39;156&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"768\" data-rawheight=\"156\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"768\" data-original=\"https://pic3.zhimg.com/v2-2752f015f9cd89d126ae954f1f1c371a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-2752f015f9cd89d126ae954f1f1c371a_b.jpg\"/></figure><p>在求解时，定义图像1和图像2中所有点的质心分别为：</p><figure data-size=\"small\"><noscript><img src=\"https://pic2.zhimg.com/v2-ac91b9a56248ea3432bc2b852ec5d6b1_b.jpg\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"708\" data-rawheight=\"172\" class=\"origin_image zh-lightbox-thumb\" width=\"708\" data-original=\"https://pic2.zhimg.com/v2-ac91b9a56248ea3432bc2b852ec5d6b1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;708&#39; height=&#39;172&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"708\" data-rawheight=\"172\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"708\" data-original=\"https://pic2.zhimg.com/v2-ac91b9a56248ea3432bc2b852ec5d6b1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-ac91b9a56248ea3432bc2b852ec5d6b1_b.jpg\"/></figure><p>可以得到如下的推导：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-8ba55b052ca4d93f886de7f3ff2fca8f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1544\" data-rawheight=\"392\" class=\"origin_image zh-lightbox-thumb\" width=\"1544\" data-original=\"https://pic4.zhimg.com/v2-8ba55b052ca4d93f886de7f3ff2fca8f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1544&#39; height=&#39;392&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1544\" data-rawheight=\"392\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1544\" data-original=\"https://pic4.zhimg.com/v2-8ba55b052ca4d93f886de7f3ff2fca8f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-8ba55b052ca4d93f886de7f3ff2fca8f_b.jpg\"/></figure><p>最终目标函数化简为：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-906adce1126e741b58e35f104aa559d7_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1230\" data-rawheight=\"164\" class=\"origin_image zh-lightbox-thumb\" width=\"1230\" data-original=\"https://pic4.zhimg.com/v2-906adce1126e741b58e35f104aa559d7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1230&#39; height=&#39;164&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1230\" data-rawheight=\"164\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1230\" data-original=\"https://pic4.zhimg.com/v2-906adce1126e741b58e35f104aa559d7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-906adce1126e741b58e35f104aa559d7_b.png\"/></figure><p>目标简化成两个平方项之和，可以分别对两个平方项进行求解，先求解左边得到R，带入到右边得到t。右边项只有为0时才能让目标函数最小，当求解得到R时，可以根据 <img src=\"https://www.zhihu.com/equation?tex=p-R%5E%2Ap%27-t%3D0\" alt=\"p-R^*p&#39;-t=0\" eeimg=\"1\"/> 计算t。将左边的平方项展开有：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-3aac1d593832197ba2effa36a7b1bcc6_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1160\" data-rawheight=\"140\" class=\"origin_image zh-lightbox-thumb\" width=\"1160\" data-original=\"https://pic3.zhimg.com/v2-3aac1d593832197ba2effa36a7b1bcc6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1160&#39; height=&#39;140&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1160\" data-rawheight=\"140\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1160\" data-original=\"https://pic3.zhimg.com/v2-3aac1d593832197ba2effa36a7b1bcc6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-3aac1d593832197ba2effa36a7b1bcc6_b.png\"/></figure><p>其中 <img src=\"https://www.zhihu.com/equation?tex=R%5ET+R%3DI\" alt=\"R^T R=I\" eeimg=\"1\"/> ，所以只有最后一项对结果有影响，整理得</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-06ab3a052f7c6ef96fca19c80d5b92b8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1054\" data-rawheight=\"176\" class=\"origin_image zh-lightbox-thumb\" width=\"1054\" data-original=\"https://pic1.zhimg.com/v2-06ab3a052f7c6ef96fca19c80d5b92b8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1054&#39; height=&#39;176&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1054\" data-rawheight=\"176\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1054\" data-original=\"https://pic1.zhimg.com/v2-06ab3a052f7c6ef96fca19c80d5b92b8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-06ab3a052f7c6ef96fca19c80d5b92b8_b.jpg\"/></figure><p>使用SVD对 <img src=\"https://www.zhihu.com/equation?tex=W%3D%5Csum_%7Bi%3D1%7D%5E%7Bn%7D%7Bq_iq_i%5ET%7D\" alt=\"W=\\sum_{i=1}^{n}{q_iq_i^T}\" eeimg=\"1\"/> 进行分解，得到 <img src=\"https://www.zhihu.com/equation?tex=W%3DU%5CSigma+V%5ET\" alt=\"W=U\\Sigma V^T\" eeimg=\"1\"/> ，当W满秩时 <img src=\"https://www.zhihu.com/equation?tex=R%3DUV%5ET\" alt=\"R=UV^T\" eeimg=\"1\"/> .</p><h2>2. 非线性优化方法</h2><p>使用李代数表达位姿，迭代求解。目标函数为：</p><figure data-size=\"small\"><noscript><img src=\"https://pic2.zhimg.com/v2-d2c2e9369f8a7c15c1b7e51490f78725_b.jpg\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"718\" data-rawheight=\"178\" class=\"origin_image zh-lightbox-thumb\" width=\"718\" data-original=\"https://pic2.zhimg.com/v2-d2c2e9369f8a7c15c1b7e51490f78725_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;718&#39; height=&#39;178&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"718\" data-rawheight=\"178\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"718\" data-original=\"https://pic2.zhimg.com/v2-d2c2e9369f8a7c15c1b7e51490f78725_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-d2c2e9369f8a7c15c1b7e51490f78725_b.jpg\"/></figure><p>使用扰动模型，得到导数：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-f783eb171c20d0109983eea47a8f036b_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1454\" data-rawheight=\"162\" class=\"origin_image zh-lightbox-thumb\" width=\"1454\" data-original=\"https://pic4.zhimg.com/v2-f783eb171c20d0109983eea47a8f036b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1454&#39; height=&#39;162&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1454\" data-rawheight=\"162\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1454\" data-original=\"https://pic4.zhimg.com/v2-f783eb171c20d0109983eea47a8f036b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-f783eb171c20d0109983eea47a8f036b_b.png\"/></figure><p>在RGB-D SLAM中，有时可能测不到深度，所以可以混用PnP和ICP优化。</p><p>[1] 《视觉SLAM十四讲从理论到实践》 高翔，张涛</p>", 
            "topic": [
                {
                    "tag": "视觉SLAM十四讲（书籍）", 
                    "tagLink": "https://api.zhihu.com/topics/20127173"
                }, 
                {
                    "tag": "同时定位和地图构建（SLAM）", 
                    "tagLink": "https://api.zhihu.com/topics/20033502"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/61742217", 
            "userName": "笨丫头", 
            "userLink": "https://www.zhihu.com/people/1e56511c5bcb79725fdcd0f516b1a3b9", 
            "upvote": 0, 
            "title": "视觉SLAM十四讲|第7讲 视觉里程计1之PnP问题", 
            "content": "<p>如果两张相邻图像中已知一张图像的3D位置，相机的运动估计就变成3D-2D的PnP(Perspective-n-Point)问题，本节介绍几种PnP 的求解方法。</p><h2>1. 直接线性变换DLT</h2><p>对于空间点P，假设齐次坐标为 <img src=\"https://www.zhihu.com/equation?tex=P%3D%28X%2CY%2CZ%2C1%29%5ET\" alt=\"P=(X,Y,Z,1)^T\" eeimg=\"1\"/> ，在图像1中投影得到的特征点坐标为 <img src=\"https://www.zhihu.com/equation?tex=x_1%3D%28u_1%2Cv_1%2C1%29%5ET\" alt=\"x_1=(u_1,v_1,1)^T\" eeimg=\"1\"/> ，已知P和 <img src=\"https://www.zhihu.com/equation?tex=x_1\" alt=\"x_1\" eeimg=\"1\"/> ，求解R，t。</p><p>定义增广矩阵T1=[R|t]，有公式-7.26成立</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-11a6fe40f7508fc7a58817a92064a834_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1696\" data-rawheight=\"402\" class=\"origin_image zh-lightbox-thumb\" width=\"1696\" data-original=\"https://pic1.zhimg.com/v2-11a6fe40f7508fc7a58817a92064a834_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1696&#39; height=&#39;402&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1696\" data-rawheight=\"402\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1696\" data-original=\"https://pic1.zhimg.com/v2-11a6fe40f7508fc7a58817a92064a834_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-11a6fe40f7508fc7a58817a92064a834_b.jpg\"/></figure><p>根据公式-7.26可以得到约束</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-db02c2cf6ffe072494bc4a5d2b6c7a29_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1296\" data-rawheight=\"158\" class=\"origin_image zh-lightbox-thumb\" width=\"1296\" data-original=\"https://pic2.zhimg.com/v2-db02c2cf6ffe072494bc4a5d2b6c7a29_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1296&#39; height=&#39;158&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1296\" data-rawheight=\"158\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1296\" data-original=\"https://pic2.zhimg.com/v2-db02c2cf6ffe072494bc4a5d2b6c7a29_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-db02c2cf6ffe072494bc4a5d2b6c7a29_b.png\"/></figure><p>定义</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-adeb57147058ec52d4f87fb900d6e7ee_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1292\" data-rawheight=\"74\" class=\"origin_image zh-lightbox-thumb\" width=\"1292\" data-original=\"https://pic3.zhimg.com/v2-adeb57147058ec52d4f87fb900d6e7ee_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1292&#39; height=&#39;74&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1292\" data-rawheight=\"74\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1292\" data-original=\"https://pic3.zhimg.com/v2-adeb57147058ec52d4f87fb900d6e7ee_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-adeb57147058ec52d4f87fb900d6e7ee_b.png\"/></figure><p>有 <img src=\"https://www.zhihu.com/equation?tex=t_1%5ETP-t_3%5ETPu_1%3D0%2C+t_2%5ETP-t_3%5ETPv_1%3D0\" alt=\"t_1^TP-t_3^TPu_1=0, t_2^TP-t_3^TPv_1=0\" eeimg=\"1\"/> 成立。类似地，每个特征点都可以写出两个方程，求解线性方程组可以得到T=[R|t]的解。但是得到的解是一般矩阵，需要对R进行QR分解，得到满足SE(3)的矩阵。</p><p>这种方法需要使用6对匹配点。</p><h2>2. P3P</h2><p>P3P只需要使用3对匹配点。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-4fdf2f8a1366473064c55386e4f0322d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1662\" data-rawheight=\"1000\" class=\"origin_image zh-lightbox-thumb\" width=\"1662\" data-original=\"https://pic2.zhimg.com/v2-4fdf2f8a1366473064c55386e4f0322d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1662&#39; height=&#39;1000&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1662\" data-rawheight=\"1000\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1662\" data-original=\"https://pic2.zhimg.com/v2-4fdf2f8a1366473064c55386e4f0322d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-4fdf2f8a1366473064c55386e4f0322d_b.jpg\"/></figure><p>ABC为三个世界坐标中的点，abc为ABC投影在图像上的点。已知ABC的世界坐标系中的坐标，abc的相机坐标系坐标。O为相机中心，三角形Oac和OAC，Oab和OAB，Obc和OBC两两相似。根据余弦定理有</p><figure data-size=\"small\"><noscript><img src=\"https://pic1.zhimg.com/v2-07d1823da1c3d94fedfad0eee4531750_b.jpg\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1008\" data-rawheight=\"272\" class=\"origin_image zh-lightbox-thumb\" width=\"1008\" data-original=\"https://pic1.zhimg.com/v2-07d1823da1c3d94fedfad0eee4531750_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1008&#39; height=&#39;272&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1008\" data-rawheight=\"272\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1008\" data-original=\"https://pic1.zhimg.com/v2-07d1823da1c3d94fedfad0eee4531750_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-07d1823da1c3d94fedfad0eee4531750_b.jpg\"/></figure><p>令x=OA/OC, y=OB/OC，有</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-c6dfe2372a5dda3aeeff63ce3a109900_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1918\" data-rawheight=\"316\" class=\"origin_image zh-lightbox-thumb\" width=\"1918\" data-original=\"https://pic1.zhimg.com/v2-c6dfe2372a5dda3aeeff63ce3a109900_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1918&#39; height=&#39;316&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1918\" data-rawheight=\"316\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1918\" data-original=\"https://pic1.zhimg.com/v2-c6dfe2372a5dda3aeeff63ce3a109900_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-c6dfe2372a5dda3aeeff63ce3a109900_b.png\"/></figure><p>令 <img src=\"https://www.zhihu.com/equation?tex=v%3DAB%5E2%2FOC%5E2%2Cuv%3DBC%5E2%2FOC%5E2%2C+wv%3DAC%5E2%2FOC%5E2\" alt=\"v=AB^2/OC^2,uv=BC^2/OC^2, wv=AC^2/OC^2\" eeimg=\"1\"/> ，有</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-c0dfe45f688ee9ca890c15dee76359b0_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1906\" data-rawheight=\"294\" class=\"origin_image zh-lightbox-thumb\" width=\"1906\" data-original=\"https://pic1.zhimg.com/v2-c0dfe45f688ee9ca890c15dee76359b0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1906&#39; height=&#39;294&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1906\" data-rawheight=\"294\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1906\" data-original=\"https://pic1.zhimg.com/v2-c0dfe45f688ee9ca890c15dee76359b0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-c0dfe45f688ee9ca890c15dee76359b0_b.png\"/></figure><p>整理可得</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-6247d3497f3e3c01acda265399c8d48d_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2052\" data-rawheight=\"228\" class=\"origin_image zh-lightbox-thumb\" width=\"2052\" data-original=\"https://pic2.zhimg.com/v2-6247d3497f3e3c01acda265399c8d48d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;2052&#39; height=&#39;228&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2052\" data-rawheight=\"228\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2052\" data-original=\"https://pic2.zhimg.com/v2-6247d3497f3e3c01acda265399c8d48d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-6247d3497f3e3c01acda265399c8d48d_b.png\"/></figure><p>其中只有x和y未知，使用吴消元法求解得到ABC在相机坐标系下的3D坐标，将问题转化为3D-3D问题，再求解R，t。</p><p>缺点：只用了3个点的信息，难以利用更多信息；如果存在无匹配，则整个计算失效。</p><h2>3. 非线性优化求解 Bundle Adjustment</h2><p>Bundle Adjustment的思想是通过最小化重投影误差，求解位姿。</p><p>如图7-12所示，原本P的投影点应该是 <img src=\"https://www.zhihu.com/equation?tex=P_1%E5%92%8CP_2\" alt=\"P_1和P_2\" eeimg=\"1\"/> ，但是由于误差的存在，观测到P在图像2上的投影点是 <img src=\"https://www.zhihu.com/equation?tex=%5Chat%7BP_2%7D\" alt=\"\\hat{P_2}\" eeimg=\"1\"/> ，观测值和实际值的误差记为e。通过调整相机的位姿，来找到e的最小值，认为使误差最小的位姿就是真实的相机运动。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-5ced963c626a6a5755c63183f656feee_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1434\" data-rawheight=\"908\" class=\"origin_image zh-lightbox-thumb\" width=\"1434\" data-original=\"https://pic3.zhimg.com/v2-5ced963c626a6a5755c63183f656feee_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1434&#39; height=&#39;908&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1434\" data-rawheight=\"908\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1434\" data-original=\"https://pic3.zhimg.com/v2-5ced963c626a6a5755c63183f656feee_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-5ced963c626a6a5755c63183f656feee_b.jpg\"/></figure><p>涉及到优化求解，要用到前面的李群和李代数的关系以及扰动模型。用李代数 <img src=\"https://www.zhihu.com/equation?tex=%5Cxi\" alt=\"\\xi\" eeimg=\"1\"/> 表示位姿，对于第i个特征点，有 <img src=\"https://www.zhihu.com/equation?tex=s_iu_i%3DKexp%28%5Cxi%5E%5Cwedge%29P_i\" alt=\"s_iu_i=Kexp(\\xi^\\wedge)P_i\" eeimg=\"1\"/> ，其中 <img src=\"https://www.zhihu.com/equation?tex=P_i\" alt=\"P_i\" eeimg=\"1\"/> 是已知的3D齐次坐标， <img src=\"https://www.zhihu.com/equation?tex=u_i\" alt=\"u_i\" eeimg=\"1\"/> 是已知的2D齐次坐标， <img src=\"https://www.zhihu.com/equation?tex=%5Cxi+%5E%5Cwedge\" alt=\"\\xi ^\\wedge\" eeimg=\"1\"/> 是未知的相机位姿。可以得出通过相机位姿计算的像素坐标为 <img src=\"https://www.zhihu.com/equation?tex=u_i%27%3D%5Cfrac%7B1%7D%7Bs_i%7DKexp%28%5Cxi%5E%5Cwedge%29P_i\" alt=\"u_i&#39;=\\frac{1}{s_i}Kexp(\\xi^\\wedge)P_i\" eeimg=\"1\"/> ，而这样估计出来的像素坐标，和观测到的像素坐标存在着误差，构建最小二乘问题：</p><figure data-size=\"small\"><noscript><img src=\"https://pic4.zhimg.com/v2-383cfc186e7367335af06f5eae6cab07_b.jpg\" data-size=\"small\" data-rawwidth=\"970\" data-rawheight=\"164\" class=\"origin_image zh-lightbox-thumb\" width=\"970\" data-original=\"https://pic4.zhimg.com/v2-383cfc186e7367335af06f5eae6cab07_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;970&#39; height=&#39;164&#39;&gt;&lt;/svg&gt;\" data-size=\"small\" data-rawwidth=\"970\" data-rawheight=\"164\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"970\" data-original=\"https://pic4.zhimg.com/v2-383cfc186e7367335af06f5eae6cab07_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-383cfc186e7367335af06f5eae6cab07_b.jpg\"/><figcaption>公式-7.35</figcaption></figure><p>像这样，将像素坐标与3D点按照当前估计得位姿进行投影得到的位置相比较得到的误差，称为重投影误差。</p><p>令P&#39;表示相机坐标系下P坐标的前三维，有 <img src=\"https://www.zhihu.com/equation?tex=P%27%3D%28exp%28%5Cxi+%5E%5Cwedge+%29P%29_%7B1%3A3%7D%3D%5BX%27%2CY%27%2CZ%27%5D%5ET\" alt=\"P&#39;=(exp(\\xi ^\\wedge )P)_{1:3}=[X&#39;,Y&#39;,Z&#39;]^T\" eeimg=\"1\"/> ,若仍然用 <img src=\"https://www.zhihu.com/equation?tex=u_i%27%3D%5Bu%2Cv%2C1%5D%5ET\" alt=\"u_i&#39;=[u,v,1]^T\" eeimg=\"1\"/> 表示通过相机位姿计算的像素坐标，则有 <img src=\"https://www.zhihu.com/equation?tex=s_iu_i%27%3DKP%27\" alt=\"s_iu_i&#39;=KP&#39;\" eeimg=\"1\"/> ，展开后可得</p><figure data-size=\"small\"><noscript><img src=\"https://pic4.zhimg.com/v2-44450e8e37be79a5e294765f09cdde5b_b.jpg\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"786\" data-rawheight=\"276\" class=\"origin_image zh-lightbox-thumb\" width=\"786\" data-original=\"https://pic4.zhimg.com/v2-44450e8e37be79a5e294765f09cdde5b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;786&#39; height=&#39;276&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"786\" data-rawheight=\"276\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"786\" data-original=\"https://pic4.zhimg.com/v2-44450e8e37be79a5e294765f09cdde5b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-44450e8e37be79a5e294765f09cdde5b_b.jpg\"/></figure><p>整理可得： <img src=\"https://www.zhihu.com/equation?tex=u_i%27%3D%5Bf_x%5Cfrac%7BX%27%7D%7BZ%27%7D%2Bc_x%2C+f_y%5Cfrac%7BY%27%7D%7BZ%27%7D%2Bc_y%2C1%5D%5ET\" alt=\"u_i&#39;=[f_x\\frac{X&#39;}{Z&#39;}+c_x, f_y\\frac{Y&#39;}{Z&#39;}+c_y,1]^T\" eeimg=\"1\"/> ，此时误差项可以写为 <img src=\"https://www.zhihu.com/equation?tex=e_i%3Du_i-u_i%27\" alt=\"e_i=u_i-u_i&#39;\" eeimg=\"1\"/> .</p><p>求解公式-7.35时，需要知道每个误差项关于变量的导数： <img src=\"https://www.zhihu.com/equation?tex=e%28x%2B%5CDelta+x%29%5Capprox+e%28x%29%2BJ%5CDelta+x\" alt=\"e(x+\\Delta x)\\approx e(x)+J\\Delta x\" eeimg=\"1\"/> 。使用扰动模型计算误差关于位姿的导数，有公式-7.41，其中 <img src=\"https://www.zhihu.com/equation?tex=%5Coplus\" alt=\"\\oplus\" eeimg=\"1\"/> 表示李代数上的左乘扰动。</p><figure data-size=\"small\"><noscript><img src=\"https://pic2.zhimg.com/v2-52e684742807439f3a4185f175fb68b1_b.jpg\" data-size=\"small\" data-rawwidth=\"836\" data-rawheight=\"150\" class=\"origin_image zh-lightbox-thumb\" width=\"836\" data-original=\"https://pic2.zhimg.com/v2-52e684742807439f3a4185f175fb68b1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;836&#39; height=&#39;150&#39;&gt;&lt;/svg&gt;\" data-size=\"small\" data-rawwidth=\"836\" data-rawheight=\"150\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"836\" data-original=\"https://pic2.zhimg.com/v2-52e684742807439f3a4185f175fb68b1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-52e684742807439f3a4185f175fb68b1_b.jpg\"/><figcaption>公式-7.41</figcaption></figure><p>公式-7.41中的左边项 <img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Cpartial+e%7D%7B%5Cpartial+P%27%7D%3D%5Cfrac%7B%5Cpartial+e%7D%7B%5Cpartial+u%27%7D%5Cfrac%7B%5Cpartial+u%27%7D%7B%5Cpartial+P%27%7D%3D-%5Cfrac%7B%5Cpartial+u%27%7D%7B%5Cpartial+P%27%7D%3D-++%5Cleft%5B+%5Cbegin%7Bmatrix%7D++++f_x%2FZ%27+%26+0+%26-f_xX%27%2FZ%5E2%5C%5C++++0+%26+f_y%2FZ%27+%26-f_yY%27%2FZ%27%5E2++++%5Cend%7Bmatrix%7D+++%5Cright%5D\" alt=\"\\frac{\\partial e}{\\partial P&#39;}=\\frac{\\partial e}{\\partial u&#39;}\\frac{\\partial u&#39;}{\\partial P&#39;}=-\\frac{\\partial u&#39;}{\\partial P&#39;}=-  \\left[ \\begin{matrix}    f_x/Z&#39; &amp; 0 &amp;-f_xX&#39;/Z^2\\\\    0 &amp; f_y/Z&#39; &amp;-f_yY&#39;/Z&#39;^2    \\end{matrix}   \\right]\" eeimg=\"1\"/> </p><p>公式-7.41中的右边项，根据第四章SE(3)上的李代数求导可知： <img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Cpartial+P%27%7D%7B%5Cpartial+%5Cdelta%5Cxi%7D%3D%5BI%2C-P%27%5E%5Cwedge%5D\" alt=\"\\frac{\\partial P&#39;}{\\partial \\delta\\xi}=[I,-P&#39;^\\wedge]\" eeimg=\"1\"/> ，相乘可得2*6的矩阵</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-95bc65fdd6a29568d7db98a5019b7157_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1800\" data-rawheight=\"222\" class=\"origin_image zh-lightbox-thumb\" width=\"1800\" data-original=\"https://pic4.zhimg.com/v2-95bc65fdd6a29568d7db98a5019b7157_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1800&#39; height=&#39;222&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1800\" data-rawheight=\"222\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1800\" data-original=\"https://pic4.zhimg.com/v2-95bc65fdd6a29568d7db98a5019b7157_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-95bc65fdd6a29568d7db98a5019b7157_b.png\"/></figure><p>除了优化位姿，还可以优化特征点的空间位置，求误差关于空间点P的导数，有 <img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Cpartial+e%7D%7B%5Cpartial+P%7D%3D%5Cfrac%7B%5Cpartial+e%7D%7B%5Cpartial+P%27%7D%5Cfrac%7B%5Cpartial+P%27%7D%7B%5Cpartial+P%7D\" alt=\"\\frac{\\partial e}{\\partial P}=\\frac{\\partial e}{\\partial P&#39;}\\frac{\\partial P&#39;}{\\partial P}\" eeimg=\"1\"/> ，根据 <img src=\"https://www.zhihu.com/equation?tex=P%27%3Dexp%28%5Cxi+%5E%5Cwedge%29P%3DRP%2Bt\" alt=\"P&#39;=exp(\\xi ^\\wedge)P=RP+t\" eeimg=\"1\"/> 有</p><figure data-size=\"small\"><noscript><img src=\"https://pic1.zhimg.com/v2-b236d5a5ed9e9f123ab94e6e04fca3ec_b.jpg\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"744\" data-rawheight=\"204\" class=\"origin_image zh-lightbox-thumb\" width=\"744\" data-original=\"https://pic1.zhimg.com/v2-b236d5a5ed9e9f123ab94e6e04fca3ec_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;744&#39; height=&#39;204&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"744\" data-rawheight=\"204\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"744\" data-original=\"https://pic1.zhimg.com/v2-b236d5a5ed9e9f123ab94e6e04fca3ec_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b236d5a5ed9e9f123ab94e6e04fca3ec_b.jpg\"/></figure><p>求出导数后，沿负梯度方向迭代。</p><p>[1] 《视觉SLAM十四讲从理论到实践》 高翔，张涛</p>", 
            "topic": [
                {
                    "tag": "视觉SLAM十四讲（书籍）", 
                    "tagLink": "https://api.zhihu.com/topics/20127173"
                }, 
                {
                    "tag": "同时定位和地图构建（SLAM）", 
                    "tagLink": "https://api.zhihu.com/topics/20033502"
                }
            ], 
            "comments": [
                {
                    "userName": "知乎用户", 
                    "userLink": "https://www.zhihu.com/people/0", 
                    "content": "<p>请问这些图和公式都是哪里的呀？好棒呀，适合收藏</p>", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "笨丫头", 
                            "userLink": "https://www.zhihu.com/people/1e56511c5bcb79725fdcd0f516b1a3b9", 
                            "content": "<p>参考文献的图截过来的</p>", 
                            "likes": 0, 
                            "replyToAuthor": "知乎用户"
                        }
                    ]
                }, 
                {
                    "userName": "clementine", 
                    "userLink": "https://www.zhihu.com/people/1e6ef836d658d50e1e21ef1d3913edba", 
                    "content": "<p>这不是照着书抄了一遍吗。。。</p><a class=\"comment_sticker\" href=\"https://pic3.zhimg.com/v2-da6061b49095b3aff2a98395a3a4cf8e.gif\" data-width=\"\" data-height=\"\">[不抬杠]</a>", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "dalingxues", 
                            "userLink": "https://www.zhihu.com/people/6fef6795c9be7c49c946eb74c4e69e72", 
                            "content": "<p>是啊！7-42理解不了</p>", 
                            "likes": 0, 
                            "replyToAuthor": "clementine"
                        }
                    ]
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/61443959", 
            "userName": "笨丫头", 
            "userLink": "https://www.zhihu.com/people/1e56511c5bcb79725fdcd0f516b1a3b9", 
            "upvote": 1, 
            "title": "视觉SLAM十四讲|第7讲 视觉里程计1之单目相机的运动估算", 
            "content": "<p>上一节中我们找到了两张图片的对应点，如图-匹配所示，本节要根据这些匹配的点来计算相机的运动，然后根据相机的运动估计物体的世界坐标。在计算时针对单目相机、双目相机/RGB-D相机的不同特性有不同的计算方式。对于单目相机而言，得到的只有2D图像，没有深度信息，而双目相机/RGB-D相机得到的是3D图像，包含深度信息。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-554b0c562895007c1f21f48e060ba4b7_b.jpg\" data-size=\"normal\" data-rawwidth=\"1668\" data-rawheight=\"660\" class=\"origin_image zh-lightbox-thumb\" width=\"1668\" data-original=\"https://pic4.zhimg.com/v2-554b0c562895007c1f21f48e060ba4b7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1668&#39; height=&#39;660&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1668\" data-rawheight=\"660\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1668\" data-original=\"https://pic4.zhimg.com/v2-554b0c562895007c1f21f48e060ba4b7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-554b0c562895007c1f21f48e060ba4b7_b.jpg\"/><figcaption>图-匹配</figcaption></figure><h2>1. 2D-2D：对极几何</h2><p>对于单目相机，我们的问题可以抽象为图7-7，蓝色框 <img src=\"https://www.zhihu.com/equation?tex=I_1%E5%92%8CI_2\" alt=\"I_1和I_2\" eeimg=\"1\"/> 分别表示两张图像，相机中心抽象为点 <img src=\"https://www.zhihu.com/equation?tex=O_1%E5%92%8CO_2\" alt=\"O_1和O_2\" eeimg=\"1\"/> ，假设相机从点 <img src=\"https://www.zhihu.com/equation?tex=O_1%E8%BF%90%E5%8A%A8%E5%88%B0%E7%82%B9O_2\" alt=\"O_1运动到点O_2\" eeimg=\"1\"/> 。相机对着同一个物体P，在运动前后分别拍下了图像<img src=\"https://www.zhihu.com/equation?tex=I_1%E5%92%8CI_2\" alt=\"I_1和I_2\" eeimg=\"1\"/>。物体P在图像 <img src=\"https://www.zhihu.com/equation?tex=I_1\" alt=\"I_1\" eeimg=\"1\"/> 中的特征点是 <img src=\"https://www.zhihu.com/equation?tex=P_1\" alt=\"P_1\" eeimg=\"1\"/> ，在图像 <img src=\"https://www.zhihu.com/equation?tex=I_2\" alt=\"I_2\" eeimg=\"1\"/> 中的特征点是 <img src=\"https://www.zhihu.com/equation?tex=P_2\" alt=\"P_2\" eeimg=\"1\"/> 。现在 <img src=\"https://www.zhihu.com/equation?tex=P_1%EF%BC%8CP_2\" alt=\"P_1，P_2\" eeimg=\"1\"/> 已知，并且知道二者是能够匹配的特征点，相机内参已知，其他一切未知，求解相机 <img src=\"https://www.zhihu.com/equation?tex=%E4%BB%8EO_1%E5%88%B0O_2%E7%9A%84%E8%BF%90%E5%8A%A8\" alt=\"从O_1到O_2的运动\" eeimg=\"1\"/> 。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c4b638542e149797ac4c7886cf9e1f57_b.jpg\" data-size=\"normal\" data-rawwidth=\"2108\" data-rawheight=\"672\" class=\"origin_image zh-lightbox-thumb\" width=\"2108\" data-original=\"https://pic4.zhimg.com/v2-c4b638542e149797ac4c7886cf9e1f57_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;2108&#39; height=&#39;672&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"2108\" data-rawheight=\"672\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2108\" data-original=\"https://pic4.zhimg.com/v2-c4b638542e149797ac4c7886cf9e1f57_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-c4b638542e149797ac4c7886cf9e1f57_b.jpg\"/><figcaption>图7-7 对极几何约束</figcaption></figure><p>在图7-7中，还有一些辅助线和点。连接 <img src=\"https://www.zhihu.com/equation?tex=O_1P_1%E5%92%8CO_2P_2\" alt=\"O_1P_1和O_2P_2\" eeimg=\"1\"/> ，因为<img src=\"https://www.zhihu.com/equation?tex=P_1%EF%BC%8CP_2\" alt=\"P_1，P_2\" eeimg=\"1\"/>是匹配的特征点，那么它们一定是同一个空间点P在两个成像平面上的投影，所以<img src=\"https://www.zhihu.com/equation?tex=O_1P_1%E5%92%8CO_2P_2\" alt=\"O_1P_1和O_2P_2\" eeimg=\"1\"/>的连线一定能够交于点P，称P， <img src=\"https://www.zhihu.com/equation?tex=O_1%EF%BC%8CO_2\" alt=\"O_1，O_2\" eeimg=\"1\"/> 三点构成的平面为极平面(Epipolar plane)。<img src=\"https://www.zhihu.com/equation?tex=O_1%EF%BC%8CO_2\" alt=\"O_1，O_2\" eeimg=\"1\"/>连线与像平面<img src=\"https://www.zhihu.com/equation?tex=I_1%E5%92%8CI_2\" alt=\"I_1和I_2\" eeimg=\"1\"/>的交点分别为 <img src=\"https://www.zhihu.com/equation?tex=e_1%EF%BC%8Ce_2\" alt=\"e_1，e_2\" eeimg=\"1\"/> 称为极点(Epipoles)。 <img src=\"https://www.zhihu.com/equation?tex=O_1O_2\" alt=\"O_1O_2\" eeimg=\"1\"/> 称为基线。极平面与两个像平面之间的相交线 <img src=\"https://www.zhihu.com/equation?tex=l_1%2Cl_2\" alt=\"l_1,l_2\" eeimg=\"1\"/> 称为极线(Epipolar line)，极线 <img src=\"https://www.zhihu.com/equation?tex=l_2\" alt=\"l_2\" eeimg=\"1\"/> 也可以看作是 <img src=\"https://www.zhihu.com/equation?tex=O_1P\" alt=\"O_1P\" eeimg=\"1\"/> 在像平面 <img src=\"https://www.zhihu.com/equation?tex=I_2\" alt=\"I_2\" eeimg=\"1\"/> 上的投影。</p><p>关于图7-7，假设没有特征匹配，那么对于图像 <img src=\"https://www.zhihu.com/equation?tex=I_1\" alt=\"I_1\" eeimg=\"1\"/> ，我们能够知道物体P在图像上的特征点是 <img src=\"https://www.zhihu.com/equation?tex=P_1\" alt=\"P_1\" eeimg=\"1\"/> 。理所当然的，P应该在射线 <img src=\"https://www.zhihu.com/equation?tex=O_1P_1\" alt=\"O_1P_1\" eeimg=\"1\"/> 上，但没办法知道具体在多远的位置。有了图像 <img src=\"https://www.zhihu.com/equation?tex=I_2\" alt=\"I_2\" eeimg=\"1\"/> 后，我们也知道物体P在图像2上的特征点，应该位于射线 <img src=\"https://www.zhihu.com/equation?tex=O_1P_1\" alt=\"O_1P_1\" eeimg=\"1\"/> 在图像 <img src=\"https://www.zhihu.com/equation?tex=I_2\" alt=\"I_2\" eeimg=\"1\"/> 的投影上（也就是极线），如果没有特征匹配，就只能在极线上搜索 <img src=\"https://www.zhihu.com/equation?tex=P_2\" alt=\"P_2\" eeimg=\"1\"/> ，直到找到正确的匹配为止，这也是为什么要进行特征匹配。</p><p>先整理一下我们之前讲过的模型：</p><ul><li>相机模型：</li></ul><p><img src=\"https://www.zhihu.com/equation?tex=ZX%3DKP%5C%5C\" alt=\"ZX=KP\\\\\" eeimg=\"1\"/> </p><p>其中Z是缩放因子，X是三维齐次像素坐标，K是相机内参，P是相机系坐标</p><p><img src=\"https://www.zhihu.com/equation?tex=ZP_%7Buv%7D%3DKTP_w%5C%5C\" alt=\"ZP_{uv}=KTP_w\\\\\" eeimg=\"1\"/> </p><p>其中 <img src=\"https://www.zhihu.com/equation?tex=P_%7Buv%7D\" alt=\"P_{uv}\" eeimg=\"1\"/> 是三维齐次像素坐标，T是变换矩阵， <img src=\"https://www.zhihu.com/equation?tex=P_w\" alt=\"P_w\" eeimg=\"1\"/>是世界坐标。这个式子中隐含了一次齐次坐标到非齐次坐标的转换。</p><ul><li>旋转矩阵和变换矩阵的关系：</li></ul><p><img src=\"https://www.zhihu.com/equation?tex=T%3DRP%2Bt%5C%5C\" alt=\"T=RP+t\\\\\" eeimg=\"1\"/> </p><ul><li>外积 <img src=\"https://www.zhihu.com/equation?tex=C%3DA%5E%5Cwedge+B\" alt=\"C=A^\\wedge B\" eeimg=\"1\"/> ，表示向量C垂直于向量A和B所构成的平面，记 <img src=\"https://www.zhihu.com/equation?tex=%5Cwedge\" alt=\"\\wedge\" eeimg=\"1\"/> 为反对称符号，有 <img src=\"https://www.zhihu.com/equation?tex=A%5E%5Cwedge+A%3D0\" alt=\"A^\\wedge A=0\" eeimg=\"1\"/> </li></ul><p>再看图7-7，在图像1的坐标系中，假设P点的坐标为 <img src=\"https://www.zhihu.com/equation?tex=%5BX%2CY%2CZ%5D%5ET\" alt=\"[X,Y,Z]^T\" eeimg=\"1\"/> ，两个特征点的像素坐标为 <img src=\"https://www.zhihu.com/equation?tex=s_1p_1%3DKP%2C+s_2p_2%3DK%28RP%2Bt%29\" alt=\"s_1p_1=KP, s_2p_2=K(RP+t)\" eeimg=\"1\"/> ，消掉常数因子 <img src=\"https://www.zhihu.com/equation?tex=s_1%2Cs_2\" alt=\"s_1,s_2\" eeimg=\"1\"/> 再写成齐次坐标可得， <img src=\"https://www.zhihu.com/equation?tex=p_1%3DKP%2C+p_2%3DK%28RP%2Bt%29\" alt=\"p_1=KP, p_2=K(RP+t)\" eeimg=\"1\"/> 。</p><p>令 <img src=\"https://www.zhihu.com/equation?tex=x_1%3DK%5E%7B-1%7Dp_1%2C+x_2%3DK%5E%7B-1%7Dp_2\" alt=\"x_1=K^{-1}p_1, x_2=K^{-1}p_2\" eeimg=\"1\"/> ，带入上面的齐次坐标可得 <img src=\"https://www.zhihu.com/equation?tex=x_2%3DRx_1%2Bt\" alt=\"x_2=Rx_1+t\" eeimg=\"1\"/> ，两边与t做外积，可得 <img src=\"https://www.zhihu.com/equation?tex=t%5E%5Cwedge+x_2%3Dt%5E%5Cwedge+Rx_1%2Bt%5E%5Cwedge+t%3Dt%5E%5Cwedge+Rx_1\" alt=\"t^\\wedge x_2=t^\\wedge Rx_1+t^\\wedge t=t^\\wedge Rx_1\" eeimg=\"1\"/> 。两边同时左乘 <img src=\"https://www.zhihu.com/equation?tex=x_2%5ET\" alt=\"x_2^T\" eeimg=\"1\"/> 有， <img src=\"https://www.zhihu.com/equation?tex=x_2%5ETt%5E%5Cwedge+x_2%3Dx_2%5ETt%5E%5Cwedge+Rx_1\" alt=\"x_2^Tt^\\wedge x_2=x_2^Tt^\\wedge Rx_1\" eeimg=\"1\"/> ，由外积的意义可知，向量 <img src=\"https://www.zhihu.com/equation?tex=x_2%5ET\" alt=\"x_2^T\" eeimg=\"1\"/> 垂直于 <img src=\"https://www.zhihu.com/equation?tex=t%5E%5Cwedge+x_2\" alt=\"t^\\wedge x_2\" eeimg=\"1\"/> ，所以内积为0，有</p><p><img src=\"https://www.zhihu.com/equation?tex=x_2%5ETt%5E%5Cwedge+Rx_1%3D0%5C%5C\" alt=\"x_2^Tt^\\wedge Rx_1=0\\\\\" eeimg=\"1\"/> </p><p>称为对极约束，如果将 <img src=\"https://www.zhihu.com/equation?tex=p_1%2Cp_2\" alt=\"p_1,p_2\" eeimg=\"1\"/> 代入，有 <img src=\"https://www.zhihu.com/equation?tex=p_2%5ET+K%5E%7B-T%7Dt%5E%5Cwedge+RK%5E%7B-1%7Dp_1%3D0\" alt=\"p_2^T K^{-T}t^\\wedge RK^{-1}p_1=0\" eeimg=\"1\"/> 也称为对极约束。</p><p>令 <img src=\"https://www.zhihu.com/equation?tex=E%3Dt%5E%5Cwedge+R\" alt=\"E=t^\\wedge R\" eeimg=\"1\"/> 称为本质矩阵，则对极约束可以写为 <img src=\"https://www.zhihu.com/equation?tex=x_2%5ETEx_1%3D0\" alt=\"x_2^TEx_1=0\" eeimg=\"1\"/> </p><p>令 <img src=\"https://www.zhihu.com/equation?tex=F%3DK%5E%7B-T%7DEK%5E%7B-1%7D\" alt=\"F=K^{-T}EK^{-1}\" eeimg=\"1\"/> 称为基础矩阵，则对极约束可以写为 <img src=\"https://www.zhihu.com/equation?tex=p_2%5ETFp_1%3D0\" alt=\"p_2^TFp_1=0\" eeimg=\"1\"/> </p><p>于是可以通过本质矩阵E和基础矩阵F对相机的位姿进行求解：</p><blockquote>1. 根据配对点的像素位置求出E或者F。<br/>2. 根据E或者F求出R，t。</blockquote><h3>1.1 根据本质矩阵求解位姿</h3><p>先关注一下本质矩阵本身的特点：<img src=\"https://www.zhihu.com/equation?tex=E%3Dt%5E%5Cwedge+R\" alt=\"E=t^\\wedge R\" eeimg=\"1\"/>，<img src=\"https://www.zhihu.com/equation?tex=x_2%5ETEx_1%3D0\" alt=\"x_2^TEx_1=0\" eeimg=\"1\"/>。</p><ul><li>本质矩阵E是一个3x3的向量；</li><li>关注对极约束发现，本质矩阵乘上任何一个非零因子对极约束仍然成立，称为E具有尺度等价性；</li><li>可以证明，本质矩阵的奇异值一定是 <img src=\"https://www.zhihu.com/equation?tex=%5B%5Csigma%2C%5Csigma%2C0%5D%5ET\" alt=\"[\\sigma,\\sigma,0]^T\" eeimg=\"1\"/> 的形式。</li><li>本质矩阵中的平移t和旋转R各有3个自由度，所以E本应6个自由度，由于尺度等价性，E只有5个自由度。</li></ul><p>通常使用八点法(Eight-point-algorithm) 估计E。</p><p>令两个匹配点 <img src=\"https://www.zhihu.com/equation?tex=x_1%2Cx_2\" alt=\"x_1,x_2\" eeimg=\"1\"/> 的归一化坐标分别为 <img src=\"https://www.zhihu.com/equation?tex=x_1%3D%5Bu_1%2Cv_1%2C1%5D%5ET%2C+x_2%3D%5Bu_2%2Cv_2%2C1%5D%5ET\" alt=\"x_1=[u_1,v_1,1]^T, x_2=[u_2,v_2,1]^T\" eeimg=\"1\"/> ，跟据对极约束有公式-7.10成立。</p><figure data-size=\"small\"><noscript><img src=\"https://pic2.zhimg.com/v2-3587c87a6aaf7951161f9d6326a7c53d_b.jpg\" data-size=\"small\" data-rawwidth=\"764\" data-rawheight=\"252\" class=\"origin_image zh-lightbox-thumb\" width=\"764\" data-original=\"https://pic2.zhimg.com/v2-3587c87a6aaf7951161f9d6326a7c53d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;764&#39; height=&#39;252&#39;&gt;&lt;/svg&gt;\" data-size=\"small\" data-rawwidth=\"764\" data-rawheight=\"252\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"764\" data-original=\"https://pic2.zhimg.com/v2-3587c87a6aaf7951161f9d6326a7c53d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-3587c87a6aaf7951161f9d6326a7c53d_b.jpg\"/><figcaption>公式-7.10</figcaption></figure><p>把矩阵E展开成向量， <img src=\"https://www.zhihu.com/equation?tex=e%3D%5Be_1%2Ce_2%2C...%2Ce_9%5D%5ET\" alt=\"e=[e_1,e_2,...,e_9]^T\" eeimg=\"1\"/> 那么公式-7.10可以写成 <img src=\"https://www.zhihu.com/equation?tex=%5Bu_1u_2%2Cu_1%2Cv_2%2Cu_1%2Cv_1u_2%2Cv_1v_2%2Cv_1%2Cu_2%2Cv_2%2C1%5De%3D0\" alt=\"[u_1u_2,u_1,v_2,u_1,v_1u_2,v_1v_2,v_1,u_2,v_2,1]e=0\" eeimg=\"1\"/> .</p><p>把另外几个特征点也做类似的展开，有公式-7.12成立。这是一个8x9的线性方程组，可以通过求解这个方程组得到本质矩阵E。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-46d06d1f2410a0091c2d8a9ef46e2251_b.jpg\" data-size=\"normal\" data-rawwidth=\"1722\" data-rawheight=\"760\" class=\"origin_image zh-lightbox-thumb\" width=\"1722\" data-original=\"https://pic2.zhimg.com/v2-46d06d1f2410a0091c2d8a9ef46e2251_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1722&#39; height=&#39;760&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1722\" data-rawheight=\"760\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1722\" data-original=\"https://pic2.zhimg.com/v2-46d06d1f2410a0091c2d8a9ef46e2251_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-46d06d1f2410a0091c2d8a9ef46e2251_b.jpg\"/><figcaption>公式-7.12</figcaption></figure><p>当得到E之后，需要估计R，t得到相机的运动。使用SVD分解，可得 <img src=\"https://www.zhihu.com/equation?tex=E%3DU%5CSigma+V%5ET\" alt=\"E=U\\Sigma V^T\" eeimg=\"1\"/> 。其中U，V是正交阵， <img src=\"https://www.zhihu.com/equation?tex=%5CSigma%3D%5B%5Csigma%2C%5Csigma%2C0%5D%5ET\" alt=\"\\Sigma=[\\sigma,\\sigma,0]^T\" eeimg=\"1\"/> 是奇异值矩阵。对于任意一个E，分解到t和R有四种可能的解，如图7-8所示。需要取一个点对每一种解进行验证，选择能使P在两个相机中都有正深度的解。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-e451e8bebf3fabdda996fde6efb1707c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2118\" data-rawheight=\"736\" class=\"origin_image zh-lightbox-thumb\" width=\"2118\" data-original=\"https://pic1.zhimg.com/v2-e451e8bebf3fabdda996fde6efb1707c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;2118&#39; height=&#39;736&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2118\" data-rawheight=\"736\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2118\" data-original=\"https://pic1.zhimg.com/v2-e451e8bebf3fabdda996fde6efb1707c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-e451e8bebf3fabdda996fde6efb1707c_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><h3>1.2 单应矩阵求解位姿</h3><p>对于俯视、仰视这种特征点都落在同一平面上的场景（无人机携带的俯视相机），可以通过单应矩阵(Homography)来做运动估计。</p><blockquote>单应矩阵用于描述处于共同平面上的点在两张图像之间的变换关系。</blockquote><p>对于两张图像上的特征点 <img src=\"https://www.zhihu.com/equation?tex=p_1%2Cp_2\" alt=\"p_1,p_2\" eeimg=\"1\"/> ，假设这些特征点都在平面P上，且这个平面可以用方程 <img src=\"https://www.zhihu.com/equation?tex=n%5ETP%2Bd%3D0\" alt=\"n^TP+d=0\" eeimg=\"1\"/> 表示，则可以整理得到 <img src=\"https://www.zhihu.com/equation?tex=-%5Cfrac%7Bn%5ETP%7D%7Bd%7D%3D1\" alt=\"-\\frac{n^TP}{d}=1\" eeimg=\"1\"/> .</p><p>对于特征点 <img src=\"https://www.zhihu.com/equation?tex=p_2\" alt=\"p_2\" eeimg=\"1\"/>的像素坐标，可以进行代换，如公式-代换所示。</p><figure data-size=\"small\"><noscript><img src=\"https://pic1.zhimg.com/v2-865f574baf21b5c6c8b444cbde167f94_b.jpg\" data-size=\"small\" data-rawwidth=\"712\" data-rawheight=\"458\" class=\"origin_image zh-lightbox-thumb\" width=\"712\" data-original=\"https://pic1.zhimg.com/v2-865f574baf21b5c6c8b444cbde167f94_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;712&#39; height=&#39;458&#39;&gt;&lt;/svg&gt;\" data-size=\"small\" data-rawwidth=\"712\" data-rawheight=\"458\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"712\" data-original=\"https://pic1.zhimg.com/v2-865f574baf21b5c6c8b444cbde167f94_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-865f574baf21b5c6c8b444cbde167f94_b.jpg\"/><figcaption>公式-代换</figcaption></figure><p>令 <img src=\"https://www.zhihu.com/equation?tex=H%3DK%28R-%5Cfrac%7Btn%5ET%7D%7Bd%7D%29K%5E%7B-1%7D\" alt=\"H=K(R-\\frac{tn^T}{d})K^{-1}\" eeimg=\"1\"/> ，有 <img src=\"https://www.zhihu.com/equation?tex=p_2%3DHp_1\" alt=\"p_2=Hp_1\" eeimg=\"1\"/> ，H称为单应矩阵。其中 <img src=\"https://www.zhihu.com/equation?tex=p_1%2Cp_2\" alt=\"p_1,p_2\" eeimg=\"1\"/> 已知，可以通过类似本质矩阵的方式，求解线性方程组得到H，然后将H分解得到R和t，再根据先验信息选择合适的解。</p><blockquote>当特征点共面或者相机发生纯旋转时，基础矩阵的自由度下降，这就出现了所谓的退化(degenerate)。现实中的数据总包含一些噪声，这时候如果继续使用过八点法求解基础矩阵，基础矩阵多余出来的自由度将会主要由噪声决定。为了能够避免退化现象造成的影响，通常我们会同时估计基础矩阵F和单应矩阵H，选择重投影误差比较小的那个座位最终的运动估计矩阵。</blockquote><h2>2. 三角测量估计深度</h2><p>知道了相机的运动，下一步需要知道物体的空间坐标，单目相机的缺点是无法获得深度，只能通过目前的已知量对深度进行估计，然后再计算坐标。</p><blockquote>三角测量是指，通过在两处观察同一个点的夹角，从而确定该点的距离。</blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-84686ffe8c131f0be67c570fe0d1bc08_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1686\" data-rawheight=\"982\" class=\"origin_image zh-lightbox-thumb\" width=\"1686\" data-original=\"https://pic1.zhimg.com/v2-84686ffe8c131f0be67c570fe0d1bc08_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1686&#39; height=&#39;982&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1686\" data-rawheight=\"982\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1686\" data-original=\"https://pic1.zhimg.com/v2-84686ffe8c131f0be67c570fe0d1bc08_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-84686ffe8c131f0be67c570fe0d1bc08_b.jpg\"/></figure><p>如图7-9所示，理想情况下， <img src=\"https://www.zhihu.com/equation?tex=O_1P_1%E5%92%8CO_2P_2\" alt=\"O_1P_1和O_2P_2\" eeimg=\"1\"/> 应该相交于点P，但实际中由于噪声的存在，会使得二者不相交，可以通过深度求解。</p><p>以左边的图片为参考，设 <img src=\"https://www.zhihu.com/equation?tex=x_1%2Cx_2\" alt=\"x_1,x_2\" eeimg=\"1\"/> 分别为两个特征点的归一化坐标，有 <img src=\"https://www.zhihu.com/equation?tex=s_1x_1%3Ds_2Rx_2%2Bt\" alt=\"s_1x_1=s_2Rx_2+t\" eeimg=\"1\"/> ，此时R，t，<img src=\"https://www.zhihu.com/equation?tex=x_1%2Cx_2\" alt=\"x_1,x_2\" eeimg=\"1\"/>已知，求解 <img src=\"https://www.zhihu.com/equation?tex=s_1%2Cs_2\" alt=\"s_1,s_2\" eeimg=\"1\"/> .左乘 <img src=\"https://www.zhihu.com/equation?tex=x_1%5E%5Cwedge\" alt=\"x_1^\\wedge\" eeimg=\"1\"/> 有 <img src=\"https://www.zhihu.com/equation?tex=sx_1%5E%5Cwedge+x_1%3D0%3Ds_2x_1%5E%5Cwedge+R+x_2%2Bx_1%5E%5Cwedge+t\" alt=\"sx_1^\\wedge x_1=0=s_2x_1^\\wedge R x_2+x_1^\\wedge t\" eeimg=\"1\"/> ，求解这个方程，可得到 <img src=\"https://www.zhihu.com/equation?tex=s_2\" alt=\"s_2\" eeimg=\"1\"/> ，同理可得 <img src=\"https://www.zhihu.com/equation?tex=s_1\" alt=\"s_1\" eeimg=\"1\"/> .</p><p>三角测量必须要有平移，纯旋转无法进行三角测量。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-a64e9a73b97f73f8ec15405cddcf67c0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2004\" data-rawheight=\"978\" class=\"origin_image zh-lightbox-thumb\" width=\"2004\" data-original=\"https://pic1.zhimg.com/v2-a64e9a73b97f73f8ec15405cddcf67c0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;2004&#39; height=&#39;978&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2004\" data-rawheight=\"978\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2004\" data-original=\"https://pic1.zhimg.com/v2-a64e9a73b97f73f8ec15405cddcf67c0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-a64e9a73b97f73f8ec15405cddcf67c0_b.jpg\"/></figure><p>如图7-10所示，当存在误差时，平移越大，误差对深度计算的影响越小。但当平移变大时，会导致图像的外观成像发生变化，变化越大特征提取与匹配就越困难。于是产生矛盾：平移太大会导致匹配失效，平移太小三角化精度不够。</p><p>参考文献：</p><p>[1] 《视觉SLAM十四讲从理论到实践》 高翔，张涛</p><p></p><p></p><p></p>", 
            "topic": [
                {
                    "tag": "视觉SLAM十四讲（书籍）", 
                    "tagLink": "https://api.zhihu.com/topics/20127173"
                }, 
                {
                    "tag": "同时定位和地图构建（SLAM）", 
                    "tagLink": "https://api.zhihu.com/topics/20033502"
                }
            ], 
            "comments": [
                {
                    "userName": "clementine", 
                    "userLink": "https://www.zhihu.com/people/1e6ef836d658d50e1e21ef1d3913edba", 
                    "content": "<p>所以只是抄了一遍吗，，，，</p><a class=\"comment_sticker\" href=\"https://pic2.zhimg.com/v2-32a02829cce575e2a28b03d4e4c5b121.gif\" data-width=\"\" data-height=\"\">[冷静一下]</a>", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/61307419", 
            "userName": "笨丫头", 
            "userLink": "https://www.zhihu.com/people/1e56511c5bcb79725fdcd0f516b1a3b9", 
            "upvote": 0, 
            "title": "视觉SLAM十四讲|第7讲 视觉里程计1之特征提取", 
            "content": "<p>第七讲的内容对于像我一样的小白来说多且难，我看了两遍书两遍视频，才明白过来。我准备为了写明白，分开几次写，每次写一个部分。</p><p>回顾一下，在第二讲里面有提到整个的视觉SLAM流程图，其中，视觉里程计又称为前端，功能是估算相邻图像之间相机的运动。那么这一讲的主要内容就是如何通过前后两张图片来计算相机的位姿。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-e70035d81b3e2b6d281a3d2ed3aeb4c9_b.jpg\" data-size=\"normal\" data-rawwidth=\"1578\" data-rawheight=\"416\" class=\"origin_image zh-lightbox-thumb\" width=\"1578\" data-original=\"https://pic2.zhimg.com/v2-e70035d81b3e2b6d281a3d2ed3aeb4c9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1578&#39; height=&#39;416&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1578\" data-rawheight=\"416\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1578\" data-original=\"https://pic2.zhimg.com/v2-e70035d81b3e2b6d281a3d2ed3aeb4c9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-e70035d81b3e2b6d281a3d2ed3aeb4c9_b.jpg\"/><figcaption>图2-8</figcaption></figure><p>从直觉出发，给出图像a和图像b<b>，</b>如果通过让我们肉眼判断拍摄两张图像的过程中相机的运动，我们通常会在图像上找个参照物。比如说图2-8中，我们通过对比左边桌子上的白色物体，可以推测出在拍摄右边图像时，相机先向左边旋转了一定的角度。</p><p>类比到计算机上，首先计算机要从图a中找到左边桌子上的白色物体，然后从图b中找到同一个物体，再对不同图像中的同一物体进行比较，根据比较结果计算出相机的位姿。整个过程就是这一讲的内容。大体上分为两步：1）找到不同图像中的同一物体，2）根据物体在两张图像中的位置形态计算相机位姿。</p><p>对于计算机来说，它理解不了物体，但是可以计算数字。一张灰度图对于计算机来说就是一个矩阵，所以在计算机中比较的不是物体，而是点，不同图像中具有代表性的点，称为特征点。</p><p>特征点需要具备以下性质：</p><blockquote>可重复性：相同的“区域”可以在不同的图像中找到<br/>可区别性：不同的“区域”有不同的表达<br/>高效率：同一图像中，特征点的数量应远小于像素的数量<br/>本地行：特征仅与一小片图像区域相关</blockquote><p>这些性质可以保证特征点能够在相邻图像中被找到，同时尽量保持稳定不受相机运动的影响。通常特征点由关键点(key-point)和描述子(Descriptor)组成。关键点指的是特征点在图像中的位置，有时还会包含朝向、大小的信息。描述子是人为设定的，对特征点周围像素的计算。在设计描述子时，认为外观相似的特征应该有相似的描述子。</p><p>SLAM对于实时性要求很高，同时希望尽量的减少计算，所以通常不会使用计算复杂的特征点，比如SIFT，而是选择ORB特征，减少计算时间。</p><h3>1. ORB特征点</h3><p>ORB的关键点是“Oriented FAST”，是改进的FAST角点，描述子是改进的BRIEF。</p><h3>1.1 Oriented FAST</h3><p>FAST主要检测的是局部像素灰度变化明显的地方，认为如果一个像素与邻域像素的差别比较大，那么它可能是角点。FAST的主要运算是比较大小，具体流程如下：</p><ol><li>选取像素p，假设它的亮度是A</li><li>设置一个阈值T=0.2A或其他</li><li>以像素p为中心，选取半径r=3的圆上的16个像素点</li><li>如果选取的16个像素点中，有连续N个点的亮度&gt;A+T或&lt;A-T，那么认为p是特征点</li><li>对每个像素重复1-4步，找到所有的特征点</li></ol><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-8fae965cd6c6fa7f8f2ed68a0cc17cf5_b.jpg\" data-size=\"normal\" data-rawwidth=\"1564\" data-rawheight=\"658\" class=\"origin_image zh-lightbox-thumb\" width=\"1564\" data-original=\"https://pic2.zhimg.com/v2-8fae965cd6c6fa7f8f2ed68a0cc17cf5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1564&#39; height=&#39;658&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1564\" data-rawheight=\"658\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1564\" data-original=\"https://pic2.zhimg.com/v2-8fae965cd6c6fa7f8f2ed68a0cc17cf5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-8fae965cd6c6fa7f8f2ed68a0cc17cf5_b.jpg\"/><figcaption>图7-3</figcaption></figure><p>对照图7-3，理解上述步骤。当N=12时称为FAST-12，FAST-12中可以通过添加预测试来提高效率。在检测时，优先比较p周围第1，5，9，13号像素的亮度，如果全部满足步骤4的条件，则继续判断，否则排除。通过这样的预测试，大大减少了比较次数，提高效率。</p><p>FAST角点还会出现“扎堆”现象，需要使用非极大值抑制，在一定区域内仅保留响应极大值的角点，避免焦点集中的问题。</p><p>FAST特征点通常很多且不确定，Oriented FAST角点对原始FAST得到的角点计算Harris响应值，并取前N个作为最终的角点集合。这样一来，每张图像中都只保留N个特征点。</p><ul><li>旋转不变性</li></ul><p>FAST特征点至描述了位置，没有方向信息，Oriented FAST通过灰度质心法添加了一个方向。灰度质心法假设角点的中心与质心存在着一个偏移，从中心指向质心的向量可以用于表示方向，如图-质心所示。</p><figure data-size=\"small\"><noscript><img src=\"https://pic4.zhimg.com/v2-e13f3b4c797bcb45d987161f552c8fdf_b.jpg\" data-size=\"small\" data-rawwidth=\"606\" data-rawheight=\"794\" class=\"origin_image zh-lightbox-thumb\" width=\"606\" data-original=\"https://pic4.zhimg.com/v2-e13f3b4c797bcb45d987161f552c8fdf_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;606&#39; height=&#39;794&#39;&gt;&lt;/svg&gt;\" data-size=\"small\" data-rawwidth=\"606\" data-rawheight=\"794\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"606\" data-original=\"https://pic4.zhimg.com/v2-e13f3b4c797bcb45d987161f552c8fdf_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-e13f3b4c797bcb45d987161f552c8fdf_b.jpg\"/><figcaption>图-质心</figcaption></figure><p>灰度质心法，通过计算特征点的矩来得到这个方向向量。用I(x,y)来表示像素坐标(x,y)处的灰度值，则特征点p邻域的矩定义为公式-矩。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-57d61afc3ea07c3badd5cd2297e422dc_b.png\" data-size=\"normal\" data-rawwidth=\"1572\" data-rawheight=\"130\" class=\"origin_image zh-lightbox-thumb\" width=\"1572\" data-original=\"https://pic1.zhimg.com/v2-57d61afc3ea07c3badd5cd2297e422dc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1572&#39; height=&#39;130&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1572\" data-rawheight=\"130\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1572\" data-original=\"https://pic1.zhimg.com/v2-57d61afc3ea07c3badd5cd2297e422dc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-57d61afc3ea07c3badd5cd2297e422dc_b.png\"/><figcaption>公式-矩</figcaption></figure><p>对于图像而言， <img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7Bm_%7B10%7D%7D%7Bm_%7B00%7D%7D%3D%5Cfrac%7B%5Csum_%7Bx%2Cy%7DxI%28x%2Cy%29%7D%7B%5Csum_%7Bx%2Cy%7DI%28x%2Cy%29%7D\" alt=\"\\frac{m_{10}}{m_{00}}=\\frac{\\sum_{x,y}xI(x,y)}{\\sum_{x,y}I(x,y)}\" eeimg=\"1\"/> 是x加权的总量与总和相比显示出x在图像的那一列的时候像素值比较大，代表了图像像素在x方向上的偏重，是重心的x坐标。同样的， <img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7Bm_%7B01%7D%7D%7Bm_%7B00%7D%7D%3D%5Cfrac%7B%5Csum_%7Bx%2Cy%7DyI%28x%2Cy%29%7D%7B%5Csum_%7Bx%2Cy%7DI%28x%2Cy%29%7D\" alt=\"\\frac{m_{01}}{m_{00}}=\\frac{\\sum_{x,y}yI(x,y)}{\\sum_{x,y}I(x,y)}\" eeimg=\"1\"/> 代表图像像素在y方向上的偏重，是重心的y坐标。重心坐标 <img src=\"https://www.zhihu.com/equation?tex=%28%5Cfrac%7Bm_%7B10%7D%7D%7Bm_%7B00%7D%7D%2C%5Cfrac%7Bm_%7B01%7D%7D%7Bm_%7B00%7D%7D%29\" alt=\"(\\frac{m_{10}}{m_{00}},\\frac{m_{01}}{m_{00}})\" eeimg=\"1\"/> .</p><p>把特征点与质心的夹角定义为FAST特征点的方向，有 <img src=\"https://www.zhihu.com/equation?tex=%5Ctheta+%3D+arctan%28m_%7B01%7D%2Fm_%7B10%7D%29\" alt=\"\\theta = arctan(m_{01}/m_{10})\" eeimg=\"1\"/> .</p><p>方向的添加，使得Oriented FAST具有了旋转不变性。</p><ul><li>尺度不变性</li></ul><p>尺度问题是指，在远处看起来点A像是角点，但是走近之后发现点A不是角点；或者说在当前分辨率下，看到点A是角点，当放大分辨率时发现点A不是角点。</p><p>Oriented FAST通过构建图像金字塔来实现尺度不变性。</p><figure data-size=\"small\"><noscript><img src=\"https://pic2.zhimg.com/v2-92433351e99233f2b5324f56b342b589_b.jpg\" data-size=\"small\" data-rawwidth=\"646\" data-rawheight=\"512\" class=\"origin_image zh-lightbox-thumb\" width=\"646\" data-original=\"https://pic2.zhimg.com/v2-92433351e99233f2b5324f56b342b589_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;646&#39; height=&#39;512&#39;&gt;&lt;/svg&gt;\" data-size=\"small\" data-rawwidth=\"646\" data-rawheight=\"512\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"646\" data-original=\"https://pic2.zhimg.com/v2-92433351e99233f2b5324f56b342b589_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-92433351e99233f2b5324f56b342b589_b.jpg\"/><figcaption>图-金字塔</figcaption></figure><p>如图-金字塔所示，把原始图像按指定比例缩放，在缩放后的每一层上提取一次FAST角点，由此获得尺度不变的特性。</p><h3>1.2 改进的BRIEF描述子</h3><p>BRIEF描述子是由0和1组成的向量，在计算时，取特征点P周围的N对像素点，图-BRIEF中N=4，比较两个像素点之间的大小关系（如图中的黄色像素对，令上方点的灰度值为A，下方点的灰度值为B，如果A&gt;B则记为1，否则记为0）。当N=4时，BRIEF描述子就是一个四维向量。相邻图片采用同样的选点模式，才能保证两张图片的描述子具有可比性。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-8b7ced87800e6a5224f88e543c650a00_b.jpg\" data-size=\"normal\" data-rawwidth=\"560\" data-rawheight=\"486\" class=\"origin_image zh-lightbox-thumb\" width=\"560\" data-original=\"https://pic1.zhimg.com/v2-8b7ced87800e6a5224f88e543c650a00_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;560&#39; height=&#39;486&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"560\" data-rawheight=\"486\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"560\" data-original=\"https://pic1.zhimg.com/v2-8b7ced87800e6a5224f88e543c650a00_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-8b7ced87800e6a5224f88e543c650a00_b.jpg\"/><figcaption>图-BRIEF</figcaption></figure><p>在取点时，通常以关键点为原点，水平方向为x轴，建立坐标系。如果图片发生了旋转，不改变建系的方式，那么即使采用相同的模式，两张图片所选取的点也不一定相同，得到的描述子就不具有可比性。改进的BRIEF以关键点为原点，关键点和重心的连线方向为x轴建立坐标系，这样可以把旋转考虑进去，保证旋转不变性。</p><h3>1.3 特征匹配</h3><p>现在给出相邻的两张图片，我们可以分别计算两张图片的关键点和描述子，然后需要想办法将两张图片中的特征点进行匹配，称为特征匹配。</p><p>每个特征点都会有一个用N维二进制向量表达的描述子，可以直接通过描述子进行特征点的匹配。最简单的方法，对于图像1中特征点A的描述子，计算它和图像2中所有的描述子的汉明距离，找到距离最小的那个点B，认为点B就是点A在图像2中对应的点。</p><p>在OpenCV中可以使用快速近似最近邻算法进行加速，找到两张图像中所有相对应的点。</p><p>参考文献</p><p>[1] 《视觉SLAM十四讲从理论到实践》 高翔，张涛</p><p>[2] <a href=\"https://link.zhihu.com/?target=https%3A//blog.csdn.net/vivian187/article/details/51880608\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">blog.csdn.net/vivian187</span><span class=\"invisible\">/article/details/51880608</span><span class=\"ellipsis\"></span></a></p><p>[3] <a href=\"https://link.zhihu.com/?target=https%3A//www.cnblogs.com/jiahenhe2/p/7919356.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Sift中尺度空间、高斯金字塔、差分金字塔（DOG金字塔）、图像金字塔 - 心灵智者AI - 博客园</a></p><p>[4] <a href=\"https://link.zhihu.com/?target=https%3A//www.cnblogs.com/zjiaxing/p/5616653.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ORB特征提取与匹配 - jason来自星星 - 博客园</a></p><p></p>", 
            "topic": [
                {
                    "tag": "视觉SLAM十四讲（书籍）", 
                    "tagLink": "https://api.zhihu.com/topics/20127173"
                }, 
                {
                    "tag": "同时定位和地图构建（SLAM）", 
                    "tagLink": "https://api.zhihu.com/topics/20033502"
                }
            ], 
            "comments": [
                {
                    "userName": "向往", 
                    "userLink": "https://www.zhihu.com/people/69d3572053092aaca8db61e47eea8a9c", 
                    "content": "这么专业[赞][赞][赞]", 
                    "likes": 0, 
                    "childComments": []
                }, 
                {
                    "userName": "无偏估计", 
                    "userLink": "https://www.zhihu.com/people/65fed728cdde9255ef0a21acccd5380e", 
                    "content": "尺度金字塔在特征匹配里是如何提现的？", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "笨丫头", 
                            "userLink": "https://www.zhihu.com/people/1e56511c5bcb79725fdcd0f516b1a3b9", 
                            "content": "<p>尺度金字塔是OpenCV中实现ORB的时候添加的，以便于保证在两张图片的有一些形变的情况下还能正确匹配特征。在OpenCV中nlevels表示金字塔层数，具体实现要去看源码</p>", 
                            "likes": 0, 
                            "replyToAuthor": "无偏估计"
                        }
                    ]
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/60451765", 
            "userName": "笨丫头", 
            "userLink": "https://www.zhihu.com/people/1e56511c5bcb79725fdcd0f516b1a3b9", 
            "upvote": 4, 
            "title": "视觉SLAM十四讲|第6讲 非线性优化", 
            "content": "<p>本章讲的是非线性优化求解的基础知识。</p><h2>1. 状态估计问题</h2><p>经典的SLAM模型包括一个运动方程和观测方程，如公式(6.1)所示。其中u是传感器输入，z是观测变量，w和v是噪声。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-2020c10a10d6c43c148312b4320f8a91_b.png\" data-size=\"normal\" data-rawwidth=\"1574\" data-rawheight=\"170\" class=\"origin_image zh-lightbox-thumb\" width=\"1574\" data-original=\"https://pic2.zhimg.com/v2-2020c10a10d6c43c148312b4320f8a91_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1574&#39; height=&#39;170&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1574\" data-rawheight=\"170\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1574\" data-original=\"https://pic2.zhimg.com/v2-2020c10a10d6c43c148312b4320f8a91_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-2020c10a10d6c43c148312b4320f8a91_b.png\"/><figcaption>公式(6.1)</figcaption></figure><p>也就是说SLAM问题，是通过带噪声的数据z和u推断位姿x和地图y的问题，这是一个状态估计问题。</p><p>从概率学上讲，如果把所有的待估计量，也就是所有时刻的位姿和地图放到一个状态变量中，有 <img src=\"https://www.zhihu.com/equation?tex=x%3D%5Cleft%5C%7Bx_1%2C...%2Cx_N%2Cy_1%2C...%2Cy_M%5Cright%5C%7D\" alt=\"x=\\left\\{x_1,...,x_N,y_1,...,y_M\\right\\}\" eeimg=\"1\"/> .那么SLAM问题就是一直输入u和观测数据z的条件下，计算状态x的条件概率分布问题： <img src=\"https://www.zhihu.com/equation?tex=P%28x%7Cz%2Cu%29\" alt=\"P(x|z,u)\" eeimg=\"1\"/> .在不考虑传感器输入u时，该问题变成 <img src=\"https://www.zhihu.com/equation?tex=P%28x%7Cz%29\" alt=\"P(x|z)\" eeimg=\"1\"/> ，已知观测如何推断位姿和地图，称为Structure from Motion (SfM)，即如何从许多图像中重建三维空间结构。</p><p>根据贝叶斯法则，有 <img src=\"https://www.zhihu.com/equation?tex=P%28x%7Cz%29%3D%5Cfrac%7BP%28z%7Cx%29P%28x%29%7D%7BP%28z%29%7D+%5Cpropto+P%28z%7Cx%29P%28x%29\" alt=\"P(x|z)=\\frac{P(z|x)P(x)}{P(z)} \\propto P(z|x)P(x)\" eeimg=\"1\"/> . P(x)称为先验，表示预先知道x的状态；P(z|x)称为似然表示在当前位姿x下产生观测z的概率；P(x|z)称为后验概率，表示产生观测z时位姿是x的概率。目标是求解使得P(x|z)最大的x，也就是 <img src=\"https://www.zhihu.com/equation?tex=x%5E%2A%3DargmaxP%28x%7Cz%29%3DargmaxP%28z%7Cx%29P%28x%29\" alt=\"x^*=argmaxP(x|z)=argmaxP(z|x)P(x)\" eeimg=\"1\"/> .在不知道机器人位姿x的情况下，可以近似求解x的最大似然估计 <img src=\"https://www.zhihu.com/equation?tex=x%5E%2A%3DargmaxP%28z%7Cx%29\" alt=\"x^*=argmaxP(z|x)\" eeimg=\"1\"/> ，表示在位姿x下，最可能产生观测z。</p><p>对于观测方程公式(6.1)中第二个公式，如果认为 <img src=\"https://www.zhihu.com/equation?tex=v_k%5Csim+N%280%2CQ_%7Bk%2Cj%7D%29\" alt=\"v_k\\sim N(0,Q_{k,j})\" eeimg=\"1\"/> ，则条件概率 <img src=\"https://www.zhihu.com/equation?tex=P%28z_%7Bj%2Ck%7D%7Cx_k%2Cy_j%29+%3DN%28h%28y_j%2Cx_k%29%2CQ_%7Bk%2Cj%7D%29\" alt=\"P(z_{j,k}|x_k,y_j) =N(h(y_j,x_k),Q_{k,j})\" eeimg=\"1\"/> ，我们的目标变成了求解 <img src=\"https://www.zhihu.com/equation?tex=x%5E%2A%3D%5Bx_k%2C...%2Cy_j..%5D\" alt=\"x^*=[x_k,...,y_j..]\" eeimg=\"1\"/> 使得 <img src=\"https://www.zhihu.com/equation?tex=P%28z_%7Bj%2Ck%7D%7Cx_k%2Cy_j%29\" alt=\"P(z_{j,k}|x_k,y_j)\" eeimg=\"1\"/> 最大，也就是求解高斯分布 <img src=\"https://www.zhihu.com/equation?tex=%5Cmu%3Dh%28y_j%2Cx_k%29%2C+%5CSigma%3DQ_%7Bk%2Cj%7D\" alt=\"\\mu=h(y_j,x_k), \\Sigma=Q_{k,j}\" eeimg=\"1\"/> 最大似然。</p><p>通常使用最小化高斯分布的负对数，来求解高斯分布的最大似然。对于任意高斯分布 <img src=\"https://www.zhihu.com/equation?tex=x%5Csim+N%28%5Cmu%2C+%5CSigma%29\" alt=\"x\\sim N(\\mu, \\Sigma)\" eeimg=\"1\"/> 其概率密度函数为公式(6.8)。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-51c014463824cb2fa308e698057b7f82_b.png\" data-size=\"normal\" data-rawwidth=\"1534\" data-rawheight=\"148\" class=\"origin_image zh-lightbox-thumb\" width=\"1534\" data-original=\"https://pic3.zhimg.com/v2-51c014463824cb2fa308e698057b7f82_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1534&#39; height=&#39;148&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1534\" data-rawheight=\"148\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1534\" data-original=\"https://pic3.zhimg.com/v2-51c014463824cb2fa308e698057b7f82_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-51c014463824cb2fa308e698057b7f82_b.png\"/><figcaption>公式(6.8)</figcaption></figure><p>对高斯分布的概率密度函数取负对数，有公式(6.9)。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-455d68be4363e28e6f323b74df2b18ef_b.png\" data-size=\"normal\" data-rawwidth=\"1586\" data-rawheight=\"108\" class=\"origin_image zh-lightbox-thumb\" width=\"1586\" data-original=\"https://pic4.zhimg.com/v2-455d68be4363e28e6f323b74df2b18ef_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1586&#39; height=&#39;108&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1586\" data-rawheight=\"108\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1586\" data-original=\"https://pic4.zhimg.com/v2-455d68be4363e28e6f323b74df2b18ef_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-455d68be4363e28e6f323b74df2b18ef_b.png\"/><figcaption>公式(6.9)</figcaption></figure><p>SLAM问题中需要求解x，公式(6.9)中第一项与x无关，可以忽略。所以求解高斯分布 <img src=\"https://www.zhihu.com/equation?tex=%5Cmu%3Dh%28y_j%2Cx_k%29%2C+%5CSigma%3DQ_%7Bk%2Cj%7D\" alt=\"\\mu=h(y_j,x_k), \\Sigma=Q_{k,j}\" eeimg=\"1\"/> 的最大似然，等价于求解公式(6.10)。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-898b536a9db1deb2ee8d5e0803ecdf8e_b.png\" data-size=\"normal\" data-rawwidth=\"1594\" data-rawheight=\"102\" class=\"origin_image zh-lightbox-thumb\" width=\"1594\" data-original=\"https://pic3.zhimg.com/v2-898b536a9db1deb2ee8d5e0803ecdf8e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1594&#39; height=&#39;102&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1594\" data-rawheight=\"102\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1594\" data-original=\"https://pic3.zhimg.com/v2-898b536a9db1deb2ee8d5e0803ecdf8e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-898b536a9db1deb2ee8d5e0803ecdf8e_b.png\"/><figcaption>公式(6.10)</figcaption></figure><p>定义观测误差为 <img src=\"https://www.zhihu.com/equation?tex=e_%7By%2Cj%2Ck%7D%3Dz_%7Bk%2Cj%7D-h%28x_k%2Cy_j%29\" alt=\"e_{y,j,k}=z_{k,j}-h(x_k,y_j)\" eeimg=\"1\"/> ，则公式(6.10)等价于计算误差项的平方。定义运动误差为 <img src=\"https://www.zhihu.com/equation?tex=e_%7Bv%2Ck+%7D%3Dx_k-f%28x_%7Bk-1%7D%2Cu_k%29\" alt=\"e_{v,k }=x_k-f(x_{k-1},u_k)\" eeimg=\"1\"/> ，那么对于所有的运动和观测而言，SLAM问题相当于找到一个最有解，使得所有误差的平方和最小，如公式(6.12)所示。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-16e9898b086a5410f1f9326b41410eb6_b.png\" data-size=\"normal\" data-rawwidth=\"1570\" data-rawheight=\"120\" class=\"origin_image zh-lightbox-thumb\" width=\"1570\" data-original=\"https://pic3.zhimg.com/v2-16e9898b086a5410f1f9326b41410eb6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1570&#39; height=&#39;120&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1570\" data-rawheight=\"120\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1570\" data-original=\"https://pic3.zhimg.com/v2-16e9898b086a5410f1f9326b41410eb6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-16e9898b086a5410f1f9326b41410eb6_b.png\"/><figcaption>公式(6.12)</figcaption></figure><h2>2. 最小二乘求解</h2><p>当把问题转化为最小二乘问题之后，需要进行求解。最简单的最小二乘问题 <img src=\"https://www.zhihu.com/equation?tex=min_x+%5Cfrac%7B1%7D%7B2%7D+%7C%7Cf%28x%29%7C%7C_2%5E2\" alt=\"min_x \\frac{1}{2} ||f(x)||_2^2\" eeimg=\"1\"/> 可以直接求导，导数为零计算极值。或者进行迭代求解，如图迭代步骤所示。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-6f084bec60a154b739be0b4977510a8d_b.jpg\" data-size=\"normal\" data-rawwidth=\"1586\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb\" width=\"1586\" data-original=\"https://pic2.zhimg.com/v2-6f084bec60a154b739be0b4977510a8d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1586&#39; height=&#39;408&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1586\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1586\" data-original=\"https://pic2.zhimg.com/v2-6f084bec60a154b739be0b4977510a8d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-6f084bec60a154b739be0b4977510a8d_b.jpg\"/><figcaption>图-迭代步骤</figcaption></figure><p>在SLAM优化问题中，通常很难求解导数，转而使用迭代计算。在迭代计算中 <img src=\"https://www.zhihu.com/equation?tex=%5CDelta+x\" alt=\"\\Delta x\" eeimg=\"1\"/> 增量有不同的确定方法，对应着不同的求解算法。</p><h3>2.1 梯度法</h3><p>对目标函数在x附近进行泰勒展开，得到公式(6.15)</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-759d3eccef6f288f572056c42e97b1cc_b.png\" data-size=\"normal\" data-rawwidth=\"1582\" data-rawheight=\"110\" class=\"origin_image zh-lightbox-thumb\" width=\"1582\" data-original=\"https://pic1.zhimg.com/v2-759d3eccef6f288f572056c42e97b1cc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1582&#39; height=&#39;110&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1582\" data-rawheight=\"110\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1582\" data-original=\"https://pic1.zhimg.com/v2-759d3eccef6f288f572056c42e97b1cc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-759d3eccef6f288f572056c42e97b1cc_b.png\"/><figcaption>公式(6.15)</figcaption></figure><p>J称为雅可比矩阵，是f(x)的一阶导数，H称为黑塞矩阵，是f(x)的二阶导数。</p><p>如果保留一阶展开，则关于增量的目标函数变成 <img src=\"https://www.zhihu.com/equation?tex=min_%7B%5CDelta+x%7D+%7C%7Cf%28x%29%7C%7C%5E2_2+%2BJ%5CDelta+x\" alt=\"min_{\\Delta x} ||f(x)||^2_2 +J\\Delta x\" eeimg=\"1\"/> ，对增量 <img src=\"https://www.zhihu.com/equation?tex=%5CDelta+x\" alt=\"\\Delta x\" eeimg=\"1\"/> 求导，取负梯度方向作为增量方向（梯度表示某一函数在该点处的方向导数沿着该方向取得最大值，即函数在该点处沿着该方向（此梯度的方向）变化最快，想要获得最小值应该沿着梯度的反方向变化），可得 <img src=\"https://www.zhihu.com/equation?tex=%5CDelta+x%5E%2A%3D-J%5ET%28x%29\" alt=\"\\Delta x^*=-J^T(x)\" eeimg=\"1\"/> 。在图-迭代步骤中，使用这个增量进行迭代求解的算法称为最速下降法。</p><p>如果保留二阶展开，则关于增量的目标函数变成 <img src=\"https://www.zhihu.com/equation?tex=min_%7B%5CDelta+x%7D+%7C%7Cf%28x%29%7C%7C%5E2_2+%2BJ%5CDelta+x%2B%5Cfrac%7B1%7D%7B2%7D%5CDelta+x%5ET+H%5CDelta+x\" alt=\"min_{\\Delta x} ||f(x)||^2_2 +J\\Delta x+\\frac{1}{2}\\Delta x^T H\\Delta x\" eeimg=\"1\"/> ，同样的对增量求导，令导数为零，可得 <img src=\"https://www.zhihu.com/equation?tex=H%5CDelta+x%5E%2A%3D-J%5ET\" alt=\"H\\Delta x^*=-J^T\" eeimg=\"1\"/> . 在图-迭代步骤中，使用这个增量进行迭代求解的算法称为牛顿法。</p><p>最速下降法存在zigzag问题，如图-zigzag问题所示，在求解时直接沿着反向梯度方向，有时会绕路。牛顿法要计算黑塞矩阵，计算量很大。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-6eda38cb128f87b43d36d96f93a02c05_b.jpg\" data-size=\"normal\" data-rawwidth=\"712\" data-rawheight=\"346\" class=\"origin_image zh-lightbox-thumb\" width=\"712\" data-original=\"https://pic2.zhimg.com/v2-6eda38cb128f87b43d36d96f93a02c05_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;712&#39; height=&#39;346&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"712\" data-rawheight=\"346\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"712\" data-original=\"https://pic2.zhimg.com/v2-6eda38cb128f87b43d36d96f93a02c05_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-6eda38cb128f87b43d36d96f93a02c05_b.jpg\"/><figcaption>图-zigzag问题</figcaption></figure><h3>2.2高斯牛顿法</h3><p>前面是对平方项进行展开，高斯牛顿法对f(x)做一阶泰勒展开，有 <img src=\"https://www.zhihu.com/equation?tex=f%28x%2B%5CDelta+x%29%5Capprox+f%28x%29%2BJ%28x%29%5CDelta+x\" alt=\"f(x+\\Delta x)\\approx f(x)+J(x)\\Delta x\" eeimg=\"1\"/> 。对于最小二乘问题，需要进行平方，然后对 <img src=\"https://www.zhihu.com/equation?tex=%5CDelta+x\" alt=\"\\Delta x\" eeimg=\"1\"/> 求导，将目标函数的平方项展开，得到公式-展开。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-d457d313fd331dffe932d0902423f026_b.png\" data-size=\"normal\" data-rawwidth=\"1580\" data-rawheight=\"188\" class=\"origin_image zh-lightbox-thumb\" width=\"1580\" data-original=\"https://pic3.zhimg.com/v2-d457d313fd331dffe932d0902423f026_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1580&#39; height=&#39;188&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1580\" data-rawheight=\"188\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1580\" data-original=\"https://pic3.zhimg.com/v2-d457d313fd331dffe932d0902423f026_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-d457d313fd331dffe932d0902423f026_b.png\"/><figcaption>公式-展开</figcaption></figure><p>对公式-展开，求导，令导数为零可以解得 <img src=\"https://www.zhihu.com/equation?tex=J%28x%29%5ETJ%28x%29%5CDelta+x%3D-J%28x%29%5ET+f%28x%29\" alt=\"J(x)^TJ(x)\\Delta x=-J(x)^T f(x)\" eeimg=\"1\"/> . 其中要求解的是 <img src=\"https://www.zhihu.com/equation?tex=%5CDelta+x\" alt=\"\\Delta x\" eeimg=\"1\"/> ,可以把它看作一个线性方程组，若令 <img src=\"https://www.zhihu.com/equation?tex=H%3DJ%28x%29%5ETJ%28x%29%2C+g%3D-J%28x%29%5ET+f%28x%29\" alt=\"H=J(x)^TJ(x), g=-J(x)^T f(x)\" eeimg=\"1\"/> ,则可以写为 <img src=\"https://www.zhihu.com/equation?tex=H%5CDelta+x%3Dg\" alt=\"H\\Delta x=g\" eeimg=\"1\"/> 称为高斯牛顿方程。</p><p>由此，高斯牛顿法的步骤如图-高斯牛顿所示。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-8c7ecb5a1bdbdd093225ef621b5190b3_b.jpg\" data-size=\"normal\" data-rawwidth=\"1584\" data-rawheight=\"430\" class=\"origin_image zh-lightbox-thumb\" width=\"1584\" data-original=\"https://pic4.zhimg.com/v2-8c7ecb5a1bdbdd093225ef621b5190b3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1584&#39; height=&#39;430&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1584\" data-rawheight=\"430\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1584\" data-original=\"https://pic4.zhimg.com/v2-8c7ecb5a1bdbdd093225ef621b5190b3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-8c7ecb5a1bdbdd093225ef621b5190b3_b.jpg\"/><figcaption>图-高斯牛顿</figcaption></figure><p>在高斯牛顿法中，如果H矩阵是奇异矩阵或者病态矩阵，会导致步长太大，最终算法难以收敛。处理办法通常是加一个标量，变成 <img src=\"https://www.zhihu.com/equation?tex=%7C%7Cf%28x%2B%5Calpha+%5CDelta+x%29%7C%7C%5E2\" alt=\"||f(x+\\alpha \\Delta x)||^2\" eeimg=\"1\"/> ,通过调节 <img src=\"https://www.zhihu.com/equation?tex=%5Calpha\" alt=\"\\alpha\" eeimg=\"1\"/> 来改变步长。</p><h3>2.3 列文伯格——马夸尔特方法</h3><p>列文伯格——马夸尔特方法有称为阻尼牛顿法，收敛速度比高斯牛顿法慢，但是在SLAM中很常用。</p><p>一阶或者二阶泰勒展开只是在 <img src=\"https://www.zhihu.com/equation?tex=%5CDelta+x\" alt=\"\\Delta x\" eeimg=\"1\"/> 附近有效，当范围变大时泰勒近似得到的值会产生比较大的误差。阻尼牛顿法考虑给 <img src=\"https://www.zhihu.com/equation?tex=%5CDelta+x\" alt=\"\\Delta x\" eeimg=\"1\"/> 添加一个信赖区域，对其进行约束。</p><p>定义 <img src=\"https://www.zhihu.com/equation?tex=%5Crho%3D%5Cfrac%7Bf%28x%2B%5CDelta+x%29-f%28x%29%7D%7BJ%28x%29%5CDelta+x%7D\" alt=\"\\rho=\\frac{f(x+\\Delta x)-f(x)}{J(x)\\Delta x}\" eeimg=\"1\"/> ，该指标用来判断泰勒近似的好坏，分母表示实际的函数变化，分子表示近似模型的变化。如果 <img src=\"https://www.zhihu.com/equation?tex=%5Crho\" alt=\"\\rho\" eeimg=\"1\"/> 太大，表示当前近似很差，需要缩小范围；如果 <img src=\"https://www.zhihu.com/equation?tex=%5Crho\" alt=\"\\rho\" eeimg=\"1\"/> 太小，表示当前近似非常好，可以适当扩大范围。如此而来的阻尼牛顿法步骤如图-阻尼牛顿所示。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-08c73b47baed4034b3064c6422ce1a26_b.jpg\" data-size=\"normal\" data-rawwidth=\"1544\" data-rawheight=\"826\" class=\"origin_image zh-lightbox-thumb\" width=\"1544\" data-original=\"https://pic3.zhimg.com/v2-08c73b47baed4034b3064c6422ce1a26_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1544&#39; height=&#39;826&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1544\" data-rawheight=\"826\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1544\" data-original=\"https://pic3.zhimg.com/v2-08c73b47baed4034b3064c6422ce1a26_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-08c73b47baed4034b3064c6422ce1a26_b.jpg\"/><figcaption>图-阻尼牛顿</figcaption></figure><p>其中，第4，5步中涉及到的数值均为经验值。公式(6.24)中的约束条件表示，把增量限定在一个球体中，矩阵D可以对这个球体的形状进行调节。</p><p>在求解公式(6.24)使，使用拉格朗日乘子法转化为无约束优化问题，然后求解，可以得到 <img src=\"https://www.zhihu.com/equation?tex=%28H%2B%5Clambda+D%5ETD%29%5CDelta+x%3Dg\" alt=\"(H+\\lambda D^TD)\\Delta x=g\" eeimg=\"1\"/> ，当D取单位矩阵时，有 <img src=\"https://www.zhihu.com/equation?tex=%28H%2B%5Clambda+I%29%5CDelta+x%3Dg\" alt=\"(H+\\lambda I)\\Delta x=g\" eeimg=\"1\"/> .可以认为在阻尼牛顿法中， <img src=\"https://www.zhihu.com/equation?tex=%5Clambda+\" alt=\"\\lambda \" eeimg=\"1\"/> 比较小的时候，H矩阵主导结果，此时阻尼牛顿法接近于高斯牛顿法；当 <img src=\"https://www.zhihu.com/equation?tex=%5Clambda\" alt=\"\\lambda\" eeimg=\"1\"/> 比较大的时候， <img src=\"https://www.zhihu.com/equation?tex=%5Clambda+I\" alt=\"\\lambda I\" eeimg=\"1\"/> 主导结果，此时阻尼牛顿法更接近于最速下降法。</p><p>另外，在迭代求解中，一个好的初始值很重要。</p><p>参考文献<br/>《视觉SLAM十四讲从理论到实践》 高翔，张涛</p>", 
            "topic": [
                {
                    "tag": "视觉SLAM十四讲（书籍）", 
                    "tagLink": "https://api.zhihu.com/topics/20127173"
                }, 
                {
                    "tag": "同时定位和地图构建（SLAM）", 
                    "tagLink": "https://api.zhihu.com/topics/20033502"
                }
            ], 
            "comments": [
                {
                    "userName": "孙龙", 
                    "userLink": "https://www.zhihu.com/people/2303bc519227da5e6858afd8f6eaf2f8", 
                    "content": "最速下降法求解厶x里，对增量求导并等于0 不就是J(x)T<br>=0了吗 厶x怎么解出来的呢", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "笨丫头", 
                            "userLink": "https://www.zhihu.com/people/1e56511c5bcb79725fdcd0f516b1a3b9", 
                            "content": "<p>这个地方写错了，已经纠正。对于最速下降法，根据梯度的定义，直接取负梯度方向作为增量方向，所以不需要令一阶导数为0.</p>", 
                            "likes": 0, 
                            "replyToAuthor": "孙龙"
                        }
                    ]
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/59998211", 
            "userName": "笨丫头", 
            "userLink": "https://www.zhihu.com/people/1e56511c5bcb79725fdcd0f516b1a3b9", 
            "upvote": 7, 
            "title": "视觉SLAM十四讲|第5讲 相机与图像", 
            "content": "<p>这一讲介绍的是相机原理，一个物体被小机器人的眼睛看到后，是怎么在机器人的大脑中表达的。</p><h2>1. 单目相机</h2><h3>1.1 小孔成像模型</h3><p>和以前物理课上讲的一样，朴素又简单的小孔成像模型，一个蜡烛放在P处，经过一个小孔，会在后面的屏幕上呈现一个倒像。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-871c66c8950ce27d3cd9f911f41fe869_b.jpg\" data-size=\"normal\" data-rawwidth=\"1586\" data-rawheight=\"586\" class=\"origin_image zh-lightbox-thumb\" width=\"1586\" data-original=\"https://pic2.zhimg.com/v2-871c66c8950ce27d3cd9f911f41fe869_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1586&#39; height=&#39;586&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1586\" data-rawheight=\"586\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1586\" data-original=\"https://pic2.zhimg.com/v2-871c66c8950ce27d3cd9f911f41fe869_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-871c66c8950ce27d3cd9f911f41fe869_b.jpg\"/><figcaption>图5-1针孔相机模型</figcaption></figure><p>这里面，红色的 <img src=\"https://www.zhihu.com/equation?tex=PP%27\" alt=\"PP&#39;\" eeimg=\"1\"/> 是直直的光线，f是成像平面到小孔（相机）的距离，Z是物体P到小孔（相机）的距离，X是物体的长度， <img src=\"https://www.zhihu.com/equation?tex=X%27\" alt=\"X&#39;\" eeimg=\"1\"/> 是像的长度。</p><p>存在 <img src=\"https://www.zhihu.com/equation?tex=%5CDelta+BP%27O%5Csimeq+%5CDelta+APO\" alt=\"\\Delta BP&#39;O\\simeq \\Delta APO\" eeimg=\"1\"/> ，如果以图5-1左边所示，以O为原点，建立坐标系，P坐标为[X,Y,Z]， <img src=\"https://www.zhihu.com/equation?tex=P%27\" alt=\"P&#39;\" eeimg=\"1\"/>坐标为[X&#39;,Y&#39;,Z&#39;]。那么X和X&#39;之间符号相反，Y和Y&#39;之间符号相反。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-1f8e06a729f7fc80b7e8bf64a8ee0722_b.jpg\" data-size=\"normal\" data-rawwidth=\"1588\" data-rawheight=\"372\" class=\"origin_image zh-lightbox-thumb\" width=\"1588\" data-original=\"https://pic3.zhimg.com/v2-1f8e06a729f7fc80b7e8bf64a8ee0722_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1588&#39; height=&#39;372&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1588\" data-rawheight=\"372\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1588\" data-original=\"https://pic3.zhimg.com/v2-1f8e06a729f7fc80b7e8bf64a8ee0722_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-1f8e06a729f7fc80b7e8bf64a8ee0722_b.jpg\"/><figcaption>图5-2</figcaption></figure><p>如果把成像平面对称到相机的前面，如图5-2中间所示，则P&#39;的坐标[X&#39;,Y&#39;,Z&#39;]与P点坐标符号相同，根据相似有 <img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7BZ%7D%7Bf%7D%3D%5Cfrac%7BX%7D%7BX%27%7D%3D%5Cfrac%7BY%7D%7BY%27%7D\" alt=\"\\frac{Z}{f}=\\frac{X}{X&#39;}=\\frac{Y}{Y&#39;}\" eeimg=\"1\"/> ，可以导出点和像的关系， <img src=\"https://www.zhihu.com/equation?tex=X%27%3Df%5Cfrac%7BX%7D%7BZ%7D%2C+Y%27%3Df%5Cfrac%7BY%7D%7BZ%7D\" alt=\"X&#39;=f\\frac{X}{Z}, Y&#39;=f\\frac{Y}{Z}\" eeimg=\"1\"/> .</p><p>图5-2中对Z轴进行归一化，可得P的像P&#39;在相机前方z=1处的坐标<img src=\"https://www.zhihu.com/equation?tex=%5B%5Cfrac%7BX%27%7D%7BZ%27%7D%2C%5Cfrac%7BY%27%7D%7BZ%27%7D%2C1%5D\" alt=\"[\\frac{X&#39;}{Z&#39;},\\frac{Y&#39;}{Z&#39;},1]\" eeimg=\"1\"/>，称为归一化平面坐标。</p><p>在物理成像中，需要把光线转化成像素。以图像的左上角为原点o&#39;，u 轴向右与x轴平行，v轴向下与y轴平行，建立像素坐标系。像素坐标系和成像平面之间相差了一个缩放和原点的平移。</p><p>那么点P[X,Y,Z]经过小孔呈的像P&#39;[X&#39;,Y&#39;,Z&#39;]，在像素坐标系中的坐标[u,v]可以表示为 <img src=\"https://www.zhihu.com/equation?tex=u%3D%5Calpha+X%27%2Bc_x%2C+v%3D%5Cbeta+Y%27%2Bc_y\" alt=\"u=\\alpha X&#39;+c_x, v=\\beta Y&#39;+c_y\" eeimg=\"1\"/> .</p><p>也就是说，点P[X,Y,Z]与像素坐标之间的转换关系是： <img src=\"https://www.zhihu.com/equation?tex=u%3Df_x%5Cfrac%7B+X%7D%7BZ%7D%2Bc_x%2C+v%3Df_x%5Cfrac%7BY%7D%7BZ%7D%2Bc_y\" alt=\"u=f_x\\frac{ X}{Z}+c_x, v=f_x\\frac{Y}{Z}+c_y\" eeimg=\"1\"/> .</p><p>其中 <img src=\"https://www.zhihu.com/equation?tex=f_x%3D%5Calpha+f%2C+f_y%3D%5Cbeta+f\" alt=\"f_x=\\alpha f, f_y=\\beta f\" eeimg=\"1\"/> ,单位是像素。</p><p>将非齐次坐标[u,v]转化为齐次坐标[u,v,1]，可以得到相机坐标系和像素坐标系之间的转换，如公式(5.6)所示。中间的矩阵K称为相机的内参数矩阵，属于相机的固定参数。P是以相机为原点的物体坐标，也就是物体P在相机坐标系中的坐标。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-333d92324f5f6460ff161eb878dede8c_b.png\" data-size=\"normal\" data-rawwidth=\"1592\" data-rawheight=\"218\" class=\"origin_image zh-lightbox-thumb\" width=\"1592\" data-original=\"https://pic1.zhimg.com/v2-333d92324f5f6460ff161eb878dede8c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1592&#39; height=&#39;218&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1592\" data-rawheight=\"218\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1592\" data-original=\"https://pic1.zhimg.com/v2-333d92324f5f6460ff161eb878dede8c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-333d92324f5f6460ff161eb878dede8c_b.png\"/><figcaption>公式(5.6)</figcaption></figure><p>从公式(5.6)中可以看到，对于静止相机来说，K固定且相机坐标系固定；对于静止物体来说P固定。但这个物体的像素坐标系却不能固定，因为有Z的存在，通过Z可以将物体P的像素坐标放大或者缩小一定的倍数。这就是单目相机的缺陷，无法确定景深，只能获得物体的相对大小，不能得到物体的尺寸。</p><p>相机是机器人的眼睛，机器人在动，相机也在动，相机坐标系就发生了变化。记物体P的世界坐标为 <img src=\"https://www.zhihu.com/equation?tex=P_w\" alt=\"P_w\" eeimg=\"1\"/> ，前面讲过可以通过变换矩阵，将世界坐标转换到机器人（相机）坐标，有 <img src=\"https://www.zhihu.com/equation?tex=P_c%3D%28RP_w%2Bt%29%3DT_%7Bcw%7DP_w\" alt=\"P_c=(RP_w+t)=T_{cw}P_w\" eeimg=\"1\"/> ,所以像素坐标系和世界坐标系的关系，可以写为： <img src=\"https://www.zhihu.com/equation?tex=ZP_%7Buv%7D%3DZ+%5Cleft+%5B%5Cbegin%7Bmatrix%7D+u%5C%5Cv%5C%5C1+%5Cend%7Bmatrix%7D+%5Cright+%5D%3DK%28RP_w%2Bt%29%3DKT_%7Bcw%7DP_w\" alt=\"ZP_{uv}=Z \\left [\\begin{matrix} u\\\\v\\\\1 \\end{matrix} \\right ]=K(RP_w+t)=KT_{cw}P_w\" eeimg=\"1\"/> ，其中R，t称为相机的外参数。</p><p>上面的式子，隐含着齐次到非齐次的变换，变换矩阵是4*4，世界坐标 <img src=\"https://www.zhihu.com/equation?tex=P_w\" alt=\"P_w\" eeimg=\"1\"/> 是齐次坐标，而K是3*3矩阵，所以 <img src=\"https://www.zhihu.com/equation?tex=T_%7Bcw%7DP_w\" alt=\"T_{cw}P_w\" eeimg=\"1\"/> 得到的是一个四维向量，最后一维是1。将 <img src=\"https://www.zhihu.com/equation?tex=T_%7Bcw%7DP_w\" alt=\"T_{cw}P_w\" eeimg=\"1\"/> 变为非齐次，得到三维的相机坐标 <img src=\"https://www.zhihu.com/equation?tex=%5Ctilde+%7BP_c%7D\" alt=\"\\tilde {P_c}\" eeimg=\"1\"/> 。</p><p>再通过归一化，把非齐次的相机坐标 <img src=\"https://www.zhihu.com/equation?tex=%5Ctilde%7BP_c%7D\" alt=\"\\tilde{P_c}\" eeimg=\"1\"/> [x,y,z]，变为齐次坐标 <img src=\"https://www.zhihu.com/equation?tex=P_c+%5B%5Cfrac%7Bx%7D%7Bz%7D%2C%5Cfrac%7By%7D%7Bz%7D%2C1%5D\" alt=\"P_c [\\frac{x}{z},\\frac{y}{z},1]\" eeimg=\"1\"/> ，称 <img src=\"https://www.zhihu.com/equation?tex=P_c\" alt=\"P_c\" eeimg=\"1\"/> 为归一化坐标，位于归一化平面上。再和K相乘，得到在像素坐标系中的齐次坐标，忽略非零常数Z，可以简写为 <img src=\"https://www.zhihu.com/equation?tex=P_%7Buv%7D%3DKT_%7Bcw%7DP_w\" alt=\"P_{uv}=KT_{cw}P_w\" eeimg=\"1\"/> .</p><h3>1.2 畸变</h3><p>相机的前方通常会有一个透镜，会对成像产生影响，称为畸变。</p><p>由透镜形状引起的畸变称为径向畸变，包括桶形畸变和枕形畸变。桶形畸变是由于图像放大率随着与光轴之间的距离增加而减小；枕形畸变相反。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-aa1a4e54cc535d2dfa7d5d74d6686e1d_b.jpg\" data-size=\"normal\" data-rawwidth=\"1568\" data-rawheight=\"304\" class=\"origin_image zh-lightbox-thumb\" width=\"1568\" data-original=\"https://pic2.zhimg.com/v2-aa1a4e54cc535d2dfa7d5d74d6686e1d_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1568&#39; height=&#39;304&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1568\" data-rawheight=\"304\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1568\" data-original=\"https://pic2.zhimg.com/v2-aa1a4e54cc535d2dfa7d5d74d6686e1d_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-aa1a4e54cc535d2dfa7d5d74d6686e1d_b.jpg\"/><figcaption>图5-3</figcaption></figure><p>径向畸变的程度会随着与中心距离的增加而增加，可以通过公式(5.11)进行矫正。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-ef6ddb4dfb8998594da8d74da863b2e3_b.png\" data-size=\"normal\" data-rawwidth=\"1542\" data-rawheight=\"168\" class=\"origin_image zh-lightbox-thumb\" width=\"1542\" data-original=\"https://pic4.zhimg.com/v2-ef6ddb4dfb8998594da8d74da863b2e3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1542&#39; height=&#39;168&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1542\" data-rawheight=\"168\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1542\" data-original=\"https://pic4.zhimg.com/v2-ef6ddb4dfb8998594da8d74da863b2e3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-ef6ddb4dfb8998594da8d74da863b2e3_b.png\"/><figcaption>公式(5.11)</figcaption></figure><p>透镜在装机过程中不和成像平面严格平行会引入且向畸变。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b6c23002bf0b4320bf44f2e02b155080_b.jpg\" data-size=\"normal\" data-rawwidth=\"1590\" data-rawheight=\"520\" class=\"origin_image zh-lightbox-thumb\" width=\"1590\" data-original=\"https://pic1.zhimg.com/v2-b6c23002bf0b4320bf44f2e02b155080_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1590&#39; height=&#39;520&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1590\" data-rawheight=\"520\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1590\" data-original=\"https://pic1.zhimg.com/v2-b6c23002bf0b4320bf44f2e02b155080_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b6c23002bf0b4320bf44f2e02b155080_b.jpg\"/><figcaption>图5-4</figcaption></figure><p>且向畸变通过公式(5.12)矫正。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-548665610af22e9728e94d802e48e3de_b.png\" data-size=\"normal\" data-rawwidth=\"1526\" data-rawheight=\"166\" class=\"origin_image zh-lightbox-thumb\" width=\"1526\" data-original=\"https://pic3.zhimg.com/v2-548665610af22e9728e94d802e48e3de_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1526&#39; height=&#39;166&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1526\" data-rawheight=\"166\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1526\" data-original=\"https://pic3.zhimg.com/v2-548665610af22e9728e94d802e48e3de_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-548665610af22e9728e94d802e48e3de_b.png\"/><figcaption>公式(5.12)</figcaption></figure><p>对于畸变的矫正可以叠加，可以自己调整。通常在视觉SLAM中，考虑先对整张图片进行去畸变，得到去畸变后的图像，然后讨论图像中的点的位置。</p><h3>1.3 单目相机成像小结</h3><p>从头到尾捋一遍，环境中有一个静止的物体P，在世界坐标系中的坐标是 <img src=\"https://www.zhihu.com/equation?tex=P_w\" alt=\"P_w\" eeimg=\"1\"/> .小机器人在不断的运动，他的运动可以用旋转矩阵R，平移矩阵t，也就是变换矩阵T来描述。</p><p>那么物体P在相机坐标系中的表示： <img src=\"https://www.zhihu.com/equation?tex=%5Ctilde%7BP_c%7D+%3D+RP_w%2Bt\" alt=\"\\tilde{P_c} = RP_w+t\" eeimg=\"1\"/> </p><p>如果用平移矩阵 <img src=\"https://www.zhihu.com/equation?tex=%5Ctilde%7BP_c%7D%27%3DTP_w\" alt=\"\\tilde{P_c}&#39;=TP_w\" eeimg=\"1\"/> ，则需要取 <img src=\"https://www.zhihu.com/equation?tex=%5Ctilde%7BP_c%7D%27\" alt=\"\\tilde{P_c}&#39;\" eeimg=\"1\"/> 的前三维向量，作为 <img src=\"https://www.zhihu.com/equation?tex=%5Ctilde%7BP_c%7D\" alt=\"\\tilde{P_c}\" eeimg=\"1\"/> .</p><p>将将相机坐标系投影到归一化平面上： <img src=\"https://www.zhihu.com/equation?tex=P_c%3D%5B%5Cfrac%7BX%7D%7BZ%7D%2C%5Cfrac%7BY%7D%7BZ%7D%2C1%5D\" alt=\"P_c=[\\frac{X}{Z},\\frac{Y}{Z},1]\" eeimg=\"1\"/> </p><p>计算齐次像素坐标： <img src=\"https://www.zhihu.com/equation?tex=P_%7Buv%7D%3DKP_c\" alt=\"P_{uv}=KP_c\" eeimg=\"1\"/> .</p><h2>2. 双目相机模型</h2><p>普通的双目相机利用视差计算深度，RGB-D相机直接测量深度。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-8ab40600490553b7ff5beb6dd8b4a6d8_b.jpg\" data-size=\"normal\" data-rawwidth=\"1560\" data-rawheight=\"676\" class=\"origin_image zh-lightbox-thumb\" width=\"1560\" data-original=\"https://pic1.zhimg.com/v2-8ab40600490553b7ff5beb6dd8b4a6d8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1560&#39; height=&#39;676&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1560\" data-rawheight=\"676\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1560\" data-original=\"https://pic1.zhimg.com/v2-8ab40600490553b7ff5beb6dd8b4a6d8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-8ab40600490553b7ff5beb6dd8b4a6d8_b.jpg\"/><figcaption>图5-6</figcaption></figure><p>两个相机水平放置，中间的距离称为基线，物体P在两个相机中的位置有差别，利用这个差别计算景深。</p><p>图5-6的几何模型中，分别以两个相机为原点，以右边为x轴正方向建立坐标系，点P在左右两个相机的成像分别为 <img src=\"https://www.zhihu.com/equation?tex=P_L%2CP_R\" alt=\"P_L,P_R\" eeimg=\"1\"/> ，从坐标系的建立中可以知道，两个成像点的横坐标符号不同，其中 <img src=\"https://www.zhihu.com/equation?tex=P_L\" alt=\"P_L\" eeimg=\"1\"/> 的横坐标 <img src=\"https://www.zhihu.com/equation?tex=u_L\" alt=\"u_L\" eeimg=\"1\"/> 为正， <img src=\"https://www.zhihu.com/equation?tex=P_R\" alt=\"P_R\" eeimg=\"1\"/> 的横坐标 <img src=\"https://www.zhihu.com/equation?tex=u_R\" alt=\"u_R\" eeimg=\"1\"/> 为负。</p><p>根据 <img src=\"https://www.zhihu.com/equation?tex=%5CDelta+PP_LP_R+%5Csimeq%5CDelta+PO_LO_R\" alt=\"\\Delta PP_LP_R \\simeq\\Delta PO_LO_R\" eeimg=\"1\"/> ，可以得到 <img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7Bz-f%7D%7Bz%7D%3D%5Cfrac%7Bb-u_L%2Bu_R%7D%7Bb%7D%5CRightarrow+z%3D%5Cfrac%7Bfb%7D%7Bd%7D%2C+d%3Du_L-u_R\" alt=\"\\frac{z-f}{z}=\\frac{b-u_L+u_R}{b}\\Rightarrow z=\\frac{fb}{d}, d=u_L-u_R\" eeimg=\"1\"/> </p><p>其中，d称为视差，视差越大，距离越近；视差越小，距离越大。双目的深度z存在一个理论上的最大值，由fb决定。</p><p>在计算视差时，需要比较左右相机中物品的位置，耗费大量的计算资源，目前仍需要使用GPU或者FPGA来计算。</p><p>RGB-D通过红外结构光或者飞行时间法测量像素距离。红外结构光原理中，相机根据反悔的结构光图案，计算物体自身之间的距离。飞行时间法，向目标发射脉冲光，然后根据发送到返回之间的光束飞行时间，确定物体与自身的距离。</p><p>RGB-D不需要大量计算，但是对于测量环境要求高，使用范围有限。</p><h2>3. 图像</h2><p>一个宽度w，高度h的图像，数学上可以用 <img src=\"https://www.zhihu.com/equation?tex=I_%7Bx%2Aw%7D\" alt=\"I_{x*w}\" eeimg=\"1\"/> 的矩阵表示。</p><p>计算机上，灰度图用0-255表示，宽度为640，高度为480像素的图像，在计算机中表示为：</p><div class=\"highlight\"><pre><code class=\"language-objective-c++\">unsigned char image[480][640];</code></pre></div><p>注意这里的行对应高度，列对应宽度。</p><p>深度图用0-65535  unsigned short 表示</p><p>彩色图用BGR多通道表示。</p><p>参考文献</p><p>《视觉SLAM十四讲从理论到实践》 高翔，张涛</p>", 
            "topic": [
                {
                    "tag": "视觉SLAM十四讲（书籍）", 
                    "tagLink": "https://api.zhihu.com/topics/20127173"
                }, 
                {
                    "tag": "同时定位和地图构建（SLAM）", 
                    "tagLink": "https://api.zhihu.com/topics/20033502"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/59870891", 
            "userName": "笨丫头", 
            "userLink": "https://www.zhihu.com/people/1e56511c5bcb79725fdcd0f516b1a3b9", 
            "upvote": 12, 
            "title": "视觉SLAM十四讲|第4讲 李群与李代数", 
            "content": "<p>一天开两篇，我真是个勤劳的小公举，给自己撒花花🎉</p><p>这一章也是在做知识储备，群是把第三章的矩阵升华了一下，引入李代数是因为群不能求导。第一遍看视频看的半懂不懂，重新过一遍书之后就清晰了。</p><h2>1. 李群</h2><blockquote>群(Group)是一种集合加上一种运算的代数结构。</blockquote><p>翻译：</p><p>“代数结构”：这个词表达了群的抽象，就是摸不着看不见，还有各种形式，就像抽象函数f(x)，可以是二次函数、指数函数，只要符合规定就行。</p><p>“一种集合加上一种运算”：这里面给出了两个限制条件，集合和运算，就是群这个东西必须建立在集合上，元素之间必须可以运算。至于哪个集合哪种运算，don&#39;t care，只要符合规定就行。</p><p>把集合记作A，运算记作 <img src=\"https://www.zhihu.com/equation?tex=%5Ccdot\" alt=\"\\cdot\" eeimg=\"1\"/> ，那么群可以记作G(A, <img src=\"https://www.zhihu.com/equation?tex=%5Ccdot\" alt=\"\\cdot\" eeimg=\"1\"/> )。这里面的点表示任意满足条件的运算。要满足的条件如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-c2ba815bc47174a82a6ba9fac905d07b_b.jpg\" data-size=\"normal\" data-rawwidth=\"1254\" data-rawheight=\"278\" class=\"origin_image zh-lightbox-thumb\" width=\"1254\" data-original=\"https://pic4.zhimg.com/v2-c2ba815bc47174a82a6ba9fac905d07b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1254&#39; height=&#39;278&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1254\" data-rawheight=\"278\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1254\" data-original=\"https://pic4.zhimg.com/v2-c2ba815bc47174a82a6ba9fac905d07b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-c2ba815bc47174a82a6ba9fac905d07b_b.jpg\"/><figcaption>图-群条件</figcaption></figure><p>根据这个条件，可以发现旋转矩阵，变换矩阵都可以称为群。</p><ul><li>旋转矩阵——特殊正交群(SO(3))， <img src=\"https://www.zhihu.com/equation?tex=SO%283%29+%3D+%5Cleft%5C%7B+R+%5Cin+R%5E%7B%5Cleft%5C%7B3%5Ctimes3%5Cright%5C%7D%7D%7CRR%5ET%3DI%2C+det%28R%29%3D1+%5Cright%5C%7D\" alt=\"SO(3) = \\left\\{ R \\in R^{\\left\\{3\\times3\\right\\}}|RR^T=I, det(R)=1 \\right\\}\" eeimg=\"1\"/> </li><li>变换矩阵——特殊欧式群(SE(3))，如公式(4.2)所示。</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-6f72b4ce9653df24554ab3ebbf22f30c_b.png\" data-size=\"normal\" data-rawwidth=\"1262\" data-rawheight=\"160\" class=\"origin_image zh-lightbox-thumb\" width=\"1262\" data-original=\"https://pic1.zhimg.com/v2-6f72b4ce9653df24554ab3ebbf22f30c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1262&#39; height=&#39;160&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1262\" data-rawheight=\"160\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1262\" data-original=\"https://pic1.zhimg.com/v2-6f72b4ce9653df24554ab3ebbf22f30c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-6f72b4ce9653df24554ab3ebbf22f30c_b.png\"/><figcaption>公式(4.2)</figcaption></figure><blockquote>李群是指具有连续（光滑）性质的群。</blockquote><p>SO(3)和SE(3)都是李群，并且在这两个群里面，只定义了乘法，没定义加法，所以不能求导。</p><h2>2. 李代数</h2><blockquote>每个李群都有与之对应的李代数。李代数由一个集合V，一个数域F和一个二元运算[,]组成。</blockquote><p>翻译：</p><p>“每个李群都有与之对应的李代数”：李群和李代数之间有座桥，可以相互转化，但并没说是一对一的关系。</p><p>“二元运算[,]”：也称为李括号，李代数的运算在形式上已经被规定好了，但是具体的李括号怎么算需要按照条件定义。</p><p>李代数要满足的条件：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-56aa00dd152d913f2b681e722d12a83e_b.jpg\" data-size=\"normal\" data-rawwidth=\"1574\" data-rawheight=\"428\" class=\"origin_image zh-lightbox-thumb\" width=\"1574\" data-original=\"https://pic3.zhimg.com/v2-56aa00dd152d913f2b681e722d12a83e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1574&#39; height=&#39;428&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1574\" data-rawheight=\"428\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1574\" data-original=\"https://pic3.zhimg.com/v2-56aa00dd152d913f2b681e722d12a83e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-56aa00dd152d913f2b681e722d12a83e_b.jpg\"/><figcaption>图-李代数条件</figcaption></figure><p>三维向量中的叉积是一种李括号，所以 <img src=\"https://www.zhihu.com/equation?tex=g%3D%28R%5E%7B3%7D%2C+R%2C+%5Ctimes%29\" alt=\"g=(R^{3}, R, \\times)\" eeimg=\"1\"/> 是一种李括号。</p><p>证明：</p><p>封闭性：两个3维向量的叉积还是一个3维向量</p><p>双线性： <img src=\"https://www.zhihu.com/equation?tex=%5BaX%2BbY%2CZ%5D%3D%28aX%2BbY%29%5Ctimes+Z%3DaX%5Ctimes+Z+%2BbY%5Ctimes+Z%3Da%5BX%2CZ%5D%2Bb%5BY%2CZ%5D\" alt=\"[aX+bY,Z]=(aX+bY)\\times Z=aX\\times Z +bY\\times Z=a[X,Z]+b[Y,Z]\" eeimg=\"1\"/> </p><p>自反性： <img src=\"https://www.zhihu.com/equation?tex=%5BX%2CX%5D%3DX%5Ctimes+X%3D0\" alt=\"[X,X]=X\\times X=0\" eeimg=\"1\"/> </p><p>雅可比等价：下面三个式子相加可以得到0</p><p><img src=\"https://www.zhihu.com/equation?tex=%5BX%2C%5BY%2CZ%5D%5D%3DX%5Ctimes+%28Y%5Ctimes+Z%29%3DY%28XZ%29-X%28ZY%29%5C%5C+%5BZ%2C%5BX%2CY%5D%5D%3DZ%5Ctimes%28X%5Ctimes+Y%29%3DX%28ZY%29-Z%28YX%29%5C%5C+%5BY%2C%5BZ%2CX%5D%5D%3DY%5Ctimes%28Z%5Ctimes+X%29%3DZ%28YX%29-Y%28XZ%29\" alt=\"[X,[Y,Z]]=X\\times (Y\\times Z)=Y(XZ)-X(ZY)\\\\ [Z,[X,Y]]=Z\\times(X\\times Y)=X(ZY)-Z(YX)\\\\ [Y,[Z,X]]=Y\\times(Z\\times X)=Z(YX)-Y(XZ)\" eeimg=\"1\"/> </p><h2>2.1 李群SO(3)的李代数so(3)</h2><p>SO(3)对应的李代数是定义在 <img src=\"https://www.zhihu.com/equation?tex=R%5E3\" alt=\"R^3\" eeimg=\"1\"/> 的向量，记做 <img src=\"https://www.zhihu.com/equation?tex=%5Cphi\" alt=\"\\phi\" eeimg=\"1\"/> ，并且 <img src=\"https://www.zhihu.com/equation?tex=%5CPhi%3D%5Cphi%5E%5Cwedge\" alt=\"\\Phi=\\phi^\\wedge\" eeimg=\"1\"/> 。这里定义一个新符号 <img src=\"https://www.zhihu.com/equation?tex=%5Cvee\" alt=\"\\vee\" eeimg=\"1\"/> ，表示把反对称矩阵转化为向量，也就是 <img src=\"https://www.zhihu.com/equation?tex=%5Cphi%3D%5CPhi%5E%5Cvee\" alt=\"\\phi=\\Phi^\\vee\" eeimg=\"1\"/> .</p><p>给出李括号 <img src=\"https://www.zhihu.com/equation?tex=%5B%5Cphi_1%2C%5Cphi_2%5D+%3D+%28%5CPhi_1%5CPhi_2-%5CPhi_2%5CPhi_1%29%5E%5Cvee\" alt=\"[\\phi_1,\\phi_2] = (\\Phi_1\\Phi_2-\\Phi_2\\Phi_1)^\\vee\" eeimg=\"1\"/> .</p><p>然后就可以说 <img src=\"https://www.zhihu.com/equation?tex=so%283%29%3D%5Cleft%5C%7B+%5Cphi+%5Cin+R%5E3%2C+%5CPhi%3D%5Cphi%5E%5Cwedge+%5Cin+R%5E%7B3%5Ctimes+3%7D%5Cright%5C%7D\" alt=\"so(3)=\\left\\{ \\phi \\in R^3, \\Phi=\\phi^\\wedge \\in R^{3\\times 3}\\right\\}\" eeimg=\"1\"/> 是SO(3)对应的李代数。</p><h2>2.2 李群SE(3)的李代数se(3)</h2><p>变换矩阵要表示平移和旋转，在李代数中每个元素用 <img src=\"https://www.zhihu.com/equation?tex=%5Cxi%3D%5Cleft%5B+%5Cbegin%7Bmatrix%7D+%5Crho%5C%5C+%5Cphi+%5Cend%7Bmatrix%7D+%5Cright%5D\" alt=\"\\xi=\\left[ \\begin{matrix} \\rho\\\\ \\phi \\end{matrix} \\right]\" eeimg=\"1\"/> 表示，其中 <img src=\"https://www.zhihu.com/equation?tex=%5Crho\" alt=\"\\rho\" eeimg=\"1\"/> 表示平移， <img src=\"https://www.zhihu.com/equation?tex=%5Cphi\" alt=\"\\phi\" eeimg=\"1\"/> 表示旋转。这里定义 <img src=\"https://www.zhihu.com/equation?tex=%5Cwedge\" alt=\"\\wedge\" eeimg=\"1\"/> 表示把四维矩阵升为六维， <img src=\"https://www.zhihu.com/equation?tex=%5Cvee\" alt=\"\\vee\" eeimg=\"1\"/> 表示把六维降为四维，就有 <img src=\"https://www.zhihu.com/equation?tex=%5Cxi%5E%5Cwedge%3D%5Cleft%5B++%5Cbegin%7Bmatrix%7D++%5Cphi%5E%5Cwedge+%26%5Crho+%5C%5C+0%5ET%260+++%5Cend%7Bmatrix%7D+%5Cright%5D\" alt=\"\\xi^\\wedge=\\left[  \\begin{matrix}  \\phi^\\wedge &amp;\\rho \\\\ 0^T&amp;0   \\end{matrix} \\right]\" eeimg=\"1\"/> 。定义李括号 <img src=\"https://www.zhihu.com/equation?tex=%5B%5Cxi_1%2C%5Cxi_2%5D+%3D+%28%5Cxi_1%5E%5Cwedge+%5Cxi_2%5E%5Cwedge-%5Cxi_2%5E%5Cwedge%5Cxi_1%5E%5Cwedge%29%5E%5Cvee\" alt=\"[\\xi_1,\\xi_2] = (\\xi_1^\\wedge \\xi_2^\\wedge-\\xi_2^\\wedge\\xi_1^\\wedge)^\\vee\" eeimg=\"1\"/> ，然后就可以说se(3)是SE(3)对应的李代数。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-dadff542f4a9f11d82fc70e19b8717ea_b.png\" data-size=\"normal\" data-rawwidth=\"1390\" data-rawheight=\"194\" class=\"origin_image zh-lightbox-thumb\" width=\"1390\" data-original=\"https://pic3.zhimg.com/v2-dadff542f4a9f11d82fc70e19b8717ea_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1390&#39; height=&#39;194&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1390\" data-rawheight=\"194\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1390\" data-original=\"https://pic3.zhimg.com/v2-dadff542f4a9f11d82fc70e19b8717ea_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-dadff542f4a9f11d82fc70e19b8717ea_b.png\"/><figcaption>图-se(3)</figcaption></figure><h2>3. 李群和李代数的关系</h2><h2>3.1 指数关系</h2><p>李群R和对应的李代数 <img src=\"https://www.zhihu.com/equation?tex=%5Cphi\" alt=\"\\phi\" eeimg=\"1\"/> 存在指数关系： <img src=\"https://www.zhihu.com/equation?tex=R%3D%5Cexp%28%5Cphi%29\" alt=\"R=\\exp(\\phi)\" eeimg=\"1\"/> </p><p>不严肃的推导：</p><p>对于旋转矩阵R，有 <img src=\"https://www.zhihu.com/equation?tex=RR%5ET%3DI\" alt=\"RR^T=I\" eeimg=\"1\"/> 。相机随时间的旋转，可以看成旋转矩阵关于时间的函数 <img src=\"https://www.zhihu.com/equation?tex=R%28t%29\" alt=\"R(t)\" eeimg=\"1\"/> ，仍然有 <img src=\"https://www.zhihu.com/equation?tex=R%28t%29R%28t%29%5ET%3DI\" alt=\"R(t)R(t)^T=I\" eeimg=\"1\"/> ，两边对时间求导，可得 <img src=\"https://www.zhihu.com/equation?tex=R%28t%29%27R%28t%29%5ET%2BR%28t%29%7BR%28t%29%5ET%7D%27+%3D+0\" alt=\"R(t)&#39;R(t)^T+R(t){R(t)^T}&#39; = 0\" eeimg=\"1\"/> 。移项整理，可得 <img src=\"https://www.zhihu.com/equation?tex=R%28t%29%27R%28t%29%5ET+%3D+-%28R%28t%29%27R%28t%29%5ET%29%5ET\" alt=\"R(t)&#39;R(t)^T = -(R(t)&#39;R(t)^T)^T\" eeimg=\"1\"/> ，如果令 <img src=\"https://www.zhihu.com/equation?tex=A%3DR%28t%29%27R%28t%29%5ET+\" alt=\"A=R(t)&#39;R(t)^T \" eeimg=\"1\"/>，则可以明显看出 <img src=\"https://www.zhihu.com/equation?tex=A%3D-A%5ET\" alt=\"A=-A^T\" eeimg=\"1\"/> ，矩阵 <img src=\"https://www.zhihu.com/equation?tex=A%3DR%28t%29%27R%28t%29%5ET+\" alt=\"A=R(t)&#39;R(t)^T \" eeimg=\"1\"/> 是反对称矩阵。所以一定存在 <img src=\"https://www.zhihu.com/equation?tex=%5Cphi+%5E%5Cwedge%3DR%28t%29%27R%28t%29%5ET+\" alt=\"\\phi ^\\wedge=R(t)&#39;R(t)^T \" eeimg=\"1\"/> .</p><p>对于 <img src=\"https://www.zhihu.com/equation?tex=R%28t%29%27R%28t%29%5ET+%3D%5Cphi+%5E%5Cwedge\" alt=\"R(t)&#39;R(t)^T =\\phi ^\\wedge\" eeimg=\"1\"/> ，两边右乘 <img src=\"https://www.zhihu.com/equation?tex=R%28t%29\" alt=\"R(t)\" eeimg=\"1\"/> ，可得 <img src=\"https://www.zhihu.com/equation?tex=R%28t%29%27%3D%5Cphi%5E%5Cwedge+R%28t%29\" alt=\"R(t)&#39;=\\phi^\\wedge R(t)\" eeimg=\"1\"/> 。假设 <img src=\"https://www.zhihu.com/equation?tex=t_0%3D0%2CR%280%29%3DI\" alt=\"t_0=0,R(0)=I\" eeimg=\"1\"/> ，对 <img src=\"https://www.zhihu.com/equation?tex=R%28t%29\" alt=\"R(t)\" eeimg=\"1\"/> 在0处一阶泰勒展开，有</p><p><img src=\"https://www.zhihu.com/equation?tex=R%28t%29%5Capprox+R%28t_0%29%2BR%28t_0%29%27%28t-t_0%29%3DR%28t_0%29%2B%5Cphi+%28t%29%5E%5Cwedge+R%28t%29%28t-t_0%29%3DI%2B%5Cphi+%28t_0%29%5E%5Cwedge+%28t%29\" alt=\"R(t)\\approx R(t_0)+R(t_0)&#39;(t-t_0)=R(t_0)+\\phi (t)^\\wedge R(t)(t-t_0)=I+\\phi (t_0)^\\wedge (t)\" eeimg=\"1\"/> </p><p>假设在 <img src=\"https://www.zhihu.com/equation?tex=t_0\" alt=\"t_0\" eeimg=\"1\"/> 附近，有 <img src=\"https://www.zhihu.com/equation?tex=%5Cphi%28t_0%29%3D%5Cphi_0\" alt=\"\\phi(t_0)=\\phi_0\" eeimg=\"1\"/> ，可得 <img src=\"https://www.zhihu.com/equation?tex=R%28t%29%27%3D%5Cphi%28t_0%29%5E%5Cwedge+R%28t%29+%3D+%5Cphi_0%5E%5Cwedge+R%28t%29%2C+R%280%29%3DI\" alt=\"R(t)&#39;=\\phi(t_0)^\\wedge R(t) = \\phi_0^\\wedge R(t), R(0)=I\" eeimg=\"1\"/> ，解这个常微分方程可得 <img src=\"https://www.zhihu.com/equation?tex=R%28t%29%3D%5Cexp%28%5Cphi_0t%29\" alt=\"R(t)=\\exp(\\phi_0t)\" eeimg=\"1\"/> .</p><p>这里只是简单说明了李群和李代数之间存在指数关系，但没有指出具体的计算方法。</p><h2>3.2 SO(3)上的指数映射</h2><blockquote>任意矩阵的指数映射可以写成一个泰勒展开，但是只有在收敛的情况下才会有结果，其结果仍是一个矩阵。</blockquote><p>SO(3)和so(3)的指数映射为 <img src=\"https://www.zhihu.com/equation?tex=%5Cexp%28%5Cphi%5E%5Cwedge%29%3D%5Csum_%7Bn%3D0%7D%5E%7B%5Cinfty%7D%7B%5Cfrac%7B1%7D%7Bn%21%7D%28%5Cphi%5E%5Cwedge%29%5En%7D\" alt=\"\\exp(\\phi^\\wedge)=\\sum_{n=0}^{\\infty}{\\frac{1}{n!}(\\phi^\\wedge)^n}\" eeimg=\"1\"/> ，泰勒展开如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-fdfb9ad946abd6589232f1aff91e8504_b.jpg\" data-size=\"normal\" data-rawwidth=\"1584\" data-rawheight=\"514\" class=\"origin_image zh-lightbox-thumb\" width=\"1584\" data-original=\"https://pic1.zhimg.com/v2-fdfb9ad946abd6589232f1aff91e8504_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1584&#39; height=&#39;514&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1584\" data-rawheight=\"514\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1584\" data-original=\"https://pic1.zhimg.com/v2-fdfb9ad946abd6589232f1aff91e8504_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-fdfb9ad946abd6589232f1aff91e8504_b.jpg\"/><figcaption>图-泰勒展开</figcaption></figure><p>其中，用模长 <img src=\"https://www.zhihu.com/equation?tex=%5Ctheta\" alt=\"\\theta\" eeimg=\"1\"/> 和单位方向向量a表示 <img src=\"https://www.zhihu.com/equation?tex=%5Cphi\" alt=\"\\phi\" eeimg=\"1\"/> ，有<img src=\"https://www.zhihu.com/equation?tex=%5Cphi%3D%5Ctheta+a\" alt=\"\\phi=\\theta a\" eeimg=\"1\"/> ，且 <img src=\"https://www.zhihu.com/equation?tex=a%5E%5Cwedge+a%5E%5Cwedge+%3D+aa%5ET-I%2C+a%5E%5Cwedge+a%5E%5Cwedge+a%5E%5Cwedge+%3D+-a%5E%5Cwedge\" alt=\"a^\\wedge a^\\wedge = aa^T-I, a^\\wedge a^\\wedge a^\\wedge = -a^\\wedge\" eeimg=\"1\"/> </p><p>最终的展开式与旋转向量和旋转矩阵之间的罗德里格斯公式相同，也就是说通过展开后的公式可以把so(3)中的向量对应到SO(3)中的矩阵上。</p><p>通过展开后的公式可以看出，角度 <img src=\"https://www.zhihu.com/equation?tex=%5Cpm+360%5Eo\" alt=\"\\pm 360^o\" eeimg=\"1\"/> 得到的矩阵相同，所以不同的so(3)可能对应同一个SO(3)。</p><p>类似地，可以得到SE(3)和se(3)之间的映射关系。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-15ab48d634870c24f02caa82d603fde9_b.jpg\" data-size=\"normal\" data-rawwidth=\"1582\" data-rawheight=\"842\" class=\"origin_image zh-lightbox-thumb\" width=\"1582\" data-original=\"https://pic2.zhimg.com/v2-15ab48d634870c24f02caa82d603fde9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1582&#39; height=&#39;842&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1582\" data-rawheight=\"842\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1582\" data-original=\"https://pic2.zhimg.com/v2-15ab48d634870c24f02caa82d603fde9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-15ab48d634870c24f02caa82d603fde9_b.jpg\"/><figcaption>图4-1</figcaption></figure><h2>4. 李群和李代数的求导</h2><p>引入李代数是为了求导，那么如何借用李代数进行求导？直观上有两种想法：1）利用李代数上的加法定义李群上的导数，2）借助指数和对数映射完成。两种想法给出了两种模型，一种是求导模型，一种是扰动模型。</p><p>首先要讨论李群乘法和李代数加法之间的关系，BCH公式证明，二者不能直接转换，两个矩阵的指数之积会产生一系列由李括号组成的余向。当矩阵为一个小量，并且不考虑二次以上的余项时，可以近似的认为</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-1f26d8985ee3ce5722fc37a33f6a4ce4_b.png\" data-size=\"normal\" data-rawwidth=\"1434\" data-rawheight=\"174\" class=\"origin_image zh-lightbox-thumb\" width=\"1434\" data-original=\"https://pic1.zhimg.com/v2-1f26d8985ee3ce5722fc37a33f6a4ce4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1434&#39; height=&#39;174&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1434\" data-rawheight=\"174\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1434\" data-original=\"https://pic1.zhimg.com/v2-1f26d8985ee3ce5722fc37a33f6a4ce4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-1f26d8985ee3ce5722fc37a33f6a4ce4_b.png\"/><figcaption>公式(4.29)</figcaption></figure><p>其中，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-d9ccb1f8d1c316771ab782fce78fa144_b.jpg\" data-size=\"normal\" data-rawwidth=\"1556\" data-rawheight=\"446\" class=\"origin_image zh-lightbox-thumb\" width=\"1556\" data-original=\"https://pic1.zhimg.com/v2-d9ccb1f8d1c316771ab782fce78fa144_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1556&#39; height=&#39;446&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1556\" data-rawheight=\"446\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1556\" data-original=\"https://pic1.zhimg.com/v2-d9ccb1f8d1c316771ab782fce78fa144_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-d9ccb1f8d1c316771ab782fce78fa144_b.jpg\"/><figcaption>图-雅可比J</figcaption></figure><p>在求导的时候，对于旋转矩阵的李代数 <img src=\"https://www.zhihu.com/equation?tex=%5Cphi\" alt=\"\\phi\" eeimg=\"1\"/> 通常将小量（变化量）定义为 <img src=\"https://www.zhihu.com/equation?tex=%5CDelta%5Cphi\" alt=\"\\Delta\\phi\" eeimg=\"1\"/> ，对应的旋转矩阵李群 <img src=\"https://www.zhihu.com/equation?tex=R\" alt=\"R\" eeimg=\"1\"/> 的小量为 <img src=\"https://www.zhihu.com/equation?tex=%5CDelta+R\" alt=\"\\Delta R\" eeimg=\"1\"/> ，有</p><p><img src=\"https://www.zhihu.com/equation?tex=%5CDelta+R+%5Ccdot+R%3D%5Cexp%28%5CDelta%5Cphi%5E%5Cwedge%29%5Cexp%28%5Cphi%5E%5Cwedge%29+%3D%5Cexp%28%28%5Cphi%2BJ_l%5E%7B-1%7D%28%5Cphi%29%5CDelta%5Cphi%29%5E%5Cwedge%29%5C%5C+%5Cexp%28%28%5Cphi%2B%5CDelta+%5Cphi%29%5E%5Cwedge%29%3D%5Cexp%28%28J_l%5CDelta%5Cphi%29%5E%5Cwedge%29%5Cexp%28%5Cphi%5E%5Cwedge%29+%3D%5Cexp%28%5Cphi%5E%5Cwedge%29%5Cexp%28%28J_r%5CDelta+%5Cphi%29%5E%5Cwedge%29\" alt=\"\\Delta R \\cdot R=\\exp(\\Delta\\phi^\\wedge)\\exp(\\phi^\\wedge) =\\exp((\\phi+J_l^{-1}(\\phi)\\Delta\\phi)^\\wedge)\\\\ \\exp((\\phi+\\Delta \\phi)^\\wedge)=\\exp((J_l\\Delta\\phi)^\\wedge)\\exp(\\phi^\\wedge) =\\exp(\\phi^\\wedge)\\exp((J_r\\Delta \\phi)^\\wedge)\" eeimg=\"1\"/> </p><p>对于SE(3)有，</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-747b4293031d3db9c9315b5ecbef4e21_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1568\" data-rawheight=\"164\" class=\"origin_image zh-lightbox-thumb\" width=\"1568\" data-original=\"https://pic2.zhimg.com/v2-747b4293031d3db9c9315b5ecbef4e21_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1568&#39; height=&#39;164&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1568\" data-rawheight=\"164\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1568\" data-original=\"https://pic2.zhimg.com/v2-747b4293031d3db9c9315b5ecbef4e21_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-747b4293031d3db9c9315b5ecbef4e21_b.png\"/></figure><h2>4.1 求导模型</h2><p>求导模型做的事情是：将旋转矩阵对应的李代数加一个小量，求相对于小量的变化率。</p><p>对于SO(3)，要计算的是旋转之后的坐标相对于旋转的导数，记做 <img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Cpartial%28Rp%29%7D%7B%5Cpartial%28R%29%7D\" alt=\"\\frac{\\partial(Rp)}{\\partial(R)}\" eeimg=\"1\"/> ,李群无法求导，转而对李代数so(3)求导，计算 <img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Cpartial%28%5Cexp%28%5Cphi%5E%5Cwedge+%29p%29%7D%7B%5Cpartial%28%5Cphi%29%7D\" alt=\"\\frac{\\partial(\\exp(\\phi^\\wedge )p)}{\\partial(\\phi)}\" eeimg=\"1\"/> 。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-5459f54beb04a5f8347711f783db068b_b.jpg\" data-size=\"normal\" data-rawwidth=\"1552\" data-rawheight=\"498\" class=\"origin_image zh-lightbox-thumb\" width=\"1552\" data-original=\"https://pic4.zhimg.com/v2-5459f54beb04a5f8347711f783db068b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1552&#39; height=&#39;498&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1552\" data-rawheight=\"498\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1552\" data-original=\"https://pic4.zhimg.com/v2-5459f54beb04a5f8347711f783db068b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-5459f54beb04a5f8347711f783db068b_b.jpg\"/><figcaption>图-so(3)导数计算</figcaption></figure><h2>4.2 扰动模型</h2><p>扰动模型做的事情是：左乘或者右乘一个小量，求相对于小量的李代数的变化率。</p><p>左乘扰动的推导如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-bba2742c4c3e8c80b70d37b74145ba59_b.jpg\" data-size=\"normal\" data-rawwidth=\"1338\" data-rawheight=\"324\" class=\"origin_image zh-lightbox-thumb\" width=\"1338\" data-original=\"https://pic2.zhimg.com/v2-bba2742c4c3e8c80b70d37b74145ba59_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1338&#39; height=&#39;324&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1338\" data-rawheight=\"324\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1338\" data-original=\"https://pic2.zhimg.com/v2-bba2742c4c3e8c80b70d37b74145ba59_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-bba2742c4c3e8c80b70d37b74145ba59_b.jpg\"/><figcaption>图-so(3)左乘扰动</figcaption></figure><p>对于SE(3)，根据扰动模型求导的推导如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-73638e331b708cfe81b6bd180a9dbad9_b.jpg\" data-size=\"normal\" data-rawwidth=\"1510\" data-rawheight=\"684\" class=\"origin_image zh-lightbox-thumb\" width=\"1510\" data-original=\"https://pic2.zhimg.com/v2-73638e331b708cfe81b6bd180a9dbad9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1510&#39; height=&#39;684&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1510\" data-rawheight=\"684\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1510\" data-original=\"https://pic2.zhimg.com/v2-73638e331b708cfe81b6bd180a9dbad9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-73638e331b708cfe81b6bd180a9dbad9_b.jpg\"/><figcaption>图-se(3)扰动模型</figcaption></figure><p>以上，现在就可以对旋转矩阵进行求导了。</p><p>参考文献</p><p>《视觉SLAM十四讲从理论到实践》 高翔，张涛</p><p></p>", 
            "topic": [
                {
                    "tag": "视觉SLAM十四讲（书籍）", 
                    "tagLink": "https://api.zhihu.com/topics/20127173"
                }, 
                {
                    "tag": "同时定位和地图构建（SLAM）", 
                    "tagLink": "https://api.zhihu.com/topics/20033502"
                }
            ], 
            "comments": [
                {
                    "userName": "南来北往的人", 
                    "userLink": "https://www.zhihu.com/people/edab0739019bdd96127e70b5712c8d88", 
                    "content": "您好，视频哪里有？可否发个链接，谢谢", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "一无所有的帅气", 
                            "userLink": "https://www.zhihu.com/people/8b36704eb404e00dfe2ebc7cc6326efb", 
                            "content": "<p>B站</p>", 
                            "likes": 1, 
                            "replyToAuthor": "南来北往的人"
                        }
                    ]
                }, 
                {
                    "userName": "黑巧克力", 
                    "userLink": "https://www.zhihu.com/people/21b2a4854b9f3e964b3c25df9731934e", 
                    "content": "<p>妙啊</p>", 
                    "likes": 0, 
                    "childComments": []
                }
            ]
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/59758563", 
            "userName": "笨丫头", 
            "userLink": "https://www.zhihu.com/people/1e56511c5bcb79725fdcd0f516b1a3b9", 
            "upvote": 6, 
            "title": "视觉SLAM十四讲|第3讲 三维空间刚体运动", 
            "content": "<p>本章主要介绍四种常用的刚体运动描述方式，为后面做知识储备。</p><h2>1. 基础概念</h2><ul><li>刚体：</li></ul><blockquote>刚体是指在运动中和受力作用后，形状和大小不变，而且内部各点的相对位置不变的物体。</blockquote><p>刚体就是说我们的机器人走一走跑一跑跳一跳之后，它的高矮胖瘦不会变。在这个假设的基础上去描述机器人的运动，就是在描述刚体运动。</p><ul><li>位姿：位置和姿态，位置指的是处于空间哪里，姿态指的是相机的朝向。通过位姿来描述此时机器人在哪里，面向哪里。</li><li>向量：空间中的一个有长度有夹角的线，向量是一个东西。</li><li>坐标：坐标是数字（和向量不一样）。坐标一定要放在指定的坐标系下，才成立。</li><li>坐标和向量的关系：在某坐标系下，可以用坐标描述一个向量。</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-282ea5c49d1cf554f67b77cdd0068e78_b.jpg\" data-size=\"normal\" data-rawwidth=\"1004\" data-rawheight=\"232\" class=\"origin_image zh-lightbox-thumb\" width=\"1004\" data-original=\"https://pic1.zhimg.com/v2-282ea5c49d1cf554f67b77cdd0068e78_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1004&#39; height=&#39;232&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1004\" data-rawheight=\"232\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1004\" data-original=\"https://pic1.zhimg.com/v2-282ea5c49d1cf554f67b77cdd0068e78_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-282ea5c49d1cf554f67b77cdd0068e78_b.jpg\"/><figcaption>公式(3.4)</figcaption></figure><p>如公式(3.4)所示， 等号左右两边分别表示同一个向量在不同坐标系下的坐标。</p><ul><li>点积： <img src=\"https://www.zhihu.com/equation?tex=a%5Ccdot+b+%3D+a%5ET+b+%3D+%7Ca%7C%7Cb%7Ccos%3Ca%2Cb%3E\" alt=\"a\\cdot b = a^T b = |a||b|cos&lt;a,b&gt;\" eeimg=\"1\"/> </li><li>外积： <img src=\"https://www.zhihu.com/equation?tex=c%3Da%5Ctimes+b\" alt=\"c=a\\times b\" eeimg=\"1\"/> 可以表示向量a以c为旋转轴，旋转到向量b，所以向量c垂直于向量a和b所在平面</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-3c7dd823f1e1e516b28fbcc915a7b6bc_b.jpg\" data-size=\"normal\" data-rawwidth=\"1220\" data-rawheight=\"218\" class=\"origin_image zh-lightbox-thumb\" width=\"1220\" data-original=\"https://pic1.zhimg.com/v2-3c7dd823f1e1e516b28fbcc915a7b6bc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1220&#39; height=&#39;218&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1220\" data-rawheight=\"218\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1220\" data-original=\"https://pic1.zhimg.com/v2-3c7dd823f1e1e516b28fbcc915a7b6bc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-3c7dd823f1e1e516b28fbcc915a7b6bc_b.jpg\"/><figcaption>公式(3.3)</figcaption></figure><ul><li>反对称符号： <img src=\"https://www.zhihu.com/equation?tex=a%5E%5Cwedge\" alt=\"a^\\wedge\" eeimg=\"1\"/> 计作向量a的反对称矩阵，如公式(3.3)恒等号左边的矩阵所示，只是一个记号，方便后面使用。</li><li>反对称矩阵性质：若 <img src=\"https://www.zhihu.com/equation?tex=A%3Da%5E%5Cwedge\" alt=\"A=a^\\wedge\" eeimg=\"1\"/> 则有 <img src=\"https://www.zhihu.com/equation?tex=A%5ET+%3D+-A%EF%BC%8CAa%3D0\" alt=\"A^T = -A，Aa=0\" eeimg=\"1\"/> </li><li>世界坐标系：把机器人所处的大环境假定成一个惯性坐标系，也称为世界坐标系，是固定不动的。</li><li>移动坐标系：机器人以自己为原点建立一个坐标系，也称为机器人坐标系，这个坐标系是随着机器人的运动而移动的。机器人看到一个物体后，想要判断物体在世界坐标系的位置，就要先获取自己眼中物体的坐标，然后根据机器人的位姿，把物体的坐标转换到世界坐标系中。</li><li>欧式变换：同一个向量，从坐标系A到坐标系B中，长度，夹角都不变，这个坐标系从A到B的过程交欧式变换。欧式变换由一个旋转和一个平移组成，也就是说一个向量通过旋转+平移，就可以完成一次从坐标系A到B到欧式变换。刚体运动都可以用欧式变换描述。</li></ul><h2>2. 旋转矩阵</h2><blockquote>旋转矩阵刻画了旋转前后同一个向量的坐标变换关系。</blockquote><p>解读：</p><p>“同一个向量”：向量本身没变，变的是坐标系，通过旋转从坐标系A到了坐标系B。描述的都是一个向量，但坐标系变了，原点变了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-d491f09f7685fb91957a364e03166ce0_b.jpg\" data-size=\"normal\" data-rawwidth=\"1016\" data-rawheight=\"200\" class=\"origin_image zh-lightbox-thumb\" width=\"1016\" data-original=\"https://pic1.zhimg.com/v2-d491f09f7685fb91957a364e03166ce0_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1016&#39; height=&#39;200&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1016\" data-rawheight=\"200\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1016\" data-original=\"https://pic1.zhimg.com/v2-d491f09f7685fb91957a364e03166ce0_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-d491f09f7685fb91957a364e03166ce0_b.jpg\"/><figcaption>公式(3.5)</figcaption></figure><p>把公式(3.4)等号左右两端左乘 <img src=\"https://www.zhihu.com/equation?tex=%5Be_1%5ET%2Ce_2%5ET%2C+e_3%5ET%5D%5ET\" alt=\"[e_1^T,e_2^T, e_3^T]^T\" eeimg=\"1\"/> 可以得到公式(3.5)，定义中间两组基之间的内积矩阵为旋转矩阵R。可以得到 <img src=\"https://www.zhihu.com/equation?tex=a%3DRa%27\" alt=\"a=Ra&#39;\" eeimg=\"1\"/> ，也就是向量在坐标系A中的表达 <img src=\"https://www.zhihu.com/equation?tex=a%27\" alt=\"a&#39;\" eeimg=\"1\"/> ，经过旋转矩阵R，旋转到坐标系B之后的表达是a。</p><p>旋转矩阵的特征：行列式为1且正交， <img src=\"https://www.zhihu.com/equation?tex=R%5ET%3DR%5E%7B-1%7D\" alt=\"R^T=R^{-1}\" eeimg=\"1\"/> ；</p><p>反过来，行列式为1的正交矩阵-&gt;旋转矩阵，成立。</p><p>假设从坐标系A旋转到坐标系B的旋转矩阵为R，则反过来，从坐标系B旋转到坐标系A的旋转矩阵为 <img src=\"https://www.zhihu.com/equation?tex=R%5E%7B-1%7D%3DR%5ET\" alt=\"R^{-1}=R^T\" eeimg=\"1\"/> .</p><p>在三维空间中，用3个自由度表示坐标，旋转矩阵花费了9个量表示3个自由度的旋转。</p><h2>3. 变换矩阵</h2><p>欧式变换=1个旋转+1个平移，旋转矩阵用R表示，平移向量用t表示，则可以用公式(3.8)表示欧式变换。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-8d0a153ba6f86472a14212ea08e960c7_b.png\" data-size=\"normal\" data-rawwidth=\"768\" data-rawheight=\"78\" class=\"origin_image zh-lightbox-thumb\" width=\"768\" data-original=\"https://pic4.zhimg.com/v2-8d0a153ba6f86472a14212ea08e960c7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;768&#39; height=&#39;78&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"768\" data-rawheight=\"78\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"768\" data-original=\"https://pic4.zhimg.com/v2-8d0a153ba6f86472a14212ea08e960c7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-8d0a153ba6f86472a14212ea08e960c7_b.png\"/><figcaption>公式(3.8)</figcaption></figure><p>在应用时，通常R是三维矩阵，t是三维向量，多次欧式变换需要不停的带入公式。为了方便使用矩阵计算， 引入齐次坐标，在三维向量末尾加1变成四维，如公式(3.9)所示。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b01057a1b88066a14f57c83ef7de33d8_b.png\" data-size=\"normal\" data-rawwidth=\"1240\" data-rawheight=\"156\" class=\"origin_image zh-lightbox-thumb\" width=\"1240\" data-original=\"https://pic1.zhimg.com/v2-b01057a1b88066a14f57c83ef7de33d8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1240&#39; height=&#39;156&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1240\" data-rawheight=\"156\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1240\" data-original=\"https://pic1.zhimg.com/v2-b01057a1b88066a14f57c83ef7de33d8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b01057a1b88066a14f57c83ef7de33d8_b.png\"/><figcaption>公式(3.9)</figcaption></figure><p>公式(3.9)中的矩阵T既包含旋转矩阵，又包含平移向量，称为变换矩阵。</p><p>这里涉及到齐次坐标和非齐次坐标之间的转换。非齐转齐在末尾加个1，齐次坐标转非齐次，要进行归一化，如公式(3.10)所示，转化成第四维是1的向量。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-f76c0587aa3fbfce3b20bd3717e8e2ba_b.png\" data-size=\"normal\" data-rawwidth=\"1284\" data-rawheight=\"102\" class=\"origin_image zh-lightbox-thumb\" width=\"1284\" data-original=\"https://pic3.zhimg.com/v2-f76c0587aa3fbfce3b20bd3717e8e2ba_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1284&#39; height=&#39;102&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1284\" data-rawheight=\"102\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1284\" data-original=\"https://pic3.zhimg.com/v2-f76c0587aa3fbfce3b20bd3717e8e2ba_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-f76c0587aa3fbfce3b20bd3717e8e2ba_b.png\"/><figcaption>公式(3.10)</figcaption></figure><p>假设从坐标系A经过欧式变换到坐标系B的变换矩阵为T，那么反过来，从坐标系B到坐标系A的变换矩阵为 <img src=\"https://www.zhihu.com/equation?tex=T%5E%7B-1%7D\" alt=\"T^{-1}\" eeimg=\"1\"/> .</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a18e3b2eb51ca94f0ee52aea77fe955e_b.png\" data-size=\"normal\" data-rawwidth=\"1176\" data-rawheight=\"180\" class=\"origin_image zh-lightbox-thumb\" width=\"1176\" data-original=\"https://pic3.zhimg.com/v2-a18e3b2eb51ca94f0ee52aea77fe955e_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1176&#39; height=&#39;180&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1176\" data-rawheight=\"180\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1176\" data-original=\"https://pic3.zhimg.com/v2-a18e3b2eb51ca94f0ee52aea77fe955e_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-a18e3b2eb51ca94f0ee52aea77fe955e_b.png\"/><figcaption>公式(3.13)</figcaption></figure><p>在三维空间中，欧式变换有6个自由度（3旋转+3平移），变换矩阵用4*4=16个量描述了6个自由度的变换。</p><h2>4.旋转向量</h2><blockquote>任意旋转都可以用一个旋转轴和一个旋转角来刻画</blockquote><p>如图3-1所示，向量a旋转到向量b，除了旋转矩阵外，也可以说是向量a以w为轴，旋转了某个角度，得到向量b。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-bd2f8c9daabdcfbc9f4b17d102f7c24d_b.jpg\" data-size=\"normal\" data-rawwidth=\"356\" data-rawheight=\"280\" class=\"content_image\" width=\"356\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;356&#39; height=&#39;280&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"356\" data-rawheight=\"280\" class=\"content_image lazy\" width=\"356\" data-actualsrc=\"https://pic2.zhimg.com/v2-bd2f8c9daabdcfbc9f4b17d102f7c24d_b.jpg\"/><figcaption>图3-1</figcaption></figure><p>从而定义旋转向量（或轴角，Axis-Angle）</p><blockquote>方向与旋转轴一致，长度等于旋转角。</blockquote><p>解读：对于一个旋转轴为n，旋转角为 <img src=\"https://www.zhihu.com/equation?tex=%5Ctheta\" alt=\"\\theta\" eeimg=\"1\"/> 的旋转，对应的旋转向量为 <img src=\"https://www.zhihu.com/equation?tex=%5Ctheta+n\" alt=\"\\theta n\" eeimg=\"1\"/> ，并且向量n的模为1， <img src=\"https://www.zhihu.com/equation?tex=%7C%7Cn%7C%7C%3D1\" alt=\"||n||=1\" eeimg=\"1\"/> .</p><p>对于旋转轴n，绕着自己旋转，不会发生改变，所以有 <img src=\"https://www.zhihu.com/equation?tex=Rn%3Dn\" alt=\"Rn=n\" eeimg=\"1\"/> .</p><ul><li>旋转向量的bug</li></ul><blockquote>欧拉角：把一个旋转分解成3次绕不同轴的旋转，用3个分离的旋转角描述一个旋转。</blockquote><p>解读：比如向量a绕w轴旋转了 <img src=\"https://www.zhihu.com/equation?tex=%5Ctheta\" alt=\"\\theta\" eeimg=\"1\"/> 度，按照欧拉角的描述，就是向量a，先绕X轴旋转了 <img src=\"https://www.zhihu.com/equation?tex=%5Ctheta_x\" alt=\"\\theta_x\" eeimg=\"1\"/> 度，然后绕Y轴旋转了 <img src=\"https://www.zhihu.com/equation?tex=%5Ctheta_y\" alt=\"\\theta_y\" eeimg=\"1\"/> 度，再绕Z轴旋转了 <img src=\"https://www.zhihu.com/equation?tex=%5Ctheta_z\" alt=\"\\theta_z\" eeimg=\"1\"/> 度，欧拉角中用 <img src=\"https://www.zhihu.com/equation?tex=%5B%5Ctheta_x%2C%5Ctheta_y%2C%5Ctheta_z%5D\" alt=\"[\\theta_x,\\theta_y,\\theta_z]\" eeimg=\"1\"/> 表示这次旋转。</p><p>比较常用的欧拉角是“偏航-俯仰-滚转”角(yaw-pitch-roll)，</p><p>绕物体的Z轴旋转得到偏航角(yaw)，再绕旋转之后的Y轴旋转得到俯仰角(pitch)，最后绕旋转之后的X轴得到滚转角(roll)。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-0e0c9520fec676e88d8a4c3b39e1d2d8_b.jpg\" data-size=\"normal\" data-rawwidth=\"1264\" data-rawheight=\"738\" class=\"origin_image zh-lightbox-thumb\" width=\"1264\" data-original=\"https://pic1.zhimg.com/v2-0e0c9520fec676e88d8a4c3b39e1d2d8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1264&#39; height=&#39;738&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1264\" data-rawheight=\"738\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1264\" data-original=\"https://pic1.zhimg.com/v2-0e0c9520fec676e88d8a4c3b39e1d2d8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-0e0c9520fec676e88d8a4c3b39e1d2d8_b.jpg\"/><figcaption>图3.3</figcaption></figure><p>如图3.3所示，这个地方我一直绕不明白，反正转就是了。</p><p>万向锁问题：俯仰角如果是 <img src=\"https://www.zhihu.com/equation?tex=%5Cpm90%5Eo+\" alt=\"\\pm90^o \" eeimg=\"1\"/> ，第三次旋转会与第一次旋转使用同一个轴，并且避免不了。会导致丢失一个自由度。</p><p>欧拉角、旋转向量都是想用三个量表示旋转的三个自由度，但存在万向锁问题。</p><h2>5. 四元数</h2><p>四元数(Quaternion)定义为一个实部和三个虚部，并且给出相应的加减乘除计算定义。</p><p><img src=\"https://www.zhihu.com/equation?tex=q%3Dq_0+%2Bq_1i%2Bq_2j%2Bq_3k\" alt=\"q=q_0 +q_1i+q_2j+q_3k\" eeimg=\"1\"/> ,其中ijk表示虚部，并且满足公式(3.18).</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-57ef59ebe6e2cd708a451610aa2c0ecc_b.jpg\" data-size=\"normal\" data-rawwidth=\"1232\" data-rawheight=\"266\" class=\"origin_image zh-lightbox-thumb\" width=\"1232\" data-original=\"https://pic1.zhimg.com/v2-57ef59ebe6e2cd708a451610aa2c0ecc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1232&#39; height=&#39;266&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1232\" data-rawheight=\"266\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1232\" data-original=\"https://pic1.zhimg.com/v2-57ef59ebe6e2cd708a451610aa2c0ecc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-57ef59ebe6e2cd708a451610aa2c0ecc_b.jpg\"/><figcaption>公式(3.18)</figcaption></figure><p>公式(3.18)里面的正负号，可以通过右手定则来判断，把ijk当成三个坐标轴，然后用右手定则判断方向。比如 <img src=\"https://www.zhihu.com/equation?tex=ij%3Dk\" alt=\"ij=k\" eeimg=\"1\"/> ，比划一下就知道，i旋转到j是以k的正方向为轴，所以是k。</p><p>把虚部写成向量，四元数也可以写成 <img src=\"https://www.zhihu.com/equation?tex=q%3D%5Bs%2C+v%5D%2C+v%3D%5Bq_1%2Cq_2%2Cq_3%5D\" alt=\"q=[s, v], v=[q_1,q_2,q_3]\" eeimg=\"1\"/> .</p><ul><li>四元数的加减法： <img src=\"https://www.zhihu.com/equation?tex=q_a%5Cpm+q_b+%3D+%5Bs_a+%5Cpm+s_b%2C+v_a+%5Cpm+v_b%5D\" alt=\"q_a\\pm q_b = [s_a \\pm s_b, v_a \\pm v_b]\" eeimg=\"1\"/> </li><li>四元数的乘法：每一项对应相乘，整理得到 <img src=\"https://www.zhihu.com/equation?tex=q_a+q_b+%3D+%5Bs_as_b-v_a%5ETv_b%2C+s_av_b%2Bs_bv_a%2Bv_a%5Ctimes+v_b%5D\" alt=\"q_a q_b = [s_as_b-v_a^Tv_b, s_av_b+s_bv_a+v_a\\times v_b]\" eeimg=\"1\"/> </li><li>四元数的共轭： <img src=\"https://www.zhihu.com/equation?tex=q_a%5E%2A%3D%5Bs_a%2C-v_a%5D\" alt=\"q_a^*=[s_a,-v_a]\" eeimg=\"1\"/> ，共轭与自身相乘得到一个实数 <img src=\"https://www.zhihu.com/equation?tex=qq%5E%2A%3Dq%5E%2Aq%3D%5Bs_a%5E2%2Bv%5ETv%2C0%5D\" alt=\"qq^*=q^*q=[s_a^2+v^Tv,0]\" eeimg=\"1\"/> </li><li>四元数的模长： <img src=\"https://www.zhihu.com/equation?tex=%7C%7Cq_a%7C%7C+%3D+%5Csqrt%7Bs_a%5E2%2Bx_a%5E2%2By_a%5E2%2Bz_a%5E2%7D\" alt=\"||q_a|| = \\sqrt{s_a^2+x_a^2+y_a^2+z_a^2}\" eeimg=\"1\"/> ，有 <img src=\"https://www.zhihu.com/equation?tex=%7C%7Cq_aq_b%7C%7C+%3D+%7C%7Cq_a%7C%7C+%7C%7Cq_b%7C%7C\" alt=\"||q_aq_b|| = ||q_a|| ||q_b||\" eeimg=\"1\"/> </li><li>四元数的逆： <img src=\"https://www.zhihu.com/equation?tex=q%5E%7B-1%7D+%3D+%5Cfrac%7Bq%5E%2A%7D%7B%7C%7Cq%7C%7C%5E2%7D\" alt=\"q^{-1} = \\frac{q^*}{||q||^2}\" eeimg=\"1\"/> ，有 <img src=\"https://www.zhihu.com/equation?tex=q%5E%7B-1%7Dq+%3D+qq%5E%7B-1%7D%3D1\" alt=\"q^{-1}q = qq^{-1}=1\" eeimg=\"1\"/> ，且 <img src=\"https://www.zhihu.com/equation?tex=%28q_a+q_b%29%5E%7B-1%7D+%3D+q_b%5E%7B-1%7Dq_a%5E%7B-1%7D\" alt=\"(q_a q_b)^{-1} = q_b^{-1}q_a^{-1}\" eeimg=\"1\"/> </li><li>四元数数乘： <img src=\"https://www.zhihu.com/equation?tex=kq+%3D+%5Bks%2Ckv%5D\" alt=\"kq = [ks,kv]\" eeimg=\"1\"/> </li><li>四元数y点乘： <img src=\"https://www.zhihu.com/equation?tex=q_a%5Ccdot+q_b+%3D+s_as_b+%2Bx_ax_b%2By_ay_b%2Bz_az_b\" alt=\"q_a\\cdot q_b = s_as_b +x_ax_b+y_ay_b+z_az_b\" eeimg=\"1\"/> </li><li>用四元数表示旋转：</li></ul><p>假设有点 <img src=\"https://www.zhihu.com/equation?tex=a%3D%5Bx%2C+y%2C+z%5D\" alt=\"a=[x, y, z]\" eeimg=\"1\"/> ,绕着旋转轴 <img src=\"https://www.zhihu.com/equation?tex=n%3D%5Bn_x%2Cn_y%2Cn_z%5D\" alt=\"n=[n_x,n_y,n_z]\" eeimg=\"1\"/> 旋转了 <img src=\"https://www.zhihu.com/equation?tex=%5Ctheta\" alt=\"\\theta\" eeimg=\"1\"/> 度，得到了 <img src=\"https://www.zhihu.com/equation?tex=a%27\" alt=\"a&#39;\" eeimg=\"1\"/> 。首先用四元数表示点a，有 <img src=\"https://www.zhihu.com/equation?tex=a%3D%5B0%2C+x%2C+y%2C+z%5D\" alt=\"a=[0, x, y, z]\" eeimg=\"1\"/> ；然后用四元数表示旋转，有 <img src=\"https://www.zhihu.com/equation?tex=q%3D%5Bcos%7B%5Cfrac%7B%5Ctheta%7D%7B2%7D%7D%2C+n_x+sin%7B%5Cfrac%7B%5Ctheta%7D%7B2%7D%7D%2C+n_y+sin%7B%5Cfrac%7B%5Ctheta%7D%7B2%7D%7D%2C+n_z+sin%7B%5Cfrac%7B%5Ctheta%7D%7B2%7D%7D%5D%3D%5Bcos%7B%5Cfrac%7B%5Ctheta%7D%7B2%7D%7D%2C+n+sin%7B%5Cfrac%7B%5Ctheta%7D%7B2%7D%7D%5D\" alt=\"q=[cos{\\frac{\\theta}{2}}, n_x sin{\\frac{\\theta}{2}}, n_y sin{\\frac{\\theta}{2}}, n_z sin{\\frac{\\theta}{2}}]=[cos{\\frac{\\theta}{2}}, n sin{\\frac{\\theta}{2}}]\" eeimg=\"1\"/> 。表示为 <img src=\"https://www.zhihu.com/equation?tex=a%27+%3D+qaq%5E%7B-1%7D\" alt=\"a&#39; = qaq^{-1}\" eeimg=\"1\"/> </p><h2>6. 各种描述之间的转换</h2><p>对于一个向量a，经过了一次旋转，得到了向量 <img src=\"https://www.zhihu.com/equation?tex=a%27\" alt=\"a&#39;\" eeimg=\"1\"/> 。</p><p>这个旋转，可以用旋转矩阵R表示，那么有 <img src=\"https://www.zhihu.com/equation?tex=a%27+%3DRa\" alt=\"a&#39; =Ra\" eeimg=\"1\"/> 。</p><p>也可以说a绕着旋转轴n，转了 <img src=\"https://www.zhihu.com/equation?tex=%5Ctheta\" alt=\"\\theta\" eeimg=\"1\"/> 度，得到<img src=\"https://www.zhihu.com/equation?tex=a%27\" alt=\"a&#39;\" eeimg=\"1\"/>。</p><p>还可以用四元数q表示这个旋转，有 <img src=\"https://www.zhihu.com/equation?tex=a%27+%3D+qaq%5E%7B-1%7D\" alt=\"a&#39; = qaq^{-1}\" eeimg=\"1\"/> </p><p>6.1 旋转向量&amp;旋转矩阵</p><p>已知 <img src=\"https://www.zhihu.com/equation?tex=%5Bn%2C%5Ctheta%5D\" alt=\"[n,\\theta]\" eeimg=\"1\"/> ,求R： <img src=\"https://www.zhihu.com/equation?tex=R+%3D+cos%5Ctheta++I+%2B%281-cos%5Ctheta%29+n+n%5ET+%2Bsin%5Ctheta+n%5E%5Cwedge\" alt=\"R = cos\\theta  I +(1-cos\\theta) n n^T +sin\\theta n^\\wedge\" eeimg=\"1\"/> </p><p>已知R，求 <img src=\"https://www.zhihu.com/equation?tex=%5Bn%2C%5Ctheta%5D\" alt=\"[n,\\theta]\" eeimg=\"1\"/> ：</p><p><img src=\"https://www.zhihu.com/equation?tex=%5Ctheta+%3D+arccos%28%5Cfrac%7Btr%28R%29-1%7D%7B2%7D%29+%5C%5C+Rn%3Dn\" alt=\"\\theta = arccos(\\frac{tr(R)-1}{2}) \\\\ Rn=n\" eeimg=\"1\"/> </p><p> 6.2 四元数&amp;旋转矩阵</p><p>已知四元数 <img src=\"https://www.zhihu.com/equation?tex=q%3Dq_0+%2Bq_1i%2Bq_2j%2Bq_3k\" alt=\"q=q_0 +q_1i+q_2j+q_3k\" eeimg=\"1\"/> ，求R。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-1555a1d3429377b59bdc05a2d697d890_b.jpg\" data-size=\"normal\" data-rawwidth=\"1276\" data-rawheight=\"224\" class=\"origin_image zh-lightbox-thumb\" width=\"1276\" data-original=\"https://pic1.zhimg.com/v2-1555a1d3429377b59bdc05a2d697d890_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1276&#39; height=&#39;224&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1276\" data-rawheight=\"224\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1276\" data-original=\"https://pic1.zhimg.com/v2-1555a1d3429377b59bdc05a2d697d890_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-1555a1d3429377b59bdc05a2d697d890_b.jpg\"/><figcaption>公式(3.35)</figcaption></figure><p>已知 <img src=\"https://www.zhihu.com/equation?tex=R%3D%7Bm_%7Bij%7D%7D+%2Ci%2C+j+%5Cin+%5B1%2C2%2C3%5D\" alt=\"R={m_{ij}} ,i, j \\in [1,2,3]\" eeimg=\"1\"/> ，求四元数</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-78a55da1d7a870828f57565498b0b854_b.png\" data-size=\"normal\" data-rawwidth=\"1288\" data-rawheight=\"132\" class=\"origin_image zh-lightbox-thumb\" width=\"1288\" data-original=\"https://pic1.zhimg.com/v2-78a55da1d7a870828f57565498b0b854_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1288&#39; height=&#39;132&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1288\" data-rawheight=\"132\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1288\" data-original=\"https://pic1.zhimg.com/v2-78a55da1d7a870828f57565498b0b854_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-78a55da1d7a870828f57565498b0b854_b.png\"/><figcaption>公式(3.36)</figcaption></figure><p>参考文献</p><p>《视觉SLAM十四讲从理论到实践》 高翔，张涛</p>", 
            "topic": [
                {
                    "tag": "视觉SLAM十四讲（书籍）", 
                    "tagLink": "https://api.zhihu.com/topics/20127173"
                }, 
                {
                    "tag": "同时定位和地图构建（SLAM）", 
                    "tagLink": "https://api.zhihu.com/topics/20033502"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/59326953", 
            "userName": "笨丫头", 
            "userLink": "https://www.zhihu.com/people/1e56511c5bcb79725fdcd0f516b1a3b9", 
            "upvote": 21, 
            "title": "视觉SLAM十四讲|第1～2讲", 
            "content": "<h2>1. 什么是SLAM？</h2><p>书上说</p><blockquote>SLAM全称Simultaneous Localization and Mapping（同时定位与地图构建），它是指搭载特定传感器的主体，在没有环境先验信息的情况下，于运动过程中建立环境的模型，同时估计自己的运动。</blockquote><p>翻译成人话：</p><p>“搭载特定传感器的主体”：一个小白机器人，它有眼睛（视觉传感器相机）能通过眼睛看，可能有触觉（某种传感器）能通过手感受周围的温度、湿度之类的信息。</p><p>“没有环境先验信息：这个小白机器人，突然出现在一个陌生的环境，发出人生三问：我是谁？我在哪儿？我要做什么？然而并没有人回答他，于是只好靠自己。</p><p>“于运动过程中建立环境的模型”：这个小白机器人，周围可能有桌子椅子大山大河，他很笨，只好走两步，跟桌子椅子比一下，才能知道自己比桌子高还是比桌子矮，离大山更近还是离大河更近，他边走边判断自己和周围的环境的关系。</p><p>“估计自己的运动”：小白机器人，知道自己是在往前走，走了几步，但是它要“想一下”才能知道自己是在走近这个桌子还是远离这个桌子，他很笨，想的不一定周全，所以是估计。</p><p>总结一下，视觉SLAM就是，一个有眼睛的小白机器人，到了一个陌生的环境，要想办法边走边判断周围的环境以及自己的位置。</p><p>每个单词的意思：</p><p>Localization——判断自己所处的位置</p><p>Mapping——构建周遭环境的地图</p><p>Simultaneous——上面两件事情同时完成</p><h2>2. 传感器</h2><p>传感器有两类，一类是安装于环境中的，一类是携带于机器人本体上的。</p><p>1）安装于环境中的传感器，比如GPS，二维码（贴在桌子上的二维码，扫一下告诉你这是个桌子）之类的。这类传感器能够定向告诉小白机器人的位置，但是必须要人为的“先铺路”。前人栽树机器人乘凉，没树的地方，机器人就傻了。</p><p>2）携带于机器人本体上的传感器，相机、IMU单元（Inertial Measurement Unit 惯性测量单元）、激光传感器、轮式编码器（测量轮子的转动角度）。这类传感器就像是小白机器人的眼睛、手、脚，机器人通过传感器看世界。有了这些传感器，机器人可以自己得到环境的物理量，然后自己告诉自己：我是小白机器人，我在这儿，我要画地图。</p><p>视觉SLAM就是有眼睛的小白机器人，眼睛看到的是一张张固定时间间隔拍摄到的照片。眼睛可以分为单目相机（Monocular）、双目相机（Stereo）和深度相机（RGB-D）三大类。</p><ul><li>单目相机（Monocular），只有一个摄像头，将三维的世界投影到二维的相片中，只保留了物体的相对大小，缺失了深度信息。比如图2-4，只看这一张图片，无法知道手上的人是近处的模型还是远处的真人。</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-93e81d1147a6d6f3ac93232a05598eeb_b.jpg\" data-size=\"normal\" data-rawwidth=\"884\" data-rawheight=\"578\" class=\"origin_image zh-lightbox-thumb\" width=\"884\" data-original=\"https://pic4.zhimg.com/v2-93e81d1147a6d6f3ac93232a05598eeb_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;884&#39; height=&#39;578&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"884\" data-rawheight=\"578\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"884\" data-original=\"https://pic4.zhimg.com/v2-93e81d1147a6d6f3ac93232a05598eeb_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-93e81d1147a6d6f3ac93232a05598eeb_b.jpg\"/><figcaption>图 2-4 单目视觉中的尴尬:不知道深度时，手掌上的人是真人还是模型?</figcaption></figure><p>为了计算丢失的深度信息，要让机器人进行移动，随着机器人的移动，因为近处的物体移动快，远处的物体移动慢，所以相机拍摄到的物体也会有不同程度的改变，形成视差。根据视差，机器人可以对远近做定量的判断，比如判断出A比B离我近，A比B大，但这只是一个相对值，不能知道具体近多少，大多少。单目相机已经尽力了，只能做到这了，它的问题就是尺度不确定性（不知道A是1米还是2米）。</p><ul><li>双目相机（Stereo），存在的目的就是消除尺度不确定性，要知道一个准确的值。使用两个相机，相机间的间隔成为基线（Baseline）是已知的出厂设定。如图2-5所示，就像人的两只眼睛，人可以通过左右眼看到的图像差异，自动分析出物体大小。双目相机类似，通过基线获取景深，基线越大，能够测量的距离越远。但是计算机比不上人眼，要靠大量的计算，还可能算不准。</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-d0d3802f23028ff26fbbb186cd30db38_b.jpg\" data-size=\"normal\" data-rawwidth=\"1230\" data-rawheight=\"302\" class=\"origin_image zh-lightbox-thumb\" width=\"1230\" data-original=\"https://pic1.zhimg.com/v2-d0d3802f23028ff26fbbb186cd30db38_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1230&#39; height=&#39;302&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1230\" data-rawheight=\"302\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1230\" data-original=\"https://pic1.zhimg.com/v2-d0d3802f23028ff26fbbb186cd30db38_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-d0d3802f23028ff26fbbb186cd30db38_b.jpg\"/><figcaption>图 2-5 双目相机的数据:左眼图像，右眼图像。通过左右眼的差异，能够判断场景中物 体离相机距离。</figcaption></figure><ul><li>深度相机（RGB-D），通过红外结构光或者Time-of-Flight原理测量距离（主动向物体发射光，并且接收返回的光，然后根据时间差或者其他算距离）。好处是这种距离是测量出来的，节约计算资源。但是这种对环境要求比较高，比如光线、材质等。</li></ul><p>总结一下：</p><p>单目相机——只有一个摄像头，将三维世界投影到二维图像上，要通过移动才能计算丢失的深度信息，只能获取相对值，具有尺度不确定性。</p><p>双目相机——两个摄像头，通过基线+计算得到物体的尺寸。计算量大，不受环境影响。</p><p>深度相机——不用摄像头用光，通过测量得到物体尺寸。对环境要求高，适用范围有限。</p><h2>3. 经典视觉SLAM框架</h2><p>高博给小白机器人起了个名字，叫小萝卜。视觉SLAM框架就是小萝卜从“看”到环境开始到弄清楚自己在哪儿的整个过程。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-357db3c9cc3dd94278a16e7b5ee50798_b.jpg\" data-size=\"normal\" data-rawwidth=\"962\" data-rawheight=\"320\" class=\"origin_image zh-lightbox-thumb\" width=\"962\" data-original=\"https://pic1.zhimg.com/v2-357db3c9cc3dd94278a16e7b5ee50798_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;962&#39; height=&#39;320&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"962\" data-rawheight=\"320\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"962\" data-original=\"https://pic1.zhimg.com/v2-357db3c9cc3dd94278a16e7b5ee50798_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-357db3c9cc3dd94278a16e7b5ee50798_b.jpg\"/><figcaption>图 2-7 整体视觉 SLAM 流程图。</figcaption></figure><p>小萝卜的脑回路如图2-7所示，大致的流程是每固定间隔拍一张照片，作为传感器数据（还有其他传感器数据，比如速度、角度之类的），经过前端、后端、回环检测，最后反应过来：哦，我原来是在这儿，我周围的环境是这样的。</p><h2>3.1 视觉里程计(Visual Odometry, VO)</h2><p>书上说视觉里程计的任务是：</p><blockquote>估算相邻图像间相机的运动，以及局部地图的样子。</blockquote><p>解释一下，</p><p>“相邻图像”：假设拍摄间隔是1s，上一秒拍摄的图片，和当前拍摄的图片成为相邻帧。也就是说视觉里程计只处理两张图片之间的关系。</p><p>“估算相机的运动”：前面说，离相机近的物体运动快，远的运动慢，人眼可以一下子反应过来，但是小萝卜不行。小萝卜只知道自己旋转了40度，看到图像1，旋转30度看到图像2，但他不能直接说出图像1和图像2之间的关系，要做运算。</p><p>“估算局部地图的样子”：在当前场景中，小萝卜通过不断的运动，一点一点的构建出当前场景的模样。这里有个桌子，离我近，桌子旁边有个椅子，比我矮，一点一点用小萝卜的语言表示出来。在视觉里程计中，只是对相邻图像做计算，所以构建的是局部地图。</p><p>总结一下，视觉里程计就是小萝卜走一步看一眼，边走边看，边看边算，把他看过的所有图片恢复成场景。这其中有一个问题叫做累积漂移(Accumulating Drift) ，小萝卜的计算从第一眼到最后一眼前后是相关联的，第一眼看错了，或者算错了，会把这种错误一直传递到最后。如图2-9所示，左边就是一开始出现了误差，累积到最后，明明走了一个框，却没办法对齐，这需要后面的技术来解决。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-97dcc9b49d30ccdbdf594936ac3e17db_b.jpg\" data-size=\"normal\" data-rawwidth=\"976\" data-rawheight=\"498\" class=\"origin_image zh-lightbox-thumb\" width=\"976\" data-original=\"https://pic4.zhimg.com/v2-97dcc9b49d30ccdbdf594936ac3e17db_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;976&#39; height=&#39;498&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"976\" data-rawheight=\"498\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"976\" data-original=\"https://pic4.zhimg.com/v2-97dcc9b49d30ccdbdf594936ac3e17db_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-97dcc9b49d30ccdbdf594936ac3e17db_b.jpg\"/><figcaption>图 2-9 累计误差与回环检测的校正结果 </figcaption></figure><h2>3.2 后端优化(Optimization)</h2><blockquote>接受不同时刻视觉里程计测量的相机位姿，以及回环检测的信息，对他们进行优化，得到全局一致的轨迹和地图。</blockquote><p>“位姿”：相机的位置（空间坐标）和姿态（角度），有视觉里程计提供。</p><p>“全局一致的轨迹和地图”：视觉里程计只关注当前看到的场景，在后端要把每一个局部的场景拼接起来，形成一个完整的场景，这就要保证全局一致性。</p><p>视觉里程计称为前端，直接对传感器数据进行加工计算，将计算结果传递到后端。这结果中很可能包含着误差，传感器的测量误差，计算误差、噪声等，需要在后端进行优化，才能保证全局一致性。</p><p>后端优化可以看作是状态估计问题，从带有噪声的数据中估计整个系统的状态，以及这个状态估计的不确定性有多大。前端与计算机视觉领域更相关，后端与滤波、非线性优化相关。</p><h2>3.3 回环检测(Loop Closing)</h2><blockquote>判断机器人是否到达过先前的位置。如果检测到回环，它会把信息提供给后端处理。</blockquote><p>从书上的描述中可以得到两个信息：</p><p>1）回环检测的内容是判断小萝卜以前是否来过这儿，这一点针对的是漂移问题。假设小萝卜又来到了地点A，回环检测说来过，但前端给出的数据说，目前在A1位置。很明显，产生了累积漂移，需要及时纠正小萝卜的计算。</p><p>2）检测到回环后，把信息提供给后端，也就是回环检测这里只进行检测，所有优化任务都交给后端。</p><h2>3.4 建图(Mapping)</h2><p>建图也就是按照需求，让小萝卜把当前的环境描述出来，描述方法很多如图2-10所示，主要分为度量地图和拓扑地图两种。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-9a66f7d6a02d6656ab73e13415219657_b.jpg\" data-size=\"normal\" data-rawwidth=\"980\" data-rawheight=\"718\" class=\"origin_image zh-lightbox-thumb\" width=\"980\" data-original=\"https://pic4.zhimg.com/v2-9a66f7d6a02d6656ab73e13415219657_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;980&#39; height=&#39;718&#39;&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"980\" data-rawheight=\"718\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"980\" data-original=\"https://pic4.zhimg.com/v2-9a66f7d6a02d6656ab73e13415219657_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-9a66f7d6a02d6656ab73e13415219657_b.jpg\"/><figcaption>图 2-10 形形色色的地图:2D 栅格地图、拓扑地图以及 3D 点云地图和网格地图</figcaption></figure><ul><li>度量地图</li></ul><p>要通过格子/方块（二维画格子，三维画方块）把空间进行划分，来精确的表示地图中的地理位置。稀疏度量地图之表示路标，稠密度量地图表示所有看到的东西。</p><ul><li>拓扑地图</li></ul><p>强调地图当中元素的关系，用图(Graph)表示，AB两点之间有边表示AB连通，并不考虑如何从A到达B。</p><h2>4. 数学表述</h2><p>一切问题归根结底都是数学问题，数学可以描述一切。</p><p>先定义一些变量：</p><p>每个时刻 <img src=\"https://www.zhihu.com/equation?tex=t%3D1%2C...%2CK\" alt=\"t=1,...,K\" eeimg=\"1\"/> </p><p>小萝卜在每个时刻的位姿 <img src=\"https://www.zhihu.com/equation?tex=x_1%2C+...+x_K+\" alt=\"x_1, ... x_K \" eeimg=\"1\"/> </p><p>假设采用稀疏度量地图，有N个路标，每个路标的坐标 <img src=\"https://www.zhihu.com/equation?tex=y_1%2C...%2Cy_N\" alt=\"y_1,...,y_N\" eeimg=\"1\"/> </p><p>书上说目前要描述的事情是：</p><blockquote>小萝卜携带者传感器在环境中运动</blockquote><p>也就是，小萝卜在未知环境中边走边看。要想办法把这件事情用数学表达出来。</p><p>涉及到两个动作：“走”和“看”。</p><p>“走”：运动，从k-1时刻到k时刻，小萝卜的位置坐标变了。</p><p>“看”：观测，在k时刻，小萝卜看到了一个或者几个路标。</p><p>这两个动作书上分别用运动方程和观测方程来描述。</p><p>运动方程：</p><p><img src=\"https://www.zhihu.com/equation?tex=x_k+%3D+f%28x_%7Bk-1%7D%2Cu_k%2Cw_k%29+%5Ctag%7B2.1%7D%5C%5C\" alt=\"x_k = f(x_{k-1},u_k,w_k) \\tag{2.1}\\\\\" eeimg=\"1\"/> </p><p><img src=\"https://www.zhihu.com/equation?tex=u_k\" alt=\"u_k\" eeimg=\"1\"/> 为传感器的读数， <img src=\"https://www.zhihu.com/equation?tex=w_k\" alt=\"w_k\" eeimg=\"1\"/> 为噪声。</p><p>运动方程在说，在k时刻，根据传感器的读数 <img src=\"https://www.zhihu.com/equation?tex=u_k\" alt=\"u_k\" eeimg=\"1\"/> 和k-1时刻的位置<img src=\"https://www.zhihu.com/equation?tex=x_%7Bk-1%7D\" alt=\"x_{k-1}\" eeimg=\"1\"/>，小萝卜在脑海中通过函数f()估算出当前时刻的位置是 <img src=\"https://www.zhihu.com/equation?tex=x_k\" alt=\"x_k\" eeimg=\"1\"/> 。在估算的时候，小萝卜还要把噪声 <img src=\"https://www.zhihu.com/equation?tex=w_k\" alt=\"w_k\" eeimg=\"1\"/> 考虑进去。</p><p>观测方程：</p><p><img src=\"https://www.zhihu.com/equation?tex=z_%7Bk%2Cj%7D+%3D+h%28y_j%2C+x_k%2C+v_%7Bk%2Cj%7D%29+%5Ctag%7B2.2%7D+%5C%5C\" alt=\"z_{k,j} = h(y_j, x_k, v_{k,j}) \\tag{2.2} \\\\\" eeimg=\"1\"/> </p><p><img src=\"https://www.zhihu.com/equation?tex=v_%7Bk%2Cj%7D\" alt=\"v_{k,j}\" eeimg=\"1\"/> 是噪声。</p><p>观测方程在说，在k时刻，小萝卜处在 <img src=\"https://www.zhihu.com/equation?tex=x_k\" alt=\"x_k\" eeimg=\"1\"/> 的位置，此时小萝卜看见了路标点 <img src=\"https://www.zhihu.com/equation?tex=y_j\" alt=\"y_j\" eeimg=\"1\"/> ，产生了一个观测结果 <img src=\"https://www.zhihu.com/equation?tex=z_%7Bk%2Cj%7D\" alt=\"z_{k,j}\" eeimg=\"1\"/> 。此时小萝卜的位置由运动方程求出和观测结果已知，路标点的坐标未知。</p><p>SLAM最基本的问题就是已知传感器的读数 <img src=\"https://www.zhihu.com/equation?tex=u_k\" alt=\"u_k\" eeimg=\"1\"/> 和观测值 <img src=\"https://www.zhihu.com/equation?tex=z_%7Bk%2Cj%7D\" alt=\"z_{k,j}\" eeimg=\"1\"/> 时，如何求解定位问题（计算 <img src=\"https://www.zhihu.com/equation?tex=x_k\" alt=\"x_k\" eeimg=\"1\"/> )和建图问题（求解 <img src=\"https://www.zhihu.com/equation?tex=y_j\" alt=\"y_j\" eeimg=\"1\"/> )。通过运动方程和观测方程将SLAM问题建模为状态估计问题：如何通过带噪声的测量数据，估计内部的、隐藏的状态变量。</p><p class=\"ztext-empty-paragraph\"><br/></p><p>参考文献</p><p>《视觉SLAM十四讲从理论到实践》 高翔，张涛</p><p></p>", 
            "topic": [
                {
                    "tag": "视觉SLAM十四讲（书籍）", 
                    "tagLink": "https://api.zhihu.com/topics/20127173"
                }, 
                {
                    "tag": "同时定位和地图构建（SLAM）", 
                    "tagLink": "https://api.zhihu.com/topics/20033502"
                }
            ], 
            "comments": [
                {
                    "userName": "青柠夜", 
                    "userLink": "https://www.zhihu.com/people/d88f039763f7b053c3a8e86a369ffff4", 
                    "content": "您好，问一下34页的第二步，打开“运行→配置启动器”的运行选项在哪里...我死活都找不到啊<a href=\"https://pic2.zhimg.com/v2-5cc3f8dc72f94dc7e30391d104ec5319.gif\" class=\"comment_sticker\" data-width=\"0\" data-height=\"0\" data-sticker-id=\"959809286567067648\">[疑惑]</a>", 
                    "likes": 0, 
                    "childComments": [
                        {
                            "userName": "笨丫头", 
                            "userLink": "https://www.zhihu.com/people/1e56511c5bcb79725fdcd0f516b1a3b9", 
                            "content": "<p>进入kdevelop页面后，在整个屏幕的最最左上角，和时间显示在同一行，时间在右上角，运行在左上角</p>", 
                            "likes": 1, 
                            "replyToAuthor": "青柠夜"
                        }, 
                        {
                            "userName": "青柠夜", 
                            "userLink": "https://www.zhihu.com/people/d88f039763f7b053c3a8e86a369ffff4", 
                            "content": "<p>找到了，感谢！</p><a class=\"comment_sticker\" href=\"https://pic4.zhimg.com/v2-fa3cb6bc9ec57da84ab53a60f48d0c6f.gif\" data-width=\"\" data-height=\"\">[棒]</a>", 
                            "likes": 0, 
                            "replyToAuthor": "笨丫头"
                        }
                    ]
                }
            ]
        }
    ], 
    "url": "https://zhuanlan.zhihu.com/c_159467704"
}

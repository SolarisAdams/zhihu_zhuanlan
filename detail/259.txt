{
    "title": "数据分析小白入坑之旅python篇", 
    "description": "", 
    "followers": [
        "https://www.zhihu.com/people/hehe-buhaowan", 
        "https://www.zhihu.com/people/yu-xiao-jiao-97", 
        "https://www.zhihu.com/people/zheng-gang-24-32", 
        "https://www.zhihu.com/people/wu-hen-53-16", 
        "https://www.zhihu.com/people/jiang-gu-gu-84", 
        "https://www.zhihu.com/people/ji-qi-xue-zha-77", 
        "https://www.zhihu.com/people/gua-niu-58-20", 
        "https://www.zhihu.com/people/cai-diu-diu-70-85", 
        "https://www.zhihu.com/people/da-zhi-liang-zhong-wei-zi", 
        "https://www.zhihu.com/people/cheng-zhao-xie-pian-fei-58", 
        "https://www.zhihu.com/people/jian-jian-jian-38-8", 
        "https://www.zhihu.com/people/harry-64-91", 
        "https://www.zhihu.com/people/zhan-guan-yi-47", 
        "https://www.zhihu.com/people/xin-shi-dai-jie-ban-ren", 
        "https://www.zhihu.com/people/yue-han-tu-si-ji", 
        "https://www.zhihu.com/people/bi-jing-19-17", 
        "https://www.zhihu.com/people/cao-yu-tao-82", 
        "https://www.zhihu.com/people/qian-jia-dong", 
        "https://www.zhihu.com/people/leng-yue-wu-sheng-98-75", 
        "https://www.zhihu.com/people/zhan-zhan-98-12", 
        "https://www.zhihu.com/people/sunshine-6-65", 
        "https://www.zhihu.com/people/ke-nan-ai-da-lu-a-lu", 
        "https://www.zhihu.com/people/qian-li-feng-huo", 
        "https://www.zhihu.com/people/bai-yang-jin-tian-shi-yin-tian", 
        "https://www.zhihu.com/people/diane-19", 
        "https://www.zhihu.com/people/yanqiu-zhang", 
        "https://www.zhihu.com/people/feng-xiao-ming-10", 
        "https://www.zhihu.com/people/wei-jie-67-4", 
        "https://www.zhihu.com/people/dollartw", 
        "https://www.zhihu.com/people/wang-kun-84-1-29", 
        "https://www.zhihu.com/people/gao-na-zi", 
        "https://www.zhihu.com/people/niao-niao-ta-die", 
        "https://www.zhihu.com/people/datadata", 
        "https://www.zhihu.com/people/zi-feng-90", 
        "https://www.zhihu.com/people/xu-cheng-ming-9", 
        "https://www.zhihu.com/people/zhi-hu-wang-shi", 
        "https://www.zhihu.com/people/zhou-qiu-hua-88", 
        "https://www.zhihu.com/people/lan-se-9-82-4", 
        "https://www.zhihu.com/people/yang-xiong-55", 
        "https://www.zhihu.com/people/kleeeea", 
        "https://www.zhihu.com/people/cheng-li-26-69", 
        "https://www.zhihu.com/people/bu-zheng-42-2-89", 
        "https://www.zhihu.com/people/ou-yu-ge-lu-da-shen", 
        "https://www.zhihu.com/people/ilyq69", 
        "https://www.zhihu.com/people/qiang-ge-dai-wo-qie-gang-ban", 
        "https://www.zhihu.com/people/hai-bing-gan-48", 
        "https://www.zhihu.com/people/So-Lo-1984", 
        "https://www.zhihu.com/people/jia-liu-85-97", 
        "https://www.zhihu.com/people/lu-xiao-78-88", 
        "https://www.zhihu.com/people/jian-mo-1996", 
        "https://www.zhihu.com/people/zhi-liao-40-64", 
        "https://www.zhihu.com/people/hh123-72", 
        "https://www.zhihu.com/people/xjianlei", 
        "https://www.zhihu.com/people/lan-lan-lan-lan-96-82", 
        "https://www.zhihu.com/people/ycj-7-24", 
        "https://www.zhihu.com/people/lin-qing-43-77", 
        "https://www.zhihu.com/people/go-bin-56", 
        "https://www.zhihu.com/people/san-ge-77-30", 
        "https://www.zhihu.com/people/luozhongbin", 
        "https://www.zhihu.com/people/myth-59-70", 
        "https://www.zhihu.com/people/yan-jun-80-45", 
        "https://www.zhihu.com/people/guo-kai-27-62", 
        "https://www.zhihu.com/people/ai-ai-13-2", 
        "https://www.zhihu.com/people/jasonk-95-39", 
        "https://www.zhihu.com/people/dou-bi-46-96", 
        "https://www.zhihu.com/people/dong-yi-88-68", 
        "https://www.zhihu.com/people/zha-nu-33", 
        "https://www.zhihu.com/people/zhang-gang-92-25", 
        "https://www.zhihu.com/people/nanmu-59-12", 
        "https://www.zhihu.com/people/wang-wei-cheng-37", 
        "https://www.zhihu.com/people/zhi-zhi-bu-zhi-9-14", 
        "https://www.zhihu.com/people/jia-le-bi-hai-dao-65-59", 
        "https://www.zhihu.com/people/eric-xu-29", 
        "https://www.zhihu.com/people/zhang-hao-yi-zhu-xiao-11", 
        "https://www.zhihu.com/people/yinli-17-58", 
        "https://www.zhihu.com/people/wang-83-93-80", 
        "https://www.zhihu.com/people/qian-che-ban-jiu", 
        "https://www.zhihu.com/people/qp100", 
        "https://www.zhihu.com/people/wei-ting-ting-13-95", 
        "https://www.zhihu.com/people/wwsmith", 
        "https://www.zhihu.com/people/kingwinon", 
        "https://www.zhihu.com/people/huang-ke-fu-62", 
        "https://www.zhihu.com/people/clarayuan", 
        "https://www.zhihu.com/people/li-fu-du-bai", 
        "https://www.zhihu.com/people/wang-cheng-long-78-30", 
        "https://www.zhihu.com/people/liu-yang-60-83", 
        "https://www.zhihu.com/people/liu-zhe-28-81", 
        "https://www.zhihu.com/people/zhang-nan-1-45-8", 
        "https://www.zhihu.com/people/jian-sheng-53-24", 
        "https://www.zhihu.com/people/cheng-yili", 
        "https://www.zhihu.com/people/lao-piao-46", 
        "https://www.zhihu.com/people/song-wen-sheng-42", 
        "https://www.zhihu.com/people/vaughan-3", 
        "https://www.zhihu.com/people/sun-chong-yao-85", 
        "https://www.zhihu.com/people/luo-po-a-tong-mu", 
        "https://www.zhihu.com/people/ben-zuo-de-zhang-ba-she-mao-ni", 
        "https://www.zhihu.com/people/xiao-chao-nao-14", 
        "https://www.zhihu.com/people/liu-cheng-54-87", 
        "https://www.zhihu.com/people/mo-ran-ru-chen", 
        "https://www.zhihu.com/people/clark123", 
        "https://www.zhihu.com/people/likaihere", 
        "https://www.zhihu.com/people/qi-dian-94-19", 
        "https://www.zhihu.com/people/liang-yao-yao-44", 
        "https://www.zhihu.com/people/symphony-76", 
        "https://www.zhihu.com/people/natapplication", 
        "https://www.zhihu.com/people/ceng-cong-28", 
        "https://www.zhihu.com/people/qin-yan-zhi-10-53", 
        "https://www.zhihu.com/people/walter-93-43", 
        "https://www.zhihu.com/people/qin-ya-8", 
        "https://www.zhihu.com/people/bao-bi-wen", 
        "https://www.zhihu.com/people/yangg-51", 
        "https://www.zhihu.com/people/shaop-ju", 
        "https://www.zhihu.com/people/krlord", 
        "https://www.zhihu.com/people/tan-bin-bin-5", 
        "https://www.zhihu.com/people/dundunlink", 
        "https://www.zhihu.com/people/ma-ni-ma-29", 
        "https://www.zhihu.com/people/nancy870918", 
        "https://www.zhihu.com/people/sugar-28", 
        "https://www.zhihu.com/people/mai-zi-22-64", 
        "https://www.zhihu.com/people/dayslee", 
        "https://www.zhihu.com/people/xuwz-76", 
        "https://www.zhihu.com/people/luo-kai-67", 
        "https://www.zhihu.com/people/zhang-long-mei-59", 
        "https://www.zhihu.com/people/alilee", 
        "https://www.zhihu.com/people/Opps-90", 
        "https://www.zhihu.com/people/xiao-yi-97-95-92", 
        "https://www.zhihu.com/people/iwolf2020", 
        "https://www.zhihu.com/people/mi-sha-cha", 
        "https://www.zhihu.com/people/weijiahui", 
        "https://www.zhihu.com/people/chi-cao-de-lang-82", 
        "https://www.zhihu.com/people/yang-yi-14-96", 
        "https://www.zhihu.com/people/zou-yi-xin-72", 
        "https://www.zhihu.com/people/zhou-zi-hao-38-53", 
        "https://www.zhihu.com/people/nong-jian-xin", 
        "https://www.zhihu.com/people/rosezrz", 
        "https://www.zhihu.com/people/li-xiao-long-15-98", 
        "https://www.zhihu.com/people/zheng-shuo-18", 
        "https://www.zhihu.com/people/liu-huai-zhi-80", 
        "https://www.zhihu.com/people/bei-xiang-26", 
        "https://www.zhihu.com/people/jin-shuang-bin-90", 
        "https://www.zhihu.com/people/zhang-chang-64-82", 
        "https://www.zhihu.com/people/wu-yuchen-zhu-93", 
        "https://www.zhihu.com/people/you-ran-29-81", 
        "https://www.zhihu.com/people/yi-zhi-zai-lu-shang-35-94", 
        "https://www.zhihu.com/people/jethrochen", 
        "https://www.zhihu.com/people/nuanyang-50", 
        "https://www.zhihu.com/people/jin-gong-ma-nong", 
        "https://www.zhihu.com/people/yi-xian-yi-suan-yi-zhi", 
        "https://www.zhihu.com/people/a-wei-88-6", 
        "https://www.zhihu.com/people/tomery-21", 
        "https://www.zhihu.com/people/ladyl-13", 
        "https://www.zhihu.com/people/fucktheholl", 
        "https://www.zhihu.com/people/mo-xiao-yu-19"
    ], 
    "article": [
        {
            "url": "https://zhuanlan.zhihu.com/p/35727953", 
            "userName": "Manson", 
            "userLink": "https://www.zhihu.com/people/e7d815cced6c3c702b7f058661f05dce", 
            "upvote": 3, 
            "title": "（5）Python初入坑之pandas基础实操四", 
            "content": "<p>       本节介绍数据的加载，存储与合并。</p><p>       pandas可以将表格型的数据读取为DataFrame对象，例如比较常用的csv和excel文件。</p><p>       首先我们来看一下打开csv文件的玩法。</p><p><b>一、数据的加载</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-e7ec42c8d4c76e84249ba97f49c1f972_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1004\" data-rawheight=\"149\" class=\"origin_image zh-lightbox-thumb\" width=\"1004\" data-original=\"https://pic3.zhimg.com/v2-e7ec42c8d4c76e84249ba97f49c1f972_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1004&#39; height=&#39;149&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1004\" data-rawheight=\"149\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1004\" data-original=\"https://pic3.zhimg.com/v2-e7ec42c8d4c76e84249ba97f49c1f972_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-e7ec42c8d4c76e84249ba97f49c1f972_b.jpg\"/></figure><p>       先自己用excel做了一个示例文件，里面内容是rand分布的9行6列的表格，按照教程的代码输入，打开，提示报错。</p><p>       报错的语句，百度了一下，大概是以下的原因。</p><p><b>在Python中\\是转义符，\\u表示其后是UNICODE编码，因此\\User在这里会报错，在字符串前面加个r表示就可以了。</b></p><p>回想起之前在廖雪峰教程中学习的转义符内容，我们在前面加一个r，表示后面的内容不需要转义。我们再试一下。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-46dee5fea6a97ca7d10fe781570764f5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"303\" data-rawheight=\"51\" class=\"content_image\" width=\"303\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;303&#39; height=&#39;51&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"303\" data-rawheight=\"51\" class=\"content_image lazy\" width=\"303\" data-actualsrc=\"https://pic2.zhimg.com/v2-46dee5fea6a97ca7d10fe781570764f5_b.jpg\"/></figure><p>       代码输入之后依旧提示报错，这次报错的信息和上次不太一样。我们再搜索一下。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-3cd4b06cdcf264d79f4377d14c811676_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"598\" data-rawheight=\"268\" class=\"origin_image zh-lightbox-thumb\" width=\"598\" data-original=\"https://pic3.zhimg.com/v2-3cd4b06cdcf264d79f4377d14c811676_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;598&#39; height=&#39;268&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"598\" data-rawheight=\"268\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"598\" data-original=\"https://pic3.zhimg.com/v2-3cd4b06cdcf264d79f4377d14c811676_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-3cd4b06cdcf264d79f4377d14c811676_b.jpg\"/></figure><p>       我的文件名是shili.csv，文件名没有中文，但是路径是有中文的，那我们按照上述方法尝试一下，能否解决。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-028a437e1299ae70c2667403fd0c617f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"880\" data-rawheight=\"380\" class=\"origin_image zh-lightbox-thumb\" width=\"880\" data-original=\"https://pic4.zhimg.com/v2-028a437e1299ae70c2667403fd0c617f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;880&#39; height=&#39;380&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"880\" data-rawheight=\"380\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"880\" data-original=\"https://pic4.zhimg.com/v2-028a437e1299ae70c2667403fd0c617f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-028a437e1299ae70c2667403fd0c617f_b.jpg\"/></figure><p>       这一次，我们成功的加载了shili.csv文件，并且python自动匹配了0-8的行索引。</p><p>       那么有的csv文件不是以逗号分隔的，而是以空格，tab，或者\\t  制表符分隔的，这个时候，我们需要使用<b>sep函数</b>手动设定分隔符。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-26c6c32c4682ce725d84c6b5ee997663_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"887\" data-rawheight=\"390\" class=\"origin_image zh-lightbox-thumb\" width=\"887\" data-original=\"https://pic4.zhimg.com/v2-26c6c32c4682ce725d84c6b5ee997663_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;887&#39; height=&#39;390&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"887\" data-rawheight=\"390\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"887\" data-original=\"https://pic4.zhimg.com/v2-26c6c32c4682ce725d84c6b5ee997663_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-26c6c32c4682ce725d84c6b5ee997663_b.jpg\"/></figure><p>       可以看到，第一行的abcdef自动被识别成了列索引。如果我们不想要abcdef成为索引，而是就让它成为数据的第一行。需要使用限定条件，header=None。None的N要大写，请注意。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-d1fd0ad495e0421a2021d48eb7df65e1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"879\" data-rawheight=\"415\" class=\"origin_image zh-lightbox-thumb\" width=\"879\" data-original=\"https://pic2.zhimg.com/v2-d1fd0ad495e0421a2021d48eb7df65e1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;879&#39; height=&#39;415&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"879\" data-rawheight=\"415\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"879\" data-original=\"https://pic2.zhimg.com/v2-d1fd0ad495e0421a2021d48eb7df65e1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-d1fd0ad495e0421a2021d48eb7df65e1_b.jpg\"/></figure><p>       这个时候abcdef就会成为第一行的数据被识别出来。pandas会自动再匹配列索引。</p><p>       如果我们不想要pandas自动匹配的0-5列索引，我们也可以使用我们自己设定的columns，使用names=。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-0f5376d0f563510c11418e854a122607_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"887\" data-rawheight=\"418\" class=\"origin_image zh-lightbox-thumb\" width=\"887\" data-original=\"https://pic4.zhimg.com/v2-0f5376d0f563510c11418e854a122607_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;887&#39; height=&#39;418&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"887\" data-rawheight=\"418\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"887\" data-original=\"https://pic4.zhimg.com/v2-0f5376d0f563510c11418e854a122607_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-0f5376d0f563510c11418e854a122607_b.jpg\"/></figure><p>       这个时候columns就是我们指定的names了。</p><p>       行的索引是0-5，也是pandas自动匹配的。但是很多时候我们做表的时候，都会自己设置类似于主键这样的index。那比如我们需要把第一列a，设置成为行索引，该怎么设置呢？这个时候就需要使用到index_col=  参数。</p><p>       这个时候dataframe的列索引已经变化了one-six，我们可以用一下方法，将其变回之前的样子（我自己根据之前的内容操作的，不知道有没有可以直接逆操作的函数）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-4391421d948f2256b9956f5bb90753f4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"624\" data-rawheight=\"405\" class=\"origin_image zh-lightbox-thumb\" width=\"624\" data-original=\"https://pic1.zhimg.com/v2-4391421d948f2256b9956f5bb90753f4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;624&#39; height=&#39;405&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"624\" data-rawheight=\"405\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"624\" data-original=\"https://pic1.zhimg.com/v2-4391421d948f2256b9956f5bb90753f4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-4391421d948f2256b9956f5bb90753f4_b.jpg\"/></figure><p>       这个时候再使用index_col  来设置a列为索引。</p><p>       如果是层次化的索引，传入一个列表就行了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-ca441e2f3be21a86cfde602a2e9efe41_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"548\" data-rawheight=\"357\" class=\"origin_image zh-lightbox-thumb\" width=\"548\" data-original=\"https://pic2.zhimg.com/v2-ca441e2f3be21a86cfde602a2e9efe41_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;548&#39; height=&#39;357&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"548\" data-rawheight=\"357\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"548\" data-original=\"https://pic2.zhimg.com/v2-ca441e2f3be21a86cfde602a2e9efe41_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-ca441e2f3be21a86cfde602a2e9efe41_b.jpg\"/></figure><p>       有的时候，表头会有一些文字性的描述，这部分内容我们不需要加载到python中，那就可以用skiprows=  来进行跳过，可以指定跳过哪几行等等。</p><p>       例如下面，我们跳过了第二行和第三行，原本9行的数据我们只加载了7行。这里面的2,3就是指的第二行和第三行，而不是位置代表的第三行第四行。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-84c64fcce3d74a9da43b28ac209573e4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"880\" data-rawheight=\"337\" class=\"origin_image zh-lightbox-thumb\" width=\"880\" data-original=\"https://pic1.zhimg.com/v2-84c64fcce3d74a9da43b28ac209573e4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;880&#39; height=&#39;337&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"880\" data-rawheight=\"337\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"880\" data-original=\"https://pic1.zhimg.com/v2-84c64fcce3d74a9da43b28ac209573e4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-84c64fcce3d74a9da43b28ac209573e4_b.jpg\"/></figure><p>       如果一个文件非常大，我们只需要读取一部分行数，看个大概，那需要使用nrows=  来指定行数。如下我们只需要取前三行。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-f404c217f476ff3f5e396e96e7b82f1b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"505\" data-rawheight=\"231\" class=\"origin_image zh-lightbox-thumb\" width=\"505\" data-original=\"https://pic4.zhimg.com/v2-f404c217f476ff3f5e396e96e7b82f1b_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;505&#39; height=&#39;231&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"505\" data-rawheight=\"231\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"505\" data-original=\"https://pic4.zhimg.com/v2-f404c217f476ff3f5e396e96e7b82f1b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-f404c217f476ff3f5e396e96e7b82f1b_b.jpg\"/></figure><p><b>二、数据的存储</b></p><p>       存储的话，则使用to_csv函数。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-faa90109c769c462a79407fca0ce0a9e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"284\" data-rawheight=\"49\" class=\"content_image\" width=\"284\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;284&#39; height=&#39;49&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"284\" data-rawheight=\"49\" class=\"content_image lazy\" width=\"284\" data-actualsrc=\"https://pic3.zhimg.com/v2-faa90109c769c462a79407fca0ce0a9e_b.jpg\"/></figure><p>       文件会和我们平常存储jupyter notebook的文件一样，存储在默认的路径，例如我的路径就是在C盘的用户文件下，那我可以找到这个文件。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-ea97d2ba0c7a248540eef8af275c5537_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"355\" data-rawheight=\"286\" class=\"content_image\" width=\"355\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;355&#39; height=&#39;286&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"355\" data-rawheight=\"286\" class=\"content_image lazy\" width=\"355\" data-actualsrc=\"https://pic4.zhimg.com/v2-ea97d2ba0c7a248540eef8af275c5537_b.jpg\"/></figure><p>       pandas在输出为csv文件时，会默认给文件增加一个序列，就是0,1,2,3,4这样的序列，那如果我们不需要这样的序列，我们可以添加index=False 参数 来阻止这个操作。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-af3500e8a91faaf8d15ed416438c21d2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"590\" data-rawheight=\"185\" class=\"origin_image zh-lightbox-thumb\" width=\"590\" data-original=\"https://pic3.zhimg.com/v2-af3500e8a91faaf8d15ed416438c21d2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;590&#39; height=&#39;185&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"590\" data-rawheight=\"185\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"590\" data-original=\"https://pic3.zhimg.com/v2-af3500e8a91faaf8d15ed416438c21d2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-af3500e8a91faaf8d15ed416438c21d2_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-e9017d5677d2e55c2591dad472c578fb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"425\" data-rawheight=\"45\" class=\"origin_image zh-lightbox-thumb\" width=\"425\" data-original=\"https://pic4.zhimg.com/v2-e9017d5677d2e55c2591dad472c578fb_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;425&#39; height=&#39;45&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"425\" data-rawheight=\"45\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"425\" data-original=\"https://pic4.zhimg.com/v2-e9017d5677d2e55c2591dad472c578fb_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-e9017d5677d2e55c2591dad472c578fb_b.jpg\"/></figure><p><b>那读取excel文件怎么操作呢？操作其实是一样的，使用read_excel 方法即可，同时文件名后缀不同。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-5c0aaba4c28e2af25b7a56fe86a56b77_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"334\" data-rawheight=\"208\" class=\"content_image\" width=\"334\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;334&#39; height=&#39;208&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"334\" data-rawheight=\"208\" class=\"content_image lazy\" width=\"334\" data-actualsrc=\"https://pic4.zhimg.com/v2-5c0aaba4c28e2af25b7a56fe86a56b77_b.jpg\"/></figure><p>       那么excel文件都会有sheet1，sheet2，也就是子表。那么我们怎么读取一个子表里的内容呢？设定sheetname=  条件即可。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-a94ea037549f32976b5ebcbfefe23ae2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"473\" data-rawheight=\"235\" class=\"origin_image zh-lightbox-thumb\" width=\"473\" data-original=\"https://pic3.zhimg.com/v2-a94ea037549f32976b5ebcbfefe23ae2_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;473&#39; height=&#39;235&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"473\" data-rawheight=\"235\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"473\" data-original=\"https://pic3.zhimg.com/v2-a94ea037549f32976b5ebcbfefe23ae2_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-a94ea037549f32976b5ebcbfefe23ae2_b.jpg\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }, 
                {
                    "tag": "Pandas(Python)", 
                    "tagLink": "https://api.zhihu.com/topics/20179633"
                }, 
                {
                    "tag": "数据分析", 
                    "tagLink": "https://api.zhihu.com/topics/19559424"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/35703270", 
            "userName": "Manson", 
            "userLink": "https://www.zhihu.com/people/e7d815cced6c3c702b7f058661f05dce", 
            "upvote": 5, 
            "title": "（4）Python初入坑之pandas基础实操三", 
            "content": "<p>        本节介绍DataFrame汇总的统计方法。</p><p>        首先创建一个基本的DataFrame，我们看一下如何在dataframe上应用一个函数。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-a53bb6c0a6cd45eb4c1d4ae9832cf834_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"555\" data-rawheight=\"425\" class=\"origin_image zh-lightbox-thumb\" width=\"555\" data-original=\"https://pic1.zhimg.com/v2-a53bb6c0a6cd45eb4c1d4ae9832cf834_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;555&#39; height=&#39;425&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"555\" data-rawheight=\"425\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"555\" data-original=\"https://pic1.zhimg.com/v2-a53bb6c0a6cd45eb4c1d4ae9832cf834_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-a53bb6c0a6cd45eb4c1d4ae9832cf834_b.jpg\"/></figure><p>        默认按照列进行运算。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-697cc1151328c4271108b941445527cd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"521\" data-rawheight=\"340\" class=\"origin_image zh-lightbox-thumb\" width=\"521\" data-original=\"https://pic2.zhimg.com/v2-697cc1151328c4271108b941445527cd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;521&#39; height=&#39;340&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"521\" data-rawheight=\"340\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"521\" data-original=\"https://pic2.zhimg.com/v2-697cc1151328c4271108b941445527cd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-697cc1151328c4271108b941445527cd_b.jpg\"/></figure><p>        如果想要在dataframe上使用自己自定义的函数，可以设置一个lambda函数，再apply到data上。lambda函数的书写样式为  (lambda x： 内容         )。默认在列执行，所以是列的最大值减去最小值。设定参数axis=1，则是每一行的最大值减去最小值。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-3f600043e32efd28e0a16a932e8620e8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"374\" data-rawheight=\"173\" class=\"content_image\" width=\"374\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;374&#39; height=&#39;173&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"374\" data-rawheight=\"173\" class=\"content_image lazy\" width=\"374\" data-actualsrc=\"https://pic1.zhimg.com/v2-3f600043e32efd28e0a16a932e8620e8_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-648dd8eedfba2e6e900290dfee4bce04_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"390\" data-rawheight=\"227\" class=\"content_image\" width=\"390\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;390&#39; height=&#39;227&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"390\" data-rawheight=\"227\" class=\"content_image lazy\" width=\"390\" data-actualsrc=\"https://pic1.zhimg.com/v2-648dd8eedfba2e6e900290dfee4bce04_b.jpg\"/></figure><p>        同样可以对单独一列使用apply函数。因为取出来data[&#39;a]是单独一列，也就是一个Series，所以也可以使用map函数，等同于apply函数。但是如果取出来两列，就只能用apply函数了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-47348144fca570ba5c08d88bdb3bd221_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"440\" data-rawheight=\"447\" class=\"origin_image zh-lightbox-thumb\" width=\"440\" data-original=\"https://pic2.zhimg.com/v2-47348144fca570ba5c08d88bdb3bd221_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;440&#39; height=&#39;447&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"440\" data-rawheight=\"447\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"440\" data-original=\"https://pic2.zhimg.com/v2-47348144fca570ba5c08d88bdb3bd221_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-47348144fca570ba5c08d88bdb3bd221_b.jpg\"/></figure><p>        如果想要对dataframe中的每一个元素都使用该函数，要使用applymap函数。applymap函数是元素级别的运算，apply是行和列的计算，map是运用在Series上的元素级别的运算。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-3363da9e3ea4d861edea11e26a2f3a26_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"539\" data-rawheight=\"331\" class=\"origin_image zh-lightbox-thumb\" width=\"539\" data-original=\"https://pic3.zhimg.com/v2-3363da9e3ea4d861edea11e26a2f3a26_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;539&#39; height=&#39;331&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"539\" data-rawheight=\"331\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"539\" data-original=\"https://pic3.zhimg.com/v2-3363da9e3ea4d861edea11e26a2f3a26_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-3363da9e3ea4d861edea11e26a2f3a26_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-8711056dbf1c186442100caf7af121a3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"541\" data-rawheight=\"231\" class=\"origin_image zh-lightbox-thumb\" width=\"541\" data-original=\"https://pic4.zhimg.com/v2-8711056dbf1c186442100caf7af121a3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;541&#39; height=&#39;231&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"541\" data-rawheight=\"231\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"541\" data-original=\"https://pic4.zhimg.com/v2-8711056dbf1c186442100caf7af121a3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-8711056dbf1c186442100caf7af121a3_b.jpg\"/></figure><p>        sum() 是求和，默认对每一列求和，axis=1，则按照列方向，对每一行加总。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-616944cd46201f049faae6005cf73bef_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"269\" data-rawheight=\"400\" class=\"content_image\" width=\"269\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;269&#39; height=&#39;400&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"269\" data-rawheight=\"400\" class=\"content_image lazy\" width=\"269\" data-actualsrc=\"https://pic4.zhimg.com/v2-616944cd46201f049faae6005cf73bef_b.jpg\"/></figure><p>        idxmax() 是默认按照axis=0，即按照行往下的方向，返回该列最大值所在的位置索引。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-1a7a4528ed062bc53404b0e400997331_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"291\" data-rawheight=\"398\" class=\"content_image\" width=\"291\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;291&#39; height=&#39;398&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"291\" data-rawheight=\"398\" class=\"content_image lazy\" width=\"291\" data-actualsrc=\"https://pic2.zhimg.com/v2-1a7a4528ed062bc53404b0e400997331_b.jpg\"/></figure><p>        再根据这个索引位置，就可以把某一行或者某一列的最大值取出来。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-114169959356520fd0279c105dd6694b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"288\" data-rawheight=\"69\" class=\"content_image\" width=\"288\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;288&#39; height=&#39;69&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"288\" data-rawheight=\"69\" class=\"content_image lazy\" width=\"288\" data-actualsrc=\"https://pic4.zhimg.com/v2-114169959356520fd0279c105dd6694b_b.jpg\"/></figure><p><b>        寻找唯一值</b></p><p>        寻找唯一值需要使用unique函数。</p><p>        例如，要取出下面这个dataframe中a列的唯一值，也是默认取列的值。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-5d1fb0b66a4ce251134feafb252e24fa_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"602\" data-rawheight=\"328\" class=\"origin_image zh-lightbox-thumb\" width=\"602\" data-original=\"https://pic3.zhimg.com/v2-5d1fb0b66a4ce251134feafb252e24fa_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;602&#39; height=&#39;328&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"602\" data-rawheight=\"328\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"602\" data-original=\"https://pic3.zhimg.com/v2-5d1fb0b66a4ce251134feafb252e24fa_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-5d1fb0b66a4ce251134feafb252e24fa_b.jpg\"/></figure><p>      那如果要对dataframe中出现的元素次数进行计数，则使用value_counts()  函数。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-e7a1469b29109cb58522dd2ac1e8ccd6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"294\" data-rawheight=\"139\" class=\"content_image\" width=\"294\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;294&#39; height=&#39;139&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"294\" data-rawheight=\"139\" class=\"content_image lazy\" width=\"294\" data-actualsrc=\"https://pic3.zhimg.com/v2-e7a1469b29109cb58522dd2ac1e8ccd6_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-8ea1e7297bd17b64644b33abc543734c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"295\" data-rawheight=\"148\" class=\"content_image\" width=\"295\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;295&#39; height=&#39;148&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"295\" data-rawheight=\"148\" class=\"content_image lazy\" width=\"295\" data-actualsrc=\"https://pic1.zhimg.com/v2-8ea1e7297bd17b64644b33abc543734c_b.jpg\"/></figure><p>        isin函数是判断某一列是不是在某个数据范围内，比如下面这个代码就是判断a列的数值是不是在[7,8,9]中，会返回一系列布尔值，再根据布尔值取True，就可以取出在[7,8,9]中的值的集合了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-7d3ac9f2b5139a4b76e40d6adc815d24_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"326\" data-rawheight=\"286\" class=\"content_image\" width=\"326\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;326&#39; height=&#39;286&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"326\" data-rawheight=\"286\" class=\"content_image lazy\" width=\"326\" data-actualsrc=\"https://pic1.zhimg.com/v2-7d3ac9f2b5139a4b76e40d6adc815d24_b.jpg\"/></figure><p>        另外还有一些计算函数，data.cumsun() 是按列累加，data.corr() 是计算相关系数，data.cov()  是计算协方差，data.corrwith(data.b)是计算与B列的相关系数。</p><p class=\"ztext-empty-paragraph\"><br/></p><p><b>层次化索引</b></p><p>        层次化索引是指有两维的索引。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-2ccc179eef5370811e6e7f7b41b90003_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"801\" data-rawheight=\"290\" class=\"origin_image zh-lightbox-thumb\" width=\"801\" data-original=\"https://pic4.zhimg.com/v2-2ccc179eef5370811e6e7f7b41b90003_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;801&#39; height=&#39;290&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"801\" data-rawheight=\"290\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"801\" data-original=\"https://pic4.zhimg.com/v2-2ccc179eef5370811e6e7f7b41b90003_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-2ccc179eef5370811e6e7f7b41b90003_b.jpg\"/></figure><p>        例如上面这个dataframe的行索引就有两层，外层索引为m,n，内层索引为abcdef。</p><p>        那如果想要把行索引放到列的column那里，需要怎么操作呢？使用unstack()</p><p>        使用unstack()  是把内层索引，变换到列索引上。</p><p>        使用unstack(0)  是把外层索引，变换到列索引上。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-68679620b4048d50132341a1df658dfc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1101\" data-rawheight=\"227\" class=\"origin_image zh-lightbox-thumb\" width=\"1101\" data-original=\"https://pic1.zhimg.com/v2-68679620b4048d50132341a1df658dfc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1101&#39; height=&#39;227&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1101\" data-rawheight=\"227\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1101\" data-original=\"https://pic1.zhimg.com/v2-68679620b4048d50132341a1df658dfc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-68679620b4048d50132341a1df658dfc_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-9327e7f866850b8944f27df4ac6b7fce_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"662\" data-rawheight=\"269\" class=\"origin_image zh-lightbox-thumb\" width=\"662\" data-original=\"https://pic3.zhimg.com/v2-9327e7f866850b8944f27df4ac6b7fce_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;662&#39; height=&#39;269&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"662\" data-rawheight=\"269\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"662\" data-original=\"https://pic3.zhimg.com/v2-9327e7f866850b8944f27df4ac6b7fce_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-9327e7f866850b8944f27df4ac6b7fce_b.jpg\"/></figure><p>        那么，逆运算就是stack()了~</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-3fc4e4078aca23ff7a55da27db9a7b20_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"434\" data-rawheight=\"245\" class=\"origin_image zh-lightbox-thumb\" width=\"434\" data-original=\"https://pic1.zhimg.com/v2-3fc4e4078aca23ff7a55da27db9a7b20_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;434&#39; height=&#39;245&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"434\" data-rawheight=\"245\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"434\" data-original=\"https://pic1.zhimg.com/v2-3fc4e4078aca23ff7a55da27db9a7b20_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-3fc4e4078aca23ff7a55da27db9a7b20_b.jpg\"/></figure><p><b> 列设置为索引</b></p><p>   使用set_index函数，可以把dataframe中现有的某一列设置为索引，那如果设置成两列，就是上面的层次化索引了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-33c6a92d83dd7ed172e6c3670547b862_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"515\" data-rawheight=\"344\" class=\"origin_image zh-lightbox-thumb\" width=\"515\" data-original=\"https://pic3.zhimg.com/v2-33c6a92d83dd7ed172e6c3670547b862_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;515&#39; height=&#39;344&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"515\" data-rawheight=\"344\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"515\" data-original=\"https://pic3.zhimg.com/v2-33c6a92d83dd7ed172e6c3670547b862_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-33c6a92d83dd7ed172e6c3670547b862_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-cc41e8a4fedb2141cf19f3c8c02e3625_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"512\" data-rawheight=\"352\" class=\"origin_image zh-lightbox-thumb\" width=\"512\" data-original=\"https://pic2.zhimg.com/v2-cc41e8a4fedb2141cf19f3c8c02e3625_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;512&#39; height=&#39;352&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"512\" data-rawheight=\"352\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"512\" data-original=\"https://pic2.zhimg.com/v2-cc41e8a4fedb2141cf19f3c8c02e3625_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-cc41e8a4fedb2141cf19f3c8c02e3625_b.jpg\"/></figure><p>        可以发现，将a,b设为索引之后，后面的列中就不包括a，b的值了。那可以再加上限定条件，drop=False，则在把a,b设为索引的同时，还保留a，b的值。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-cced67b30871725cec1f5a42fcf05616_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"656\" data-rawheight=\"350\" class=\"origin_image zh-lightbox-thumb\" width=\"656\" data-original=\"https://pic3.zhimg.com/v2-cced67b30871725cec1f5a42fcf05616_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;656&#39; height=&#39;350&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"656\" data-rawheight=\"350\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"656\" data-original=\"https://pic3.zhimg.com/v2-cced67b30871725cec1f5a42fcf05616_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-cced67b30871725cec1f5a42fcf05616_b.jpg\"/></figure><p>        之前的data.set_index([&#39;a&#39;,&#39;b&#39;])，是将a，b设置成索引，返回了这样一个值，但是data本身并没有变化。如果要对data本身执行这项操作且生效，需要加上条件，inplace=True。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-3597d9be1bce60789e3ce072549e6b73_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"537\" data-rawheight=\"389\" class=\"origin_image zh-lightbox-thumb\" width=\"537\" data-original=\"https://pic4.zhimg.com/v2-3597d9be1bce60789e3ce072549e6b73_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;537&#39; height=&#39;389&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"537\" data-rawheight=\"389\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"537\" data-original=\"https://pic4.zhimg.com/v2-3597d9be1bce60789e3ce072549e6b73_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-3597d9be1bce60789e3ce072549e6b73_b.jpg\"/></figure><p>        那如果想要返回之前的操作，把这些数据的索引，变回dataframe本身的数据，那需要使用reset_index()函数，相当于之前set_index()的逆操作。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-8c777fd598bc27d385dabfc5c4c5f997_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"520\" data-rawheight=\"325\" class=\"origin_image zh-lightbox-thumb\" width=\"520\" data-original=\"https://pic4.zhimg.com/v2-8c777fd598bc27d385dabfc5c4c5f997_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;520&#39; height=&#39;325&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"520\" data-rawheight=\"325\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"520\" data-original=\"https://pic4.zhimg.com/v2-8c777fd598bc27d385dabfc5c4c5f997_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-8c777fd598bc27d385dabfc5c4c5f997_b.jpg\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }, 
                {
                    "tag": "Pandas(Python)", 
                    "tagLink": "https://api.zhihu.com/topics/20179633"
                }, 
                {
                    "tag": "数据分析", 
                    "tagLink": "https://api.zhihu.com/topics/19559424"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/35700585", 
            "userName": "Manson", 
            "userLink": "https://www.zhihu.com/people/e7d815cced6c3c702b7f058661f05dce", 
            "upvote": 2, 
            "title": "（3）Python初入坑之pandas基础实操二", 
            "content": "<p><b>本节主要介绍DataFrame的数据观察，排序及缺失值处理</b></p><p><b>一、数据的观察</b></p><p>先来看一下对于DataFrame的观察方法。</p><p>        如果一份数据特别大，DataFrame有几千上万行，那么就不能全部看到他的数据。</p><p>        首先可以使用head()   和tail()   查看整个数据的前5行，后5行，默认是选取5行。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-18a0e806986d51f0977ee33aa0f583bd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"519\" data-rawheight=\"422\" class=\"origin_image zh-lightbox-thumb\" width=\"519\" data-original=\"https://pic2.zhimg.com/v2-18a0e806986d51f0977ee33aa0f583bd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;519&#39; height=&#39;422&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"519\" data-rawheight=\"422\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"519\" data-original=\"https://pic2.zhimg.com/v2-18a0e806986d51f0977ee33aa0f583bd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-18a0e806986d51f0977ee33aa0f583bd_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-1800f281eb9d5936316ab64ca9fe9199_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"530\" data-rawheight=\"439\" class=\"origin_image zh-lightbox-thumb\" width=\"530\" data-original=\"https://pic2.zhimg.com/v2-1800f281eb9d5936316ab64ca9fe9199_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;530&#39; height=&#39;439&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"530\" data-rawheight=\"439\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"530\" data-original=\"https://pic2.zhimg.com/v2-1800f281eb9d5936316ab64ca9fe9199_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-1800f281eb9d5936316ab64ca9fe9199_b.jpg\"/></figure><p>        输入行数，那么也可以返回前N行，和后N行。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-2032c71e686173d28092c09499bc48fc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"506\" data-rawheight=\"284\" class=\"origin_image zh-lightbox-thumb\" width=\"506\" data-original=\"https://pic1.zhimg.com/v2-2032c71e686173d28092c09499bc48fc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;506&#39; height=&#39;284&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"506\" data-rawheight=\"284\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"506\" data-original=\"https://pic1.zhimg.com/v2-2032c71e686173d28092c09499bc48fc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-2032c71e686173d28092c09499bc48fc_b.jpg\"/></figure><p>        同样对于DataFrame，可以用  T  进行转置。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-bb59da1ce14f0c0826e6f4f932e77dac_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"685\" data-rawheight=\"250\" class=\"origin_image zh-lightbox-thumb\" width=\"685\" data-original=\"https://pic1.zhimg.com/v2-bb59da1ce14f0c0826e6f4f932e77dac_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;685&#39; height=&#39;250&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"685\" data-rawheight=\"250\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"685\" data-original=\"https://pic1.zhimg.com/v2-bb59da1ce14f0c0826e6f4f932e77dac_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-bb59da1ce14f0c0826e6f4f932e77dac_b.jpg\"/></figure><p>        通过columns和index查看列索引，和行索引。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-df74224a52bcab40826c57da13407ed3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"459\" data-rawheight=\"145\" class=\"origin_image zh-lightbox-thumb\" width=\"459\" data-original=\"https://pic4.zhimg.com/v2-df74224a52bcab40826c57da13407ed3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;459&#39; height=&#39;145&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"459\" data-rawheight=\"145\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"459\" data-original=\"https://pic4.zhimg.com/v2-df74224a52bcab40826c57da13407ed3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-df74224a52bcab40826c57da13407ed3_b.jpg\"/></figure><p><b>有一种非常常用的方法是describe</b>，它可以直接描述出这个DataFrame的常用的信息汇总。例如计数，平均值，标准差，最小值，25%分位，最大值等等。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-422933b90c56ce63e21ce32a82966a9c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"521\" data-rawheight=\"287\" class=\"origin_image zh-lightbox-thumb\" width=\"521\" data-original=\"https://pic1.zhimg.com/v2-422933b90c56ce63e21ce32a82966a9c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;521&#39; height=&#39;287&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"521\" data-rawheight=\"287\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"521\" data-original=\"https://pic1.zhimg.com/v2-422933b90c56ce63e21ce32a82966a9c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-422933b90c56ce63e21ce32a82966a9c_b.jpg\"/></figure><p>        当然也可以单独查看数据的均值。直接用mean函数即可。</p><p>        直接求均值，会默认求每一列的均值。如果要求每一行的均值，要用mean(axis=1)，或者简写成mean(1)也可以。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-f552e0e1e4fb14df93864c2922231fd2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"282\" data-rawheight=\"397\" class=\"content_image\" width=\"282\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;282&#39; height=&#39;397&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"282\" data-rawheight=\"397\" class=\"content_image lazy\" width=\"282\" data-actualsrc=\"https://pic3.zhimg.com/v2-f552e0e1e4fb14df93864c2922231fd2_b.jpg\"/></figure><p><b>二、数据的排序</b></p><p>        排序可以根据索引排序，也可以根据某一列，某一行的值进行排序。</p><p>        例如根据索引排序，用sort_index。axis=1是指根据列的索引进行排序，即对abcdef排序。ascending=False即降序排序，True则升序排序。（ascending的意思就是上升）。不填ascending=False则默认升序。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-cd906d3759749687150033e483002272_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"499\" data-rawheight=\"325\" class=\"origin_image zh-lightbox-thumb\" width=\"499\" data-original=\"https://pic3.zhimg.com/v2-cd906d3759749687150033e483002272_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;499&#39; height=&#39;325&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"499\" data-rawheight=\"325\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"499\" data-original=\"https://pic3.zhimg.com/v2-cd906d3759749687150033e483002272_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-cd906d3759749687150033e483002272_b.jpg\"/></figure><p>        如果要根据某列排序，则要用到sort_values了，用by=来匹配。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-13826d36925de371ed0d1889ac10f6e1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"513\" data-rawheight=\"320\" class=\"origin_image zh-lightbox-thumb\" width=\"513\" data-original=\"https://pic2.zhimg.com/v2-13826d36925de371ed0d1889ac10f6e1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;513&#39; height=&#39;320&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"513\" data-rawheight=\"320\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"513\" data-original=\"https://pic2.zhimg.com/v2-13826d36925de371ed0d1889ac10f6e1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-13826d36925de371ed0d1889ac10f6e1_b.jpg\"/></figure><p>        利用reindex可以自由选取某几行，并进行排序。并且可以选取了几行之后，再指定选取某几列。也可以重新匹配索引，只是匹配不到的值会返回NaN。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-43a72d1c8e9f3f9fd64dda22f743080f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"529\" data-rawheight=\"208\" class=\"origin_image zh-lightbox-thumb\" width=\"529\" data-original=\"https://pic4.zhimg.com/v2-43a72d1c8e9f3f9fd64dda22f743080f_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;529&#39; height=&#39;208&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"529\" data-rawheight=\"208\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"529\" data-original=\"https://pic4.zhimg.com/v2-43a72d1c8e9f3f9fd64dda22f743080f_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-43a72d1c8e9f3f9fd64dda22f743080f_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-83f80bf64584c8bf1a20ceaab6c258dc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"480\" data-rawheight=\"195\" class=\"origin_image zh-lightbox-thumb\" width=\"480\" data-original=\"https://pic1.zhimg.com/v2-83f80bf64584c8bf1a20ceaab6c258dc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;480&#39; height=&#39;195&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"480\" data-rawheight=\"195\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"480\" data-original=\"https://pic1.zhimg.com/v2-83f80bf64584c8bf1a20ceaab6c258dc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-83f80bf64584c8bf1a20ceaab6c258dc_b.jpg\"/></figure><p><b> 如何删除一列或者删除一行。</b></p><p>        删除一列可以用del函数。删除一行可以用drop函数。只不过二者表达不太一样。</p><p>        del data.[&#39;e&#39;] 是删除e列。data.drop(1)则是删除第二行。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-07dd1918e49a8692f9950e7363da5e11_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"458\" data-rawheight=\"371\" class=\"origin_image zh-lightbox-thumb\" width=\"458\" data-original=\"https://pic2.zhimg.com/v2-07dd1918e49a8692f9950e7363da5e11_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;458&#39; height=&#39;371&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"458\" data-rawheight=\"371\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"458\" data-original=\"https://pic2.zhimg.com/v2-07dd1918e49a8692f9950e7363da5e11_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-07dd1918e49a8692f9950e7363da5e11_b.jpg\"/></figure><p class=\"ztext-empty-paragraph\"><br/></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-f477d99d32c0c58d9a0bcfdda7dd59d6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"470\" data-rawheight=\"297\" class=\"origin_image zh-lightbox-thumb\" width=\"470\" data-original=\"https://pic3.zhimg.com/v2-f477d99d32c0c58d9a0bcfdda7dd59d6_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;470&#39; height=&#39;297&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"470\" data-rawheight=\"297\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"470\" data-original=\"https://pic3.zhimg.com/v2-f477d99d32c0c58d9a0bcfdda7dd59d6_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-f477d99d32c0c58d9a0bcfdda7dd59d6_b.jpg\"/></figure><p>        其实drop除了删除行，也能删除列，但是要用axis=1来指定为列，否则就默认删除行。</p><p>        同时可以输入一个列表，就可以同时删除多列或者多行。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-2b0d0199aa5186e856cb215502bad682_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"387\" data-rawheight=\"328\" class=\"content_image\" width=\"387\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;387&#39; height=&#39;328&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"387\" data-rawheight=\"328\" class=\"content_image lazy\" width=\"387\" data-actualsrc=\"https://pic3.zhimg.com/v2-2b0d0199aa5186e856cb215502bad682_b.jpg\"/></figure><p><b>三、DataFrame的运算</b></p><p>        对于dataframe的运算，如果能匹配到相同的行和列，则会对元素进行运算，匹配不到的行和列会返回NaN值。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-4c02f1a7d0aab5f4b4ce6675e097d3ef_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"538\" data-rawheight=\"282\" class=\"origin_image zh-lightbox-thumb\" width=\"538\" data-original=\"https://pic4.zhimg.com/v2-4c02f1a7d0aab5f4b4ce6675e097d3ef_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;538&#39; height=&#39;282&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"538\" data-rawheight=\"282\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"538\" data-original=\"https://pic4.zhimg.com/v2-4c02f1a7d0aab5f4b4ce6675e097d3ef_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-4c02f1a7d0aab5f4b4ce6675e097d3ef_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-0c83874397cef012b4ac5734fd0b2c3c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"442\" data-rawheight=\"328\" class=\"origin_image zh-lightbox-thumb\" width=\"442\" data-original=\"https://pic1.zhimg.com/v2-0c83874397cef012b4ac5734fd0b2c3c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;442&#39; height=&#39;328&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"442\" data-rawheight=\"328\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"442\" data-original=\"https://pic1.zhimg.com/v2-0c83874397cef012b4ac5734fd0b2c3c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-0c83874397cef012b4ac5734fd0b2c3c_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-c091f3881843a99df6e36735de297b50_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"426\" data-rawheight=\"330\" class=\"origin_image zh-lightbox-thumb\" width=\"426\" data-original=\"https://pic1.zhimg.com/v2-c091f3881843a99df6e36735de297b50_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;426&#39; height=&#39;330&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"426\" data-rawheight=\"330\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"426\" data-original=\"https://pic1.zhimg.com/v2-c091f3881843a99df6e36735de297b50_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-c091f3881843a99df6e36735de297b50_b.jpg\"/></figure><p><b>四、对于缺失值的处理</b></p><p>        上面的运算结果有很多缺失值，那么对于缺失值我们可以有哪些操作呢？</p><p>        可以利用dropna函数删除每一行的NaN值。限定参数how=‘all’则会删除全部为空值的行，那如果不限定的话，只要该行有空值，就删除该行。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-14f3e388a3df53453f4fcabef08be6f1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"444\" data-rawheight=\"243\" class=\"origin_image zh-lightbox-thumb\" width=\"444\" data-original=\"https://pic2.zhimg.com/v2-14f3e388a3df53453f4fcabef08be6f1_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;444&#39; height=&#39;243&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"444\" data-rawheight=\"243\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"444\" data-original=\"https://pic2.zhimg.com/v2-14f3e388a3df53453f4fcabef08be6f1_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-14f3e388a3df53453f4fcabef08be6f1_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-eab5917e5eecca5852d2539f65d72899_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"103\" class=\"content_image\" width=\"258\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;258&#39; height=&#39;103&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"258\" data-rawheight=\"103\" class=\"content_image lazy\" width=\"258\" data-actualsrc=\"https://pic2.zhimg.com/v2-eab5917e5eecca5852d2539f65d72899_b.jpg\"/></figure><p>        那怎么删除某一列的空值呢？同样，加入参数axis=1。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-7e71e78948d81b0438d8716e189969b4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"332\" data-rawheight=\"333\" class=\"content_image\" width=\"332\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;332&#39; height=&#39;333&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"332\" data-rawheight=\"333\" class=\"content_image lazy\" width=\"332\" data-actualsrc=\"https://pic1.zhimg.com/v2-7e71e78948d81b0438d8716e189969b4_b.jpg\"/></figure><p>        还可以使用fillna函数，来对空值进行填充。fillna(2)就是用2进行填充，还可以用fillna(mean)进行填充，那这样就是填充均值。可以自己设置填充的值。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-7afadad5545774438a58c613b6ba84a4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"426\" data-rawheight=\"326\" class=\"origin_image zh-lightbox-thumb\" width=\"426\" data-original=\"https://pic1.zhimg.com/v2-7afadad5545774438a58c613b6ba84a4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;426&#39; height=&#39;326&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"426\" data-rawheight=\"326\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"426\" data-original=\"https://pic1.zhimg.com/v2-7afadad5545774438a58c613b6ba84a4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-7afadad5545774438a58c613b6ba84a4_b.jpg\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }, 
                {
                    "tag": "Pandas(Python)", 
                    "tagLink": "https://api.zhihu.com/topics/20179633"
                }, 
                {
                    "tag": "数据分析", 
                    "tagLink": "https://api.zhihu.com/topics/19559424"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/35694465", 
            "userName": "Manson", 
            "userLink": "https://www.zhihu.com/people/e7d815cced6c3c702b7f058661f05dce", 
            "upvote": 10, 
            "title": "（2）Python初入坑之pandas基础实操一", 
            "content": "<p><b> 本节简单介绍pandas中的Series和DataFrame结构，创建及索引。</b></p><p>        pandas是python数据分析的主力库，它具有高级的数据结构，是数据分析工作变得更快更简单。pandas基于numpy，纳入了大量库和一些标准的数据模型，提供了高效的操作大型数据库的所需工具。</p><p>        pandas最初作为金融分析工具被开发，所以很好的支持了时间序列分析。利用pandas做数据的读取，清洗，匹配，分析都非常简单。</p><p><b>  pandas的两种数据结构</b></p><p>        Series是一种类似于一维数组的对象，它由一组数据和对应的索引组成。</p><p>        DataFrame是一种类似于二维数组的对象。</p><p>        其中Series和DataFrame都要注意大写。</p><p><b>一、Series内容</b></p><p>        s=pd.Series([1,3,5,np,nan,6,8])   其中np.nan代表空值，也可以作为一个元素。创建Series后，会自动匹配索引。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-09d405f97a8c8bd13748f79d72bac250_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"261\" data-rawheight=\"223\" class=\"content_image\" width=\"261\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;261&#39; height=&#39;223&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"261\" data-rawheight=\"223\" class=\"content_image lazy\" width=\"261\" data-actualsrc=\"https://pic1.zhimg.com/v2-09d405f97a8c8bd13748f79d72bac250_b.jpg\"/></figure><p>        当然我们可以自动匹配不一样的索引，输入index=[]，即可匹配不一样的索引。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-ec259a0c2ecf32c63d2e6d0d6f054504_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"428\" data-rawheight=\"186\" class=\"origin_image zh-lightbox-thumb\" width=\"428\" data-original=\"https://pic1.zhimg.com/v2-ec259a0c2ecf32c63d2e6d0d6f054504_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;428&#39; height=&#39;186&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"428\" data-rawheight=\"186\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"428\" data-original=\"https://pic1.zhimg.com/v2-ec259a0c2ecf32c63d2e6d0d6f054504_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-ec259a0c2ecf32c63d2e6d0d6f054504_b.jpg\"/></figure><p>        通过index和values的方法，可以查看Series的索引和对应值。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-ffb827b360b76ba4a4021ef144495d9f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"150\" class=\"content_image\" width=\"400\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;400&#39; height=&#39;150&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"150\" class=\"content_image lazy\" width=\"400\" data-actualsrc=\"https://pic4.zhimg.com/v2-ffb827b360b76ba4a4021ef144495d9f_b.jpg\"/></figure><p><b>Series的索引取值和切片</b></p><p>   通过索引可以取值，也可以通过布尔值判断取值，取为True的值。用法非常类似于numpy。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-7643bbe0466e6bcde222ed256bcb91ae_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"274\" data-rawheight=\"281\" class=\"content_image\" width=\"274\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;274&#39; height=&#39;281&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"274\" data-rawheight=\"281\" class=\"content_image lazy\" width=\"274\" data-actualsrc=\"https://pic3.zhimg.com/v2-7643bbe0466e6bcde222ed256bcb91ae_b.jpg\"/></figure><p>        对于Series可以直接进行运算。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-07ba21e8c7382395fe30c11e2e6ee2dc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"267\" data-rawheight=\"301\" class=\"content_image\" width=\"267\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;267&#39; height=&#39;301&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"267\" data-rawheight=\"301\" class=\"content_image lazy\" width=\"267\" data-actualsrc=\"https://pic1.zhimg.com/v2-07ba21e8c7382395fe30c11e2e6ee2dc_b.jpg\"/></figure><p>        通过in函数，也可以判断values以及index是否包含某个值。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-fa2278ae5c3c21ed4d2ad3d74e94db9f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"252\" data-rawheight=\"150\" class=\"content_image\" width=\"252\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;252&#39; height=&#39;150&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"252\" data-rawheight=\"150\" class=\"content_image lazy\" width=\"252\" data-actualsrc=\"https://pic4.zhimg.com/v2-fa2278ae5c3c21ed4d2ad3d74e94db9f_b.jpg\"/></figure><p>        Series这种包含索引和值的结构，<b>非常类似于字典</b>。所以可以用字典直接创建Series，key则作为索引，字典的value就是Series的value。当然也可以取字典的值，重新匹配索引。新的索引会根据字典内的值取值，匹配不到则返回NaN值。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-396876dbc392ff43503840dccdb3530c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"465\" data-rawheight=\"329\" class=\"origin_image zh-lightbox-thumb\" width=\"465\" data-original=\"https://pic1.zhimg.com/v2-396876dbc392ff43503840dccdb3530c_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;465&#39; height=&#39;329&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"465\" data-rawheight=\"329\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"465\" data-original=\"https://pic1.zhimg.com/v2-396876dbc392ff43503840dccdb3530c_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-396876dbc392ff43503840dccdb3530c_b.jpg\"/></figure><p>        通过isnull和  notnull可以判断值是否为空。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-f5db9d1211ae85c2bf3fbf297b08567b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"241\" data-rawheight=\"244\" class=\"content_image\" width=\"241\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;241&#39; height=&#39;244&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"241\" data-rawheight=\"244\" class=\"content_image lazy\" width=\"241\" data-actualsrc=\"https://pic4.zhimg.com/v2-f5db9d1211ae85c2bf3fbf297b08567b_b.jpg\"/></figure><p>        Series可以进行运算，会自动按照索引对齐，无法匹配的值则返回NaN值。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-1188aa24dad4189ab155dfec948a95f5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"350\" data-rawheight=\"221\" class=\"content_image\" width=\"350\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;350&#39; height=&#39;221&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"350\" data-rawheight=\"221\" class=\"content_image lazy\" width=\"350\" data-actualsrc=\"https://pic2.zhimg.com/v2-1188aa24dad4189ab155dfec948a95f5_b.jpg\"/></figure><p><b>二、DataFrame的创建和索引</b></p><p>        如果一个字典中，每一个key对应的值都是数组，列表或者Series的形式存在，即多个值，则可以用这样的字典直接创建DataFrame。key会直接转化为DataFrame的列索引，行索引则默认是0开始的整型序号。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-d32efeee5cca0d31575a1017a21ebc77_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"472\" data-rawheight=\"320\" class=\"origin_image zh-lightbox-thumb\" width=\"472\" data-original=\"https://pic4.zhimg.com/v2-d32efeee5cca0d31575a1017a21ebc77_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;472&#39; height=&#39;320&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"472\" data-rawheight=\"320\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"472\" data-original=\"https://pic4.zhimg.com/v2-d32efeee5cca0d31575a1017a21ebc77_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-d32efeee5cca0d31575a1017a21ebc77_b.jpg\"/></figure><p>        当然行索引和列索引都可以自己指定为其他的索引。如下，行索引就被指定为创建好的xuhao，列索引则是列表abcd。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-1220feb7549d636a28b8d37f328fae98_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"579\" data-rawheight=\"305\" class=\"origin_image zh-lightbox-thumb\" width=\"579\" data-original=\"https://pic1.zhimg.com/v2-1220feb7549d636a28b8d37f328fae98_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;579&#39; height=&#39;305&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"579\" data-rawheight=\"305\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"579\" data-original=\"https://pic1.zhimg.com/v2-1220feb7549d636a28b8d37f328fae98_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-1220feb7549d636a28b8d37f328fae98_b.jpg\"/></figure><p>        通过columns和index可以查看列索引和行索引。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-dd65ae48a5fa2820a0c5d6191bbf7896_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"585\" data-rawheight=\"144\" class=\"origin_image zh-lightbox-thumb\" width=\"585\" data-original=\"https://pic3.zhimg.com/v2-dd65ae48a5fa2820a0c5d6191bbf7896_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;585&#39; height=&#39;144&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"585\" data-rawheight=\"144\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"585\" data-original=\"https://pic3.zhimg.com/v2-dd65ae48a5fa2820a0c5d6191bbf7896_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-dd65ae48a5fa2820a0c5d6191bbf7896_b.jpg\"/></figure><p>        通过行索引和列索引，可以取某一行，某一列，或者多行，多列。也可取出单个值。也可以通过切片的形式取行列。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-01203c1ae424713dc2c3815a697622ee_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"360\" data-rawheight=\"417\" class=\"content_image\" width=\"360\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;360&#39; height=&#39;417&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"360\" data-rawheight=\"417\" class=\"content_image lazy\" width=\"360\" data-actualsrc=\"https://pic3.zhimg.com/v2-01203c1ae424713dc2c3815a697622ee_b.jpg\"/></figure><p>        通过以上这样的输入单个或者多个列索引的方法，可以直接取出列。但是输入行的索引，直接取会报错。所以以上的索引方法只适用于取列。</p><p>        通过直接切片的方法，则是默认取行的值，就可以取行了。如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-b92fa60383c3b6106eaa9a146970f9b8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"430\" data-rawheight=\"265\" class=\"origin_image zh-lightbox-thumb\" width=\"430\" data-original=\"https://pic1.zhimg.com/v2-b92fa60383c3b6106eaa9a146970f9b8_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;430&#39; height=&#39;265&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"430\" data-rawheight=\"265\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"430\" data-original=\"https://pic1.zhimg.com/v2-b92fa60383c3b6106eaa9a146970f9b8_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-b92fa60383c3b6106eaa9a146970f9b8_b.jpg\"/></figure><p>        默认取行的用法是loc，要加上loc，就可以直接取行的值了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-2dad8cb84d46f99dd2a95720ad84e9ca_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"408\" data-rawheight=\"277\" class=\"content_image\" width=\"408\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;408&#39; height=&#39;277&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"408\" data-rawheight=\"277\" class=\"content_image lazy\" width=\"408\" data-actualsrc=\"https://pic3.zhimg.com/v2-2dad8cb84d46f99dd2a95720ad84e9ca_b.jpg\"/></figure><p>        用loc取值后，再通过列索引取值的话，则可以取出一部分精细的值。</p><p>        当然也可以用冒号：，来表示取某区域内全部的值。</p><p>        取一行之后，再取一列，则取出来的是一个精确值。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-97e4ce4942d7b7d315a4db977906288f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"420\" data-rawheight=\"465\" class=\"content_image\" width=\"420\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;420&#39; height=&#39;465&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"420\" data-rawheight=\"465\" class=\"content_image lazy\" width=\"420\" data-actualsrc=\"https://pic4.zhimg.com/v2-97e4ce4942d7b7d315a4db977906288f_b.jpg\"/></figure><p>        如果要通过位置而非索引来取值，则用iloc。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-a5dc86ab1b8711482d58b8f7b2e10fbd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"306\" data-rawheight=\"282\" class=\"content_image\" width=\"306\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;306&#39; height=&#39;282&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"306\" data-rawheight=\"282\" class=\"content_image lazy\" width=\"306\" data-actualsrc=\"https://pic2.zhimg.com/v2-a5dc86ab1b8711482d58b8f7b2e10fbd_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-f73a3ec82cd7bd17fa99130d10981813_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"227\" data-rawheight=\"78\" class=\"content_image\" width=\"227\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;227&#39; height=&#39;78&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"227\" data-rawheight=\"78\" class=\"content_image lazy\" width=\"227\" data-actualsrc=\"https://pic4.zhimg.com/v2-f73a3ec82cd7bd17fa99130d10981813_b.jpg\"/></figure><p>         对于DataFrame，同样可以使用布尔值来取值。例如DataFrame中全部大于0的值，例如其中第一列大于0的值。同样也可以取出来之后，再进行这部分区域的赋值。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-a982c576c0acf4db2ee84858563533b7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"458\" data-rawheight=\"384\" class=\"origin_image zh-lightbox-thumb\" width=\"458\" data-original=\"https://pic4.zhimg.com/v2-a982c576c0acf4db2ee84858563533b7_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;458&#39; height=&#39;384&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"458\" data-rawheight=\"384\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"458\" data-original=\"https://pic4.zhimg.com/v2-a982c576c0acf4db2ee84858563533b7_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-a982c576c0acf4db2ee84858563533b7_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-e66e95f2979700624c4b5df5098100ba_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"393\" data-rawheight=\"295\" class=\"content_image\" width=\"393\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;393&#39; height=&#39;295&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"393\" data-rawheight=\"295\" class=\"content_image lazy\" width=\"393\" data-actualsrc=\"https://pic3.zhimg.com/v2-e66e95f2979700624c4b5df5098100ba_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-3324ff5db632d0b60c66609ba20dd406_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"368\" data-rawheight=\"272\" class=\"content_image\" width=\"368\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;368&#39; height=&#39;272&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"368\" data-rawheight=\"272\" class=\"content_image lazy\" width=\"368\" data-actualsrc=\"https://pic3.zhimg.com/v2-3324ff5db632d0b60c66609ba20dd406_b.jpg\"/></figure><p>        如果要为DataFrame增加一列，直接赋值新的列就行，会按照索引自动匹配值，如果没有响应的索引匹配，则返回NaN值。匹配不到的的数值则不会赋值进来（如下图seven索引对应的值5）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-e8ce96f1eef55c184c801de203cef646_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"606\" data-rawheight=\"299\" class=\"origin_image zh-lightbox-thumb\" width=\"606\" data-original=\"https://pic3.zhimg.com/v2-e8ce96f1eef55c184c801de203cef646_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;606&#39; height=&#39;299&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"606\" data-rawheight=\"299\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"606\" data-original=\"https://pic3.zhimg.com/v2-e8ce96f1eef55c184c801de203cef646_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-e8ce96f1eef55c184c801de203cef646_b.jpg\"/></figure><p>        如果用一个字典创建DataFrame，但是这个字典是嵌套型的字典，即key对应的values又是一层字典。那么外层的key则会作为列索引存在，内层的key会作为行索引存在。</p><p>        内层索引会形成所有的行索引，匹配不到的话则返回NaN值。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-b893830ac08126914ba268458d7930e7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"299\" data-rawheight=\"308\" class=\"content_image\" width=\"299\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;299&#39; height=&#39;308&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"299\" data-rawheight=\"308\" class=\"content_image lazy\" width=\"299\" data-actualsrc=\"https://pic4.zhimg.com/v2-b893830ac08126914ba268458d7930e7_b.jpg\"/></figure><p></p>", 
            "topic": [
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }, 
                {
                    "tag": "Pandas(Python)", 
                    "tagLink": "https://api.zhihu.com/topics/20179633"
                }, 
                {
                    "tag": "数据分析", 
                    "tagLink": "https://api.zhihu.com/topics/19559424"
                }
            ], 
            "comments": []
        }, 
        {
            "url": "https://zhuanlan.zhihu.com/p/35683036", 
            "userName": "Manson", 
            "userLink": "https://www.zhihu.com/people/e7d815cced6c3c702b7f058661f05dce", 
            "upvote": 5, 
            "title": "（1）Python初入坑之numpy基础实操", 
            "content": "<p>        3月初入坑数据分析，之前学习python基础知识的时候做了一些笔记，只不过是以电脑本地文件保存，不方便随时查看复习。最近看完了一个网课，讲解了非常基础的Python数据分析会用到的几个包，内容有限，重点在于实用性，没有讲太多原理性的东西。</p><p>        我会把课程中讲到的内容都实操一遍，并做注释，以此为记录。</p><p>        3月初学习的excel基础和sql语言基础，在学习完了python的基础内容后，我也会一起复习梳理一遍，并记录下来~</p><p><b>一、numpy简介</b></p><p>        numpy是python科学计算的基础包，是pandas，scipy的构建基础。</p><p>        numpy的主要对象为同种元素的多维数组，数组类被称为ndarray。</p><p>        a=np.arange(10)    一维数组</p><p>        a=np.arange(10).reshape(2,5)  2行5列的二维数组</p><p>        a=np.arange(24).reshape(2,3,4)   2组，每组为3行4列的三维数组。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-ad9091ca570a3647076b7bbd3ed09a81_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"354\" data-rawheight=\"163\" class=\"content_image\" width=\"354\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;354&#39; height=&#39;163&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"354\" data-rawheight=\"163\" class=\"content_image lazy\" width=\"354\" data-actualsrc=\"https://pic2.zhimg.com/v2-ad9091ca570a3647076b7bbd3ed09a81_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-263575109a119dd82bad7253706c22ef_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"368\" data-rawheight=\"132\" class=\"content_image\" width=\"368\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;368&#39; height=&#39;132&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"368\" data-rawheight=\"132\" class=\"content_image lazy\" width=\"368\" data-actualsrc=\"https://pic4.zhimg.com/v2-263575109a119dd82bad7253706c22ef_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-14c5799cfe9748eb7be56697112d1596_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"237\" data-rawheight=\"161\" class=\"content_image\" width=\"237\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;237&#39; height=&#39;161&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"237\" data-rawheight=\"161\" class=\"content_image lazy\" width=\"237\" data-actualsrc=\"https://pic3.zhimg.com/v2-14c5799cfe9748eb7be56697112d1596_b.jpg\"/></figure><p>        在jupyter notebook中创建a，并把a数组reshape成b之后，可以看出a和b的数组结构，a是一维数组，b是2行5列的二维数组。那三维数组创建可以如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-6390984cd8e9de5709ef0eb475830755_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"345\" data-rawheight=\"212\" class=\"content_image\" width=\"345\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;345&#39; height=&#39;212&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"345\" data-rawheight=\"212\" class=\"content_image lazy\" width=\"345\" data-actualsrc=\"https://pic2.zhimg.com/v2-6390984cd8e9de5709ef0eb475830755_b.jpg\"/></figure><p>    可以通过一个list来创建数组。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-c2c4f360d878a5ca39a2287a3782536e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"326\" data-rawheight=\"255\" class=\"content_image\" width=\"326\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;326&#39; height=&#39;255&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"326\" data-rawheight=\"255\" class=\"content_image lazy\" width=\"326\" data-actualsrc=\"https://pic3.zhimg.com/v2-c2c4f360d878a5ca39a2287a3782536e_b.jpg\"/></figure><p><b>        np.zeros()</b>，生成全部为0的数组，数据类型是浮点数。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-235ec0c86a67bf0224ca2ae557495329_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"312\" data-rawheight=\"193\" class=\"content_image\" width=\"312\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;312&#39; height=&#39;193&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"312\" data-rawheight=\"193\" class=\"content_image lazy\" width=\"312\" data-actualsrc=\"https://pic2.zhimg.com/v2-235ec0c86a67bf0224ca2ae557495329_b.jpg\"/></figure><p>        用<b>astype</b>转变其类型，假如转变为int32，则没有点号。同理，如果a数组里面有小数点，则变成整型之后，只保留整数。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-27989eb5f8b1bea68f584beee99ca54b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"294\" data-rawheight=\"72\" class=\"content_image\" width=\"294\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;294&#39; height=&#39;72&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"294\" data-rawheight=\"72\" class=\"content_image lazy\" width=\"294\" data-actualsrc=\"https://pic4.zhimg.com/v2-27989eb5f8b1bea68f584beee99ca54b_b.jpg\"/></figure><p><b>二、numpy的索引和切片</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-ea6fc6a4323077d823e6b3404361c6ae_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"405\" data-rawheight=\"253\" class=\"content_image\" width=\"405\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;405&#39; height=&#39;253&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"405\" data-rawheight=\"253\" class=\"content_image lazy\" width=\"405\" data-actualsrc=\"https://pic3.zhimg.com/v2-ea6fc6a4323077d823e6b3404361c6ae_b.jpg\"/></figure><p>        索引的用法类似于取某一个数，例如创建数组a之后，取a[5]，取序号为5，即第六位的数，为5。</p><p>        切片的用法是取一部分数，例如a[5:8]，取第6到第9位，序号为5到8。起点为5，包括，终点为8，不包括。所以取出5,6,7位置的三个数。顺便还能给取的数赋值，赋值为其他值。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-071606d8e7f01a12fd54782cffe99107_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"509\" data-rawheight=\"230\" class=\"origin_image zh-lightbox-thumb\" width=\"509\" data-original=\"https://pic4.zhimg.com/v2-071606d8e7f01a12fd54782cffe99107_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;509&#39; height=&#39;230&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"509\" data-rawheight=\"230\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"509\" data-original=\"https://pic4.zhimg.com/v2-071606d8e7f01a12fd54782cffe99107_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-071606d8e7f01a12fd54782cffe99107_b.jpg\"/></figure><p>        这样赋值会改变数组本身的数据，如果不想改变，可以使用<b>copy()</b>，如b=a[5:8].copy()，这样对b赋值修改，则不会改变a的值。</p><p><b>多维数组的索引与切片</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-695955828be7d891b323b4e3456a8419_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"326\" data-rawheight=\"317\" class=\"content_image\" width=\"326\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;326&#39; height=&#39;317&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"326\" data-rawheight=\"317\" class=\"content_image lazy\" width=\"326\" data-actualsrc=\"https://pic2.zhimg.com/v2-695955828be7d891b323b4e3456a8419_b.jpg\"/></figure><p>        对于多维数组c，c[0][0][0]和c[0,0,0]的用法是一样的，先取第一组，再取第一组的第一行，再在第一行中取第一列，则取出来0这个数。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-9066e937295e28e6d4c4746138ebe3b6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"273\" data-rawheight=\"79\" class=\"content_image\" width=\"273\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;273&#39; height=&#39;79&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"273\" data-rawheight=\"79\" class=\"content_image lazy\" width=\"273\" data-actualsrc=\"https://pic3.zhimg.com/v2-9066e937295e28e6d4c4746138ebe3b6_b.jpg\"/></figure><p>        以上的用法是，取第二组，的第三行全部，冒号：代表取全部。</p><p>        numpy中还可以用bool值来取数。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-2a268f947607c5d298e776b368375ecc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"577\" data-rawheight=\"339\" class=\"origin_image zh-lightbox-thumb\" width=\"577\" data-original=\"https://pic1.zhimg.com/v2-2a268f947607c5d298e776b368375ecc_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;577&#39; height=&#39;339&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"577\" data-rawheight=\"339\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"577\" data-original=\"https://pic1.zhimg.com/v2-2a268f947607c5d298e776b368375ecc_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-2a268f947607c5d298e776b368375ecc_b.jpg\"/></figure><p>        输入a&gt;0，则大于的部分会显示True，小于的部分显示False。a[a&gt;0]，则是把True的部分全部取出来。</p><p>        np.random.randn  是生成正态随机分布数，下面顺便把之前整理的random类型理一下。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-d3f7dca953ae04c45b398b421021fabd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"623\" data-rawheight=\"338\" class=\"origin_image zh-lightbox-thumb\" width=\"623\" data-original=\"https://pic2.zhimg.com/v2-d3f7dca953ae04c45b398b421021fabd_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;623&#39; height=&#39;338&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"623\" data-rawheight=\"338\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"623\" data-original=\"https://pic2.zhimg.com/v2-d3f7dca953ae04c45b398b421021fabd_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-d3f7dca953ae04c45b398b421021fabd_b.jpg\"/></figure><p>        要注意的是random.normal要指定size，这是高斯标准正态随机分布，从random.normal的官方文档里，normal(loc,scale,size)，是可以指定三个范围参数的，如果不指定size，则只返回一个特定的随机数。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-9555c0de73a35b4f0b513a334989e3a4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"541\" data-rawheight=\"169\" class=\"origin_image zh-lightbox-thumb\" width=\"541\" data-original=\"https://pic1.zhimg.com/v2-9555c0de73a35b4f0b513a334989e3a4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;541&#39; height=&#39;169&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"541\" data-rawheight=\"169\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"541\" data-original=\"https://pic1.zhimg.com/v2-9555c0de73a35b4f0b513a334989e3a4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-9555c0de73a35b4f0b513a334989e3a4_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-554765bcea20460ac06893b85bd187af_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"442\" data-rawheight=\"70\" class=\"origin_image zh-lightbox-thumb\" width=\"442\" data-original=\"https://pic4.zhimg.com/v2-554765bcea20460ac06893b85bd187af_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;442&#39; height=&#39;70&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"442\" data-rawheight=\"70\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"442\" data-original=\"https://pic4.zhimg.com/v2-554765bcea20460ac06893b85bd187af_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-554765bcea20460ac06893b85bd187af_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-e610a5ba164a413cf0495be7b699fdf5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"743\" data-rawheight=\"169\" class=\"origin_image zh-lightbox-thumb\" width=\"743\" data-original=\"https://pic2.zhimg.com/v2-e610a5ba164a413cf0495be7b699fdf5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;743&#39; height=&#39;169&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"743\" data-rawheight=\"169\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"743\" data-original=\"https://pic2.zhimg.com/v2-e610a5ba164a413cf0495be7b699fdf5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-e610a5ba164a413cf0495be7b699fdf5_b.jpg\"/></figure><p>        randint也是需要可以指定size的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-613f894af338c6415a146bfbe7600cbc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"373\" data-rawheight=\"148\" class=\"content_image\" width=\"373\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;373&#39; height=&#39;148&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"373\" data-rawheight=\"148\" class=\"content_image lazy\" width=\"373\" data-actualsrc=\"https://pic1.zhimg.com/v2-613f894af338c6415a146bfbe7600cbc_b.jpg\"/></figure><p><b>三、numpy的运算和其他玩法</b></p><p><b>        T是转置的用法，要大写。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-af631d33d7cc7de4df85d6e901a22878_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"335\" data-rawheight=\"226\" class=\"content_image\" width=\"335\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;335&#39; height=&#39;226&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"335\" data-rawheight=\"226\" class=\"content_image lazy\" width=\"335\" data-actualsrc=\"https://pic1.zhimg.com/v2-af631d33d7cc7de4df85d6e901a22878_b.jpg\"/></figure><p>        数组有广播的特性，可以使得数组之间元素一对一进行运算。（sqrt是求平方根）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-3a8b5883eed4474346bdd6fbb2b28da4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"513\" data-rawheight=\"329\" class=\"origin_image zh-lightbox-thumb\" width=\"513\" data-original=\"https://pic1.zhimg.com/v2-3a8b5883eed4474346bdd6fbb2b28da4_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;513&#39; height=&#39;329&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"513\" data-rawheight=\"329\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"513\" data-original=\"https://pic1.zhimg.com/v2-3a8b5883eed4474346bdd6fbb2b28da4_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-3a8b5883eed4474346bdd6fbb2b28da4_b.jpg\"/></figure><p>        abs是求绝对值，sum是求和，mean是求平均值。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-f115bd48e18a937624a74e721c4179e9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"439\" data-rawheight=\"247\" class=\"origin_image zh-lightbox-thumb\" width=\"439\" data-original=\"https://pic2.zhimg.com/v2-f115bd48e18a937624a74e721c4179e9_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;439&#39; height=&#39;247&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"439\" data-rawheight=\"247\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"439\" data-original=\"https://pic2.zhimg.com/v2-f115bd48e18a937624a74e721c4179e9_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-f115bd48e18a937624a74e721c4179e9_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-1d8408e1f6a8429708effa0410383de3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"263\" data-rawheight=\"69\" class=\"content_image\" width=\"263\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;263&#39; height=&#39;69&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"263\" data-rawheight=\"69\" class=\"content_image lazy\" width=\"263\" data-actualsrc=\"https://pic4.zhimg.com/v2-1d8408e1f6a8429708effa0410383de3_b.jpg\"/></figure><p>        np.maximum()  可以取出同结构的数组中，较大的元素集合。a1数组是从10到0，以-1为间距的数组。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-aef69487746441c07bdd8d4f25290b8b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"383\" data-rawheight=\"346\" class=\"content_image\" width=\"383\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;383&#39; height=&#39;346&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"383\" data-rawheight=\"346\" class=\"content_image lazy\" width=\"383\" data-actualsrc=\"https://pic4.zhimg.com/v2-aef69487746441c07bdd8d4f25290b8b_b.jpg\"/></figure><p><b>axis的意义和用法</b></p><p><b>        axis=0是行与行之间进行运算，方向是沿着行往下运算。axis=1是列与列之间进行运算，沿着列往右计算。</b></p><p><b>        现整理一个之前在网上看到的非常有意思的解释。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-dc163b5d8fee0c77dae7f2bacae3d56a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"616\" data-rawheight=\"458\" class=\"origin_image zh-lightbox-thumb\" width=\"616\" data-original=\"https://pic3.zhimg.com/v2-dc163b5d8fee0c77dae7f2bacae3d56a_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;616&#39; height=&#39;458&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"616\" data-rawheight=\"458\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"616\" data-original=\"https://pic3.zhimg.com/v2-dc163b5d8fee0c77dae7f2bacae3d56a_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-dc163b5d8fee0c77dae7f2bacae3d56a_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-24dcce0327550cc826449f6c53457fc3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"590\" data-rawheight=\"273\" class=\"origin_image zh-lightbox-thumb\" width=\"590\" data-original=\"https://pic4.zhimg.com/v2-24dcce0327550cc826449f6c53457fc3_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;590&#39; height=&#39;273&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"590\" data-rawheight=\"273\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"590\" data-original=\"https://pic4.zhimg.com/v2-24dcce0327550cc826449f6c53457fc3_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/v2-24dcce0327550cc826449f6c53457fc3_b.jpg\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/v2-cce025ed8f54dd783a10df14579bc9f5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"639\" data-rawheight=\"401\" class=\"origin_image zh-lightbox-thumb\" width=\"639\" data-original=\"https://pic2.zhimg.com/v2-cce025ed8f54dd783a10df14579bc9f5_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;639&#39; height=&#39;401&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"639\" data-rawheight=\"401\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"639\" data-original=\"https://pic2.zhimg.com/v2-cce025ed8f54dd783a10df14579bc9f5_r.jpg\" data-actualsrc=\"https://pic2.zhimg.com/v2-cce025ed8f54dd783a10df14579bc9f5_b.jpg\"/></figure><p>        cumsum是累加，cumprod是累乘。bool值也可以累加，累加则是计算True的个数，True作为1，False作为0~</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/v2-481a4318c2a16de77bb69874fc14b456_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"583\" data-rawheight=\"277\" class=\"origin_image zh-lightbox-thumb\" width=\"583\" data-original=\"https://pic3.zhimg.com/v2-481a4318c2a16de77bb69874fc14b456_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;583&#39; height=&#39;277&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"583\" data-rawheight=\"277\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"583\" data-original=\"https://pic3.zhimg.com/v2-481a4318c2a16de77bb69874fc14b456_r.jpg\" data-actualsrc=\"https://pic3.zhimg.com/v2-481a4318c2a16de77bb69874fc14b456_b.jpg\"/></figure><p>        np.sort是排序。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-4d2280e6d69341279a75a8254abac714_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"581\" data-rawheight=\"156\" class=\"origin_image zh-lightbox-thumb\" width=\"581\" data-original=\"https://pic1.zhimg.com/v2-4d2280e6d69341279a75a8254abac714_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;581&#39; height=&#39;156&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"581\" data-rawheight=\"156\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"581\" data-original=\"https://pic1.zhimg.com/v2-4d2280e6d69341279a75a8254abac714_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-4d2280e6d69341279a75a8254abac714_b.jpg\"/></figure><p><b>   numpy的条件逻辑运算，where。</b></p><p><b>        np.where(cond,x,y)的意思是，根据条件cond，判断为True，符合则输出x，判断为False，不符合则输出y。</b></p><p><b>        这个where条件逻辑，比普通的循环如[(x  if  c  else  y) for x,y,c in zip(x,y,cond)]，要快得多。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-a2c8df3014862a58daafd7e5f2fffdf0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"192\" class=\"content_image\" width=\"400\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;400&#39; height=&#39;192&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"192\" class=\"content_image lazy\" width=\"400\" data-actualsrc=\"https://pic1.zhimg.com/v2-a2c8df3014862a58daafd7e5f2fffdf0_b.jpg\"/></figure><p>        最后讲一下numpy返回唯一值的unique，最大值max，最小值min。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/v2-f34a2ecdbfe611d611d6b84b1f731ecb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"367\" data-rawheight=\"320\" class=\"content_image\" width=\"367\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;367&#39; height=&#39;320&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"367\" data-rawheight=\"320\" class=\"content_image lazy\" width=\"367\" data-actualsrc=\"https://pic4.zhimg.com/v2-f34a2ecdbfe611d611d6b84b1f731ecb_b.jpg\"/></figure><p>        save用法可以把一个数组存储成一个npy为后缀的文件，load用法则输入文件名xxx.npy，可以加载该数组。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/v2-a1f2711a577c1d56cf5b1f3042d68834_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"466\" data-rawheight=\"153\" class=\"origin_image zh-lightbox-thumb\" width=\"466\" data-original=\"https://pic1.zhimg.com/v2-a1f2711a577c1d56cf5b1f3042d68834_r.jpg\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;466&#39; height=&#39;153&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"466\" data-rawheight=\"153\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"466\" data-original=\"https://pic1.zhimg.com/v2-a1f2711a577c1d56cf5b1f3042d68834_r.jpg\" data-actualsrc=\"https://pic1.zhimg.com/v2-a1f2711a577c1d56cf5b1f3042d68834_b.jpg\"/></figure><p>        numpy实操部分就记录这么多了~</p>", 
            "topic": [
                {
                    "tag": "Python 入门", 
                    "tagLink": "https://api.zhihu.com/topics/19661050"
                }, 
                {
                    "tag": "numpy", 
                    "tagLink": "https://api.zhihu.com/topics/19834165"
                }, 
                {
                    "tag": "数据分析", 
                    "tagLink": "https://api.zhihu.com/topics/19559424"
                }
            ], 
            "comments": []
        }
    ], 
    "url": "https://zhuanlan.zhihu.com/c_180093796"
}
